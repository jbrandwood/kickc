PARSING src/test/java/dk/camelot64/kickc/test/kc/test-multiply.kc
// Implementation of the Seriously Fast Multiplication
// See http://codebase64.org/doku.php?id=base:seriously_fast_multiplication
// Utilizes the fact that a*b = ((a+b)/2)^2 - ((a-b)/2)^2

import "print.kc"
import "multiply.kc"

byte* BGCOL = $d021;

void main() {
    *BGCOL = 5;
    print_cls();
    init_multiply();
    init_multiply_asm();
    multiply_tables_compare();
    multiply_results_compare();
    signed_multiply_results_compare();
}

// Calculate an unsigned multiplication by repeated addition
word slow_multiply(byte a, byte b) {
    word m = 0;
    if(a!=0) {
        for(byte i = 0; i!=a; i++) {
            m = m + b;
        }
    }
    return m;
}

// Perform a signed multiplication by repeated addition/
signed word slow_signed_multiply(signed byte a, signed byte b) {
    signed word m = 0;
    if(a<0) {
        for(signed byte i = 0; i!=a; i--) {
            m = m - b;
        }
    } else if (a>0) {
        for(signed byte j = 0; j!=a; j++) {
            m = m + b;
        }
    }
    return m;
}

// ASM based multiplication tables
// <(( x * x )/4)
byte[512] align($100) asm_mul_sqr1_lo;
// >(( x * x )/4)
byte[512] align($100) asm_mul_sqr1_hi;
// <((( x - 255) * ( x - 255 ))/4)
byte[512] align($100) asm_mul_sqr2_lo;
// >((( x - 255) * ( x - 255 ))/4)
byte[512] align($100) asm_mul_sqr2_hi;
// Initialize the multiplication tables using ASM code from
// http://codebase64.org/doku.php?id=base:seriously_fast_multiplication
void init_multiply_asm() {
    asm{
        ldx #$00
        txa
        .byte $c9
    lb1:
        tya
        adc #$00
    ml1:
        sta asm_mul_sqr1_hi,x
        tay
        cmp #$40
        txa
        ror
    ml9:
        adc #$00
        sta ml9+1
        inx
    ml0:
        sta asm_mul_sqr1_lo,x
        bne lb1
        inc ml0+2
        inc ml1+2
        clc
        iny
        bne lb1
        ldx #$00
        ldy #$ff
    !:
        lda asm_mul_sqr1_hi+1,x
        sta asm_mul_sqr2_hi+$100,x
        lda asm_mul_sqr1_hi,x
        sta asm_mul_sqr2_hi,y
        lda asm_mul_sqr1_lo+1,x
        sta asm_mul_sqr2_lo+$100,x
        lda asm_mul_sqr1_lo,x
        sta asm_mul_sqr2_lo,y
        dey
        inx
        bne !-
    }
    // Ensure the ASM tables are not detected as unused by the optimizer
    byte* mem = $ff;
    *mem = *asm_mul_sqr1_lo;
    *mem = *asm_mul_sqr1_hi;
    *mem = *asm_mul_sqr2_lo;
    *mem = *asm_mul_sqr2_hi;
}

// Compare the ASM-based mul tables with the KC-based mul tables
// Red screen on failure - green on success
void multiply_tables_compare() {
    byte* asm_sqr = asm_mul_sqr1_lo;
    for( byte* kc_sqr=mul_sqr1_lo; kc_sqr<mul_sqr1_lo+512*4; kc_sqr++) {
        if(*kc_sqr != *asm_sqr) {
            *BGCOL = 2;
            print_str("multiply table mismatch at @");
            print_word((word)asm_sqr);
            print_str(" / @");
            print_word((word)kc_sqr);
            return;
        }
        asm_sqr++;
    }
    print_str("multiply tables match!@");
    print_ln();
}

// Perform all possible byte multiplications (slow and fast) and compare the results
void multiply_results_compare() {
    for(byte a: 0..255) {
        for(byte b: 0..255) {
            word ms = slow_multiply(a, b);
            word ma = multiply(a,b);
            if(ms!=ma) {
                *BGCOL = 2;
                multiply_error(a,b, ms, ma);
                return;
            }
        }
    }
    print_str("multiply results match!@");
    print_ln();
}

void multiply_error(byte a, byte b, word ms, word ma) {
  print_str("multiply mismatch @");
  print_byte(a);
  print_str("*@");
  print_byte(b);
  print_str(" slow:@");
  print_word(ms);
  print_str(" / fast asm:@");
  print_word(ma);
  print_ln();
}

// Perform all possible signed byte multiplications (slow and fast) and compare the results
void signed_multiply_results_compare() {
    for(signed byte a = -128; a!=-128; a++) {
        for(signed byte b = -128; b!=-128; b++) {
            signed word ms = slow_signed_multiply(a, b);
            signed word ma = signed_multiply(a,b);
            if(ms!=ma) {
                *BGCOL = 2;
                signed_multiply_error(a,b, ms, ma);
                return;
            }
        }
    }
    print_str("signed multiply results match!@");
    print_ln();
}

void signed_multiply_error(signed byte a, signed byte b, signed word ms, signed word ma) {
  print_str("signed multiply mismatch @");
  print_sbyte(a);
  print_str("*@");
  print_sbyte(b);
  print_str(" slow:@");
  print_sword(ms);
  print_str(" / fast asm:@");
  print_sword(ma);
  print_ln();
}

Importing print.kc
PARSING src/test/java/dk/camelot64/kickc/test/kc/print.kc

byte* line_cursor = $0400;
byte* char_cursor = line_cursor;

// Print a zero-terminated string
void print_str(byte* str) {
    while(*str!='@') {
        *(char_cursor++) = *(str++);
    }
}

// Print a newline
void print_ln() {
    do {
        line_cursor = line_cursor + $28;
    } while (line_cursor<char_cursor);
    char_cursor = line_cursor;
}

// Print a signed word as HEX
void print_sword(signed word w) {
    if(w<0) {
        print_char('-');
        w = -w;
    }
    print_word((word)w);
}

// Print a signed byte as HEX
void print_sbyte(signed byte b) {
    if(b<0) {
        print_char('-');
        b = -b;
    }
    print_byte((byte)b);
}

// Print a word as HEX
void print_word(word w) {
    print_byte(>w);
    print_byte(<w);
}

// Print a byte as HEX
void print_byte(byte b) {
    // Table of hexadecimal digits
    const byte[] hextab = "0123456789abcdef";
    print_char(hextab[b>>4]);
    print_char(hextab[b&$f]);
}

// Print a single char
void print_char(byte ch) {
    *(char_cursor++) = ch;
}

// Clear the screen
void print_cls() {
    for(byte* sc=$0400; sc!=$0400+1000; sc++) {
        *sc = ' ';
    }
}



Adding pre/post-modifier (byte*) char_cursor ← ++ (byte*) char_cursor
Adding pre/post-modifier (byte*) print_str::str ← ++ (byte*) print_str::str
Adding pre/post-modifier (byte*) char_cursor ← ++ (byte*) char_cursor
Adding pre/post-modifier (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
Importing multiply.kc
PARSING src/test/java/dk/camelot64/kickc/test/kc/multiply.kc
// Library Implementation of the Seriously Fast Multiplication
// See http://codebase64.org/doku.php?id=base:seriously_fast_multiplication
// Utilizes the fact that a*b = ((a+b)/2)^2 - ((a-b)/2)^2

// mul_sqr tables will contain f(x)=int(x*x/4) and g(x) = f(x-255).
// <f(x) = <(( x * x )/4)
byte[512] align($100) mul_sqr1_lo;
// >f(x) = >(( x * x )/4)
byte[512] align($100) mul_sqr1_hi;
// <g(x) =  <((( x - 255) * ( x - 255 ))/4)
byte[512] align($100) mul_sqr2_lo;
// >g(x) = >((( x - 255) * ( x - 255 ))/4)
byte[512] align($100) mul_sqr2_hi;

// Initialize the mul_sqr multiplication tables with f(x)=int(x*x/4)
void init_multiply() {
  // Fill mul_sqr1 = f(x) = int(x*x/4): If f(x) = x*x/4 then f(x+1) = f(x) + x/2 + 1/4
  word sqr = 0; // sqr = (x*x)/4
  byte x_2 = 0; // x/2
  byte c = 0;   // Counter used for determining x%2==0
  byte* sqr1_hi = mul_sqr1_hi+1;
  for(byte* sqr1_lo = mul_sqr1_lo+1; sqr1_lo!=mul_sqr1_lo+512; sqr1_lo++) {
    if((++c&1)==0) {
        x_2++; // increase i/2 on even numbers
        sqr++; // sqr++ on even numbers because 1 = 2*1/4 (from the two previous numbers) + 1/2 (half of the previous uneven number)
    }
    *sqr1_lo = <sqr;
    *sqr1_hi++ = >sqr;
    sqr = sqr + x_2; // sqr = sqr + i/2 (when uneven the 1/2 is not added here - see above)
  }
  // Fill mul_sqr2 = g(x) = f(x-255) : If x-255<0 then g(x)=f(255-x) (because x*x = -x*-x)
  // g(0) = f(255), g(1) = f(254), ..., g(254) = f(1), g(255) = f(0), g(256) = f(1), ..., g(510) = f(255), g(511) = f(256)
  byte x_255 = (byte)-1; //Start with g(0)=f(255)
  byte dir = $ff;  // Decrease or increase x_255 - initially we decrease
  byte* sqr2_hi = mul_sqr2_hi;
  for(byte* sqr2_lo = mul_sqr2_lo; sqr2_lo!=mul_sqr2_lo+511; sqr2_lo++) {
    *sqr2_lo = mul_sqr1_lo[x_255];
    *sqr2_hi++ = mul_sqr1_hi[x_255];
    x_255 = x_255 + dir;
    if(x_255==0) {
      dir = 1; // when x_255=0 then start counting up
    }
  }
  // Set the very last value g(511) = f(256)
  *(mul_sqr2_lo+511) = *(mul_sqr1_lo+256);
  *(mul_sqr2_hi+511) = *(mul_sqr1_hi+256);
}

// Fast multiply two unsigned bytes to a word result
// Done in assembler to utilize fast addition A+X
word multiply(byte a, byte b) {
    const byte* memA = $fe;
    const byte* memB = $ff;
    *memA = a;
    *memB = b;
    asm {
        lda memA
        sta sm1+1
        sta sm3+1
        eor #$ff
        sta sm2+1
        sta sm4+1
        ldx memB
        sec
    sm1:
        lda mul_sqr1_lo,x
    sm2:
        sbc mul_sqr2_lo,x
        sta memA
    sm3:
        lda mul_sqr1_hi,x
    sm4:
        sbc mul_sqr2_hi,x
        sta memB
    }
    return { *memB, *memA };
}

// Fast multiply of two signed bytes to a signed word
// Fixes offsets introduced by using unsigned multiplication
signed word signed_multiply(signed byte a, signed byte b) {
    word m = multiply((byte)a, (byte) b);
    if(a<0) {
        >m = (>m)-(byte)b;
    }
    if(b<0) {
        >m = (>m)-(byte)a;
    }
    return (signed word)m;
}
Adding pre/post-modifier (byte) init_multiply::c ← ++ (byte) init_multiply::c
Adding pre/post-modifier (byte) init_multiply::x_2 ← ++ (byte) init_multiply::x_2
Adding pre/post-modifier (word) init_multiply::sqr ← ++ (word) init_multiply::sqr
Adding pre/post-modifier (byte*) init_multiply::sqr1_hi ← ++ (byte*) init_multiply::sqr1_hi
Adding pre/post-modifier (byte*) init_multiply::sqr1_lo ← ++ (byte*) init_multiply::sqr1_lo
Adding pre/post-modifier (byte*) init_multiply::sqr2_hi ← ++ (byte*) init_multiply::sqr2_hi
Adding pre/post-modifier (byte*) init_multiply::sqr2_lo ← ++ (byte*) init_multiply::sqr2_lo
Adding pre/post-modifier (byte) slow_multiply::i ← ++ (byte) slow_multiply::i
Adding pre/post-modifier (signed byte) slow_signed_multiply::i ← -- (signed byte) slow_signed_multiply::i
Adding pre/post-modifier (signed byte) slow_signed_multiply::j ← ++ (signed byte) slow_signed_multiply::j
Adding pre/post-modifier (byte*) multiply_tables_compare::asm_sqr ← ++ (byte*) multiply_tables_compare::asm_sqr
Adding pre/post-modifier (byte*) multiply_tables_compare::kc_sqr ← ++ (byte*) multiply_tables_compare::kc_sqr
Adding pre/post-modifier (signed byte) signed_multiply_results_compare::b ← ++ (signed byte) signed_multiply_results_compare::b
Adding pre/post-modifier (signed byte) signed_multiply_results_compare::a ← ++ (signed byte) signed_multiply_results_compare::a

STATEMENTS
  (byte*) line_cursor ← (word/signed word/dword/signed dword) 1024
  (byte*) char_cursor ← (byte*) line_cursor
proc (void()) print_str((byte*) print_str::str)
print_str::@1:
  (boolean~) print_str::$0 ← *((byte*) print_str::str) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  goto print_str::@3
print_str::@2:
  *((byte*) char_cursor) ← *((byte*) print_str::str)
  (byte*) char_cursor ← ++ (byte*) char_cursor
  (byte*) print_str::str ← ++ (byte*) print_str::str
  goto print_str::@1
print_str::@3:
print_str::@return:
  return 
endproc // print_str()
proc (void()) print_ln()
print_ln::@1:
  (byte*~) print_ln::$0 ← (byte*) line_cursor + (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte*) line_cursor ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) line_cursor < (byte*) char_cursor
  if((boolean~) print_ln::$1) goto print_ln::@1
  (byte*) char_cursor ← (byte*) line_cursor
print_ln::@return:
  return 
endproc // print_ln()
proc (void()) print_sword((signed word) print_sword::w)
  (boolean~) print_sword::$0 ← (signed word) print_sword::w < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sword::$1 ← ! (boolean~) print_sword::$0
  if((boolean~) print_sword::$1) goto print_sword::@1
  (void~) print_sword::$2 ← call print_char (byte) '-' 
  (signed word~) print_sword::$3 ← - (signed word) print_sword::w
  (signed word) print_sword::w ← (signed word~) print_sword::$3
print_sword::@1:
  (word~) print_sword::$4 ← ((word)) (signed word) print_sword::w
  (void~) print_sword::$5 ← call print_word (word~) print_sword::$4 
print_sword::@return:
  return 
endproc // print_sword()
proc (void()) print_sbyte((signed byte) print_sbyte::b)
  (boolean~) print_sbyte::$0 ← (signed byte) print_sbyte::b < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sbyte::$1 ← ! (boolean~) print_sbyte::$0
  if((boolean~) print_sbyte::$1) goto print_sbyte::@1
  (void~) print_sbyte::$2 ← call print_char (byte) '-' 
  (signed byte~) print_sbyte::$3 ← - (signed byte) print_sbyte::b
  (signed byte) print_sbyte::b ← (signed byte~) print_sbyte::$3
print_sbyte::@1:
  (byte~) print_sbyte::$4 ← ((byte)) (signed byte) print_sbyte::b
  (void~) print_sbyte::$5 ← call print_byte (byte~) print_sbyte::$4 
print_sbyte::@return:
  return 
endproc // print_sbyte()
proc (void()) print_word((word) print_word::w)
  (byte~) print_word::$0 ← > (word) print_word::w
  (void~) print_word::$1 ← call print_byte (byte~) print_word::$0 
  (byte~) print_word::$2 ← < (word) print_word::w
  (void~) print_word::$3 ← call print_byte (byte~) print_word::$2 
print_word::@return:
  return 
endproc // print_word()
proc (void()) print_byte((byte) print_byte::b)
  (byte[]) print_byte::hextab ← (string) "0123456789abcdef"
  (byte~) print_byte::$0 ← (byte) print_byte::b >> (byte/signed byte/word/signed word/dword/signed dword) 4
  (void~) print_byte::$1 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$0) 
  (byte~) print_byte::$2 ← (byte) print_byte::b & (byte/signed byte/word/signed word/dword/signed dword) 15
  (void~) print_byte::$3 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$2) 
print_byte::@return:
  return 
endproc // print_byte()
proc (void()) print_char((byte) print_char::ch)
  *((byte*) char_cursor) ← (byte) print_char::ch
  (byte*) char_cursor ← ++ (byte*) char_cursor
print_char::@return:
  return 
endproc // print_char()
proc (void()) print_cls()
  (byte*) print_cls::sc ← (word/signed word/dword/signed dword) 1024
print_cls::@1:
  *((byte*) print_cls::sc) ← (byte) ' '
  (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
  (word/signed word/dword/signed dword~) print_cls::$0 ← (word/signed word/dword/signed dword) 1024 + (word/signed word/dword/signed dword) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc != (word/signed word/dword/signed dword~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
print_cls::@return:
  return 
endproc // print_cls()
  (byte[512]) mul_sqr1_lo ← { fill( 512, 0) }
  (byte[512]) mul_sqr1_hi ← { fill( 512, 0) }
  (byte[512]) mul_sqr2_lo ← { fill( 512, 0) }
  (byte[512]) mul_sqr2_hi ← { fill( 512, 0) }
proc (void()) init_multiply()
  (word) init_multiply::sqr ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) init_multiply::x_2 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) init_multiply::c ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) init_multiply::$0 ← (byte[512]) mul_sqr1_hi + (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) init_multiply::sqr1_hi ← (byte*~) init_multiply::$0
  (byte*~) init_multiply::$1 ← (byte[512]) mul_sqr1_lo + (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) init_multiply::sqr1_lo ← (byte*~) init_multiply::$1
init_multiply::@1:
  (byte) init_multiply::c ← ++ (byte) init_multiply::c
  (byte~) init_multiply::$2 ← (byte) init_multiply::c & (byte/signed byte/word/signed word/dword/signed dword) 1
  (boolean~) init_multiply::$3 ← (byte~) init_multiply::$2 == (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) init_multiply::$4 ← ! (boolean~) init_multiply::$3
  if((boolean~) init_multiply::$4) goto init_multiply::@2
  (byte) init_multiply::x_2 ← ++ (byte) init_multiply::x_2
  (word) init_multiply::sqr ← ++ (word) init_multiply::sqr
init_multiply::@2:
  (byte~) init_multiply::$5 ← < (word) init_multiply::sqr
  *((byte*) init_multiply::sqr1_lo) ← (byte~) init_multiply::$5
  (byte~) init_multiply::$6 ← > (word) init_multiply::sqr
  *((byte*) init_multiply::sqr1_hi) ← (byte~) init_multiply::$6
  (byte*) init_multiply::sqr1_hi ← ++ (byte*) init_multiply::sqr1_hi
  (word~) init_multiply::$7 ← (word) init_multiply::sqr + (byte) init_multiply::x_2
  (word) init_multiply::sqr ← (word~) init_multiply::$7
  (byte*) init_multiply::sqr1_lo ← ++ (byte*) init_multiply::sqr1_lo
  (byte*~) init_multiply::$8 ← (byte[512]) mul_sqr1_lo + (word/signed word/dword/signed dword) 512
  (boolean~) init_multiply::$9 ← (byte*) init_multiply::sqr1_lo != (byte*~) init_multiply::$8
  if((boolean~) init_multiply::$9) goto init_multiply::@1
  (signed byte/signed word/signed dword~) init_multiply::$10 ← - (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) init_multiply::$11 ← ((byte)) (signed byte/signed word/signed dword~) init_multiply::$10
  (byte) init_multiply::x_255 ← (byte~) init_multiply::$11
  (byte) init_multiply::dir ← (byte/word/signed word/dword/signed dword) 255
  (byte*) init_multiply::sqr2_hi ← (byte[512]) mul_sqr2_hi
  (byte*) init_multiply::sqr2_lo ← (byte[512]) mul_sqr2_lo
init_multiply::@3:
  *((byte*) init_multiply::sqr2_lo) ← *((byte[512]) mul_sqr1_lo + (byte) init_multiply::x_255)
  *((byte*) init_multiply::sqr2_hi) ← *((byte[512]) mul_sqr1_hi + (byte) init_multiply::x_255)
  (byte*) init_multiply::sqr2_hi ← ++ (byte*) init_multiply::sqr2_hi
  (byte/word~) init_multiply::$12 ← (byte) init_multiply::x_255 + (byte) init_multiply::dir
  (byte) init_multiply::x_255 ← (byte/word~) init_multiply::$12
  (boolean~) init_multiply::$13 ← (byte) init_multiply::x_255 == (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) init_multiply::$14 ← ! (boolean~) init_multiply::$13
  if((boolean~) init_multiply::$14) goto init_multiply::@4
  (byte) init_multiply::dir ← (byte/signed byte/word/signed word/dword/signed dword) 1
init_multiply::@4:
  (byte*) init_multiply::sqr2_lo ← ++ (byte*) init_multiply::sqr2_lo
  (byte*~) init_multiply::$15 ← (byte[512]) mul_sqr2_lo + (word/signed word/dword/signed dword) 511
  (boolean~) init_multiply::$16 ← (byte*) init_multiply::sqr2_lo != (byte*~) init_multiply::$15
  if((boolean~) init_multiply::$16) goto init_multiply::@3
  (byte*~) init_multiply::$17 ← (byte[512]) mul_sqr2_lo + (word/signed word/dword/signed dword) 511
  (byte*~) init_multiply::$18 ← (byte[512]) mul_sqr1_lo + (word/signed word/dword/signed dword) 256
  *((byte*~) init_multiply::$17) ← *((byte*~) init_multiply::$18)
  (byte*~) init_multiply::$19 ← (byte[512]) mul_sqr2_hi + (word/signed word/dword/signed dword) 511
  (byte*~) init_multiply::$20 ← (byte[512]) mul_sqr1_hi + (word/signed word/dword/signed dword) 256
  *((byte*~) init_multiply::$19) ← *((byte*~) init_multiply::$20)
init_multiply::@return:
  return 
endproc // init_multiply()
proc (word()) multiply((byte) multiply::a , (byte) multiply::b)
  (byte*) multiply::memA ← (byte/word/signed word/dword/signed dword) 254
  (byte*) multiply::memB ← (byte/word/signed word/dword/signed dword) 255
  *((byte*) multiply::memA) ← (byte) multiply::a
  *((byte*) multiply::memB) ← (byte) multiply::b
  asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamul_sqr1_lo,x sm2: sbcmul_sqr2_lo,x stamemA sm3: ldamul_sqr1_hi,x sm4: sbcmul_sqr2_hi,x stamemB  }
  (word) multiply::return ← { *((byte*) multiply::memB), *((byte*) multiply::memA) }
  goto multiply::@return
multiply::@return:
  (word) multiply::return ← (word) multiply::return
  return (word) multiply::return
endproc // multiply()
proc (signed word()) signed_multiply((signed byte) signed_multiply::a , (signed byte) signed_multiply::b)
  (byte~) signed_multiply::$0 ← ((byte)) (signed byte) signed_multiply::a
  (byte~) signed_multiply::$1 ← ((byte)) (signed byte) signed_multiply::b
  (word~) signed_multiply::$2 ← call multiply (byte~) signed_multiply::$0 (byte~) signed_multiply::$1 
  (word) signed_multiply::m ← (word~) signed_multiply::$2
  (boolean~) signed_multiply::$3 ← (signed byte) signed_multiply::a < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) signed_multiply::$4 ← ! (boolean~) signed_multiply::$3
  if((boolean~) signed_multiply::$4) goto signed_multiply::@1
  (byte~) signed_multiply::$5 ← > (word) signed_multiply::m
  (byte~) signed_multiply::$6 ← > (word) signed_multiply::m
  (byte~) signed_multiply::$7 ← ((byte)) (signed byte) signed_multiply::b
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$8 ← (byte~) signed_multiply::$6 - (byte~) signed_multiply::$7
  lval((byte~) signed_multiply::$5) ← (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$8
signed_multiply::@1:
  (boolean~) signed_multiply::$9 ← (signed byte) signed_multiply::b < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) signed_multiply::$10 ← ! (boolean~) signed_multiply::$9
  if((boolean~) signed_multiply::$10) goto signed_multiply::@2
  (byte~) signed_multiply::$11 ← > (word) signed_multiply::m
  (byte~) signed_multiply::$12 ← > (word) signed_multiply::m
  (byte~) signed_multiply::$13 ← ((byte)) (signed byte) signed_multiply::a
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$14 ← (byte~) signed_multiply::$12 - (byte~) signed_multiply::$13
  lval((byte~) signed_multiply::$11) ← (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$14
signed_multiply::@2:
  (signed word~) signed_multiply::$15 ← ((signed word)) (word) signed_multiply::m
  (signed word) signed_multiply::return ← (signed word~) signed_multiply::$15
  goto signed_multiply::@return
signed_multiply::@return:
  (signed word) signed_multiply::return ← (signed word) signed_multiply::return
  return (signed word) signed_multiply::return
endproc // signed_multiply()
  (byte*) BGCOL ← (word/dword/signed dword) 53281
proc (void()) main()
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (void~) main::$0 ← call print_cls 
  (void~) main::$1 ← call init_multiply 
  (void~) main::$2 ← call init_multiply_asm 
  (void~) main::$3 ← call multiply_tables_compare 
  (void~) main::$4 ← call multiply_results_compare 
  (void~) main::$5 ← call signed_multiply_results_compare 
main::@return:
  return 
endproc // main()
proc (word()) slow_multiply((byte) slow_multiply::a , (byte) slow_multiply::b)
  (word) slow_multiply::m ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_multiply::$0 ← (byte) slow_multiply::a != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_multiply::$1 ← ! (boolean~) slow_multiply::$0
  if((boolean~) slow_multiply::$1) goto slow_multiply::@1
  (byte) slow_multiply::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
slow_multiply::@2:
  (word~) slow_multiply::$2 ← (word) slow_multiply::m + (byte) slow_multiply::b
  (word) slow_multiply::m ← (word~) slow_multiply::$2
  (byte) slow_multiply::i ← ++ (byte) slow_multiply::i
  (boolean~) slow_multiply::$3 ← (byte) slow_multiply::i != (byte) slow_multiply::a
  if((boolean~) slow_multiply::$3) goto slow_multiply::@2
slow_multiply::@1:
  (word) slow_multiply::return ← (word) slow_multiply::m
  goto slow_multiply::@return
slow_multiply::@return:
  (word) slow_multiply::return ← (word) slow_multiply::return
  return (word) slow_multiply::return
endproc // slow_multiply()
proc (signed word()) slow_signed_multiply((signed byte) slow_signed_multiply::a , (signed byte) slow_signed_multiply::b)
  (signed word) slow_signed_multiply::m ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_signed_multiply::$0 ← (signed byte) slow_signed_multiply::a < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_signed_multiply::$1 ← ! (boolean~) slow_signed_multiply::$0
  if((boolean~) slow_signed_multiply::$1) goto slow_signed_multiply::@1
  (signed byte) slow_signed_multiply::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
slow_signed_multiply::@2:
  (signed word~) slow_signed_multiply::$2 ← (signed word) slow_signed_multiply::m - (signed byte) slow_signed_multiply::b
  (signed word) slow_signed_multiply::m ← (signed word~) slow_signed_multiply::$2
  (signed byte) slow_signed_multiply::i ← -- (signed byte) slow_signed_multiply::i
  (boolean~) slow_signed_multiply::$3 ← (signed byte) slow_signed_multiply::i != (signed byte) slow_signed_multiply::a
  if((boolean~) slow_signed_multiply::$3) goto slow_signed_multiply::@2
  goto slow_signed_multiply::@3
slow_signed_multiply::@1:
  (boolean~) slow_signed_multiply::$4 ← (signed byte) slow_signed_multiply::a > (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_signed_multiply::$5 ← ! (boolean~) slow_signed_multiply::$4
  if((boolean~) slow_signed_multiply::$5) goto slow_signed_multiply::@4
  (signed byte) slow_signed_multiply::j ← (byte/signed byte/word/signed word/dword/signed dword) 0
slow_signed_multiply::@5:
  (signed word~) slow_signed_multiply::$6 ← (signed word) slow_signed_multiply::m + (signed byte) slow_signed_multiply::b
  (signed word) slow_signed_multiply::m ← (signed word~) slow_signed_multiply::$6
  (signed byte) slow_signed_multiply::j ← ++ (signed byte) slow_signed_multiply::j
  (boolean~) slow_signed_multiply::$7 ← (signed byte) slow_signed_multiply::j != (signed byte) slow_signed_multiply::a
  if((boolean~) slow_signed_multiply::$7) goto slow_signed_multiply::@5
slow_signed_multiply::@4:
slow_signed_multiply::@3:
  (signed word) slow_signed_multiply::return ← (signed word) slow_signed_multiply::m
  goto slow_signed_multiply::@return
slow_signed_multiply::@return:
  (signed word) slow_signed_multiply::return ← (signed word) slow_signed_multiply::return
  return (signed word) slow_signed_multiply::return
endproc // slow_signed_multiply()
  (byte[512]) asm_mul_sqr1_lo ← { fill( 512, 0) }
  (byte[512]) asm_mul_sqr1_hi ← { fill( 512, 0) }
  (byte[512]) asm_mul_sqr2_lo ← { fill( 512, 0) }
  (byte[512]) asm_mul_sqr2_hi ← { fill( 512, 0) }
proc (void()) init_multiply_asm()
  asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: staasm_mul_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: staasm_mul_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldaasm_mul_sqr1_hi+1,x staasm_mul_sqr2_hi+$100,x ldaasm_mul_sqr1_hi,x staasm_mul_sqr2_hi,y ldaasm_mul_sqr1_lo+1,x staasm_mul_sqr2_lo+$100,x ldaasm_mul_sqr1_lo,x staasm_mul_sqr2_lo,y dey inx bne!-  }
  (byte*) init_multiply_asm::mem ← (byte/word/signed word/dword/signed dword) 255
  *((byte*) init_multiply_asm::mem) ← *((byte[512]) asm_mul_sqr1_lo)
  *((byte*) init_multiply_asm::mem) ← *((byte[512]) asm_mul_sqr1_hi)
  *((byte*) init_multiply_asm::mem) ← *((byte[512]) asm_mul_sqr2_lo)
  *((byte*) init_multiply_asm::mem) ← *((byte[512]) asm_mul_sqr2_hi)
init_multiply_asm::@return:
  return 
endproc // init_multiply_asm()
proc (void()) multiply_tables_compare()
  (byte*) multiply_tables_compare::asm_sqr ← (byte[512]) asm_mul_sqr1_lo
  (byte*) multiply_tables_compare::kc_sqr ← (byte[512]) mul_sqr1_lo
multiply_tables_compare::@1:
  (boolean~) multiply_tables_compare::$0 ← *((byte*) multiply_tables_compare::kc_sqr) != *((byte*) multiply_tables_compare::asm_sqr)
  (boolean~) multiply_tables_compare::$1 ← ! (boolean~) multiply_tables_compare::$0
  if((boolean~) multiply_tables_compare::$1) goto multiply_tables_compare::@2
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (void~) multiply_tables_compare::$2 ← call print_str (string) "multiply table mismatch at @" 
  (word~) multiply_tables_compare::$3 ← ((word)) (byte*) multiply_tables_compare::asm_sqr
  (void~) multiply_tables_compare::$4 ← call print_word (word~) multiply_tables_compare::$3 
  (void~) multiply_tables_compare::$5 ← call print_str (string) " / @" 
  (word~) multiply_tables_compare::$6 ← ((word)) (byte*) multiply_tables_compare::kc_sqr
  (void~) multiply_tables_compare::$7 ← call print_word (word~) multiply_tables_compare::$6 
  goto multiply_tables_compare::@return
multiply_tables_compare::@2:
  (byte*) multiply_tables_compare::asm_sqr ← ++ (byte*) multiply_tables_compare::asm_sqr
  (byte*) multiply_tables_compare::kc_sqr ← ++ (byte*) multiply_tables_compare::kc_sqr
  (word/signed word/dword/signed dword~) multiply_tables_compare::$8 ← (word/signed word/dword/signed dword) 512 * (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte*~) multiply_tables_compare::$9 ← (byte[512]) mul_sqr1_lo + (word/signed word/dword/signed dword~) multiply_tables_compare::$8
  (boolean~) multiply_tables_compare::$10 ← (byte*) multiply_tables_compare::kc_sqr < (byte*~) multiply_tables_compare::$9
  if((boolean~) multiply_tables_compare::$10) goto multiply_tables_compare::@1
  (void~) multiply_tables_compare::$11 ← call print_str (string) "multiply tables match!@" 
  (void~) multiply_tables_compare::$12 ← call print_ln 
multiply_tables_compare::@return:
  return 
endproc // multiply_tables_compare()
proc (void()) multiply_results_compare()
  (byte) multiply_results_compare::a ← (byte/signed byte/word/signed word/dword/signed dword) 0
multiply_results_compare::@1:
  (byte) multiply_results_compare::b ← (byte/signed byte/word/signed word/dword/signed dword) 0
multiply_results_compare::@2:
  (word~) multiply_results_compare::$0 ← call slow_multiply (byte) multiply_results_compare::a (byte) multiply_results_compare::b 
  (word) multiply_results_compare::ms ← (word~) multiply_results_compare::$0
  (word~) multiply_results_compare::$1 ← call multiply (byte) multiply_results_compare::a (byte) multiply_results_compare::b 
  (word) multiply_results_compare::ma ← (word~) multiply_results_compare::$1
  (boolean~) multiply_results_compare::$2 ← (word) multiply_results_compare::ms != (word) multiply_results_compare::ma
  (boolean~) multiply_results_compare::$3 ← ! (boolean~) multiply_results_compare::$2
  if((boolean~) multiply_results_compare::$3) goto multiply_results_compare::@3
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (void~) multiply_results_compare::$4 ← call multiply_error (byte) multiply_results_compare::a (byte) multiply_results_compare::b (word) multiply_results_compare::ms (word) multiply_results_compare::ma 
  goto multiply_results_compare::@return
multiply_results_compare::@3:
  (byte) multiply_results_compare::b ← ++ (byte) multiply_results_compare::b
  (boolean~) multiply_results_compare::$5 ← (byte) multiply_results_compare::b != (byte/signed byte/word/signed word/dword/signed dword) 0
  if((boolean~) multiply_results_compare::$5) goto multiply_results_compare::@2
  (byte) multiply_results_compare::a ← ++ (byte) multiply_results_compare::a
  (boolean~) multiply_results_compare::$6 ← (byte) multiply_results_compare::a != (byte/signed byte/word/signed word/dword/signed dword) 0
  if((boolean~) multiply_results_compare::$6) goto multiply_results_compare::@1
  (void~) multiply_results_compare::$7 ← call print_str (string) "multiply results match!@" 
  (void~) multiply_results_compare::$8 ← call print_ln 
multiply_results_compare::@return:
  return 
endproc // multiply_results_compare()
proc (void()) multiply_error((byte) multiply_error::a , (byte) multiply_error::b , (word) multiply_error::ms , (word) multiply_error::ma)
  (void~) multiply_error::$0 ← call print_str (string) "multiply mismatch @" 
  (void~) multiply_error::$1 ← call print_byte (byte) multiply_error::a 
  (void~) multiply_error::$2 ← call print_str (string) "*@" 
  (void~) multiply_error::$3 ← call print_byte (byte) multiply_error::b 
  (void~) multiply_error::$4 ← call print_str (string) " slow:@" 
  (void~) multiply_error::$5 ← call print_word (word) multiply_error::ms 
  (void~) multiply_error::$6 ← call print_str (string) " / fast asm:@" 
  (void~) multiply_error::$7 ← call print_word (word) multiply_error::ma 
  (void~) multiply_error::$8 ← call print_ln 
multiply_error::@return:
  return 
endproc // multiply_error()
proc (void()) signed_multiply_results_compare()
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$0 ← - (byte/word/signed word/dword/signed dword) 128
  (signed byte) signed_multiply_results_compare::a ← (signed byte/signed word/signed dword~) signed_multiply_results_compare::$0
signed_multiply_results_compare::@1:
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$1 ← - (byte/word/signed word/dword/signed dword) 128
  (signed byte) signed_multiply_results_compare::b ← (signed byte/signed word/signed dword~) signed_multiply_results_compare::$1
signed_multiply_results_compare::@2:
  (signed word~) signed_multiply_results_compare::$2 ← call slow_signed_multiply (signed byte) signed_multiply_results_compare::a (signed byte) signed_multiply_results_compare::b 
  (signed word) signed_multiply_results_compare::ms ← (signed word~) signed_multiply_results_compare::$2
  (signed word~) signed_multiply_results_compare::$3 ← call signed_multiply (signed byte) signed_multiply_results_compare::a (signed byte) signed_multiply_results_compare::b 
  (signed word) signed_multiply_results_compare::ma ← (signed word~) signed_multiply_results_compare::$3
  (boolean~) signed_multiply_results_compare::$4 ← (signed word) signed_multiply_results_compare::ms != (signed word) signed_multiply_results_compare::ma
  (boolean~) signed_multiply_results_compare::$5 ← ! (boolean~) signed_multiply_results_compare::$4
  if((boolean~) signed_multiply_results_compare::$5) goto signed_multiply_results_compare::@3
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (void~) signed_multiply_results_compare::$6 ← call signed_multiply_error (signed byte) signed_multiply_results_compare::a (signed byte) signed_multiply_results_compare::b (signed word) signed_multiply_results_compare::ms (signed word) signed_multiply_results_compare::ma 
  goto signed_multiply_results_compare::@return
signed_multiply_results_compare::@3:
  (signed byte) signed_multiply_results_compare::b ← ++ (signed byte) signed_multiply_results_compare::b
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$7 ← - (byte/word/signed word/dword/signed dword) 128
  (boolean~) signed_multiply_results_compare::$8 ← (signed byte) signed_multiply_results_compare::b != (signed byte/signed word/signed dword~) signed_multiply_results_compare::$7
  if((boolean~) signed_multiply_results_compare::$8) goto signed_multiply_results_compare::@2
  (signed byte) signed_multiply_results_compare::a ← ++ (signed byte) signed_multiply_results_compare::a
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$9 ← - (byte/word/signed word/dword/signed dword) 128
  (boolean~) signed_multiply_results_compare::$10 ← (signed byte) signed_multiply_results_compare::a != (signed byte/signed word/signed dword~) signed_multiply_results_compare::$9
  if((boolean~) signed_multiply_results_compare::$10) goto signed_multiply_results_compare::@1
  (void~) signed_multiply_results_compare::$11 ← call print_str (string) "signed multiply results match!@" 
  (void~) signed_multiply_results_compare::$12 ← call print_ln 
signed_multiply_results_compare::@return:
  return 
endproc // signed_multiply_results_compare()
proc (void()) signed_multiply_error((signed byte) signed_multiply_error::a , (signed byte) signed_multiply_error::b , (signed word) signed_multiply_error::ms , (signed word) signed_multiply_error::ma)
  (void~) signed_multiply_error::$0 ← call print_str (string) "signed multiply mismatch @" 
  (void~) signed_multiply_error::$1 ← call print_sbyte (signed byte) signed_multiply_error::a 
  (void~) signed_multiply_error::$2 ← call print_str (string) "*@" 
  (void~) signed_multiply_error::$3 ← call print_sbyte (signed byte) signed_multiply_error::b 
  (void~) signed_multiply_error::$4 ← call print_str (string) " slow:@" 
  (void~) signed_multiply_error::$5 ← call print_sword (signed word) signed_multiply_error::ms 
  (void~) signed_multiply_error::$6 ← call print_str (string) " / fast asm:@" 
  (void~) signed_multiply_error::$7 ← call print_sword (signed word) signed_multiply_error::ma 
  (void~) signed_multiply_error::$8 ← call print_ln 
signed_multiply_error::@return:
  return 
endproc // signed_multiply_error()
  call main 

SYMBOLS
(byte*) BGCOL
(byte[512]) asm_mul_sqr1_hi
(byte[512]) asm_mul_sqr1_lo
(byte[512]) asm_mul_sqr2_hi
(byte[512]) asm_mul_sqr2_lo
(byte*) char_cursor
(void()) init_multiply()
(byte*~) init_multiply::$0
(byte*~) init_multiply::$1
(signed byte/signed word/signed dword~) init_multiply::$10
(byte~) init_multiply::$11
(byte/word~) init_multiply::$12
(boolean~) init_multiply::$13
(boolean~) init_multiply::$14
(byte*~) init_multiply::$15
(boolean~) init_multiply::$16
(byte*~) init_multiply::$17
(byte*~) init_multiply::$18
(byte*~) init_multiply::$19
(byte~) init_multiply::$2
(byte*~) init_multiply::$20
(boolean~) init_multiply::$3
(boolean~) init_multiply::$4
(byte~) init_multiply::$5
(byte~) init_multiply::$6
(word~) init_multiply::$7
(byte*~) init_multiply::$8
(boolean~) init_multiply::$9
(label) init_multiply::@1
(label) init_multiply::@2
(label) init_multiply::@3
(label) init_multiply::@4
(label) init_multiply::@return
(byte) init_multiply::c
(byte) init_multiply::dir
(word) init_multiply::sqr
(byte*) init_multiply::sqr1_hi
(byte*) init_multiply::sqr1_lo
(byte*) init_multiply::sqr2_hi
(byte*) init_multiply::sqr2_lo
(byte) init_multiply::x_2
(byte) init_multiply::x_255
(void()) init_multiply_asm()
(label) init_multiply_asm::@return
(byte*) init_multiply_asm::mem
(byte*) line_cursor
(void()) main()
(void~) main::$0
(void~) main::$1
(void~) main::$2
(void~) main::$3
(void~) main::$4
(void~) main::$5
(label) main::@return
(byte[512]) mul_sqr1_hi
(byte[512]) mul_sqr1_lo
(byte[512]) mul_sqr2_hi
(byte[512]) mul_sqr2_lo
(word()) multiply((byte) multiply::a , (byte) multiply::b)
(label) multiply::@return
(byte) multiply::a
(byte) multiply::b
(byte*) multiply::memA
(byte*) multiply::memB
(word) multiply::return
(void()) multiply_error((byte) multiply_error::a , (byte) multiply_error::b , (word) multiply_error::ms , (word) multiply_error::ma)
(void~) multiply_error::$0
(void~) multiply_error::$1
(void~) multiply_error::$2
(void~) multiply_error::$3
(void~) multiply_error::$4
(void~) multiply_error::$5
(void~) multiply_error::$6
(void~) multiply_error::$7
(void~) multiply_error::$8
(label) multiply_error::@return
(byte) multiply_error::a
(byte) multiply_error::b
(word) multiply_error::ma
(word) multiply_error::ms
(void()) multiply_results_compare()
(word~) multiply_results_compare::$0
(word~) multiply_results_compare::$1
(boolean~) multiply_results_compare::$2
(boolean~) multiply_results_compare::$3
(void~) multiply_results_compare::$4
(boolean~) multiply_results_compare::$5
(boolean~) multiply_results_compare::$6
(void~) multiply_results_compare::$7
(void~) multiply_results_compare::$8
(label) multiply_results_compare::@1
(label) multiply_results_compare::@2
(label) multiply_results_compare::@3
(label) multiply_results_compare::@return
(byte) multiply_results_compare::a
(byte) multiply_results_compare::b
(word) multiply_results_compare::ma
(word) multiply_results_compare::ms
(void()) multiply_tables_compare()
(boolean~) multiply_tables_compare::$0
(boolean~) multiply_tables_compare::$1
(boolean~) multiply_tables_compare::$10
(void~) multiply_tables_compare::$11
(void~) multiply_tables_compare::$12
(void~) multiply_tables_compare::$2
(word~) multiply_tables_compare::$3
(void~) multiply_tables_compare::$4
(void~) multiply_tables_compare::$5
(word~) multiply_tables_compare::$6
(void~) multiply_tables_compare::$7
(word/signed word/dword/signed dword~) multiply_tables_compare::$8
(byte*~) multiply_tables_compare::$9
(label) multiply_tables_compare::@1
(label) multiply_tables_compare::@2
(label) multiply_tables_compare::@return
(byte*) multiply_tables_compare::asm_sqr
(byte*) multiply_tables_compare::kc_sqr
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0
(void~) print_byte::$1
(byte~) print_byte::$2
(void~) print_byte::$3
(label) print_byte::@return
(byte) print_byte::b
(byte[]) print_byte::hextab
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(void()) print_cls()
(word/signed word/dword/signed dword~) print_cls::$0
(boolean~) print_cls::$1
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(void()) print_ln()
(byte*~) print_ln::$0
(boolean~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@return
(void()) print_sbyte((signed byte) print_sbyte::b)
(boolean~) print_sbyte::$0
(boolean~) print_sbyte::$1
(void~) print_sbyte::$2
(signed byte~) print_sbyte::$3
(byte~) print_sbyte::$4
(void~) print_sbyte::$5
(label) print_sbyte::@1
(label) print_sbyte::@return
(signed byte) print_sbyte::b
(void()) print_str((byte*) print_str::str)
(boolean~) print_str::$0
(label) print_str::@1
(label) print_str::@2
(label) print_str::@3
(label) print_str::@return
(byte*) print_str::str
(void()) print_sword((signed word) print_sword::w)
(boolean~) print_sword::$0
(boolean~) print_sword::$1
(void~) print_sword::$2
(signed word~) print_sword::$3
(word~) print_sword::$4
(void~) print_sword::$5
(label) print_sword::@1
(label) print_sword::@return
(signed word) print_sword::w
(void()) print_word((word) print_word::w)
(byte~) print_word::$0
(void~) print_word::$1
(byte~) print_word::$2
(void~) print_word::$3
(label) print_word::@return
(word) print_word::w
(signed word()) signed_multiply((signed byte) signed_multiply::a , (signed byte) signed_multiply::b)
(byte~) signed_multiply::$0
(byte~) signed_multiply::$1
(boolean~) signed_multiply::$10
(byte~) signed_multiply::$11
(byte~) signed_multiply::$12
(byte~) signed_multiply::$13
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$14
(signed word~) signed_multiply::$15
(word~) signed_multiply::$2
(boolean~) signed_multiply::$3
(boolean~) signed_multiply::$4
(byte~) signed_multiply::$5
(byte~) signed_multiply::$6
(byte~) signed_multiply::$7
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$8
(boolean~) signed_multiply::$9
(label) signed_multiply::@1
(label) signed_multiply::@2
(label) signed_multiply::@return
(signed byte) signed_multiply::a
(signed byte) signed_multiply::b
(word) signed_multiply::m
(signed word) signed_multiply::return
(void()) signed_multiply_error((signed byte) signed_multiply_error::a , (signed byte) signed_multiply_error::b , (signed word) signed_multiply_error::ms , (signed word) signed_multiply_error::ma)
(void~) signed_multiply_error::$0
(void~) signed_multiply_error::$1
(void~) signed_multiply_error::$2
(void~) signed_multiply_error::$3
(void~) signed_multiply_error::$4
(void~) signed_multiply_error::$5
(void~) signed_multiply_error::$6
(void~) signed_multiply_error::$7
(void~) signed_multiply_error::$8
(label) signed_multiply_error::@return
(signed byte) signed_multiply_error::a
(signed byte) signed_multiply_error::b
(signed word) signed_multiply_error::ma
(signed word) signed_multiply_error::ms
(void()) signed_multiply_results_compare()
(signed byte/signed word/signed dword~) signed_multiply_results_compare::$0
(signed byte/signed word/signed dword~) signed_multiply_results_compare::$1
(boolean~) signed_multiply_results_compare::$10
(void~) signed_multiply_results_compare::$11
(void~) signed_multiply_results_compare::$12
(signed word~) signed_multiply_results_compare::$2
(signed word~) signed_multiply_results_compare::$3
(boolean~) signed_multiply_results_compare::$4
(boolean~) signed_multiply_results_compare::$5
(void~) signed_multiply_results_compare::$6
(signed byte/signed word/signed dword~) signed_multiply_results_compare::$7
(boolean~) signed_multiply_results_compare::$8
(signed byte/signed word/signed dword~) signed_multiply_results_compare::$9
(label) signed_multiply_results_compare::@1
(label) signed_multiply_results_compare::@2
(label) signed_multiply_results_compare::@3
(label) signed_multiply_results_compare::@return
(signed byte) signed_multiply_results_compare::a
(signed byte) signed_multiply_results_compare::b
(signed word) signed_multiply_results_compare::ma
(signed word) signed_multiply_results_compare::ms
(word()) slow_multiply((byte) slow_multiply::a , (byte) slow_multiply::b)
(boolean~) slow_multiply::$0
(boolean~) slow_multiply::$1
(word~) slow_multiply::$2
(boolean~) slow_multiply::$3
(label) slow_multiply::@1
(label) slow_multiply::@2
(label) slow_multiply::@return
(byte) slow_multiply::a
(byte) slow_multiply::b
(byte) slow_multiply::i
(word) slow_multiply::m
(word) slow_multiply::return
(signed word()) slow_signed_multiply((signed byte) slow_signed_multiply::a , (signed byte) slow_signed_multiply::b)
(boolean~) slow_signed_multiply::$0
(boolean~) slow_signed_multiply::$1
(signed word~) slow_signed_multiply::$2
(boolean~) slow_signed_multiply::$3
(boolean~) slow_signed_multiply::$4
(boolean~) slow_signed_multiply::$5
(signed word~) slow_signed_multiply::$6
(boolean~) slow_signed_multiply::$7
(label) slow_signed_multiply::@1
(label) slow_signed_multiply::@2
(label) slow_signed_multiply::@3
(label) slow_signed_multiply::@4
(label) slow_signed_multiply::@5
(label) slow_signed_multiply::@return
(signed byte) slow_signed_multiply::a
(signed byte) slow_signed_multiply::b
(signed byte) slow_signed_multiply::i
(signed byte) slow_signed_multiply::j
(signed word) slow_signed_multiply::m
(signed word) slow_signed_multiply::return

Fixing lo/hi-lvalue with new tmpVar signed_multiply::$16 signed_multiply::$16 ← signed_multiply::$8
Fixing lo/hi-lvalue with new tmpVar signed_multiply::$17 signed_multiply::$17 ← signed_multiply::$14
Promoting word/signed word/dword/signed dword to byte* in line_cursor ← ((byte*)) 1024
Promoting word/signed word/dword/signed dword to byte* in print_cls::sc ← ((byte*)) 1024
Promoting byte/word/signed word/dword/signed dword to byte* in multiply::memA ← ((byte*)) 254
Promoting byte/word/signed word/dword/signed dword to byte* in multiply::memB ← ((byte*)) 255
Promoting word/dword/signed dword to byte* in BGCOL ← ((byte*)) 53281
Promoting byte/word/signed word/dword/signed dword to byte* in init_multiply_asm::mem ← ((byte*)) 255
INITIAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) line_cursor ← ((byte*)) (word/signed word/dword/signed dword) 1024
  (byte*) char_cursor ← (byte*) line_cursor
  to:@1
print_str: scope:[print_str]  from
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  (boolean~) print_str::$0 ← *((byte*) print_str::str) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  to:print_str::@4
print_str::@2: scope:[print_str]  from print_str::@1 print_str::@5
  *((byte*) char_cursor) ← *((byte*) print_str::str)
  (byte*) char_cursor ← ++ (byte*) char_cursor
  (byte*) print_str::str ← ++ (byte*) print_str::str
  to:print_str::@1
print_str::@4: scope:[print_str]  from print_str::@1
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@4 print_str::@6
  to:print_str::@return
print_str::@5: scope:[print_str]  from
  to:print_str::@2
print_str::@6: scope:[print_str]  from
  to:print_str::@3
print_str::@return: scope:[print_str]  from print_str::@3
  return 
  to:@return
@1: scope:[]  from @begin
  to:@2
print_ln: scope:[print_ln]  from
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*~) print_ln::$0 ← (byte*) line_cursor + (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte*) line_cursor ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) line_cursor < (byte*) char_cursor
  if((boolean~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) char_cursor ← (byte*) line_cursor
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  return 
  to:@return
@2: scope:[]  from @1
  to:@3
print_sword: scope:[print_sword]  from
  (boolean~) print_sword::$0 ← (signed word) print_sword::w < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sword::$1 ← ! (boolean~) print_sword::$0
  if((boolean~) print_sword::$1) goto print_sword::@1
  to:print_sword::@2
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@2
  (word~) print_sword::$4 ← ((word)) (signed word) print_sword::w
  (void~) print_sword::$5 ← call print_word (word~) print_sword::$4 
  to:print_sword::@return
print_sword::@2: scope:[print_sword]  from print_sword
  (void~) print_sword::$2 ← call print_char (byte) '-' 
  (signed word~) print_sword::$3 ← - (signed word) print_sword::w
  (signed word) print_sword::w ← (signed word~) print_sword::$3
  to:print_sword::@1
print_sword::@return: scope:[print_sword]  from print_sword::@1
  return 
  to:@return
@3: scope:[]  from @2
  to:@4
print_sbyte: scope:[print_sbyte]  from
  (boolean~) print_sbyte::$0 ← (signed byte) print_sbyte::b < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sbyte::$1 ← ! (boolean~) print_sbyte::$0
  if((boolean~) print_sbyte::$1) goto print_sbyte::@1
  to:print_sbyte::@2
print_sbyte::@1: scope:[print_sbyte]  from print_sbyte print_sbyte::@2
  (byte~) print_sbyte::$4 ← ((byte)) (signed byte) print_sbyte::b
  (void~) print_sbyte::$5 ← call print_byte (byte~) print_sbyte::$4 
  to:print_sbyte::@return
print_sbyte::@2: scope:[print_sbyte]  from print_sbyte
  (void~) print_sbyte::$2 ← call print_char (byte) '-' 
  (signed byte~) print_sbyte::$3 ← - (signed byte) print_sbyte::b
  (signed byte) print_sbyte::b ← (signed byte~) print_sbyte::$3
  to:print_sbyte::@1
print_sbyte::@return: scope:[print_sbyte]  from print_sbyte::@1
  return 
  to:@return
@4: scope:[]  from @3
  to:@5
print_word: scope:[print_word]  from
  (byte~) print_word::$0 ← > (word) print_word::w
  (void~) print_word::$1 ← call print_byte (byte~) print_word::$0 
  (byte~) print_word::$2 ← < (word) print_word::w
  (void~) print_word::$3 ← call print_byte (byte~) print_word::$2 
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word
  return 
  to:@return
@5: scope:[]  from @4
  to:@6
print_byte: scope:[print_byte]  from
  (byte[]) print_byte::hextab ← (string) "0123456789abcdef"
  (byte~) print_byte::$0 ← (byte) print_byte::b >> (byte/signed byte/word/signed word/dword/signed dword) 4
  (void~) print_byte::$1 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$0) 
  (byte~) print_byte::$2 ← (byte) print_byte::b & (byte/signed byte/word/signed word/dword/signed dword) 15
  (void~) print_byte::$3 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$2) 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte
  return 
  to:@return
@6: scope:[]  from @5
  to:@7
print_char: scope:[print_char]  from
  *((byte*) char_cursor) ← (byte) print_char::ch
  (byte*) char_cursor ← ++ (byte*) char_cursor
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  return 
  to:@return
@7: scope:[]  from @6
  to:@8
print_cls: scope:[print_cls]  from
  (byte*) print_cls::sc ← ((byte*)) (word/signed word/dword/signed dword) 1024
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  *((byte*) print_cls::sc) ← (byte) ' '
  (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
  (word/signed word/dword/signed dword~) print_cls::$0 ← (word/signed word/dword/signed dword) 1024 + (word/signed word/dword/signed dword) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc != (word/signed word/dword/signed dword~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
  to:print_cls::@2
print_cls::@2: scope:[print_cls]  from print_cls::@1
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@2
  return 
  to:@return
@8: scope:[]  from @7
  (byte[512]) mul_sqr1_lo ← { fill( 512, 0) }
  (byte[512]) mul_sqr1_hi ← { fill( 512, 0) }
  (byte[512]) mul_sqr2_lo ← { fill( 512, 0) }
  (byte[512]) mul_sqr2_hi ← { fill( 512, 0) }
  to:@9
init_multiply: scope:[init_multiply]  from
  (word) init_multiply::sqr ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) init_multiply::x_2 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) init_multiply::c ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) init_multiply::$0 ← (byte[512]) mul_sqr1_hi + (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) init_multiply::sqr1_hi ← (byte*~) init_multiply::$0
  (byte*~) init_multiply::$1 ← (byte[512]) mul_sqr1_lo + (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) init_multiply::sqr1_lo ← (byte*~) init_multiply::$1
  to:init_multiply::@1
init_multiply::@1: scope:[init_multiply]  from init_multiply init_multiply::@2
  (byte) init_multiply::c ← ++ (byte) init_multiply::c
  (byte~) init_multiply::$2 ← (byte) init_multiply::c & (byte/signed byte/word/signed word/dword/signed dword) 1
  (boolean~) init_multiply::$3 ← (byte~) init_multiply::$2 == (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) init_multiply::$4 ← ! (boolean~) init_multiply::$3
  if((boolean~) init_multiply::$4) goto init_multiply::@2
  to:init_multiply::@5
init_multiply::@2: scope:[init_multiply]  from init_multiply::@1 init_multiply::@5
  (byte~) init_multiply::$5 ← < (word) init_multiply::sqr
  *((byte*) init_multiply::sqr1_lo) ← (byte~) init_multiply::$5
  (byte~) init_multiply::$6 ← > (word) init_multiply::sqr
  *((byte*) init_multiply::sqr1_hi) ← (byte~) init_multiply::$6
  (byte*) init_multiply::sqr1_hi ← ++ (byte*) init_multiply::sqr1_hi
  (word~) init_multiply::$7 ← (word) init_multiply::sqr + (byte) init_multiply::x_2
  (word) init_multiply::sqr ← (word~) init_multiply::$7
  (byte*) init_multiply::sqr1_lo ← ++ (byte*) init_multiply::sqr1_lo
  (byte*~) init_multiply::$8 ← (byte[512]) mul_sqr1_lo + (word/signed word/dword/signed dword) 512
  (boolean~) init_multiply::$9 ← (byte*) init_multiply::sqr1_lo != (byte*~) init_multiply::$8
  if((boolean~) init_multiply::$9) goto init_multiply::@1
  to:init_multiply::@6
init_multiply::@5: scope:[init_multiply]  from init_multiply::@1
  (byte) init_multiply::x_2 ← ++ (byte) init_multiply::x_2
  (word) init_multiply::sqr ← ++ (word) init_multiply::sqr
  to:init_multiply::@2
init_multiply::@6: scope:[init_multiply]  from init_multiply::@2
  (signed byte/signed word/signed dword~) init_multiply::$10 ← - (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) init_multiply::$11 ← ((byte)) (signed byte/signed word/signed dword~) init_multiply::$10
  (byte) init_multiply::x_255 ← (byte~) init_multiply::$11
  (byte) init_multiply::dir ← (byte/word/signed word/dword/signed dword) 255
  (byte*) init_multiply::sqr2_hi ← (byte[512]) mul_sqr2_hi
  (byte*) init_multiply::sqr2_lo ← (byte[512]) mul_sqr2_lo
  to:init_multiply::@3
init_multiply::@3: scope:[init_multiply]  from init_multiply::@4 init_multiply::@6
  *((byte*) init_multiply::sqr2_lo) ← *((byte[512]) mul_sqr1_lo + (byte) init_multiply::x_255)
  *((byte*) init_multiply::sqr2_hi) ← *((byte[512]) mul_sqr1_hi + (byte) init_multiply::x_255)
  (byte*) init_multiply::sqr2_hi ← ++ (byte*) init_multiply::sqr2_hi
  (byte/word~) init_multiply::$12 ← (byte) init_multiply::x_255 + (byte) init_multiply::dir
  (byte) init_multiply::x_255 ← (byte/word~) init_multiply::$12
  (boolean~) init_multiply::$13 ← (byte) init_multiply::x_255 == (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) init_multiply::$14 ← ! (boolean~) init_multiply::$13
  if((boolean~) init_multiply::$14) goto init_multiply::@4
  to:init_multiply::@7
init_multiply::@4: scope:[init_multiply]  from init_multiply::@3 init_multiply::@7
  (byte*) init_multiply::sqr2_lo ← ++ (byte*) init_multiply::sqr2_lo
  (byte*~) init_multiply::$15 ← (byte[512]) mul_sqr2_lo + (word/signed word/dword/signed dword) 511
  (boolean~) init_multiply::$16 ← (byte*) init_multiply::sqr2_lo != (byte*~) init_multiply::$15
  if((boolean~) init_multiply::$16) goto init_multiply::@3
  to:init_multiply::@8
init_multiply::@7: scope:[init_multiply]  from init_multiply::@3
  (byte) init_multiply::dir ← (byte/signed byte/word/signed word/dword/signed dword) 1
  to:init_multiply::@4
init_multiply::@8: scope:[init_multiply]  from init_multiply::@4
  (byte*~) init_multiply::$17 ← (byte[512]) mul_sqr2_lo + (word/signed word/dword/signed dword) 511
  (byte*~) init_multiply::$18 ← (byte[512]) mul_sqr1_lo + (word/signed word/dword/signed dword) 256
  *((byte*~) init_multiply::$17) ← *((byte*~) init_multiply::$18)
  (byte*~) init_multiply::$19 ← (byte[512]) mul_sqr2_hi + (word/signed word/dword/signed dword) 511
  (byte*~) init_multiply::$20 ← (byte[512]) mul_sqr1_hi + (word/signed word/dword/signed dword) 256
  *((byte*~) init_multiply::$19) ← *((byte*~) init_multiply::$20)
  to:init_multiply::@return
init_multiply::@return: scope:[init_multiply]  from init_multiply::@8
  return 
  to:@return
@9: scope:[]  from @8
  to:@10
multiply: scope:[multiply]  from
  (byte*) multiply::memA ← ((byte*)) (byte/word/signed word/dword/signed dword) 254
  (byte*) multiply::memB ← ((byte*)) (byte/word/signed word/dword/signed dword) 255
  *((byte*) multiply::memA) ← (byte) multiply::a
  *((byte*) multiply::memB) ← (byte) multiply::b
  asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamul_sqr1_lo,x sm2: sbcmul_sqr2_lo,x stamemA sm3: ldamul_sqr1_hi,x sm4: sbcmul_sqr2_hi,x stamemB  }
  (word) multiply::return ← { *((byte*) multiply::memB), *((byte*) multiply::memA) }
  to:multiply::@return
multiply::@return: scope:[multiply]  from multiply multiply::@1
  (word) multiply::return ← (word) multiply::return
  return (word) multiply::return
  to:@return
multiply::@1: scope:[multiply]  from
  to:multiply::@return
@10: scope:[]  from @9
  to:@11
signed_multiply: scope:[signed_multiply]  from
  (byte~) signed_multiply::$0 ← ((byte)) (signed byte) signed_multiply::a
  (byte~) signed_multiply::$1 ← ((byte)) (signed byte) signed_multiply::b
  (word~) signed_multiply::$2 ← call multiply (byte~) signed_multiply::$0 (byte~) signed_multiply::$1 
  (word) signed_multiply::m ← (word~) signed_multiply::$2
  (boolean~) signed_multiply::$3 ← (signed byte) signed_multiply::a < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) signed_multiply::$4 ← ! (boolean~) signed_multiply::$3
  if((boolean~) signed_multiply::$4) goto signed_multiply::@1
  to:signed_multiply::@3
signed_multiply::@1: scope:[signed_multiply]  from signed_multiply signed_multiply::@3
  (boolean~) signed_multiply::$9 ← (signed byte) signed_multiply::b < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) signed_multiply::$10 ← ! (boolean~) signed_multiply::$9
  if((boolean~) signed_multiply::$10) goto signed_multiply::@2
  to:signed_multiply::@4
signed_multiply::@3: scope:[signed_multiply]  from signed_multiply
  (byte~) signed_multiply::$5 ← > (word) signed_multiply::m
  (byte~) signed_multiply::$6 ← > (word) signed_multiply::m
  (byte~) signed_multiply::$7 ← ((byte)) (signed byte) signed_multiply::b
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$8 ← (byte~) signed_multiply::$6 - (byte~) signed_multiply::$7
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 ← (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$8
  (word) signed_multiply::m ← (word) signed_multiply::m hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16
  to:signed_multiply::@1
signed_multiply::@2: scope:[signed_multiply]  from signed_multiply::@1 signed_multiply::@4
  (signed word~) signed_multiply::$15 ← ((signed word)) (word) signed_multiply::m
  (signed word) signed_multiply::return ← (signed word~) signed_multiply::$15
  to:signed_multiply::@return
signed_multiply::@4: scope:[signed_multiply]  from signed_multiply::@1
  (byte~) signed_multiply::$11 ← > (word) signed_multiply::m
  (byte~) signed_multiply::$12 ← > (word) signed_multiply::m
  (byte~) signed_multiply::$13 ← ((byte)) (signed byte) signed_multiply::a
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$14 ← (byte~) signed_multiply::$12 - (byte~) signed_multiply::$13
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 ← (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$14
  (word) signed_multiply::m ← (word) signed_multiply::m hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17
  to:signed_multiply::@2
signed_multiply::@return: scope:[signed_multiply]  from signed_multiply::@2 signed_multiply::@5
  (signed word) signed_multiply::return ← (signed word) signed_multiply::return
  return (signed word) signed_multiply::return
  to:@return
signed_multiply::@5: scope:[signed_multiply]  from
  to:signed_multiply::@return
@11: scope:[]  from @10
  (byte*) BGCOL ← ((byte*)) (word/dword/signed dword) 53281
  to:@12
main: scope:[main]  from
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (void~) main::$0 ← call print_cls 
  (void~) main::$1 ← call init_multiply 
  (void~) main::$2 ← call init_multiply_asm 
  (void~) main::$3 ← call multiply_tables_compare 
  (void~) main::$4 ← call multiply_results_compare 
  (void~) main::$5 ← call signed_multiply_results_compare 
  to:main::@return
main::@return: scope:[main]  from main
  return 
  to:@return
@12: scope:[]  from @11
  to:@13
slow_multiply: scope:[slow_multiply]  from
  (word) slow_multiply::m ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_multiply::$0 ← (byte) slow_multiply::a != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_multiply::$1 ← ! (boolean~) slow_multiply::$0
  if((boolean~) slow_multiply::$1) goto slow_multiply::@1
  to:slow_multiply::@3
slow_multiply::@1: scope:[slow_multiply]  from slow_multiply slow_multiply::@4
  (word) slow_multiply::return ← (word) slow_multiply::m
  to:slow_multiply::@return
slow_multiply::@3: scope:[slow_multiply]  from slow_multiply
  (byte) slow_multiply::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:slow_multiply::@2
slow_multiply::@2: scope:[slow_multiply]  from slow_multiply::@2 slow_multiply::@3
  (word~) slow_multiply::$2 ← (word) slow_multiply::m + (byte) slow_multiply::b
  (word) slow_multiply::m ← (word~) slow_multiply::$2
  (byte) slow_multiply::i ← ++ (byte) slow_multiply::i
  (boolean~) slow_multiply::$3 ← (byte) slow_multiply::i != (byte) slow_multiply::a
  if((boolean~) slow_multiply::$3) goto slow_multiply::@2
  to:slow_multiply::@4
slow_multiply::@4: scope:[slow_multiply]  from slow_multiply::@2
  to:slow_multiply::@1
slow_multiply::@return: scope:[slow_multiply]  from slow_multiply::@1 slow_multiply::@5
  (word) slow_multiply::return ← (word) slow_multiply::return
  return (word) slow_multiply::return
  to:@return
slow_multiply::@5: scope:[slow_multiply]  from
  to:slow_multiply::@return
@13: scope:[]  from @12
  to:@14
slow_signed_multiply: scope:[slow_signed_multiply]  from
  (signed word) slow_signed_multiply::m ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_signed_multiply::$0 ← (signed byte) slow_signed_multiply::a < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_signed_multiply::$1 ← ! (boolean~) slow_signed_multiply::$0
  if((boolean~) slow_signed_multiply::$1) goto slow_signed_multiply::@1
  to:slow_signed_multiply::@6
slow_signed_multiply::@1: scope:[slow_signed_multiply]  from slow_signed_multiply slow_signed_multiply::@8
  (boolean~) slow_signed_multiply::$4 ← (signed byte) slow_signed_multiply::a > (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_signed_multiply::$5 ← ! (boolean~) slow_signed_multiply::$4
  if((boolean~) slow_signed_multiply::$5) goto slow_signed_multiply::@4
  to:slow_signed_multiply::@9
slow_signed_multiply::@6: scope:[slow_signed_multiply]  from slow_signed_multiply
  (signed byte) slow_signed_multiply::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:slow_signed_multiply::@2
slow_signed_multiply::@2: scope:[slow_signed_multiply]  from slow_signed_multiply::@2 slow_signed_multiply::@6
  (signed word~) slow_signed_multiply::$2 ← (signed word) slow_signed_multiply::m - (signed byte) slow_signed_multiply::b
  (signed word) slow_signed_multiply::m ← (signed word~) slow_signed_multiply::$2
  (signed byte) slow_signed_multiply::i ← -- (signed byte) slow_signed_multiply::i
  (boolean~) slow_signed_multiply::$3 ← (signed byte) slow_signed_multiply::i != (signed byte) slow_signed_multiply::a
  if((boolean~) slow_signed_multiply::$3) goto slow_signed_multiply::@2
  to:slow_signed_multiply::@7
slow_signed_multiply::@7: scope:[slow_signed_multiply]  from slow_signed_multiply::@2
  to:slow_signed_multiply::@3
slow_signed_multiply::@3: scope:[slow_signed_multiply]  from slow_signed_multiply::@4 slow_signed_multiply::@7
  (signed word) slow_signed_multiply::return ← (signed word) slow_signed_multiply::m
  to:slow_signed_multiply::@return
slow_signed_multiply::@8: scope:[slow_signed_multiply]  from
  to:slow_signed_multiply::@1
slow_signed_multiply::@4: scope:[slow_signed_multiply]  from slow_signed_multiply::@1 slow_signed_multiply::@10
  to:slow_signed_multiply::@3
slow_signed_multiply::@9: scope:[slow_signed_multiply]  from slow_signed_multiply::@1
  (signed byte) slow_signed_multiply::j ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:slow_signed_multiply::@5
slow_signed_multiply::@5: scope:[slow_signed_multiply]  from slow_signed_multiply::@5 slow_signed_multiply::@9
  (signed word~) slow_signed_multiply::$6 ← (signed word) slow_signed_multiply::m + (signed byte) slow_signed_multiply::b
  (signed word) slow_signed_multiply::m ← (signed word~) slow_signed_multiply::$6
  (signed byte) slow_signed_multiply::j ← ++ (signed byte) slow_signed_multiply::j
  (boolean~) slow_signed_multiply::$7 ← (signed byte) slow_signed_multiply::j != (signed byte) slow_signed_multiply::a
  if((boolean~) slow_signed_multiply::$7) goto slow_signed_multiply::@5
  to:slow_signed_multiply::@10
slow_signed_multiply::@10: scope:[slow_signed_multiply]  from slow_signed_multiply::@5
  to:slow_signed_multiply::@4
slow_signed_multiply::@return: scope:[slow_signed_multiply]  from slow_signed_multiply::@11 slow_signed_multiply::@3
  (signed word) slow_signed_multiply::return ← (signed word) slow_signed_multiply::return
  return (signed word) slow_signed_multiply::return
  to:@return
slow_signed_multiply::@11: scope:[slow_signed_multiply]  from
  to:slow_signed_multiply::@return
@14: scope:[]  from @13
  (byte[512]) asm_mul_sqr1_lo ← { fill( 512, 0) }
  (byte[512]) asm_mul_sqr1_hi ← { fill( 512, 0) }
  (byte[512]) asm_mul_sqr2_lo ← { fill( 512, 0) }
  (byte[512]) asm_mul_sqr2_hi ← { fill( 512, 0) }
  to:@15
init_multiply_asm: scope:[init_multiply_asm]  from
  asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: staasm_mul_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: staasm_mul_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldaasm_mul_sqr1_hi+1,x staasm_mul_sqr2_hi+$100,x ldaasm_mul_sqr1_hi,x staasm_mul_sqr2_hi,y ldaasm_mul_sqr1_lo+1,x staasm_mul_sqr2_lo+$100,x ldaasm_mul_sqr1_lo,x staasm_mul_sqr2_lo,y dey inx bne!-  }
  (byte*) init_multiply_asm::mem ← ((byte*)) (byte/word/signed word/dword/signed dword) 255
  *((byte*) init_multiply_asm::mem) ← *((byte[512]) asm_mul_sqr1_lo)
  *((byte*) init_multiply_asm::mem) ← *((byte[512]) asm_mul_sqr1_hi)
  *((byte*) init_multiply_asm::mem) ← *((byte[512]) asm_mul_sqr2_lo)
  *((byte*) init_multiply_asm::mem) ← *((byte[512]) asm_mul_sqr2_hi)
  to:init_multiply_asm::@return
init_multiply_asm::@return: scope:[init_multiply_asm]  from init_multiply_asm
  return 
  to:@return
@15: scope:[]  from @14
  to:@16
multiply_tables_compare: scope:[multiply_tables_compare]  from
  (byte*) multiply_tables_compare::asm_sqr ← (byte[512]) asm_mul_sqr1_lo
  (byte*) multiply_tables_compare::kc_sqr ← (byte[512]) mul_sqr1_lo
  to:multiply_tables_compare::@1
multiply_tables_compare::@1: scope:[multiply_tables_compare]  from multiply_tables_compare multiply_tables_compare::@2
  (boolean~) multiply_tables_compare::$0 ← *((byte*) multiply_tables_compare::kc_sqr) != *((byte*) multiply_tables_compare::asm_sqr)
  (boolean~) multiply_tables_compare::$1 ← ! (boolean~) multiply_tables_compare::$0
  if((boolean~) multiply_tables_compare::$1) goto multiply_tables_compare::@2
  to:multiply_tables_compare::@3
multiply_tables_compare::@2: scope:[multiply_tables_compare]  from multiply_tables_compare::@1 multiply_tables_compare::@4
  (byte*) multiply_tables_compare::asm_sqr ← ++ (byte*) multiply_tables_compare::asm_sqr
  (byte*) multiply_tables_compare::kc_sqr ← ++ (byte*) multiply_tables_compare::kc_sqr
  (word/signed word/dword/signed dword~) multiply_tables_compare::$8 ← (word/signed word/dword/signed dword) 512 * (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte*~) multiply_tables_compare::$9 ← (byte[512]) mul_sqr1_lo + (word/signed word/dword/signed dword~) multiply_tables_compare::$8
  (boolean~) multiply_tables_compare::$10 ← (byte*) multiply_tables_compare::kc_sqr < (byte*~) multiply_tables_compare::$9
  if((boolean~) multiply_tables_compare::$10) goto multiply_tables_compare::@1
  to:multiply_tables_compare::@5
multiply_tables_compare::@3: scope:[multiply_tables_compare]  from multiply_tables_compare::@1
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (void~) multiply_tables_compare::$2 ← call print_str (string) "multiply table mismatch at @" 
  (word~) multiply_tables_compare::$3 ← ((word)) (byte*) multiply_tables_compare::asm_sqr
  (void~) multiply_tables_compare::$4 ← call print_word (word~) multiply_tables_compare::$3 
  (void~) multiply_tables_compare::$5 ← call print_str (string) " / @" 
  (word~) multiply_tables_compare::$6 ← ((word)) (byte*) multiply_tables_compare::kc_sqr
  (void~) multiply_tables_compare::$7 ← call print_word (word~) multiply_tables_compare::$6 
  to:multiply_tables_compare::@return
multiply_tables_compare::@return: scope:[multiply_tables_compare]  from multiply_tables_compare::@3 multiply_tables_compare::@5
  return 
  to:@return
multiply_tables_compare::@4: scope:[multiply_tables_compare]  from
  to:multiply_tables_compare::@2
multiply_tables_compare::@5: scope:[multiply_tables_compare]  from multiply_tables_compare::@2
  (void~) multiply_tables_compare::$11 ← call print_str (string) "multiply tables match!@" 
  (void~) multiply_tables_compare::$12 ← call print_ln 
  to:multiply_tables_compare::@return
@16: scope:[]  from @15
  to:@17
multiply_results_compare: scope:[multiply_results_compare]  from
  (byte) multiply_results_compare::a ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:multiply_results_compare::@1
multiply_results_compare::@1: scope:[multiply_results_compare]  from multiply_results_compare multiply_results_compare::@6
  (byte) multiply_results_compare::b ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:multiply_results_compare::@2
multiply_results_compare::@2: scope:[multiply_results_compare]  from multiply_results_compare::@1 multiply_results_compare::@3
  (word~) multiply_results_compare::$0 ← call slow_multiply (byte) multiply_results_compare::a (byte) multiply_results_compare::b 
  (word) multiply_results_compare::ms ← (word~) multiply_results_compare::$0
  (word~) multiply_results_compare::$1 ← call multiply (byte) multiply_results_compare::a (byte) multiply_results_compare::b 
  (word) multiply_results_compare::ma ← (word~) multiply_results_compare::$1
  (boolean~) multiply_results_compare::$2 ← (word) multiply_results_compare::ms != (word) multiply_results_compare::ma
  (boolean~) multiply_results_compare::$3 ← ! (boolean~) multiply_results_compare::$2
  if((boolean~) multiply_results_compare::$3) goto multiply_results_compare::@3
  to:multiply_results_compare::@4
multiply_results_compare::@3: scope:[multiply_results_compare]  from multiply_results_compare::@2 multiply_results_compare::@5
  (byte) multiply_results_compare::b ← ++ (byte) multiply_results_compare::b
  (boolean~) multiply_results_compare::$5 ← (byte) multiply_results_compare::b != (byte/signed byte/word/signed word/dword/signed dword) 0
  if((boolean~) multiply_results_compare::$5) goto multiply_results_compare::@2
  to:multiply_results_compare::@6
multiply_results_compare::@4: scope:[multiply_results_compare]  from multiply_results_compare::@2
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (void~) multiply_results_compare::$4 ← call multiply_error (byte) multiply_results_compare::a (byte) multiply_results_compare::b (word) multiply_results_compare::ms (word) multiply_results_compare::ma 
  to:multiply_results_compare::@return
multiply_results_compare::@return: scope:[multiply_results_compare]  from multiply_results_compare::@4 multiply_results_compare::@7
  return 
  to:@return
multiply_results_compare::@5: scope:[multiply_results_compare]  from
  to:multiply_results_compare::@3
multiply_results_compare::@6: scope:[multiply_results_compare]  from multiply_results_compare::@3
  (byte) multiply_results_compare::a ← ++ (byte) multiply_results_compare::a
  (boolean~) multiply_results_compare::$6 ← (byte) multiply_results_compare::a != (byte/signed byte/word/signed word/dword/signed dword) 0
  if((boolean~) multiply_results_compare::$6) goto multiply_results_compare::@1
  to:multiply_results_compare::@7
multiply_results_compare::@7: scope:[multiply_results_compare]  from multiply_results_compare::@6
  (void~) multiply_results_compare::$7 ← call print_str (string) "multiply results match!@" 
  (void~) multiply_results_compare::$8 ← call print_ln 
  to:multiply_results_compare::@return
@17: scope:[]  from @16
  to:@18
multiply_error: scope:[multiply_error]  from
  (void~) multiply_error::$0 ← call print_str (string) "multiply mismatch @" 
  (void~) multiply_error::$1 ← call print_byte (byte) multiply_error::a 
  (void~) multiply_error::$2 ← call print_str (string) "*@" 
  (void~) multiply_error::$3 ← call print_byte (byte) multiply_error::b 
  (void~) multiply_error::$4 ← call print_str (string) " slow:@" 
  (void~) multiply_error::$5 ← call print_word (word) multiply_error::ms 
  (void~) multiply_error::$6 ← call print_str (string) " / fast asm:@" 
  (void~) multiply_error::$7 ← call print_word (word) multiply_error::ma 
  (void~) multiply_error::$8 ← call print_ln 
  to:multiply_error::@return
multiply_error::@return: scope:[multiply_error]  from multiply_error
  return 
  to:@return
@18: scope:[]  from @17
  to:@19
signed_multiply_results_compare: scope:[signed_multiply_results_compare]  from
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$0 ← - (byte/word/signed word/dword/signed dword) 128
  (signed byte) signed_multiply_results_compare::a ← (signed byte/signed word/signed dword~) signed_multiply_results_compare::$0
  to:signed_multiply_results_compare::@1
signed_multiply_results_compare::@1: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare signed_multiply_results_compare::@6
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$1 ← - (byte/word/signed word/dword/signed dword) 128
  (signed byte) signed_multiply_results_compare::b ← (signed byte/signed word/signed dword~) signed_multiply_results_compare::$1
  to:signed_multiply_results_compare::@2
signed_multiply_results_compare::@2: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@1 signed_multiply_results_compare::@3
  (signed word~) signed_multiply_results_compare::$2 ← call slow_signed_multiply (signed byte) signed_multiply_results_compare::a (signed byte) signed_multiply_results_compare::b 
  (signed word) signed_multiply_results_compare::ms ← (signed word~) signed_multiply_results_compare::$2
  (signed word~) signed_multiply_results_compare::$3 ← call signed_multiply (signed byte) signed_multiply_results_compare::a (signed byte) signed_multiply_results_compare::b 
  (signed word) signed_multiply_results_compare::ma ← (signed word~) signed_multiply_results_compare::$3
  (boolean~) signed_multiply_results_compare::$4 ← (signed word) signed_multiply_results_compare::ms != (signed word) signed_multiply_results_compare::ma
  (boolean~) signed_multiply_results_compare::$5 ← ! (boolean~) signed_multiply_results_compare::$4
  if((boolean~) signed_multiply_results_compare::$5) goto signed_multiply_results_compare::@3
  to:signed_multiply_results_compare::@4
signed_multiply_results_compare::@3: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@2 signed_multiply_results_compare::@5
  (signed byte) signed_multiply_results_compare::b ← ++ (signed byte) signed_multiply_results_compare::b
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$7 ← - (byte/word/signed word/dword/signed dword) 128
  (boolean~) signed_multiply_results_compare::$8 ← (signed byte) signed_multiply_results_compare::b != (signed byte/signed word/signed dword~) signed_multiply_results_compare::$7
  if((boolean~) signed_multiply_results_compare::$8) goto signed_multiply_results_compare::@2
  to:signed_multiply_results_compare::@6
signed_multiply_results_compare::@4: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@2
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (void~) signed_multiply_results_compare::$6 ← call signed_multiply_error (signed byte) signed_multiply_results_compare::a (signed byte) signed_multiply_results_compare::b (signed word) signed_multiply_results_compare::ms (signed word) signed_multiply_results_compare::ma 
  to:signed_multiply_results_compare::@return
signed_multiply_results_compare::@return: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@4 signed_multiply_results_compare::@7
  return 
  to:@return
signed_multiply_results_compare::@5: scope:[signed_multiply_results_compare]  from
  to:signed_multiply_results_compare::@3
signed_multiply_results_compare::@6: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@3
  (signed byte) signed_multiply_results_compare::a ← ++ (signed byte) signed_multiply_results_compare::a
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$9 ← - (byte/word/signed word/dword/signed dword) 128
  (boolean~) signed_multiply_results_compare::$10 ← (signed byte) signed_multiply_results_compare::a != (signed byte/signed word/signed dword~) signed_multiply_results_compare::$9
  if((boolean~) signed_multiply_results_compare::$10) goto signed_multiply_results_compare::@1
  to:signed_multiply_results_compare::@7
signed_multiply_results_compare::@7: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@6
  (void~) signed_multiply_results_compare::$11 ← call print_str (string) "signed multiply results match!@" 
  (void~) signed_multiply_results_compare::$12 ← call print_ln 
  to:signed_multiply_results_compare::@return
@19: scope:[]  from @18
  to:@20
signed_multiply_error: scope:[signed_multiply_error]  from
  (void~) signed_multiply_error::$0 ← call print_str (string) "signed multiply mismatch @" 
  (void~) signed_multiply_error::$1 ← call print_sbyte (signed byte) signed_multiply_error::a 
  (void~) signed_multiply_error::$2 ← call print_str (string) "*@" 
  (void~) signed_multiply_error::$3 ← call print_sbyte (signed byte) signed_multiply_error::b 
  (void~) signed_multiply_error::$4 ← call print_str (string) " slow:@" 
  (void~) signed_multiply_error::$5 ← call print_sword (signed word) signed_multiply_error::ms 
  (void~) signed_multiply_error::$6 ← call print_str (string) " / fast asm:@" 
  (void~) signed_multiply_error::$7 ← call print_sword (signed word) signed_multiply_error::ma 
  (void~) signed_multiply_error::$8 ← call print_ln 
  to:signed_multiply_error::@return
signed_multiply_error::@return: scope:[signed_multiply_error]  from signed_multiply_error
  return 
  to:@return
@20: scope:[]  from @19
  call main 
  to:@end
@end: scope:[]  from @20

Eliminating unused variable - keeping the call (void~) print_sword::$5
Eliminating unused variable - keeping the call (void~) print_sword::$2
Eliminating unused variable - keeping the call (void~) print_sbyte::$5
Eliminating unused variable - keeping the call (void~) print_sbyte::$2
Eliminating unused variable - keeping the call (void~) print_word::$1
Eliminating unused variable - keeping the call (void~) print_word::$3
Eliminating unused variable - keeping the call (void~) print_byte::$1
Eliminating unused variable - keeping the call (void~) print_byte::$3
Eliminating unused variable (byte~) signed_multiply::$5 and assignment [126] (byte~) signed_multiply::$5 ← > (word) signed_multiply::m
Eliminating unused variable (byte~) signed_multiply::$11 and assignment [134] (byte~) signed_multiply::$11 ← > (word) signed_multiply::m
Eliminating unused variable - keeping the call (void~) main::$0
Eliminating unused variable - keeping the call (void~) main::$1
Eliminating unused variable - keeping the call (void~) main::$2
Eliminating unused variable - keeping the call (void~) main::$3
Eliminating unused variable - keeping the call (void~) main::$4
Eliminating unused variable - keeping the call (void~) main::$5
Eliminating unused variable - keeping the call (void~) multiply_tables_compare::$2
Eliminating unused variable - keeping the call (void~) multiply_tables_compare::$4
Eliminating unused variable - keeping the call (void~) multiply_tables_compare::$5
Eliminating unused variable - keeping the call (void~) multiply_tables_compare::$7
Eliminating unused variable - keeping the call (void~) multiply_tables_compare::$11
Eliminating unused variable - keeping the call (void~) multiply_tables_compare::$12
Eliminating unused variable - keeping the call (void~) multiply_results_compare::$4
Eliminating unused variable - keeping the call (void~) multiply_results_compare::$7
Eliminating unused variable - keeping the call (void~) multiply_results_compare::$8
Eliminating unused variable - keeping the call (void~) multiply_error::$0
Eliminating unused variable - keeping the call (void~) multiply_error::$1
Eliminating unused variable - keeping the call (void~) multiply_error::$2
Eliminating unused variable - keeping the call (void~) multiply_error::$3
Eliminating unused variable - keeping the call (void~) multiply_error::$4
Eliminating unused variable - keeping the call (void~) multiply_error::$5
Eliminating unused variable - keeping the call (void~) multiply_error::$6
Eliminating unused variable - keeping the call (void~) multiply_error::$7
Eliminating unused variable - keeping the call (void~) multiply_error::$8
Eliminating unused variable - keeping the call (void~) signed_multiply_results_compare::$6
Eliminating unused variable - keeping the call (void~) signed_multiply_results_compare::$11
Eliminating unused variable - keeping the call (void~) signed_multiply_results_compare::$12
Eliminating unused variable - keeping the call (void~) signed_multiply_error::$0
Eliminating unused variable - keeping the call (void~) signed_multiply_error::$1
Eliminating unused variable - keeping the call (void~) signed_multiply_error::$2
Eliminating unused variable - keeping the call (void~) signed_multiply_error::$3
Eliminating unused variable - keeping the call (void~) signed_multiply_error::$4
Eliminating unused variable - keeping the call (void~) signed_multiply_error::$5
Eliminating unused variable - keeping the call (void~) signed_multiply_error::$6
Eliminating unused variable - keeping the call (void~) signed_multiply_error::$7
Eliminating unused variable - keeping the call (void~) signed_multiply_error::$8
Creating constant string variable for inline (const string) print_byte::$4 "0123456789abcdef"
Creating constant string variable for inline (const string) multiply_tables_compare::str "multiply table mismatch at @"
Creating constant string variable for inline (const string) multiply_tables_compare::str1 " / @"
Creating constant string variable for inline (const string) multiply_tables_compare::str2 "multiply tables match!@"
Creating constant string variable for inline (const string) multiply_results_compare::str "multiply results match!@"
Creating constant string variable for inline (const string) multiply_error::str "multiply mismatch @"
Creating constant string variable for inline (const string) multiply_error::str1 "*@"
Creating constant string variable for inline (const string) multiply_error::str2 " slow:@"
Creating constant string variable for inline (const string) multiply_error::str3 " / fast asm:@"
Creating constant string variable for inline (const string) signed_multiply_results_compare::str "signed multiply results match!@"
Creating constant string variable for inline (const string) signed_multiply_error::str "signed multiply mismatch @"
Creating constant string variable for inline (const string) signed_multiply_error::str1 "*@"
Creating constant string variable for inline (const string) signed_multiply_error::str2 " slow:@"
Creating constant string variable for inline (const string) signed_multiply_error::str3 " / fast asm:@"
Removing empty block print_str::@4
Removing empty block print_str::@3
Removing empty block print_str::@5
Removing empty block print_str::@6
Removing empty block @1
Removing empty block @2
Removing empty block @3
Removing empty block @4
Removing empty block @5
Removing empty block @6
Removing empty block @7
Removing empty block print_cls::@2
Removing empty block @9
Removing empty block multiply::@1
Removing empty block @10
Removing empty block signed_multiply::@5
Removing empty block @12
Removing empty block slow_multiply::@4
Removing empty block slow_multiply::@5
Removing empty block @13
Removing empty block slow_signed_multiply::@7
Removing empty block slow_signed_multiply::@8
Removing empty block slow_signed_multiply::@10
Removing empty block slow_signed_multiply::@11
Removing empty block @15
Removing empty block multiply_tables_compare::@4
Removing empty block @16
Removing empty block multiply_results_compare::@5
Removing empty block @17
Removing empty block @18
Removing empty block signed_multiply_results_compare::@5
Removing empty block @19
PROCEDURE MODIFY VARIABLE ANALYSIS
print_str modifies char_cursor
print_ln modifies line_cursor
print_ln modifies char_cursor
print_sword modifies char_cursor
print_sbyte modifies char_cursor
print_word modifies char_cursor
print_byte modifies char_cursor
print_char modifies char_cursor
main modifies char_cursor
main modifies line_cursor
multiply_tables_compare modifies char_cursor
multiply_tables_compare modifies line_cursor
multiply_results_compare modifies char_cursor
multiply_results_compare modifies line_cursor
multiply_error modifies char_cursor
multiply_error modifies line_cursor
signed_multiply_results_compare modifies char_cursor
signed_multiply_results_compare modifies line_cursor
signed_multiply_error modifies char_cursor
signed_multiply_error modifies line_cursor

Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...

CONTROL FLOW GRAPH SSA WITH ASSIGNMENT CALL & RETURN
@begin: scope:[]  from
  (byte*) line_cursor#0 ← ((byte*)) (word/signed word/dword/signed dword) 1024
  (byte*) char_cursor#0 ← (byte*) line_cursor#0
  to:@8
print_str: scope:[print_str]  from multiply_error multiply_error::@2 multiply_error::@4 multiply_error::@6 multiply_results_compare::@7 multiply_tables_compare::@3 multiply_tables_compare::@5 multiply_tables_compare::@7 signed_multiply_error signed_multiply_error::@2 signed_multiply_error::@4 signed_multiply_error::@6 signed_multiply_results_compare::@7
  (byte*) char_cursor#135 ← phi( multiply_error/(byte*) char_cursor#130 multiply_error::@2/(byte*) char_cursor#35 multiply_error::@4/(byte*) char_cursor#37 multiply_error::@6/(byte*) char_cursor#39 multiply_results_compare::@7/(byte*) char_cursor#129 multiply_tables_compare::@3/(byte*) char_cursor#126 multiply_tables_compare::@5/(byte*) char_cursor#127 multiply_tables_compare::@7/(byte*) char_cursor#24 signed_multiply_error/(byte*) char_cursor#133 signed_multiply_error::@2/(byte*) char_cursor#49 signed_multiply_error::@4/(byte*) char_cursor#51 signed_multiply_error::@6/(byte*) char_cursor#53 signed_multiply_results_compare::@7/(byte*) char_cursor#132 )
  (byte*) print_str::str#16 ← phi( multiply_error/(byte*) print_str::str#5 multiply_error::@2/(byte*) print_str::str#6 multiply_error::@4/(byte*) print_str::str#7 multiply_error::@6/(byte*) print_str::str#8 multiply_results_compare::@7/(byte*) print_str::str#4 multiply_tables_compare::@3/(byte*) print_str::str#1 multiply_tables_compare::@5/(byte*) print_str::str#3 multiply_tables_compare::@7/(byte*) print_str::str#2 signed_multiply_error/(byte*) print_str::str#10 signed_multiply_error::@2/(byte*) print_str::str#11 signed_multiply_error::@4/(byte*) print_str::str#12 signed_multiply_error::@6/(byte*) print_str::str#13 signed_multiply_results_compare::@7/(byte*) print_str::str#9 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  (byte*) char_cursor#117 ← phi( print_str/(byte*) char_cursor#135 print_str::@2/(byte*) char_cursor#1 )
  (byte*) print_str::str#14 ← phi( print_str/(byte*) print_str::str#16 print_str::@2/(byte*) print_str::str#0 )
  (boolean~) print_str::$0 ← *((byte*) print_str::str#14) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  to:print_str::@return
print_str::@2: scope:[print_str]  from print_str::@1
  (byte*) char_cursor#59 ← phi( print_str::@1/(byte*) char_cursor#117 )
  (byte*) print_str::str#15 ← phi( print_str::@1/(byte*) print_str::str#14 )
  *((byte*) char_cursor#59) ← *((byte*) print_str::str#15)
  (byte*) char_cursor#1 ← ++ (byte*) char_cursor#59
  (byte*) print_str::str#0 ← ++ (byte*) print_str::str#15
  to:print_str::@1
print_str::@return: scope:[print_str]  from print_str::@1
  (byte*) char_cursor#60 ← phi( print_str::@1/(byte*) char_cursor#117 )
  (byte*) char_cursor#2 ← (byte*) char_cursor#60
  return 
  to:@return
print_ln: scope:[print_ln]  from multiply_error::@8 multiply_results_compare::@11 multiply_tables_compare::@10 signed_multiply_error::@8 signed_multiply_results_compare::@11
  (byte*) char_cursor#118 ← phi( multiply_error::@8/(byte*) char_cursor#41 multiply_results_compare::@11/(byte*) char_cursor#32 multiply_tables_compare::@10/(byte*) char_cursor#28 signed_multiply_error::@8/(byte*) char_cursor#55 signed_multiply_results_compare::@11/(byte*) char_cursor#46 )
  (byte*) line_cursor#40 ← phi( multiply_error::@8/(byte*) line_cursor#46 multiply_results_compare::@11/(byte*) line_cursor#45 multiply_tables_compare::@10/(byte*) line_cursor#43 signed_multiply_error::@8/(byte*) line_cursor#49 signed_multiply_results_compare::@11/(byte*) line_cursor#48 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*) char_cursor#61 ← phi( print_ln/(byte*) char_cursor#118 print_ln::@1/(byte*) char_cursor#61 )
  (byte*) line_cursor#20 ← phi( print_ln/(byte*) line_cursor#40 print_ln::@1/(byte*) line_cursor#1 )
  (byte*~) print_ln::$0 ← (byte*) line_cursor#20 + (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte*) line_cursor#1 ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) line_cursor#1 < (byte*) char_cursor#61
  if((boolean~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) line_cursor#21 ← phi( print_ln::@1/(byte*) line_cursor#1 )
  (byte*) char_cursor#3 ← (byte*) line_cursor#21
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  (byte*) char_cursor#62 ← phi( print_ln::@2/(byte*) char_cursor#3 )
  (byte*) line_cursor#22 ← phi( print_ln::@2/(byte*) line_cursor#21 )
  (byte*) line_cursor#2 ← (byte*) line_cursor#22
  (byte*) char_cursor#4 ← (byte*) char_cursor#62
  return 
  to:@return
print_sword: scope:[print_sword]  from signed_multiply_error::@5 signed_multiply_error::@7
  (byte*) char_cursor#136 ← phi( signed_multiply_error::@5/(byte*) char_cursor#52 signed_multiply_error::@7/(byte*) char_cursor#54 )
  (signed word) print_sword::w#3 ← phi( signed_multiply_error::@5/(signed word) print_sword::w#1 signed_multiply_error::@7/(signed word) print_sword::w#2 )
  (boolean~) print_sword::$0 ← (signed word) print_sword::w#3 < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sword::$1 ← ! (boolean~) print_sword::$0
  if((boolean~) print_sword::$1) goto print_sword::@1
  to:print_sword::@2
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@4
  (byte*) char_cursor#119 ← phi( print_sword/(byte*) char_cursor#136 print_sword::@4/(byte*) char_cursor#6 )
  (signed word) print_sword::w#4 ← phi( print_sword/(signed word) print_sword::w#3 print_sword::@4/(signed word) print_sword::w#0 )
  (word~) print_sword::$4 ← ((word)) (signed word) print_sword::w#4
  (word) print_word::w#0 ← (word~) print_sword::$4
  call print_word param-assignment
  to:print_sword::@3
print_sword::@3: scope:[print_sword]  from print_sword::@1
  (byte*) char_cursor#63 ← phi( print_sword::@1/(byte*) char_cursor#13 )
  (byte*) char_cursor#5 ← (byte*) char_cursor#63
  to:print_sword::@return
print_sword::@2: scope:[print_sword]  from print_sword
  (signed word) print_sword::w#6 ← phi( print_sword/(signed word) print_sword::w#3 )
  (byte*) char_cursor#120 ← phi( print_sword/(byte*) char_cursor#136 )
  (byte) print_char::ch#0 ← (byte) '-'
  call print_char param-assignment
  to:print_sword::@4
print_sword::@4: scope:[print_sword]  from print_sword::@2
  (signed word) print_sword::w#5 ← phi( print_sword::@2/(signed word) print_sword::w#6 )
  (byte*) char_cursor#64 ← phi( print_sword::@2/(byte*) char_cursor#18 )
  (byte*) char_cursor#6 ← (byte*) char_cursor#64
  (signed word~) print_sword::$3 ← - (signed word) print_sword::w#5
  (signed word) print_sword::w#0 ← (signed word~) print_sword::$3
  to:print_sword::@1
print_sword::@return: scope:[print_sword]  from print_sword::@3
  (byte*) char_cursor#65 ← phi( print_sword::@3/(byte*) char_cursor#5 )
  (byte*) char_cursor#7 ← (byte*) char_cursor#65
  return 
  to:@return
print_sbyte: scope:[print_sbyte]  from signed_multiply_error::@1 signed_multiply_error::@3
  (byte*) char_cursor#137 ← phi( signed_multiply_error::@1/(byte*) char_cursor#48 signed_multiply_error::@3/(byte*) char_cursor#50 )
  (signed byte) print_sbyte::b#3 ← phi( signed_multiply_error::@1/(signed byte) print_sbyte::b#1 signed_multiply_error::@3/(signed byte) print_sbyte::b#2 )
  (boolean~) print_sbyte::$0 ← (signed byte) print_sbyte::b#3 < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sbyte::$1 ← ! (boolean~) print_sbyte::$0
  if((boolean~) print_sbyte::$1) goto print_sbyte::@1
  to:print_sbyte::@2
print_sbyte::@1: scope:[print_sbyte]  from print_sbyte print_sbyte::@4
  (byte*) char_cursor#121 ← phi( print_sbyte/(byte*) char_cursor#137 print_sbyte::@4/(byte*) char_cursor#9 )
  (signed byte) print_sbyte::b#4 ← phi( print_sbyte/(signed byte) print_sbyte::b#3 print_sbyte::@4/(signed byte) print_sbyte::b#0 )
  (byte~) print_sbyte::$4 ← ((byte)) (signed byte) print_sbyte::b#4
  (byte) print_byte::b#0 ← (byte~) print_sbyte::$4
  call print_byte param-assignment
  to:print_sbyte::@3
print_sbyte::@3: scope:[print_sbyte]  from print_sbyte::@1
  (byte*) char_cursor#66 ← phi( print_sbyte::@1/(byte*) char_cursor#16 )
  (byte*) char_cursor#8 ← (byte*) char_cursor#66
  to:print_sbyte::@return
print_sbyte::@2: scope:[print_sbyte]  from print_sbyte
  (signed byte) print_sbyte::b#6 ← phi( print_sbyte/(signed byte) print_sbyte::b#3 )
  (byte*) char_cursor#122 ← phi( print_sbyte/(byte*) char_cursor#137 )
  (byte) print_char::ch#1 ← (byte) '-'
  call print_char param-assignment
  to:print_sbyte::@4
print_sbyte::@4: scope:[print_sbyte]  from print_sbyte::@2
  (signed byte) print_sbyte::b#5 ← phi( print_sbyte::@2/(signed byte) print_sbyte::b#6 )
  (byte*) char_cursor#67 ← phi( print_sbyte::@2/(byte*) char_cursor#18 )
  (byte*) char_cursor#9 ← (byte*) char_cursor#67
  (signed byte~) print_sbyte::$3 ← - (signed byte) print_sbyte::b#5
  (signed byte) print_sbyte::b#0 ← (signed byte~) print_sbyte::$3
  to:print_sbyte::@1
print_sbyte::@return: scope:[print_sbyte]  from print_sbyte::@3
  (byte*) char_cursor#68 ← phi( print_sbyte::@3/(byte*) char_cursor#8 )
  (byte*) char_cursor#10 ← (byte*) char_cursor#68
  return 
  to:@return
print_word: scope:[print_word]  from multiply_error::@5 multiply_error::@7 multiply_tables_compare::@6 multiply_tables_compare::@8 print_sword::@1
  (byte*) char_cursor#123 ← phi( multiply_error::@5/(byte*) char_cursor#38 multiply_error::@7/(byte*) char_cursor#40 multiply_tables_compare::@6/(byte*) char_cursor#23 multiply_tables_compare::@8/(byte*) char_cursor#25 print_sword::@1/(byte*) char_cursor#119 )
  (word) print_word::w#5 ← phi( multiply_error::@5/(word) print_word::w#3 multiply_error::@7/(word) print_word::w#4 multiply_tables_compare::@6/(word) print_word::w#1 multiply_tables_compare::@8/(word) print_word::w#2 print_sword::@1/(word) print_word::w#0 )
  (byte~) print_word::$0 ← > (word) print_word::w#5
  (byte) print_byte::b#1 ← (byte~) print_word::$0
  call print_byte param-assignment
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  (word) print_word::w#6 ← phi( print_word/(word) print_word::w#5 )
  (byte*) char_cursor#69 ← phi( print_word/(byte*) char_cursor#16 )
  (byte*) char_cursor#11 ← (byte*) char_cursor#69
  (byte~) print_word::$2 ← < (word) print_word::w#6
  (byte) print_byte::b#2 ← (byte~) print_word::$2
  call print_byte param-assignment
  to:print_word::@2
print_word::@2: scope:[print_word]  from print_word::@1
  (byte*) char_cursor#70 ← phi( print_word::@1/(byte*) char_cursor#16 )
  (byte*) char_cursor#12 ← (byte*) char_cursor#70
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@2
  (byte*) char_cursor#71 ← phi( print_word::@2/(byte*) char_cursor#12 )
  (byte*) char_cursor#13 ← (byte*) char_cursor#71
  return 
  to:@return
print_byte: scope:[print_byte]  from multiply_error::@1 multiply_error::@3 print_sbyte::@1 print_word print_word::@1
  (byte*) char_cursor#124 ← phi( multiply_error::@1/(byte*) char_cursor#34 multiply_error::@3/(byte*) char_cursor#36 print_sbyte::@1/(byte*) char_cursor#121 print_word/(byte*) char_cursor#123 print_word::@1/(byte*) char_cursor#11 )
  (byte) print_byte::b#5 ← phi( multiply_error::@1/(byte) print_byte::b#3 multiply_error::@3/(byte) print_byte::b#4 print_sbyte::@1/(byte) print_byte::b#0 print_word/(byte) print_byte::b#1 print_word::@1/(byte) print_byte::b#2 )
  (byte[]) print_byte::hextab#0 ← (const string) print_byte::$4
  (byte~) print_byte::$0 ← (byte) print_byte::b#5 >> (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte) print_char::ch#2 ← *((byte[]) print_byte::hextab#0 + (byte~) print_byte::$0)
  call print_char param-assignment
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  (byte) print_byte::b#6 ← phi( print_byte/(byte) print_byte::b#5 )
  (byte*) char_cursor#72 ← phi( print_byte/(byte*) char_cursor#18 )
  (byte*) char_cursor#14 ← (byte*) char_cursor#72
  (byte~) print_byte::$2 ← (byte) print_byte::b#6 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte) print_char::ch#3 ← *((byte[]) print_byte::hextab#0 + (byte~) print_byte::$2)
  call print_char param-assignment
  to:print_byte::@2
print_byte::@2: scope:[print_byte]  from print_byte::@1
  (byte*) char_cursor#73 ← phi( print_byte::@1/(byte*) char_cursor#18 )
  (byte*) char_cursor#15 ← (byte*) char_cursor#73
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@2
  (byte*) char_cursor#74 ← phi( print_byte::@2/(byte*) char_cursor#15 )
  (byte*) char_cursor#16 ← (byte*) char_cursor#74
  return 
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1 print_sbyte::@2 print_sword::@2
  (byte*) char_cursor#75 ← phi( print_byte/(byte*) char_cursor#124 print_byte::@1/(byte*) char_cursor#14 print_sbyte::@2/(byte*) char_cursor#122 print_sword::@2/(byte*) char_cursor#120 )
  (byte) print_char::ch#4 ← phi( print_byte/(byte) print_char::ch#2 print_byte::@1/(byte) print_char::ch#3 print_sbyte::@2/(byte) print_char::ch#1 print_sword::@2/(byte) print_char::ch#0 )
  *((byte*) char_cursor#75) ← (byte) print_char::ch#4
  (byte*) char_cursor#17 ← ++ (byte*) char_cursor#75
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  (byte*) char_cursor#76 ← phi( print_char/(byte*) char_cursor#17 )
  (byte*) char_cursor#18 ← (byte*) char_cursor#76
  return 
  to:@return
print_cls: scope:[print_cls]  from main
  (byte*) print_cls::sc#0 ← ((byte*)) (word/signed word/dword/signed dword) 1024
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  (byte*) print_cls::sc#2 ← phi( print_cls/(byte*) print_cls::sc#0 print_cls::@1/(byte*) print_cls::sc#1 )
  *((byte*) print_cls::sc#2) ← (byte) ' '
  (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2
  (word/signed word/dword/signed dword~) print_cls::$0 ← (word/signed word/dword/signed dword) 1024 + (word/signed word/dword/signed dword) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc#1 != (word/signed word/dword/signed dword~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  return 
  to:@return
@8: scope:[]  from @begin
  (byte*) line_cursor#71 ← phi( @begin/(byte*) line_cursor#0 )
  (byte*) char_cursor#153 ← phi( @begin/(byte*) char_cursor#0 )
  (byte[512]) mul_sqr1_lo#0 ← { fill( 512, 0) }
  (byte[512]) mul_sqr1_hi#0 ← { fill( 512, 0) }
  (byte[512]) mul_sqr2_lo#0 ← { fill( 512, 0) }
  (byte[512]) mul_sqr2_hi#0 ← { fill( 512, 0) }
  to:@11
init_multiply: scope:[init_multiply]  from main::@1
  (word) init_multiply::sqr#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) init_multiply::x_2#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) init_multiply::c#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) init_multiply::$0 ← (byte[512]) mul_sqr1_hi#0 + (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) init_multiply::sqr1_hi#0 ← (byte*~) init_multiply::$0
  (byte*~) init_multiply::$1 ← (byte[512]) mul_sqr1_lo#0 + (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) init_multiply::sqr1_lo#0 ← (byte*~) init_multiply::$1
  to:init_multiply::@1
init_multiply::@1: scope:[init_multiply]  from init_multiply init_multiply::@2
  (byte) init_multiply::x_2#4 ← phi( init_multiply/(byte) init_multiply::x_2#0 init_multiply::@2/(byte) init_multiply::x_2#2 )
  (byte*) init_multiply::sqr1_hi#3 ← phi( init_multiply/(byte*) init_multiply::sqr1_hi#0 init_multiply::@2/(byte*) init_multiply::sqr1_hi#1 )
  (byte*) init_multiply::sqr1_lo#3 ← phi( init_multiply/(byte*) init_multiply::sqr1_lo#0 init_multiply::@2/(byte*) init_multiply::sqr1_lo#1 )
  (word) init_multiply::sqr#5 ← phi( init_multiply/(word) init_multiply::sqr#0 init_multiply::@2/(word) init_multiply::sqr#1 )
  (byte) init_multiply::c#2 ← phi( init_multiply/(byte) init_multiply::c#0 init_multiply::@2/(byte) init_multiply::c#3 )
  (byte) init_multiply::c#1 ← ++ (byte) init_multiply::c#2
  (byte~) init_multiply::$2 ← (byte) init_multiply::c#1 & (byte/signed byte/word/signed word/dword/signed dword) 1
  (boolean~) init_multiply::$3 ← (byte~) init_multiply::$2 == (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) init_multiply::$4 ← ! (boolean~) init_multiply::$3
  if((boolean~) init_multiply::$4) goto init_multiply::@2
  to:init_multiply::@5
init_multiply::@2: scope:[init_multiply]  from init_multiply::@1 init_multiply::@5
  (byte) init_multiply::c#3 ← phi( init_multiply::@1/(byte) init_multiply::c#1 init_multiply::@5/(byte) init_multiply::c#4 )
  (byte) init_multiply::x_2#2 ← phi( init_multiply::@1/(byte) init_multiply::x_2#4 init_multiply::@5/(byte) init_multiply::x_2#1 )
  (byte*) init_multiply::sqr1_hi#2 ← phi( init_multiply::@1/(byte*) init_multiply::sqr1_hi#3 init_multiply::@5/(byte*) init_multiply::sqr1_hi#4 )
  (byte*) init_multiply::sqr1_lo#2 ← phi( init_multiply::@1/(byte*) init_multiply::sqr1_lo#3 init_multiply::@5/(byte*) init_multiply::sqr1_lo#4 )
  (word) init_multiply::sqr#3 ← phi( init_multiply::@1/(word) init_multiply::sqr#5 init_multiply::@5/(word) init_multiply::sqr#2 )
  (byte~) init_multiply::$5 ← < (word) init_multiply::sqr#3
  *((byte*) init_multiply::sqr1_lo#2) ← (byte~) init_multiply::$5
  (byte~) init_multiply::$6 ← > (word) init_multiply::sqr#3
  *((byte*) init_multiply::sqr1_hi#2) ← (byte~) init_multiply::$6
  (byte*) init_multiply::sqr1_hi#1 ← ++ (byte*) init_multiply::sqr1_hi#2
  (word~) init_multiply::$7 ← (word) init_multiply::sqr#3 + (byte) init_multiply::x_2#2
  (word) init_multiply::sqr#1 ← (word~) init_multiply::$7
  (byte*) init_multiply::sqr1_lo#1 ← ++ (byte*) init_multiply::sqr1_lo#2
  (byte*~) init_multiply::$8 ← (byte[512]) mul_sqr1_lo#0 + (word/signed word/dword/signed dword) 512
  (boolean~) init_multiply::$9 ← (byte*) init_multiply::sqr1_lo#1 != (byte*~) init_multiply::$8
  if((boolean~) init_multiply::$9) goto init_multiply::@1
  to:init_multiply::@6
init_multiply::@5: scope:[init_multiply]  from init_multiply::@1
  (byte) init_multiply::c#4 ← phi( init_multiply::@1/(byte) init_multiply::c#1 )
  (byte*) init_multiply::sqr1_hi#4 ← phi( init_multiply::@1/(byte*) init_multiply::sqr1_hi#3 )
  (byte*) init_multiply::sqr1_lo#4 ← phi( init_multiply::@1/(byte*) init_multiply::sqr1_lo#3 )
  (word) init_multiply::sqr#4 ← phi( init_multiply::@1/(word) init_multiply::sqr#5 )
  (byte) init_multiply::x_2#3 ← phi( init_multiply::@1/(byte) init_multiply::x_2#4 )
  (byte) init_multiply::x_2#1 ← ++ (byte) init_multiply::x_2#3
  (word) init_multiply::sqr#2 ← ++ (word) init_multiply::sqr#4
  to:init_multiply::@2
init_multiply::@6: scope:[init_multiply]  from init_multiply::@2
  (signed byte/signed word/signed dword~) init_multiply::$10 ← - (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) init_multiply::$11 ← ((byte)) (signed byte/signed word/signed dword~) init_multiply::$10
  (byte) init_multiply::x_255#0 ← (byte~) init_multiply::$11
  (byte) init_multiply::dir#0 ← (byte/word/signed word/dword/signed dword) 255
  (byte*) init_multiply::sqr2_hi#0 ← (byte[512]) mul_sqr2_hi#0
  (byte*) init_multiply::sqr2_lo#0 ← (byte[512]) mul_sqr2_lo#0
  to:init_multiply::@3
init_multiply::@3: scope:[init_multiply]  from init_multiply::@4 init_multiply::@6
  (byte) init_multiply::dir#2 ← phi( init_multiply::@4/(byte) init_multiply::dir#3 init_multiply::@6/(byte) init_multiply::dir#0 )
  (byte*) init_multiply::sqr2_hi#2 ← phi( init_multiply::@4/(byte*) init_multiply::sqr2_hi#3 init_multiply::@6/(byte*) init_multiply::sqr2_hi#0 )
  (byte*) init_multiply::sqr2_lo#2 ← phi( init_multiply::@4/(byte*) init_multiply::sqr2_lo#1 init_multiply::@6/(byte*) init_multiply::sqr2_lo#0 )
  (byte) init_multiply::x_255#2 ← phi( init_multiply::@4/(byte) init_multiply::x_255#3 init_multiply::@6/(byte) init_multiply::x_255#0 )
  *((byte*) init_multiply::sqr2_lo#2) ← *((byte[512]) mul_sqr1_lo#0 + (byte) init_multiply::x_255#2)
  *((byte*) init_multiply::sqr2_hi#2) ← *((byte[512]) mul_sqr1_hi#0 + (byte) init_multiply::x_255#2)
  (byte*) init_multiply::sqr2_hi#1 ← ++ (byte*) init_multiply::sqr2_hi#2
  (byte/word~) init_multiply::$12 ← (byte) init_multiply::x_255#2 + (byte) init_multiply::dir#2
  (byte) init_multiply::x_255#1 ← (byte/word~) init_multiply::$12
  (boolean~) init_multiply::$13 ← (byte) init_multiply::x_255#1 == (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) init_multiply::$14 ← ! (boolean~) init_multiply::$13
  if((boolean~) init_multiply::$14) goto init_multiply::@4
  to:init_multiply::@7
init_multiply::@4: scope:[init_multiply]  from init_multiply::@3 init_multiply::@7
  (byte) init_multiply::dir#3 ← phi( init_multiply::@3/(byte) init_multiply::dir#2 init_multiply::@7/(byte) init_multiply::dir#1 )
  (byte*) init_multiply::sqr2_hi#3 ← phi( init_multiply::@3/(byte*) init_multiply::sqr2_hi#1 init_multiply::@7/(byte*) init_multiply::sqr2_hi#4 )
  (byte) init_multiply::x_255#3 ← phi( init_multiply::@3/(byte) init_multiply::x_255#1 init_multiply::@7/(byte) init_multiply::x_255#4 )
  (byte*) init_multiply::sqr2_lo#3 ← phi( init_multiply::@3/(byte*) init_multiply::sqr2_lo#2 init_multiply::@7/(byte*) init_multiply::sqr2_lo#4 )
  (byte*) init_multiply::sqr2_lo#1 ← ++ (byte*) init_multiply::sqr2_lo#3
  (byte*~) init_multiply::$15 ← (byte[512]) mul_sqr2_lo#0 + (word/signed word/dword/signed dword) 511
  (boolean~) init_multiply::$16 ← (byte*) init_multiply::sqr2_lo#1 != (byte*~) init_multiply::$15
  if((boolean~) init_multiply::$16) goto init_multiply::@3
  to:init_multiply::@8
init_multiply::@7: scope:[init_multiply]  from init_multiply::@3
  (byte*) init_multiply::sqr2_hi#4 ← phi( init_multiply::@3/(byte*) init_multiply::sqr2_hi#1 )
  (byte) init_multiply::x_255#4 ← phi( init_multiply::@3/(byte) init_multiply::x_255#1 )
  (byte*) init_multiply::sqr2_lo#4 ← phi( init_multiply::@3/(byte*) init_multiply::sqr2_lo#2 )
  (byte) init_multiply::dir#1 ← (byte/signed byte/word/signed word/dword/signed dword) 1
  to:init_multiply::@4
init_multiply::@8: scope:[init_multiply]  from init_multiply::@4
  (byte*~) init_multiply::$17 ← (byte[512]) mul_sqr2_lo#0 + (word/signed word/dword/signed dword) 511
  (byte*~) init_multiply::$18 ← (byte[512]) mul_sqr1_lo#0 + (word/signed word/dword/signed dword) 256
  *((byte*~) init_multiply::$17) ← *((byte*~) init_multiply::$18)
  (byte*~) init_multiply::$19 ← (byte[512]) mul_sqr2_hi#0 + (word/signed word/dword/signed dword) 511
  (byte*~) init_multiply::$20 ← (byte[512]) mul_sqr1_hi#0 + (word/signed word/dword/signed dword) 256
  *((byte*~) init_multiply::$19) ← *((byte*~) init_multiply::$20)
  to:init_multiply::@return
init_multiply::@return: scope:[init_multiply]  from init_multiply::@8
  return 
  to:@return
multiply: scope:[multiply]  from multiply_results_compare::@8 signed_multiply
  (byte) multiply::b#2 ← phi( multiply_results_compare::@8/(byte) multiply::b#1 signed_multiply/(byte) multiply::b#0 )
  (byte) multiply::a#2 ← phi( multiply_results_compare::@8/(byte) multiply::a#1 signed_multiply/(byte) multiply::a#0 )
  (byte*) multiply::memA#0 ← ((byte*)) (byte/word/signed word/dword/signed dword) 254
  (byte*) multiply::memB#0 ← ((byte*)) (byte/word/signed word/dword/signed dword) 255
  *((byte*) multiply::memA#0) ← (byte) multiply::a#2
  *((byte*) multiply::memB#0) ← (byte) multiply::b#2
  asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamul_sqr1_lo,x sm2: sbcmul_sqr2_lo,x stamemA sm3: ldamul_sqr1_hi,x sm4: sbcmul_sqr2_hi,x stamemB  }
  (word) multiply::return#0 ← { *((byte*) multiply::memB#0), *((byte*) multiply::memA#0) }
  to:multiply::@return
multiply::@return: scope:[multiply]  from multiply
  (word) multiply::return#4 ← phi( multiply/(word) multiply::return#0 )
  (word) multiply::return#1 ← (word) multiply::return#4
  return 
  to:@return
signed_multiply: scope:[signed_multiply]  from signed_multiply_results_compare::@8
  (signed byte) signed_multiply::b#1 ← phi( signed_multiply_results_compare::@8/(signed byte) signed_multiply::b#0 )
  (signed byte) signed_multiply::a#1 ← phi( signed_multiply_results_compare::@8/(signed byte) signed_multiply::a#0 )
  (byte~) signed_multiply::$0 ← ((byte)) (signed byte) signed_multiply::a#1
  (byte~) signed_multiply::$1 ← ((byte)) (signed byte) signed_multiply::b#1
  (byte) multiply::a#0 ← (byte~) signed_multiply::$0
  (byte) multiply::b#0 ← (byte~) signed_multiply::$1
  call multiply param-assignment
  (word) multiply::return#2 ← (word) multiply::return#1
  to:signed_multiply::@6
signed_multiply::@6: scope:[signed_multiply]  from signed_multiply
  (signed byte) signed_multiply::b#4 ← phi( signed_multiply/(signed byte) signed_multiply::b#1 )
  (signed byte) signed_multiply::a#2 ← phi( signed_multiply/(signed byte) signed_multiply::a#1 )
  (word) multiply::return#5 ← phi( signed_multiply/(word) multiply::return#2 )
  (word~) signed_multiply::$2 ← (word) multiply::return#5
  (word) signed_multiply::m#0 ← (word~) signed_multiply::$2
  (boolean~) signed_multiply::$3 ← (signed byte) signed_multiply::a#2 < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) signed_multiply::$4 ← ! (boolean~) signed_multiply::$3
  if((boolean~) signed_multiply::$4) goto signed_multiply::@1
  to:signed_multiply::@3
signed_multiply::@1: scope:[signed_multiply]  from signed_multiply::@3 signed_multiply::@6
  (signed byte) signed_multiply::a#4 ← phi( signed_multiply::@3/(signed byte) signed_multiply::a#5 signed_multiply::@6/(signed byte) signed_multiply::a#2 )
  (word) signed_multiply::m#6 ← phi( signed_multiply::@3/(word) signed_multiply::m#1 signed_multiply::@6/(word) signed_multiply::m#0 )
  (signed byte) signed_multiply::b#2 ← phi( signed_multiply::@3/(signed byte) signed_multiply::b#3 signed_multiply::@6/(signed byte) signed_multiply::b#4 )
  (boolean~) signed_multiply::$9 ← (signed byte) signed_multiply::b#2 < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) signed_multiply::$10 ← ! (boolean~) signed_multiply::$9
  if((boolean~) signed_multiply::$10) goto signed_multiply::@2
  to:signed_multiply::@4
signed_multiply::@3: scope:[signed_multiply]  from signed_multiply::@6
  (signed byte) signed_multiply::a#5 ← phi( signed_multiply::@6/(signed byte) signed_multiply::a#2 )
  (signed byte) signed_multiply::b#3 ← phi( signed_multiply::@6/(signed byte) signed_multiply::b#4 )
  (word) signed_multiply::m#3 ← phi( signed_multiply::@6/(word) signed_multiply::m#0 )
  (byte~) signed_multiply::$6 ← > (word) signed_multiply::m#3
  (byte~) signed_multiply::$7 ← ((byte)) (signed byte) signed_multiply::b#3
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$8 ← (byte~) signed_multiply::$6 - (byte~) signed_multiply::$7
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 ← (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$8
  (word) signed_multiply::m#1 ← (word) signed_multiply::m#3 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16
  to:signed_multiply::@1
signed_multiply::@2: scope:[signed_multiply]  from signed_multiply::@1 signed_multiply::@4
  (word) signed_multiply::m#4 ← phi( signed_multiply::@1/(word) signed_multiply::m#6 signed_multiply::@4/(word) signed_multiply::m#2 )
  (signed word~) signed_multiply::$15 ← ((signed word)) (word) signed_multiply::m#4
  (signed word) signed_multiply::return#0 ← (signed word~) signed_multiply::$15
  to:signed_multiply::@return
signed_multiply::@4: scope:[signed_multiply]  from signed_multiply::@1
  (signed byte) signed_multiply::a#3 ← phi( signed_multiply::@1/(signed byte) signed_multiply::a#4 )
  (word) signed_multiply::m#5 ← phi( signed_multiply::@1/(word) signed_multiply::m#6 )
  (byte~) signed_multiply::$12 ← > (word) signed_multiply::m#5
  (byte~) signed_multiply::$13 ← ((byte)) (signed byte) signed_multiply::a#3
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$14 ← (byte~) signed_multiply::$12 - (byte~) signed_multiply::$13
  (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 ← (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$14
  (word) signed_multiply::m#2 ← (word) signed_multiply::m#5 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17
  to:signed_multiply::@2
signed_multiply::@return: scope:[signed_multiply]  from signed_multiply::@2
  (signed word) signed_multiply::return#3 ← phi( signed_multiply::@2/(signed word) signed_multiply::return#0 )
  (signed word) signed_multiply::return#1 ← (signed word) signed_multiply::return#3
  return 
  to:@return
@11: scope:[]  from @8
  (byte*) line_cursor#62 ← phi( @8/(byte*) line_cursor#71 )
  (byte*) char_cursor#147 ← phi( @8/(byte*) char_cursor#153 )
  (byte*) BGCOL#0 ← ((byte*)) (word/dword/signed dword) 53281
  to:@14
main: scope:[main]  from @20
  (byte*) line_cursor#72 ← phi( @20/(byte*) line_cursor#50 )
  (byte*) char_cursor#154 ← phi( @20/(byte*) char_cursor#134 )
  (byte*) BGCOL#1 ← phi( @20/(byte*) BGCOL#5 )
  *((byte*) BGCOL#1) ← (byte/signed byte/word/signed word/dword/signed dword) 5
  call print_cls param-assignment
  to:main::@1
main::@1: scope:[main]  from main
  (byte*) BGCOL#22 ← phi( main/(byte*) BGCOL#1 )
  (byte*) line_cursor#61 ← phi( main/(byte*) line_cursor#72 )
  (byte*) char_cursor#146 ← phi( main/(byte*) char_cursor#154 )
  call init_multiply param-assignment
  to:main::@2
main::@2: scope:[main]  from main::@1
  (byte*) BGCOL#17 ← phi( main::@1/(byte*) BGCOL#22 )
  (byte*) line_cursor#51 ← phi( main::@1/(byte*) line_cursor#61 )
  (byte*) char_cursor#138 ← phi( main::@1/(byte*) char_cursor#146 )
  call init_multiply_asm param-assignment
  to:main::@3
main::@3: scope:[main]  from main::@2
  (byte*) BGCOL#14 ← phi( main::@2/(byte*) BGCOL#17 )
  (byte*) line_cursor#41 ← phi( main::@2/(byte*) line_cursor#51 )
  (byte*) char_cursor#125 ← phi( main::@2/(byte*) char_cursor#138 )
  call multiply_tables_compare param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  (byte*) BGCOL#27 ← phi( main::@3/(byte*) BGCOL#14 )
  (byte*) line_cursor#23 ← phi( main::@3/(byte*) line_cursor#7 )
  (byte*) char_cursor#77 ← phi( main::@3/(byte*) char_cursor#27 )
  (byte*) char_cursor#19 ← (byte*) char_cursor#77
  (byte*) line_cursor#3 ← (byte*) line_cursor#23
  call multiply_results_compare param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@4
  (byte*) BGCOL#28 ← phi( main::@4/(byte*) BGCOL#27 )
  (byte*) line_cursor#24 ← phi( main::@4/(byte*) line_cursor#10 )
  (byte*) char_cursor#78 ← phi( main::@4/(byte*) char_cursor#31 )
  (byte*) char_cursor#20 ← (byte*) char_cursor#78
  (byte*) line_cursor#4 ← (byte*) line_cursor#24
  call signed_multiply_results_compare param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@5
  (byte*) line_cursor#25 ← phi( main::@5/(byte*) line_cursor#15 )
  (byte*) char_cursor#79 ← phi( main::@5/(byte*) char_cursor#45 )
  (byte*) char_cursor#21 ← (byte*) char_cursor#79
  (byte*) line_cursor#5 ← (byte*) line_cursor#25
  to:main::@return
main::@return: scope:[main]  from main::@6
  (byte*) line_cursor#26 ← phi( main::@6/(byte*) line_cursor#5 )
  (byte*) char_cursor#80 ← phi( main::@6/(byte*) char_cursor#21 )
  (byte*) char_cursor#22 ← (byte*) char_cursor#80
  (byte*) line_cursor#6 ← (byte*) line_cursor#26
  return 
  to:@return
slow_multiply: scope:[slow_multiply]  from multiply_results_compare::@2
  (byte) slow_multiply::b#3 ← phi( multiply_results_compare::@2/(byte) slow_multiply::b#0 )
  (byte) slow_multiply::a#1 ← phi( multiply_results_compare::@2/(byte) slow_multiply::a#0 )
  (word) slow_multiply::m#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_multiply::$0 ← (byte) slow_multiply::a#1 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_multiply::$1 ← ! (boolean~) slow_multiply::$0
  if((boolean~) slow_multiply::$1) goto slow_multiply::@1
  to:slow_multiply::@3
slow_multiply::@1: scope:[slow_multiply]  from slow_multiply slow_multiply::@2
  (word) slow_multiply::m#2 ← phi( slow_multiply/(word) slow_multiply::m#0 slow_multiply::@2/(word) slow_multiply::m#1 )
  (word) slow_multiply::return#0 ← (word) slow_multiply::m#2
  to:slow_multiply::@return
slow_multiply::@3: scope:[slow_multiply]  from slow_multiply
  (byte) slow_multiply::a#3 ← phi( slow_multiply/(byte) slow_multiply::a#1 )
  (byte) slow_multiply::b#2 ← phi( slow_multiply/(byte) slow_multiply::b#3 )
  (word) slow_multiply::m#4 ← phi( slow_multiply/(word) slow_multiply::m#0 )
  (byte) slow_multiply::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:slow_multiply::@2
slow_multiply::@2: scope:[slow_multiply]  from slow_multiply::@2 slow_multiply::@3
  (byte) slow_multiply::a#2 ← phi( slow_multiply::@2/(byte) slow_multiply::a#2 slow_multiply::@3/(byte) slow_multiply::a#3 )
  (byte) slow_multiply::i#2 ← phi( slow_multiply::@2/(byte) slow_multiply::i#1 slow_multiply::@3/(byte) slow_multiply::i#0 )
  (byte) slow_multiply::b#1 ← phi( slow_multiply::@2/(byte) slow_multiply::b#1 slow_multiply::@3/(byte) slow_multiply::b#2 )
  (word) slow_multiply::m#3 ← phi( slow_multiply::@2/(word) slow_multiply::m#1 slow_multiply::@3/(word) slow_multiply::m#4 )
  (word~) slow_multiply::$2 ← (word) slow_multiply::m#3 + (byte) slow_multiply::b#1
  (word) slow_multiply::m#1 ← (word~) slow_multiply::$2
  (byte) slow_multiply::i#1 ← ++ (byte) slow_multiply::i#2
  (boolean~) slow_multiply::$3 ← (byte) slow_multiply::i#1 != (byte) slow_multiply::a#2
  if((boolean~) slow_multiply::$3) goto slow_multiply::@2
  to:slow_multiply::@1
slow_multiply::@return: scope:[slow_multiply]  from slow_multiply::@1
  (word) slow_multiply::return#3 ← phi( slow_multiply::@1/(word) slow_multiply::return#0 )
  (word) slow_multiply::return#1 ← (word) slow_multiply::return#3
  return 
  to:@return
slow_signed_multiply: scope:[slow_signed_multiply]  from signed_multiply_results_compare::@2
  (signed byte) slow_signed_multiply::b#5 ← phi( signed_multiply_results_compare::@2/(signed byte) slow_signed_multiply::b#0 )
  (signed byte) slow_signed_multiply::a#1 ← phi( signed_multiply_results_compare::@2/(signed byte) slow_signed_multiply::a#0 )
  (signed word) slow_signed_multiply::m#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_signed_multiply::$0 ← (signed byte) slow_signed_multiply::a#1 < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_signed_multiply::$1 ← ! (boolean~) slow_signed_multiply::$0
  if((boolean~) slow_signed_multiply::$1) goto slow_signed_multiply::@1
  to:slow_signed_multiply::@6
slow_signed_multiply::@1: scope:[slow_signed_multiply]  from slow_signed_multiply
  (signed byte) slow_signed_multiply::b#6 ← phi( slow_signed_multiply/(signed byte) slow_signed_multiply::b#5 )
  (signed word) slow_signed_multiply::m#9 ← phi( slow_signed_multiply/(signed word) slow_signed_multiply::m#0 )
  (signed byte) slow_signed_multiply::a#2 ← phi( slow_signed_multiply/(signed byte) slow_signed_multiply::a#1 )
  (boolean~) slow_signed_multiply::$4 ← (signed byte) slow_signed_multiply::a#2 > (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) slow_signed_multiply::$5 ← ! (boolean~) slow_signed_multiply::$4
  if((boolean~) slow_signed_multiply::$5) goto slow_signed_multiply::@4
  to:slow_signed_multiply::@9
slow_signed_multiply::@6: scope:[slow_signed_multiply]  from slow_signed_multiply
  (signed byte) slow_signed_multiply::a#5 ← phi( slow_signed_multiply/(signed byte) slow_signed_multiply::a#1 )
  (signed byte) slow_signed_multiply::b#3 ← phi( slow_signed_multiply/(signed byte) slow_signed_multiply::b#5 )
  (signed word) slow_signed_multiply::m#6 ← phi( slow_signed_multiply/(signed word) slow_signed_multiply::m#0 )
  (signed byte) slow_signed_multiply::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:slow_signed_multiply::@2
slow_signed_multiply::@2: scope:[slow_signed_multiply]  from slow_signed_multiply::@2 slow_signed_multiply::@6
  (signed byte) slow_signed_multiply::a#3 ← phi( slow_signed_multiply::@2/(signed byte) slow_signed_multiply::a#3 slow_signed_multiply::@6/(signed byte) slow_signed_multiply::a#5 )
  (signed byte) slow_signed_multiply::i#2 ← phi( slow_signed_multiply::@2/(signed byte) slow_signed_multiply::i#1 slow_signed_multiply::@6/(signed byte) slow_signed_multiply::i#0 )
  (signed byte) slow_signed_multiply::b#1 ← phi( slow_signed_multiply::@2/(signed byte) slow_signed_multiply::b#1 slow_signed_multiply::@6/(signed byte) slow_signed_multiply::b#3 )
  (signed word) slow_signed_multiply::m#3 ← phi( slow_signed_multiply::@2/(signed word) slow_signed_multiply::m#1 slow_signed_multiply::@6/(signed word) slow_signed_multiply::m#6 )
  (signed word~) slow_signed_multiply::$2 ← (signed word) slow_signed_multiply::m#3 - (signed byte) slow_signed_multiply::b#1
  (signed word) slow_signed_multiply::m#1 ← (signed word~) slow_signed_multiply::$2
  (signed byte) slow_signed_multiply::i#1 ← -- (signed byte) slow_signed_multiply::i#2
  (boolean~) slow_signed_multiply::$3 ← (signed byte) slow_signed_multiply::i#1 != (signed byte) slow_signed_multiply::a#3
  if((boolean~) slow_signed_multiply::$3) goto slow_signed_multiply::@2
  to:slow_signed_multiply::@3
slow_signed_multiply::@3: scope:[slow_signed_multiply]  from slow_signed_multiply::@2 slow_signed_multiply::@4 slow_signed_multiply::@5
  (signed word) slow_signed_multiply::m#4 ← phi( slow_signed_multiply::@2/(signed word) slow_signed_multiply::m#1 slow_signed_multiply::@4/(signed word) slow_signed_multiply::m#7 slow_signed_multiply::@5/(signed word) slow_signed_multiply::m#2 )
  (signed word) slow_signed_multiply::return#0 ← (signed word) slow_signed_multiply::m#4
  to:slow_signed_multiply::@return
slow_signed_multiply::@4: scope:[slow_signed_multiply]  from slow_signed_multiply::@1
  (signed word) slow_signed_multiply::m#7 ← phi( slow_signed_multiply::@1/(signed word) slow_signed_multiply::m#9 )
  to:slow_signed_multiply::@3
slow_signed_multiply::@9: scope:[slow_signed_multiply]  from slow_signed_multiply::@1
  (signed byte) slow_signed_multiply::a#6 ← phi( slow_signed_multiply::@1/(signed byte) slow_signed_multiply::a#2 )
  (signed byte) slow_signed_multiply::b#4 ← phi( slow_signed_multiply::@1/(signed byte) slow_signed_multiply::b#6 )
  (signed word) slow_signed_multiply::m#8 ← phi( slow_signed_multiply::@1/(signed word) slow_signed_multiply::m#9 )
  (signed byte) slow_signed_multiply::j#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:slow_signed_multiply::@5
slow_signed_multiply::@5: scope:[slow_signed_multiply]  from slow_signed_multiply::@5 slow_signed_multiply::@9
  (signed byte) slow_signed_multiply::a#4 ← phi( slow_signed_multiply::@5/(signed byte) slow_signed_multiply::a#4 slow_signed_multiply::@9/(signed byte) slow_signed_multiply::a#6 )
  (signed byte) slow_signed_multiply::j#2 ← phi( slow_signed_multiply::@5/(signed byte) slow_signed_multiply::j#1 slow_signed_multiply::@9/(signed byte) slow_signed_multiply::j#0 )
  (signed byte) slow_signed_multiply::b#2 ← phi( slow_signed_multiply::@5/(signed byte) slow_signed_multiply::b#2 slow_signed_multiply::@9/(signed byte) slow_signed_multiply::b#4 )
  (signed word) slow_signed_multiply::m#5 ← phi( slow_signed_multiply::@5/(signed word) slow_signed_multiply::m#2 slow_signed_multiply::@9/(signed word) slow_signed_multiply::m#8 )
  (signed word~) slow_signed_multiply::$6 ← (signed word) slow_signed_multiply::m#5 + (signed byte) slow_signed_multiply::b#2
  (signed word) slow_signed_multiply::m#2 ← (signed word~) slow_signed_multiply::$6
  (signed byte) slow_signed_multiply::j#1 ← ++ (signed byte) slow_signed_multiply::j#2
  (boolean~) slow_signed_multiply::$7 ← (signed byte) slow_signed_multiply::j#1 != (signed byte) slow_signed_multiply::a#4
  if((boolean~) slow_signed_multiply::$7) goto slow_signed_multiply::@5
  to:slow_signed_multiply::@3
slow_signed_multiply::@return: scope:[slow_signed_multiply]  from slow_signed_multiply::@3
  (signed word) slow_signed_multiply::return#3 ← phi( slow_signed_multiply::@3/(signed word) slow_signed_multiply::return#0 )
  (signed word) slow_signed_multiply::return#1 ← (signed word) slow_signed_multiply::return#3
  return 
  to:@return
@14: scope:[]  from @11
  (byte*) line_cursor#60 ← phi( @11/(byte*) line_cursor#62 )
  (byte*) char_cursor#145 ← phi( @11/(byte*) char_cursor#147 )
  (byte*) BGCOL#13 ← phi( @11/(byte*) BGCOL#0 )
  (byte[512]) asm_mul_sqr1_lo#0 ← { fill( 512, 0) }
  (byte[512]) asm_mul_sqr1_hi#0 ← { fill( 512, 0) }
  (byte[512]) asm_mul_sqr2_lo#0 ← { fill( 512, 0) }
  (byte[512]) asm_mul_sqr2_hi#0 ← { fill( 512, 0) }
  to:@20
init_multiply_asm: scope:[init_multiply_asm]  from main::@2
  asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: staasm_mul_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: staasm_mul_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldaasm_mul_sqr1_hi+1,x staasm_mul_sqr2_hi+$100,x ldaasm_mul_sqr1_hi,x staasm_mul_sqr2_hi,y ldaasm_mul_sqr1_lo+1,x staasm_mul_sqr2_lo+$100,x ldaasm_mul_sqr1_lo,x staasm_mul_sqr2_lo,y dey inx bne!-  }
  (byte*) init_multiply_asm::mem#0 ← ((byte*)) (byte/word/signed word/dword/signed dword) 255
  *((byte*) init_multiply_asm::mem#0) ← *((byte[512]) asm_mul_sqr1_lo#0)
  *((byte*) init_multiply_asm::mem#0) ← *((byte[512]) asm_mul_sqr1_hi#0)
  *((byte*) init_multiply_asm::mem#0) ← *((byte[512]) asm_mul_sqr2_lo#0)
  *((byte*) init_multiply_asm::mem#0) ← *((byte[512]) asm_mul_sqr2_hi#0)
  to:init_multiply_asm::@return
init_multiply_asm::@return: scope:[init_multiply_asm]  from init_multiply_asm
  return 
  to:@return
multiply_tables_compare: scope:[multiply_tables_compare]  from main::@3
  (byte*) line_cursor#81 ← phi( main::@3/(byte*) line_cursor#41 )
  (byte*) char_cursor#148 ← phi( main::@3/(byte*) char_cursor#125 )
  (byte*) BGCOL#9 ← phi( main::@3/(byte*) BGCOL#14 )
  (byte*) multiply_tables_compare::asm_sqr#0 ← (byte[512]) asm_mul_sqr1_lo#0
  (byte*) multiply_tables_compare::kc_sqr#0 ← (byte[512]) mul_sqr1_lo#0
  to:multiply_tables_compare::@1
multiply_tables_compare::@1: scope:[multiply_tables_compare]  from multiply_tables_compare multiply_tables_compare::@2
  (byte*) line_cursor#73 ← phi( multiply_tables_compare/(byte*) line_cursor#81 multiply_tables_compare::@2/(byte*) line_cursor#64 )
  (byte*) char_cursor#139 ← phi( multiply_tables_compare/(byte*) char_cursor#148 multiply_tables_compare::@2/(byte*) char_cursor#140 )
  (byte*) BGCOL#6 ← phi( multiply_tables_compare/(byte*) BGCOL#9 multiply_tables_compare::@2/(byte*) BGCOL#10 )
  (byte*) multiply_tables_compare::asm_sqr#2 ← phi( multiply_tables_compare/(byte*) multiply_tables_compare::asm_sqr#0 multiply_tables_compare::@2/(byte*) multiply_tables_compare::asm_sqr#1 )
  (byte*) multiply_tables_compare::kc_sqr#2 ← phi( multiply_tables_compare/(byte*) multiply_tables_compare::kc_sqr#0 multiply_tables_compare::@2/(byte*) multiply_tables_compare::kc_sqr#1 )
  (boolean~) multiply_tables_compare::$0 ← *((byte*) multiply_tables_compare::kc_sqr#2) != *((byte*) multiply_tables_compare::asm_sqr#2)
  (boolean~) multiply_tables_compare::$1 ← ! (boolean~) multiply_tables_compare::$0
  if((boolean~) multiply_tables_compare::$1) goto multiply_tables_compare::@2
  to:multiply_tables_compare::@3
multiply_tables_compare::@2: scope:[multiply_tables_compare]  from multiply_tables_compare::@1
  (byte*) line_cursor#64 ← phi( multiply_tables_compare::@1/(byte*) line_cursor#73 )
  (byte*) char_cursor#140 ← phi( multiply_tables_compare::@1/(byte*) char_cursor#139 )
  (byte*) BGCOL#10 ← phi( multiply_tables_compare::@1/(byte*) BGCOL#6 )
  (byte*) multiply_tables_compare::kc_sqr#3 ← phi( multiply_tables_compare::@1/(byte*) multiply_tables_compare::kc_sqr#2 )
  (byte*) multiply_tables_compare::asm_sqr#3 ← phi( multiply_tables_compare::@1/(byte*) multiply_tables_compare::asm_sqr#2 )
  (byte*) multiply_tables_compare::asm_sqr#1 ← ++ (byte*) multiply_tables_compare::asm_sqr#3
  (byte*) multiply_tables_compare::kc_sqr#1 ← ++ (byte*) multiply_tables_compare::kc_sqr#3
  (word/signed word/dword/signed dword~) multiply_tables_compare::$8 ← (word/signed word/dword/signed dword) 512 * (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte*~) multiply_tables_compare::$9 ← (byte[512]) mul_sqr1_lo#0 + (word/signed word/dword/signed dword~) multiply_tables_compare::$8
  (boolean~) multiply_tables_compare::$10 ← (byte*) multiply_tables_compare::kc_sqr#1 < (byte*~) multiply_tables_compare::$9
  if((boolean~) multiply_tables_compare::$10) goto multiply_tables_compare::@1
  to:multiply_tables_compare::@5
multiply_tables_compare::@3: scope:[multiply_tables_compare]  from multiply_tables_compare::@1
  (byte*) line_cursor#82 ← phi( multiply_tables_compare::@1/(byte*) line_cursor#73 )
  (byte*) multiply_tables_compare::kc_sqr#7 ← phi( multiply_tables_compare::@1/(byte*) multiply_tables_compare::kc_sqr#2 )
  (byte*) multiply_tables_compare::asm_sqr#5 ← phi( multiply_tables_compare::@1/(byte*) multiply_tables_compare::asm_sqr#2 )
  (byte*) char_cursor#126 ← phi( multiply_tables_compare::@1/(byte*) char_cursor#139 )
  (byte*) BGCOL#2 ← phi( multiply_tables_compare::@1/(byte*) BGCOL#6 )
  *((byte*) BGCOL#2) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte*) print_str::str#1 ← (const string) multiply_tables_compare::str
  call print_str param-assignment
  to:multiply_tables_compare::@6
multiply_tables_compare::@6: scope:[multiply_tables_compare]  from multiply_tables_compare::@3
  (byte*) line_cursor#74 ← phi( multiply_tables_compare::@3/(byte*) line_cursor#82 )
  (byte*) multiply_tables_compare::kc_sqr#6 ← phi( multiply_tables_compare::@3/(byte*) multiply_tables_compare::kc_sqr#7 )
  (byte*) multiply_tables_compare::asm_sqr#4 ← phi( multiply_tables_compare::@3/(byte*) multiply_tables_compare::asm_sqr#5 )
  (byte*) char_cursor#81 ← phi( multiply_tables_compare::@3/(byte*) char_cursor#2 )
  (byte*) char_cursor#23 ← (byte*) char_cursor#81
  (word~) multiply_tables_compare::$3 ← ((word)) (byte*) multiply_tables_compare::asm_sqr#4
  (word) print_word::w#1 ← (word~) multiply_tables_compare::$3
  call print_word param-assignment
  to:multiply_tables_compare::@7
multiply_tables_compare::@7: scope:[multiply_tables_compare]  from multiply_tables_compare::@6
  (byte*) line_cursor#63 ← phi( multiply_tables_compare::@6/(byte*) line_cursor#74 )
  (byte*) multiply_tables_compare::kc_sqr#5 ← phi( multiply_tables_compare::@6/(byte*) multiply_tables_compare::kc_sqr#6 )
  (byte*) char_cursor#82 ← phi( multiply_tables_compare::@6/(byte*) char_cursor#13 )
  (byte*) char_cursor#24 ← (byte*) char_cursor#82
  (byte*) print_str::str#2 ← (const string) multiply_tables_compare::str1
  call print_str param-assignment
  to:multiply_tables_compare::@8
multiply_tables_compare::@8: scope:[multiply_tables_compare]  from multiply_tables_compare::@7
  (byte*) line_cursor#52 ← phi( multiply_tables_compare::@7/(byte*) line_cursor#63 )
  (byte*) multiply_tables_compare::kc_sqr#4 ← phi( multiply_tables_compare::@7/(byte*) multiply_tables_compare::kc_sqr#5 )
  (byte*) char_cursor#83 ← phi( multiply_tables_compare::@7/(byte*) char_cursor#2 )
  (byte*) char_cursor#25 ← (byte*) char_cursor#83
  (word~) multiply_tables_compare::$6 ← ((word)) (byte*) multiply_tables_compare::kc_sqr#4
  (word) print_word::w#2 ← (word~) multiply_tables_compare::$6
  call print_word param-assignment
  to:multiply_tables_compare::@9
multiply_tables_compare::@9: scope:[multiply_tables_compare]  from multiply_tables_compare::@8
  (byte*) line_cursor#42 ← phi( multiply_tables_compare::@8/(byte*) line_cursor#52 )
  (byte*) char_cursor#84 ← phi( multiply_tables_compare::@8/(byte*) char_cursor#13 )
  (byte*) char_cursor#26 ← (byte*) char_cursor#84
  to:multiply_tables_compare::@return
multiply_tables_compare::@return: scope:[multiply_tables_compare]  from multiply_tables_compare::@11 multiply_tables_compare::@9
  (byte*) line_cursor#27 ← phi( multiply_tables_compare::@11/(byte*) line_cursor#8 multiply_tables_compare::@9/(byte*) line_cursor#42 )
  (byte*) char_cursor#85 ← phi( multiply_tables_compare::@11/(byte*) char_cursor#29 multiply_tables_compare::@9/(byte*) char_cursor#26 )
  (byte*) char_cursor#27 ← (byte*) char_cursor#85
  (byte*) line_cursor#7 ← (byte*) line_cursor#27
  return 
  to:@return
multiply_tables_compare::@5: scope:[multiply_tables_compare]  from multiply_tables_compare::@2
  (byte*) line_cursor#53 ← phi( multiply_tables_compare::@2/(byte*) line_cursor#64 )
  (byte*) char_cursor#127 ← phi( multiply_tables_compare::@2/(byte*) char_cursor#140 )
  (byte*) print_str::str#3 ← (const string) multiply_tables_compare::str2
  call print_str param-assignment
  to:multiply_tables_compare::@10
multiply_tables_compare::@10: scope:[multiply_tables_compare]  from multiply_tables_compare::@5
  (byte*) line_cursor#43 ← phi( multiply_tables_compare::@5/(byte*) line_cursor#53 )
  (byte*) char_cursor#86 ← phi( multiply_tables_compare::@5/(byte*) char_cursor#2 )
  (byte*) char_cursor#28 ← (byte*) char_cursor#86
  call print_ln param-assignment
  to:multiply_tables_compare::@11
multiply_tables_compare::@11: scope:[multiply_tables_compare]  from multiply_tables_compare::@10
  (byte*) char_cursor#87 ← phi( multiply_tables_compare::@10/(byte*) char_cursor#4 )
  (byte*) line_cursor#28 ← phi( multiply_tables_compare::@10/(byte*) line_cursor#2 )
  (byte*) line_cursor#8 ← (byte*) line_cursor#28
  (byte*) char_cursor#29 ← (byte*) char_cursor#87
  to:multiply_tables_compare::@return
multiply_results_compare: scope:[multiply_results_compare]  from main::@4
  (byte*) line_cursor#87 ← phi( main::@4/(byte*) line_cursor#3 )
  (byte*) char_cursor#159 ← phi( main::@4/(byte*) char_cursor#19 )
  (byte*) BGCOL#23 ← phi( main::@4/(byte*) BGCOL#27 )
  (byte) multiply_results_compare::a#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:multiply_results_compare::@1
multiply_results_compare::@1: scope:[multiply_results_compare]  from multiply_results_compare multiply_results_compare::@6
  (byte*) line_cursor#83 ← phi( multiply_results_compare/(byte*) line_cursor#87 multiply_results_compare::@6/(byte*) line_cursor#66 )
  (byte*) char_cursor#157 ← phi( multiply_results_compare/(byte*) char_cursor#159 multiply_results_compare::@6/(byte*) char_cursor#142 )
  (byte*) BGCOL#18 ← phi( multiply_results_compare/(byte*) BGCOL#23 multiply_results_compare::@6/(byte*) BGCOL#24 )
  (byte) multiply_results_compare::a#6 ← phi( multiply_results_compare/(byte) multiply_results_compare::a#0 multiply_results_compare::@6/(byte) multiply_results_compare::a#1 )
  (byte) multiply_results_compare::b#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:multiply_results_compare::@2
multiply_results_compare::@2: scope:[multiply_results_compare]  from multiply_results_compare::@1 multiply_results_compare::@3
  (byte*) line_cursor#75 ← phi( multiply_results_compare::@1/(byte*) line_cursor#83 multiply_results_compare::@3/(byte*) line_cursor#76 )
  (byte*) char_cursor#155 ← phi( multiply_results_compare::@1/(byte*) char_cursor#157 multiply_results_compare::@3/(byte*) char_cursor#150 )
  (byte*) BGCOL#15 ← phi( multiply_results_compare::@1/(byte*) BGCOL#18 multiply_results_compare::@3/(byte*) BGCOL#19 )
  (byte) multiply_results_compare::b#2 ← phi( multiply_results_compare::@1/(byte) multiply_results_compare::b#0 multiply_results_compare::@3/(byte) multiply_results_compare::b#1 )
  (byte) multiply_results_compare::a#2 ← phi( multiply_results_compare::@1/(byte) multiply_results_compare::a#6 multiply_results_compare::@3/(byte) multiply_results_compare::a#7 )
  (byte) slow_multiply::a#0 ← (byte) multiply_results_compare::a#2
  (byte) slow_multiply::b#0 ← (byte) multiply_results_compare::b#2
  call slow_multiply param-assignment
  (word) slow_multiply::return#2 ← (word) slow_multiply::return#1
  to:multiply_results_compare::@8
multiply_results_compare::@8: scope:[multiply_results_compare]  from multiply_results_compare::@2
  (byte*) line_cursor#65 ← phi( multiply_results_compare::@2/(byte*) line_cursor#75 )
  (byte*) char_cursor#149 ← phi( multiply_results_compare::@2/(byte*) char_cursor#155 )
  (byte*) BGCOL#11 ← phi( multiply_results_compare::@2/(byte*) BGCOL#15 )
  (byte) multiply_results_compare::b#3 ← phi( multiply_results_compare::@2/(byte) multiply_results_compare::b#2 )
  (byte) multiply_results_compare::a#3 ← phi( multiply_results_compare::@2/(byte) multiply_results_compare::a#2 )
  (word) slow_multiply::return#4 ← phi( multiply_results_compare::@2/(word) slow_multiply::return#2 )
  (word~) multiply_results_compare::$0 ← (word) slow_multiply::return#4
  (word) multiply_results_compare::ms#0 ← (word~) multiply_results_compare::$0
  (byte) multiply::a#1 ← (byte) multiply_results_compare::a#3
  (byte) multiply::b#1 ← (byte) multiply_results_compare::b#3
  call multiply param-assignment
  (word) multiply::return#3 ← (word) multiply::return#1
  to:multiply_results_compare::@9
multiply_results_compare::@9: scope:[multiply_results_compare]  from multiply_results_compare::@8
  (byte*) line_cursor#54 ← phi( multiply_results_compare::@8/(byte*) line_cursor#65 )
  (byte*) char_cursor#141 ← phi( multiply_results_compare::@8/(byte*) char_cursor#149 )
  (byte) multiply_results_compare::a#8 ← phi( multiply_results_compare::@8/(byte) multiply_results_compare::a#3 )
  (byte*) BGCOL#7 ← phi( multiply_results_compare::@8/(byte*) BGCOL#11 )
  (byte) multiply_results_compare::b#6 ← phi( multiply_results_compare::@8/(byte) multiply_results_compare::b#3 )
  (word) multiply_results_compare::ms#1 ← phi( multiply_results_compare::@8/(word) multiply_results_compare::ms#0 )
  (word) multiply::return#6 ← phi( multiply_results_compare::@8/(word) multiply::return#3 )
  (word~) multiply_results_compare::$1 ← (word) multiply::return#6
  (word) multiply_results_compare::ma#0 ← (word~) multiply_results_compare::$1
  (boolean~) multiply_results_compare::$2 ← (word) multiply_results_compare::ms#1 != (word) multiply_results_compare::ma#0
  (boolean~) multiply_results_compare::$3 ← ! (boolean~) multiply_results_compare::$2
  if((boolean~) multiply_results_compare::$3) goto multiply_results_compare::@3
  to:multiply_results_compare::@4
multiply_results_compare::@3: scope:[multiply_results_compare]  from multiply_results_compare::@9
  (byte*) line_cursor#76 ← phi( multiply_results_compare::@9/(byte*) line_cursor#54 )
  (byte*) BGCOL#19 ← phi( multiply_results_compare::@9/(byte*) BGCOL#7 )
  (byte*) char_cursor#150 ← phi( multiply_results_compare::@9/(byte*) char_cursor#141 )
  (byte) multiply_results_compare::a#7 ← phi( multiply_results_compare::@9/(byte) multiply_results_compare::a#8 )
  (byte) multiply_results_compare::b#4 ← phi( multiply_results_compare::@9/(byte) multiply_results_compare::b#6 )
  (byte) multiply_results_compare::b#1 ← ++ (byte) multiply_results_compare::b#4
  (boolean~) multiply_results_compare::$5 ← (byte) multiply_results_compare::b#1 != (byte/signed byte/word/signed word/dword/signed dword) 0
  if((boolean~) multiply_results_compare::$5) goto multiply_results_compare::@2
  to:multiply_results_compare::@6
multiply_results_compare::@4: scope:[multiply_results_compare]  from multiply_results_compare::@9
  (byte*) line_cursor#44 ← phi( multiply_results_compare::@9/(byte*) line_cursor#54 )
  (byte*) char_cursor#128 ← phi( multiply_results_compare::@9/(byte*) char_cursor#141 )
  (word) multiply_results_compare::ma#1 ← phi( multiply_results_compare::@9/(word) multiply_results_compare::ma#0 )
  (word) multiply_results_compare::ms#2 ← phi( multiply_results_compare::@9/(word) multiply_results_compare::ms#1 )
  (byte) multiply_results_compare::b#5 ← phi( multiply_results_compare::@9/(byte) multiply_results_compare::b#6 )
  (byte) multiply_results_compare::a#4 ← phi( multiply_results_compare::@9/(byte) multiply_results_compare::a#8 )
  (byte*) BGCOL#3 ← phi( multiply_results_compare::@9/(byte*) BGCOL#7 )
  *((byte*) BGCOL#3) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) multiply_error::a#0 ← (byte) multiply_results_compare::a#4
  (byte) multiply_error::b#0 ← (byte) multiply_results_compare::b#5
  (word) multiply_error::ms#0 ← (word) multiply_results_compare::ms#2
  (word) multiply_error::ma#0 ← (word) multiply_results_compare::ma#1
  call multiply_error param-assignment
  to:multiply_results_compare::@10
multiply_results_compare::@10: scope:[multiply_results_compare]  from multiply_results_compare::@4
  (byte*) line_cursor#29 ← phi( multiply_results_compare::@4/(byte*) line_cursor#13 )
  (byte*) char_cursor#88 ← phi( multiply_results_compare::@4/(byte*) char_cursor#43 )
  (byte*) char_cursor#30 ← (byte*) char_cursor#88
  (byte*) line_cursor#9 ← (byte*) line_cursor#29
  to:multiply_results_compare::@return
multiply_results_compare::@return: scope:[multiply_results_compare]  from multiply_results_compare::@10 multiply_results_compare::@12
  (byte*) line_cursor#30 ← phi( multiply_results_compare::@10/(byte*) line_cursor#9 multiply_results_compare::@12/(byte*) line_cursor#11 )
  (byte*) char_cursor#89 ← phi( multiply_results_compare::@10/(byte*) char_cursor#30 multiply_results_compare::@12/(byte*) char_cursor#33 )
  (byte*) char_cursor#31 ← (byte*) char_cursor#89
  (byte*) line_cursor#10 ← (byte*) line_cursor#30
  return 
  to:@return
multiply_results_compare::@6: scope:[multiply_results_compare]  from multiply_results_compare::@3
  (byte*) BGCOL#24 ← phi( multiply_results_compare::@3/(byte*) BGCOL#19 )
  (byte*) line_cursor#66 ← phi( multiply_results_compare::@3/(byte*) line_cursor#76 )
  (byte*) char_cursor#142 ← phi( multiply_results_compare::@3/(byte*) char_cursor#150 )
  (byte) multiply_results_compare::a#5 ← phi( multiply_results_compare::@3/(byte) multiply_results_compare::a#7 )
  (byte) multiply_results_compare::a#1 ← ++ (byte) multiply_results_compare::a#5
  (boolean~) multiply_results_compare::$6 ← (byte) multiply_results_compare::a#1 != (byte/signed byte/word/signed word/dword/signed dword) 0
  if((boolean~) multiply_results_compare::$6) goto multiply_results_compare::@1
  to:multiply_results_compare::@7
multiply_results_compare::@7: scope:[multiply_results_compare]  from multiply_results_compare::@6
  (byte*) line_cursor#55 ← phi( multiply_results_compare::@6/(byte*) line_cursor#66 )
  (byte*) char_cursor#129 ← phi( multiply_results_compare::@6/(byte*) char_cursor#142 )
  (byte*) print_str::str#4 ← (const string) multiply_results_compare::str
  call print_str param-assignment
  to:multiply_results_compare::@11
multiply_results_compare::@11: scope:[multiply_results_compare]  from multiply_results_compare::@7
  (byte*) line_cursor#45 ← phi( multiply_results_compare::@7/(byte*) line_cursor#55 )
  (byte*) char_cursor#90 ← phi( multiply_results_compare::@7/(byte*) char_cursor#2 )
  (byte*) char_cursor#32 ← (byte*) char_cursor#90
  call print_ln param-assignment
  to:multiply_results_compare::@12
multiply_results_compare::@12: scope:[multiply_results_compare]  from multiply_results_compare::@11
  (byte*) char_cursor#91 ← phi( multiply_results_compare::@11/(byte*) char_cursor#4 )
  (byte*) line_cursor#31 ← phi( multiply_results_compare::@11/(byte*) line_cursor#2 )
  (byte*) line_cursor#11 ← (byte*) line_cursor#31
  (byte*) char_cursor#33 ← (byte*) char_cursor#91
  to:multiply_results_compare::@return
multiply_error: scope:[multiply_error]  from multiply_results_compare::@4
  (byte*) line_cursor#95 ← phi( multiply_results_compare::@4/(byte*) line_cursor#44 )
  (word) multiply_error::ma#8 ← phi( multiply_results_compare::@4/(word) multiply_error::ma#0 )
  (word) multiply_error::ms#6 ← phi( multiply_results_compare::@4/(word) multiply_error::ms#0 )
  (byte) multiply_error::b#4 ← phi( multiply_results_compare::@4/(byte) multiply_error::b#0 )
  (byte) multiply_error::a#2 ← phi( multiply_results_compare::@4/(byte) multiply_error::a#0 )
  (byte*) char_cursor#130 ← phi( multiply_results_compare::@4/(byte*) char_cursor#128 )
  (byte*) print_str::str#5 ← (const string) multiply_error::str
  call print_str param-assignment
  to:multiply_error::@1
multiply_error::@1: scope:[multiply_error]  from multiply_error
  (byte*) line_cursor#93 ← phi( multiply_error/(byte*) line_cursor#95 )
  (word) multiply_error::ma#7 ← phi( multiply_error/(word) multiply_error::ma#8 )
  (word) multiply_error::ms#5 ← phi( multiply_error/(word) multiply_error::ms#6 )
  (byte) multiply_error::b#3 ← phi( multiply_error/(byte) multiply_error::b#4 )
  (byte) multiply_error::a#1 ← phi( multiply_error/(byte) multiply_error::a#2 )
  (byte*) char_cursor#92 ← phi( multiply_error/(byte*) char_cursor#2 )
  (byte*) char_cursor#34 ← (byte*) char_cursor#92
  (byte) print_byte::b#3 ← (byte) multiply_error::a#1
  call print_byte param-assignment
  to:multiply_error::@2
multiply_error::@2: scope:[multiply_error]  from multiply_error::@1
  (byte*) line_cursor#91 ← phi( multiply_error::@1/(byte*) line_cursor#93 )
  (word) multiply_error::ma#6 ← phi( multiply_error::@1/(word) multiply_error::ma#7 )
  (word) multiply_error::ms#4 ← phi( multiply_error::@1/(word) multiply_error::ms#5 )
  (byte) multiply_error::b#2 ← phi( multiply_error::@1/(byte) multiply_error::b#3 )
  (byte*) char_cursor#93 ← phi( multiply_error::@1/(byte*) char_cursor#16 )
  (byte*) char_cursor#35 ← (byte*) char_cursor#93
  (byte*) print_str::str#6 ← (const string) multiply_error::str1
  call print_str param-assignment
  to:multiply_error::@3
multiply_error::@3: scope:[multiply_error]  from multiply_error::@2
  (byte*) line_cursor#88 ← phi( multiply_error::@2/(byte*) line_cursor#91 )
  (word) multiply_error::ma#5 ← phi( multiply_error::@2/(word) multiply_error::ma#6 )
  (word) multiply_error::ms#3 ← phi( multiply_error::@2/(word) multiply_error::ms#4 )
  (byte) multiply_error::b#1 ← phi( multiply_error::@2/(byte) multiply_error::b#2 )
  (byte*) char_cursor#94 ← phi( multiply_error::@2/(byte*) char_cursor#2 )
  (byte*) char_cursor#36 ← (byte*) char_cursor#94
  (byte) print_byte::b#4 ← (byte) multiply_error::b#1
  call print_byte param-assignment
  to:multiply_error::@4
multiply_error::@4: scope:[multiply_error]  from multiply_error::@3
  (byte*) line_cursor#84 ← phi( multiply_error::@3/(byte*) line_cursor#88 )
  (word) multiply_error::ma#4 ← phi( multiply_error::@3/(word) multiply_error::ma#5 )
  (word) multiply_error::ms#2 ← phi( multiply_error::@3/(word) multiply_error::ms#3 )
  (byte*) char_cursor#95 ← phi( multiply_error::@3/(byte*) char_cursor#16 )
  (byte*) char_cursor#37 ← (byte*) char_cursor#95
  (byte*) print_str::str#7 ← (const string) multiply_error::str2
  call print_str param-assignment
  to:multiply_error::@5
multiply_error::@5: scope:[multiply_error]  from multiply_error::@4
  (byte*) line_cursor#77 ← phi( multiply_error::@4/(byte*) line_cursor#84 )
  (word) multiply_error::ma#3 ← phi( multiply_error::@4/(word) multiply_error::ma#4 )
  (word) multiply_error::ms#1 ← phi( multiply_error::@4/(word) multiply_error::ms#2 )
  (byte*) char_cursor#96 ← phi( multiply_error::@4/(byte*) char_cursor#2 )
  (byte*) char_cursor#38 ← (byte*) char_cursor#96
  (word) print_word::w#3 ← (word) multiply_error::ms#1
  call print_word param-assignment
  to:multiply_error::@6
multiply_error::@6: scope:[multiply_error]  from multiply_error::@5
  (byte*) line_cursor#67 ← phi( multiply_error::@5/(byte*) line_cursor#77 )
  (word) multiply_error::ma#2 ← phi( multiply_error::@5/(word) multiply_error::ma#3 )
  (byte*) char_cursor#97 ← phi( multiply_error::@5/(byte*) char_cursor#13 )
  (byte*) char_cursor#39 ← (byte*) char_cursor#97
  (byte*) print_str::str#8 ← (const string) multiply_error::str3
  call print_str param-assignment
  to:multiply_error::@7
multiply_error::@7: scope:[multiply_error]  from multiply_error::@6
  (byte*) line_cursor#56 ← phi( multiply_error::@6/(byte*) line_cursor#67 )
  (word) multiply_error::ma#1 ← phi( multiply_error::@6/(word) multiply_error::ma#2 )
  (byte*) char_cursor#98 ← phi( multiply_error::@6/(byte*) char_cursor#2 )
  (byte*) char_cursor#40 ← (byte*) char_cursor#98
  (word) print_word::w#4 ← (word) multiply_error::ma#1
  call print_word param-assignment
  to:multiply_error::@8
multiply_error::@8: scope:[multiply_error]  from multiply_error::@7
  (byte*) line_cursor#46 ← phi( multiply_error::@7/(byte*) line_cursor#56 )
  (byte*) char_cursor#99 ← phi( multiply_error::@7/(byte*) char_cursor#13 )
  (byte*) char_cursor#41 ← (byte*) char_cursor#99
  call print_ln param-assignment
  to:multiply_error::@9
multiply_error::@9: scope:[multiply_error]  from multiply_error::@8
  (byte*) char_cursor#100 ← phi( multiply_error::@8/(byte*) char_cursor#4 )
  (byte*) line_cursor#32 ← phi( multiply_error::@8/(byte*) line_cursor#2 )
  (byte*) line_cursor#12 ← (byte*) line_cursor#32
  (byte*) char_cursor#42 ← (byte*) char_cursor#100
  to:multiply_error::@return
multiply_error::@return: scope:[multiply_error]  from multiply_error::@9
  (byte*) line_cursor#33 ← phi( multiply_error::@9/(byte*) line_cursor#12 )
  (byte*) char_cursor#101 ← phi( multiply_error::@9/(byte*) char_cursor#42 )
  (byte*) char_cursor#43 ← (byte*) char_cursor#101
  (byte*) line_cursor#13 ← (byte*) line_cursor#33
  return 
  to:@return
signed_multiply_results_compare: scope:[signed_multiply_results_compare]  from main::@5
  (byte*) line_cursor#89 ← phi( main::@5/(byte*) line_cursor#4 )
  (byte*) char_cursor#160 ← phi( main::@5/(byte*) char_cursor#20 )
  (byte*) BGCOL#25 ← phi( main::@5/(byte*) BGCOL#28 )
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$0 ← - (byte/word/signed word/dword/signed dword) 128
  (signed byte) signed_multiply_results_compare::a#0 ← (signed byte/signed word/signed dword~) signed_multiply_results_compare::$0
  to:signed_multiply_results_compare::@1
signed_multiply_results_compare::@1: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare signed_multiply_results_compare::@6
  (byte*) line_cursor#85 ← phi( signed_multiply_results_compare/(byte*) line_cursor#89 signed_multiply_results_compare::@6/(byte*) line_cursor#69 )
  (byte*) char_cursor#158 ← phi( signed_multiply_results_compare/(byte*) char_cursor#160 signed_multiply_results_compare::@6/(byte*) char_cursor#144 )
  (byte*) BGCOL#20 ← phi( signed_multiply_results_compare/(byte*) BGCOL#25 signed_multiply_results_compare::@6/(byte*) BGCOL#26 )
  (signed byte) signed_multiply_results_compare::a#6 ← phi( signed_multiply_results_compare/(signed byte) signed_multiply_results_compare::a#0 signed_multiply_results_compare::@6/(signed byte) signed_multiply_results_compare::a#1 )
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$1 ← - (byte/word/signed word/dword/signed dword) 128
  (signed byte) signed_multiply_results_compare::b#0 ← (signed byte/signed word/signed dword~) signed_multiply_results_compare::$1
  to:signed_multiply_results_compare::@2
signed_multiply_results_compare::@2: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@1 signed_multiply_results_compare::@3
  (byte*) line_cursor#78 ← phi( signed_multiply_results_compare::@1/(byte*) line_cursor#85 signed_multiply_results_compare::@3/(byte*) line_cursor#79 )
  (byte*) char_cursor#156 ← phi( signed_multiply_results_compare::@1/(byte*) char_cursor#158 signed_multiply_results_compare::@3/(byte*) char_cursor#152 )
  (byte*) BGCOL#16 ← phi( signed_multiply_results_compare::@1/(byte*) BGCOL#20 signed_multiply_results_compare::@3/(byte*) BGCOL#21 )
  (signed byte) signed_multiply_results_compare::b#2 ← phi( signed_multiply_results_compare::@1/(signed byte) signed_multiply_results_compare::b#0 signed_multiply_results_compare::@3/(signed byte) signed_multiply_results_compare::b#1 )
  (signed byte) signed_multiply_results_compare::a#2 ← phi( signed_multiply_results_compare::@1/(signed byte) signed_multiply_results_compare::a#6 signed_multiply_results_compare::@3/(signed byte) signed_multiply_results_compare::a#7 )
  (signed byte) slow_signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#2
  (signed byte) slow_signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#2
  call slow_signed_multiply param-assignment
  (signed word) slow_signed_multiply::return#2 ← (signed word) slow_signed_multiply::return#1
  to:signed_multiply_results_compare::@8
signed_multiply_results_compare::@8: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@2
  (byte*) line_cursor#68 ← phi( signed_multiply_results_compare::@2/(byte*) line_cursor#78 )
  (byte*) char_cursor#151 ← phi( signed_multiply_results_compare::@2/(byte*) char_cursor#156 )
  (byte*) BGCOL#12 ← phi( signed_multiply_results_compare::@2/(byte*) BGCOL#16 )
  (signed byte) signed_multiply_results_compare::b#3 ← phi( signed_multiply_results_compare::@2/(signed byte) signed_multiply_results_compare::b#2 )
  (signed byte) signed_multiply_results_compare::a#3 ← phi( signed_multiply_results_compare::@2/(signed byte) signed_multiply_results_compare::a#2 )
  (signed word) slow_signed_multiply::return#4 ← phi( signed_multiply_results_compare::@2/(signed word) slow_signed_multiply::return#2 )
  (signed word~) signed_multiply_results_compare::$2 ← (signed word) slow_signed_multiply::return#4
  (signed word) signed_multiply_results_compare::ms#0 ← (signed word~) signed_multiply_results_compare::$2
  (signed byte) signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#3
  (signed byte) signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#3
  call signed_multiply param-assignment
  (signed word) signed_multiply::return#2 ← (signed word) signed_multiply::return#1
  to:signed_multiply_results_compare::@9
signed_multiply_results_compare::@9: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@8
  (byte*) line_cursor#57 ← phi( signed_multiply_results_compare::@8/(byte*) line_cursor#68 )
  (byte*) char_cursor#143 ← phi( signed_multiply_results_compare::@8/(byte*) char_cursor#151 )
  (signed byte) signed_multiply_results_compare::a#8 ← phi( signed_multiply_results_compare::@8/(signed byte) signed_multiply_results_compare::a#3 )
  (byte*) BGCOL#8 ← phi( signed_multiply_results_compare::@8/(byte*) BGCOL#12 )
  (signed byte) signed_multiply_results_compare::b#6 ← phi( signed_multiply_results_compare::@8/(signed byte) signed_multiply_results_compare::b#3 )
  (signed word) signed_multiply_results_compare::ms#1 ← phi( signed_multiply_results_compare::@8/(signed word) signed_multiply_results_compare::ms#0 )
  (signed word) signed_multiply::return#4 ← phi( signed_multiply_results_compare::@8/(signed word) signed_multiply::return#2 )
  (signed word~) signed_multiply_results_compare::$3 ← (signed word) signed_multiply::return#4
  (signed word) signed_multiply_results_compare::ma#0 ← (signed word~) signed_multiply_results_compare::$3
  (boolean~) signed_multiply_results_compare::$4 ← (signed word) signed_multiply_results_compare::ms#1 != (signed word) signed_multiply_results_compare::ma#0
  (boolean~) signed_multiply_results_compare::$5 ← ! (boolean~) signed_multiply_results_compare::$4
  if((boolean~) signed_multiply_results_compare::$5) goto signed_multiply_results_compare::@3
  to:signed_multiply_results_compare::@4
signed_multiply_results_compare::@3: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@9
  (byte*) line_cursor#79 ← phi( signed_multiply_results_compare::@9/(byte*) line_cursor#57 )
  (byte*) BGCOL#21 ← phi( signed_multiply_results_compare::@9/(byte*) BGCOL#8 )
  (byte*) char_cursor#152 ← phi( signed_multiply_results_compare::@9/(byte*) char_cursor#143 )
  (signed byte) signed_multiply_results_compare::a#7 ← phi( signed_multiply_results_compare::@9/(signed byte) signed_multiply_results_compare::a#8 )
  (signed byte) signed_multiply_results_compare::b#4 ← phi( signed_multiply_results_compare::@9/(signed byte) signed_multiply_results_compare::b#6 )
  (signed byte) signed_multiply_results_compare::b#1 ← ++ (signed byte) signed_multiply_results_compare::b#4
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$7 ← - (byte/word/signed word/dword/signed dword) 128
  (boolean~) signed_multiply_results_compare::$8 ← (signed byte) signed_multiply_results_compare::b#1 != (signed byte/signed word/signed dword~) signed_multiply_results_compare::$7
  if((boolean~) signed_multiply_results_compare::$8) goto signed_multiply_results_compare::@2
  to:signed_multiply_results_compare::@6
signed_multiply_results_compare::@4: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@9
  (byte*) line_cursor#47 ← phi( signed_multiply_results_compare::@9/(byte*) line_cursor#57 )
  (byte*) char_cursor#131 ← phi( signed_multiply_results_compare::@9/(byte*) char_cursor#143 )
  (signed word) signed_multiply_results_compare::ma#1 ← phi( signed_multiply_results_compare::@9/(signed word) signed_multiply_results_compare::ma#0 )
  (signed word) signed_multiply_results_compare::ms#2 ← phi( signed_multiply_results_compare::@9/(signed word) signed_multiply_results_compare::ms#1 )
  (signed byte) signed_multiply_results_compare::b#5 ← phi( signed_multiply_results_compare::@9/(signed byte) signed_multiply_results_compare::b#6 )
  (signed byte) signed_multiply_results_compare::a#4 ← phi( signed_multiply_results_compare::@9/(signed byte) signed_multiply_results_compare::a#8 )
  (byte*) BGCOL#4 ← phi( signed_multiply_results_compare::@9/(byte*) BGCOL#8 )
  *((byte*) BGCOL#4) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (signed byte) signed_multiply_error::a#0 ← (signed byte) signed_multiply_results_compare::a#4
  (signed byte) signed_multiply_error::b#0 ← (signed byte) signed_multiply_results_compare::b#5
  (signed word) signed_multiply_error::ms#0 ← (signed word) signed_multiply_results_compare::ms#2
  (signed word) signed_multiply_error::ma#0 ← (signed word) signed_multiply_results_compare::ma#1
  call signed_multiply_error param-assignment
  to:signed_multiply_results_compare::@10
signed_multiply_results_compare::@10: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@4
  (byte*) line_cursor#34 ← phi( signed_multiply_results_compare::@4/(byte*) line_cursor#18 )
  (byte*) char_cursor#102 ← phi( signed_multiply_results_compare::@4/(byte*) char_cursor#57 )
  (byte*) char_cursor#44 ← (byte*) char_cursor#102
  (byte*) line_cursor#14 ← (byte*) line_cursor#34
  to:signed_multiply_results_compare::@return
signed_multiply_results_compare::@return: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@10 signed_multiply_results_compare::@12
  (byte*) line_cursor#35 ← phi( signed_multiply_results_compare::@10/(byte*) line_cursor#14 signed_multiply_results_compare::@12/(byte*) line_cursor#16 )
  (byte*) char_cursor#103 ← phi( signed_multiply_results_compare::@10/(byte*) char_cursor#44 signed_multiply_results_compare::@12/(byte*) char_cursor#47 )
  (byte*) char_cursor#45 ← (byte*) char_cursor#103
  (byte*) line_cursor#15 ← (byte*) line_cursor#35
  return 
  to:@return
signed_multiply_results_compare::@6: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@3
  (byte*) BGCOL#26 ← phi( signed_multiply_results_compare::@3/(byte*) BGCOL#21 )
  (byte*) line_cursor#69 ← phi( signed_multiply_results_compare::@3/(byte*) line_cursor#79 )
  (byte*) char_cursor#144 ← phi( signed_multiply_results_compare::@3/(byte*) char_cursor#152 )
  (signed byte) signed_multiply_results_compare::a#5 ← phi( signed_multiply_results_compare::@3/(signed byte) signed_multiply_results_compare::a#7 )
  (signed byte) signed_multiply_results_compare::a#1 ← ++ (signed byte) signed_multiply_results_compare::a#5
  (signed byte/signed word/signed dword~) signed_multiply_results_compare::$9 ← - (byte/word/signed word/dword/signed dword) 128
  (boolean~) signed_multiply_results_compare::$10 ← (signed byte) signed_multiply_results_compare::a#1 != (signed byte/signed word/signed dword~) signed_multiply_results_compare::$9
  if((boolean~) signed_multiply_results_compare::$10) goto signed_multiply_results_compare::@1
  to:signed_multiply_results_compare::@7
signed_multiply_results_compare::@7: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@6
  (byte*) line_cursor#58 ← phi( signed_multiply_results_compare::@6/(byte*) line_cursor#69 )
  (byte*) char_cursor#132 ← phi( signed_multiply_results_compare::@6/(byte*) char_cursor#144 )
  (byte*) print_str::str#9 ← (const string) signed_multiply_results_compare::str
  call print_str param-assignment
  to:signed_multiply_results_compare::@11
signed_multiply_results_compare::@11: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@7
  (byte*) line_cursor#48 ← phi( signed_multiply_results_compare::@7/(byte*) line_cursor#58 )
  (byte*) char_cursor#104 ← phi( signed_multiply_results_compare::@7/(byte*) char_cursor#2 )
  (byte*) char_cursor#46 ← (byte*) char_cursor#104
  call print_ln param-assignment
  to:signed_multiply_results_compare::@12
signed_multiply_results_compare::@12: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@11
  (byte*) char_cursor#105 ← phi( signed_multiply_results_compare::@11/(byte*) char_cursor#4 )
  (byte*) line_cursor#36 ← phi( signed_multiply_results_compare::@11/(byte*) line_cursor#2 )
  (byte*) line_cursor#16 ← (byte*) line_cursor#36
  (byte*) char_cursor#47 ← (byte*) char_cursor#105
  to:signed_multiply_results_compare::@return
signed_multiply_error: scope:[signed_multiply_error]  from signed_multiply_results_compare::@4
  (byte*) line_cursor#96 ← phi( signed_multiply_results_compare::@4/(byte*) line_cursor#47 )
  (signed word) signed_multiply_error::ma#8 ← phi( signed_multiply_results_compare::@4/(signed word) signed_multiply_error::ma#0 )
  (signed word) signed_multiply_error::ms#6 ← phi( signed_multiply_results_compare::@4/(signed word) signed_multiply_error::ms#0 )
  (signed byte) signed_multiply_error::b#4 ← phi( signed_multiply_results_compare::@4/(signed byte) signed_multiply_error::b#0 )
  (signed byte) signed_multiply_error::a#2 ← phi( signed_multiply_results_compare::@4/(signed byte) signed_multiply_error::a#0 )
  (byte*) char_cursor#133 ← phi( signed_multiply_results_compare::@4/(byte*) char_cursor#131 )
  (byte*) print_str::str#10 ← (const string) signed_multiply_error::str
  call print_str param-assignment
  to:signed_multiply_error::@1
signed_multiply_error::@1: scope:[signed_multiply_error]  from signed_multiply_error
  (byte*) line_cursor#94 ← phi( signed_multiply_error/(byte*) line_cursor#96 )
  (signed word) signed_multiply_error::ma#7 ← phi( signed_multiply_error/(signed word) signed_multiply_error::ma#8 )
  (signed word) signed_multiply_error::ms#5 ← phi( signed_multiply_error/(signed word) signed_multiply_error::ms#6 )
  (signed byte) signed_multiply_error::b#3 ← phi( signed_multiply_error/(signed byte) signed_multiply_error::b#4 )
  (signed byte) signed_multiply_error::a#1 ← phi( signed_multiply_error/(signed byte) signed_multiply_error::a#2 )
  (byte*) char_cursor#106 ← phi( signed_multiply_error/(byte*) char_cursor#2 )
  (byte*) char_cursor#48 ← (byte*) char_cursor#106
  (signed byte) print_sbyte::b#1 ← (signed byte) signed_multiply_error::a#1
  call print_sbyte param-assignment
  to:signed_multiply_error::@2
signed_multiply_error::@2: scope:[signed_multiply_error]  from signed_multiply_error::@1
  (byte*) line_cursor#92 ← phi( signed_multiply_error::@1/(byte*) line_cursor#94 )
  (signed word) signed_multiply_error::ma#6 ← phi( signed_multiply_error::@1/(signed word) signed_multiply_error::ma#7 )
  (signed word) signed_multiply_error::ms#4 ← phi( signed_multiply_error::@1/(signed word) signed_multiply_error::ms#5 )
  (signed byte) signed_multiply_error::b#2 ← phi( signed_multiply_error::@1/(signed byte) signed_multiply_error::b#3 )
  (byte*) char_cursor#107 ← phi( signed_multiply_error::@1/(byte*) char_cursor#10 )
  (byte*) char_cursor#49 ← (byte*) char_cursor#107
  (byte*) print_str::str#11 ← (const string) signed_multiply_error::str1
  call print_str param-assignment
  to:signed_multiply_error::@3
signed_multiply_error::@3: scope:[signed_multiply_error]  from signed_multiply_error::@2
  (byte*) line_cursor#90 ← phi( signed_multiply_error::@2/(byte*) line_cursor#92 )
  (signed word) signed_multiply_error::ma#5 ← phi( signed_multiply_error::@2/(signed word) signed_multiply_error::ma#6 )
  (signed word) signed_multiply_error::ms#3 ← phi( signed_multiply_error::@2/(signed word) signed_multiply_error::ms#4 )
  (signed byte) signed_multiply_error::b#1 ← phi( signed_multiply_error::@2/(signed byte) signed_multiply_error::b#2 )
  (byte*) char_cursor#108 ← phi( signed_multiply_error::@2/(byte*) char_cursor#2 )
  (byte*) char_cursor#50 ← (byte*) char_cursor#108
  (signed byte) print_sbyte::b#2 ← (signed byte) signed_multiply_error::b#1
  call print_sbyte param-assignment
  to:signed_multiply_error::@4
signed_multiply_error::@4: scope:[signed_multiply_error]  from signed_multiply_error::@3
  (byte*) line_cursor#86 ← phi( signed_multiply_error::@3/(byte*) line_cursor#90 )
  (signed word) signed_multiply_error::ma#4 ← phi( signed_multiply_error::@3/(signed word) signed_multiply_error::ma#5 )
  (signed word) signed_multiply_error::ms#2 ← phi( signed_multiply_error::@3/(signed word) signed_multiply_error::ms#3 )
  (byte*) char_cursor#109 ← phi( signed_multiply_error::@3/(byte*) char_cursor#10 )
  (byte*) char_cursor#51 ← (byte*) char_cursor#109
  (byte*) print_str::str#12 ← (const string) signed_multiply_error::str2
  call print_str param-assignment
  to:signed_multiply_error::@5
signed_multiply_error::@5: scope:[signed_multiply_error]  from signed_multiply_error::@4
  (byte*) line_cursor#80 ← phi( signed_multiply_error::@4/(byte*) line_cursor#86 )
  (signed word) signed_multiply_error::ma#3 ← phi( signed_multiply_error::@4/(signed word) signed_multiply_error::ma#4 )
  (signed word) signed_multiply_error::ms#1 ← phi( signed_multiply_error::@4/(signed word) signed_multiply_error::ms#2 )
  (byte*) char_cursor#110 ← phi( signed_multiply_error::@4/(byte*) char_cursor#2 )
  (byte*) char_cursor#52 ← (byte*) char_cursor#110
  (signed word) print_sword::w#1 ← (signed word) signed_multiply_error::ms#1
  call print_sword param-assignment
  to:signed_multiply_error::@6
signed_multiply_error::@6: scope:[signed_multiply_error]  from signed_multiply_error::@5
  (byte*) line_cursor#70 ← phi( signed_multiply_error::@5/(byte*) line_cursor#80 )
  (signed word) signed_multiply_error::ma#2 ← phi( signed_multiply_error::@5/(signed word) signed_multiply_error::ma#3 )
  (byte*) char_cursor#111 ← phi( signed_multiply_error::@5/(byte*) char_cursor#7 )
  (byte*) char_cursor#53 ← (byte*) char_cursor#111
  (byte*) print_str::str#13 ← (const string) signed_multiply_error::str3
  call print_str param-assignment
  to:signed_multiply_error::@7
signed_multiply_error::@7: scope:[signed_multiply_error]  from signed_multiply_error::@6
  (byte*) line_cursor#59 ← phi( signed_multiply_error::@6/(byte*) line_cursor#70 )
  (signed word) signed_multiply_error::ma#1 ← phi( signed_multiply_error::@6/(signed word) signed_multiply_error::ma#2 )
  (byte*) char_cursor#112 ← phi( signed_multiply_error::@6/(byte*) char_cursor#2 )
  (byte*) char_cursor#54 ← (byte*) char_cursor#112
  (signed word) print_sword::w#2 ← (signed word) signed_multiply_error::ma#1
  call print_sword param-assignment
  to:signed_multiply_error::@8
signed_multiply_error::@8: scope:[signed_multiply_error]  from signed_multiply_error::@7
  (byte*) line_cursor#49 ← phi( signed_multiply_error::@7/(byte*) line_cursor#59 )
  (byte*) char_cursor#113 ← phi( signed_multiply_error::@7/(byte*) char_cursor#7 )
  (byte*) char_cursor#55 ← (byte*) char_cursor#113
  call print_ln param-assignment
  to:signed_multiply_error::@9
signed_multiply_error::@9: scope:[signed_multiply_error]  from signed_multiply_error::@8
  (byte*) char_cursor#114 ← phi( signed_multiply_error::@8/(byte*) char_cursor#4 )
  (byte*) line_cursor#37 ← phi( signed_multiply_error::@8/(byte*) line_cursor#2 )
  (byte*) line_cursor#17 ← (byte*) line_cursor#37
  (byte*) char_cursor#56 ← (byte*) char_cursor#114
  to:signed_multiply_error::@return
signed_multiply_error::@return: scope:[signed_multiply_error]  from signed_multiply_error::@9
  (byte*) line_cursor#38 ← phi( signed_multiply_error::@9/(byte*) line_cursor#17 )
  (byte*) char_cursor#115 ← phi( signed_multiply_error::@9/(byte*) char_cursor#56 )
  (byte*) char_cursor#57 ← (byte*) char_cursor#115
  (byte*) line_cursor#18 ← (byte*) line_cursor#38
  return 
  to:@return
@20: scope:[]  from @14
  (byte*) line_cursor#50 ← phi( @14/(byte*) line_cursor#60 )
  (byte*) char_cursor#134 ← phi( @14/(byte*) char_cursor#145 )
  (byte*) BGCOL#5 ← phi( @14/(byte*) BGCOL#13 )
  call main param-assignment
  to:@21
@21: scope:[]  from @20
  (byte*) line_cursor#39 ← phi( @20/(byte*) line_cursor#6 )
  (byte*) char_cursor#116 ← phi( @20/(byte*) char_cursor#22 )
  (byte*) char_cursor#58 ← (byte*) char_cursor#116
  (byte*) line_cursor#19 ← (byte*) line_cursor#39
  to:@end
@end: scope:[]  from @21

SYMBOL TABLE SSA
(label) @11
(label) @14
(label) @20
(label) @21
(label) @8
(label) @begin
(label) @end
(byte*) BGCOL
(byte*) BGCOL#0
(byte*) BGCOL#1
(byte*) BGCOL#10
(byte*) BGCOL#11
(byte*) BGCOL#12
(byte*) BGCOL#13
(byte*) BGCOL#14
(byte*) BGCOL#15
(byte*) BGCOL#16
(byte*) BGCOL#17
(byte*) BGCOL#18
(byte*) BGCOL#19
(byte*) BGCOL#2
(byte*) BGCOL#20
(byte*) BGCOL#21
(byte*) BGCOL#22
(byte*) BGCOL#23
(byte*) BGCOL#24
(byte*) BGCOL#25
(byte*) BGCOL#26
(byte*) BGCOL#27
(byte*) BGCOL#28
(byte*) BGCOL#3
(byte*) BGCOL#4
(byte*) BGCOL#5
(byte*) BGCOL#6
(byte*) BGCOL#7
(byte*) BGCOL#8
(byte*) BGCOL#9
(byte[512]) asm_mul_sqr1_hi
(byte[512]) asm_mul_sqr1_hi#0
(byte[512]) asm_mul_sqr1_lo
(byte[512]) asm_mul_sqr1_lo#0
(byte[512]) asm_mul_sqr2_hi
(byte[512]) asm_mul_sqr2_hi#0
(byte[512]) asm_mul_sqr2_lo
(byte[512]) asm_mul_sqr2_lo#0
(byte*) char_cursor
(byte*) char_cursor#0
(byte*) char_cursor#1
(byte*) char_cursor#10
(byte*) char_cursor#100
(byte*) char_cursor#101
(byte*) char_cursor#102
(byte*) char_cursor#103
(byte*) char_cursor#104
(byte*) char_cursor#105
(byte*) char_cursor#106
(byte*) char_cursor#107
(byte*) char_cursor#108
(byte*) char_cursor#109
(byte*) char_cursor#11
(byte*) char_cursor#110
(byte*) char_cursor#111
(byte*) char_cursor#112
(byte*) char_cursor#113
(byte*) char_cursor#114
(byte*) char_cursor#115
(byte*) char_cursor#116
(byte*) char_cursor#117
(byte*) char_cursor#118
(byte*) char_cursor#119
(byte*) char_cursor#12
(byte*) char_cursor#120
(byte*) char_cursor#121
(byte*) char_cursor#122
(byte*) char_cursor#123
(byte*) char_cursor#124
(byte*) char_cursor#125
(byte*) char_cursor#126
(byte*) char_cursor#127
(byte*) char_cursor#128
(byte*) char_cursor#129
(byte*) char_cursor#13
(byte*) char_cursor#130
(byte*) char_cursor#131
(byte*) char_cursor#132
(byte*) char_cursor#133
(byte*) char_cursor#134
(byte*) char_cursor#135
(byte*) char_cursor#136
(byte*) char_cursor#137
(byte*) char_cursor#138
(byte*) char_cursor#139
(byte*) char_cursor#14
(byte*) char_cursor#140
(byte*) char_cursor#141
(byte*) char_cursor#142
(byte*) char_cursor#143
(byte*) char_cursor#144
(byte*) char_cursor#145
(byte*) char_cursor#146
(byte*) char_cursor#147
(byte*) char_cursor#148
(byte*) char_cursor#149
(byte*) char_cursor#15
(byte*) char_cursor#150
(byte*) char_cursor#151
(byte*) char_cursor#152
(byte*) char_cursor#153
(byte*) char_cursor#154
(byte*) char_cursor#155
(byte*) char_cursor#156
(byte*) char_cursor#157
(byte*) char_cursor#158
(byte*) char_cursor#159
(byte*) char_cursor#16
(byte*) char_cursor#160
(byte*) char_cursor#17
(byte*) char_cursor#18
(byte*) char_cursor#19
(byte*) char_cursor#2
(byte*) char_cursor#20
(byte*) char_cursor#21
(byte*) char_cursor#22
(byte*) char_cursor#23
(byte*) char_cursor#24
(byte*) char_cursor#25
(byte*) char_cursor#26
(byte*) char_cursor#27
(byte*) char_cursor#28
(byte*) char_cursor#29
(byte*) char_cursor#3
(byte*) char_cursor#30
(byte*) char_cursor#31
(byte*) char_cursor#32
(byte*) char_cursor#33
(byte*) char_cursor#34
(byte*) char_cursor#35
(byte*) char_cursor#36
(byte*) char_cursor#37
(byte*) char_cursor#38
(byte*) char_cursor#39
(byte*) char_cursor#4
(byte*) char_cursor#40
(byte*) char_cursor#41
(byte*) char_cursor#42
(byte*) char_cursor#43
(byte*) char_cursor#44
(byte*) char_cursor#45
(byte*) char_cursor#46
(byte*) char_cursor#47
(byte*) char_cursor#48
(byte*) char_cursor#49
(byte*) char_cursor#5
(byte*) char_cursor#50
(byte*) char_cursor#51
(byte*) char_cursor#52
(byte*) char_cursor#53
(byte*) char_cursor#54
(byte*) char_cursor#55
(byte*) char_cursor#56
(byte*) char_cursor#57
(byte*) char_cursor#58
(byte*) char_cursor#59
(byte*) char_cursor#6
(byte*) char_cursor#60
(byte*) char_cursor#61
(byte*) char_cursor#62
(byte*) char_cursor#63
(byte*) char_cursor#64
(byte*) char_cursor#65
(byte*) char_cursor#66
(byte*) char_cursor#67
(byte*) char_cursor#68
(byte*) char_cursor#69
(byte*) char_cursor#7
(byte*) char_cursor#70
(byte*) char_cursor#71
(byte*) char_cursor#72
(byte*) char_cursor#73
(byte*) char_cursor#74
(byte*) char_cursor#75
(byte*) char_cursor#76
(byte*) char_cursor#77
(byte*) char_cursor#78
(byte*) char_cursor#79
(byte*) char_cursor#8
(byte*) char_cursor#80
(byte*) char_cursor#81
(byte*) char_cursor#82
(byte*) char_cursor#83
(byte*) char_cursor#84
(byte*) char_cursor#85
(byte*) char_cursor#86
(byte*) char_cursor#87
(byte*) char_cursor#88
(byte*) char_cursor#89
(byte*) char_cursor#9
(byte*) char_cursor#90
(byte*) char_cursor#91
(byte*) char_cursor#92
(byte*) char_cursor#93
(byte*) char_cursor#94
(byte*) char_cursor#95
(byte*) char_cursor#96
(byte*) char_cursor#97
(byte*) char_cursor#98
(byte*) char_cursor#99
(void()) init_multiply()
(byte*~) init_multiply::$0
(byte*~) init_multiply::$1
(signed byte/signed word/signed dword~) init_multiply::$10
(byte~) init_multiply::$11
(byte/word~) init_multiply::$12
(boolean~) init_multiply::$13
(boolean~) init_multiply::$14
(byte*~) init_multiply::$15
(boolean~) init_multiply::$16
(byte*~) init_multiply::$17
(byte*~) init_multiply::$18
(byte*~) init_multiply::$19
(byte~) init_multiply::$2
(byte*~) init_multiply::$20
(boolean~) init_multiply::$3
(boolean~) init_multiply::$4
(byte~) init_multiply::$5
(byte~) init_multiply::$6
(word~) init_multiply::$7
(byte*~) init_multiply::$8
(boolean~) init_multiply::$9
(label) init_multiply::@1
(label) init_multiply::@2
(label) init_multiply::@3
(label) init_multiply::@4
(label) init_multiply::@5
(label) init_multiply::@6
(label) init_multiply::@7
(label) init_multiply::@8
(label) init_multiply::@return
(byte) init_multiply::c
(byte) init_multiply::c#0
(byte) init_multiply::c#1
(byte) init_multiply::c#2
(byte) init_multiply::c#3
(byte) init_multiply::c#4
(byte) init_multiply::dir
(byte) init_multiply::dir#0
(byte) init_multiply::dir#1
(byte) init_multiply::dir#2
(byte) init_multiply::dir#3
(word) init_multiply::sqr
(word) init_multiply::sqr#0
(word) init_multiply::sqr#1
(word) init_multiply::sqr#2
(word) init_multiply::sqr#3
(word) init_multiply::sqr#4
(word) init_multiply::sqr#5
(byte*) init_multiply::sqr1_hi
(byte*) init_multiply::sqr1_hi#0
(byte*) init_multiply::sqr1_hi#1
(byte*) init_multiply::sqr1_hi#2
(byte*) init_multiply::sqr1_hi#3
(byte*) init_multiply::sqr1_hi#4
(byte*) init_multiply::sqr1_lo
(byte*) init_multiply::sqr1_lo#0
(byte*) init_multiply::sqr1_lo#1
(byte*) init_multiply::sqr1_lo#2
(byte*) init_multiply::sqr1_lo#3
(byte*) init_multiply::sqr1_lo#4
(byte*) init_multiply::sqr2_hi
(byte*) init_multiply::sqr2_hi#0
(byte*) init_multiply::sqr2_hi#1
(byte*) init_multiply::sqr2_hi#2
(byte*) init_multiply::sqr2_hi#3
(byte*) init_multiply::sqr2_hi#4
(byte*) init_multiply::sqr2_lo
(byte*) init_multiply::sqr2_lo#0
(byte*) init_multiply::sqr2_lo#1
(byte*) init_multiply::sqr2_lo#2
(byte*) init_multiply::sqr2_lo#3
(byte*) init_multiply::sqr2_lo#4
(byte) init_multiply::x_2
(byte) init_multiply::x_2#0
(byte) init_multiply::x_2#1
(byte) init_multiply::x_2#2
(byte) init_multiply::x_2#3
(byte) init_multiply::x_2#4
(byte) init_multiply::x_255
(byte) init_multiply::x_255#0
(byte) init_multiply::x_255#1
(byte) init_multiply::x_255#2
(byte) init_multiply::x_255#3
(byte) init_multiply::x_255#4
(void()) init_multiply_asm()
(label) init_multiply_asm::@return
(byte*) init_multiply_asm::mem
(byte*) init_multiply_asm::mem#0
(byte*) line_cursor
(byte*) line_cursor#0
(byte*) line_cursor#1
(byte*) line_cursor#10
(byte*) line_cursor#11
(byte*) line_cursor#12
(byte*) line_cursor#13
(byte*) line_cursor#14
(byte*) line_cursor#15
(byte*) line_cursor#16
(byte*) line_cursor#17
(byte*) line_cursor#18
(byte*) line_cursor#19
(byte*) line_cursor#2
(byte*) line_cursor#20
(byte*) line_cursor#21
(byte*) line_cursor#22
(byte*) line_cursor#23
(byte*) line_cursor#24
(byte*) line_cursor#25
(byte*) line_cursor#26
(byte*) line_cursor#27
(byte*) line_cursor#28
(byte*) line_cursor#29
(byte*) line_cursor#3
(byte*) line_cursor#30
(byte*) line_cursor#31
(byte*) line_cursor#32
(byte*) line_cursor#33
(byte*) line_cursor#34
(byte*) line_cursor#35
(byte*) line_cursor#36
(byte*) line_cursor#37
(byte*) line_cursor#38
(byte*) line_cursor#39
(byte*) line_cursor#4
(byte*) line_cursor#40
(byte*) line_cursor#41
(byte*) line_cursor#42
(byte*) line_cursor#43
(byte*) line_cursor#44
(byte*) line_cursor#45
(byte*) line_cursor#46
(byte*) line_cursor#47
(byte*) line_cursor#48
(byte*) line_cursor#49
(byte*) line_cursor#5
(byte*) line_cursor#50
(byte*) line_cursor#51
(byte*) line_cursor#52
(byte*) line_cursor#53
(byte*) line_cursor#54
(byte*) line_cursor#55
(byte*) line_cursor#56
(byte*) line_cursor#57
(byte*) line_cursor#58
(byte*) line_cursor#59
(byte*) line_cursor#6
(byte*) line_cursor#60
(byte*) line_cursor#61
(byte*) line_cursor#62
(byte*) line_cursor#63
(byte*) line_cursor#64
(byte*) line_cursor#65
(byte*) line_cursor#66
(byte*) line_cursor#67
(byte*) line_cursor#68
(byte*) line_cursor#69
(byte*) line_cursor#7
(byte*) line_cursor#70
(byte*) line_cursor#71
(byte*) line_cursor#72
(byte*) line_cursor#73
(byte*) line_cursor#74
(byte*) line_cursor#75
(byte*) line_cursor#76
(byte*) line_cursor#77
(byte*) line_cursor#78
(byte*) line_cursor#79
(byte*) line_cursor#8
(byte*) line_cursor#80
(byte*) line_cursor#81
(byte*) line_cursor#82
(byte*) line_cursor#83
(byte*) line_cursor#84
(byte*) line_cursor#85
(byte*) line_cursor#86
(byte*) line_cursor#87
(byte*) line_cursor#88
(byte*) line_cursor#89
(byte*) line_cursor#9
(byte*) line_cursor#90
(byte*) line_cursor#91
(byte*) line_cursor#92
(byte*) line_cursor#93
(byte*) line_cursor#94
(byte*) line_cursor#95
(byte*) line_cursor#96
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@return
(byte[512]) mul_sqr1_hi
(byte[512]) mul_sqr1_hi#0
(byte[512]) mul_sqr1_lo
(byte[512]) mul_sqr1_lo#0
(byte[512]) mul_sqr2_hi
(byte[512]) mul_sqr2_hi#0
(byte[512]) mul_sqr2_lo
(byte[512]) mul_sqr2_lo#0
(word()) multiply((byte) multiply::a , (byte) multiply::b)
(label) multiply::@return
(byte) multiply::a
(byte) multiply::a#0
(byte) multiply::a#1
(byte) multiply::a#2
(byte) multiply::b
(byte) multiply::b#0
(byte) multiply::b#1
(byte) multiply::b#2
(byte*) multiply::memA
(byte*) multiply::memA#0
(byte*) multiply::memB
(byte*) multiply::memB#0
(word) multiply::return
(word) multiply::return#0
(word) multiply::return#1
(word) multiply::return#2
(word) multiply::return#3
(word) multiply::return#4
(word) multiply::return#5
(word) multiply::return#6
(void()) multiply_error((byte) multiply_error::a , (byte) multiply_error::b , (word) multiply_error::ms , (word) multiply_error::ma)
(label) multiply_error::@1
(label) multiply_error::@2
(label) multiply_error::@3
(label) multiply_error::@4
(label) multiply_error::@5
(label) multiply_error::@6
(label) multiply_error::@7
(label) multiply_error::@8
(label) multiply_error::@9
(label) multiply_error::@return
(byte) multiply_error::a
(byte) multiply_error::a#0
(byte) multiply_error::a#1
(byte) multiply_error::a#2
(byte) multiply_error::b
(byte) multiply_error::b#0
(byte) multiply_error::b#1
(byte) multiply_error::b#2
(byte) multiply_error::b#3
(byte) multiply_error::b#4
(word) multiply_error::ma
(word) multiply_error::ma#0
(word) multiply_error::ma#1
(word) multiply_error::ma#2
(word) multiply_error::ma#3
(word) multiply_error::ma#4
(word) multiply_error::ma#5
(word) multiply_error::ma#6
(word) multiply_error::ma#7
(word) multiply_error::ma#8
(word) multiply_error::ms
(word) multiply_error::ms#0
(word) multiply_error::ms#1
(word) multiply_error::ms#2
(word) multiply_error::ms#3
(word) multiply_error::ms#4
(word) multiply_error::ms#5
(word) multiply_error::ms#6
(const string) multiply_error::str = (string) "multiply mismatch @"
(const string) multiply_error::str1 = (string) "*@"
(const string) multiply_error::str2 = (string) " slow:@"
(const string) multiply_error::str3 = (string) " / fast asm:@"
(void()) multiply_results_compare()
(word~) multiply_results_compare::$0
(word~) multiply_results_compare::$1
(boolean~) multiply_results_compare::$2
(boolean~) multiply_results_compare::$3
(boolean~) multiply_results_compare::$5
(boolean~) multiply_results_compare::$6
(label) multiply_results_compare::@1
(label) multiply_results_compare::@10
(label) multiply_results_compare::@11
(label) multiply_results_compare::@12
(label) multiply_results_compare::@2
(label) multiply_results_compare::@3
(label) multiply_results_compare::@4
(label) multiply_results_compare::@6
(label) multiply_results_compare::@7
(label) multiply_results_compare::@8
(label) multiply_results_compare::@9
(label) multiply_results_compare::@return
(byte) multiply_results_compare::a
(byte) multiply_results_compare::a#0
(byte) multiply_results_compare::a#1
(byte) multiply_results_compare::a#2
(byte) multiply_results_compare::a#3
(byte) multiply_results_compare::a#4
(byte) multiply_results_compare::a#5
(byte) multiply_results_compare::a#6
(byte) multiply_results_compare::a#7
(byte) multiply_results_compare::a#8
(byte) multiply_results_compare::b
(byte) multiply_results_compare::b#0
(byte) multiply_results_compare::b#1
(byte) multiply_results_compare::b#2
(byte) multiply_results_compare::b#3
(byte) multiply_results_compare::b#4
(byte) multiply_results_compare::b#5
(byte) multiply_results_compare::b#6
(word) multiply_results_compare::ma
(word) multiply_results_compare::ma#0
(word) multiply_results_compare::ma#1
(word) multiply_results_compare::ms
(word) multiply_results_compare::ms#0
(word) multiply_results_compare::ms#1
(word) multiply_results_compare::ms#2
(const string) multiply_results_compare::str = (string) "multiply results match!@"
(void()) multiply_tables_compare()
(boolean~) multiply_tables_compare::$0
(boolean~) multiply_tables_compare::$1
(boolean~) multiply_tables_compare::$10
(word~) multiply_tables_compare::$3
(word~) multiply_tables_compare::$6
(word/signed word/dword/signed dword~) multiply_tables_compare::$8
(byte*~) multiply_tables_compare::$9
(label) multiply_tables_compare::@1
(label) multiply_tables_compare::@10
(label) multiply_tables_compare::@11
(label) multiply_tables_compare::@2
(label) multiply_tables_compare::@3
(label) multiply_tables_compare::@5
(label) multiply_tables_compare::@6
(label) multiply_tables_compare::@7
(label) multiply_tables_compare::@8
(label) multiply_tables_compare::@9
(label) multiply_tables_compare::@return
(byte*) multiply_tables_compare::asm_sqr
(byte*) multiply_tables_compare::asm_sqr#0
(byte*) multiply_tables_compare::asm_sqr#1
(byte*) multiply_tables_compare::asm_sqr#2
(byte*) multiply_tables_compare::asm_sqr#3
(byte*) multiply_tables_compare::asm_sqr#4
(byte*) multiply_tables_compare::asm_sqr#5
(byte*) multiply_tables_compare::kc_sqr
(byte*) multiply_tables_compare::kc_sqr#0
(byte*) multiply_tables_compare::kc_sqr#1
(byte*) multiply_tables_compare::kc_sqr#2
(byte*) multiply_tables_compare::kc_sqr#3
(byte*) multiply_tables_compare::kc_sqr#4
(byte*) multiply_tables_compare::kc_sqr#5
(byte*) multiply_tables_compare::kc_sqr#6
(byte*) multiply_tables_compare::kc_sqr#7
(const string) multiply_tables_compare::str = (string) "multiply table mismatch at @"
(const string) multiply_tables_compare::str1 = (string) " / @"
(const string) multiply_tables_compare::str2 = (string) "multiply tables match!@"
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0
(byte~) print_byte::$2
(const string) print_byte::$4 = (string) "0123456789abcdef"
(label) print_byte::@1
(label) print_byte::@2
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0
(byte) print_byte::b#1
(byte) print_byte::b#2
(byte) print_byte::b#3
(byte) print_byte::b#4
(byte) print_byte::b#5
(byte) print_byte::b#6
(byte[]) print_byte::hextab
(byte[]) print_byte::hextab#0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0
(byte) print_char::ch#1
(byte) print_char::ch#2
(byte) print_char::ch#3
(byte) print_char::ch#4
(void()) print_cls()
(word/signed word/dword/signed dword~) print_cls::$0
(boolean~) print_cls::$1
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#0
(byte*) print_cls::sc#1
(byte*) print_cls::sc#2
(void()) print_ln()
(byte*~) print_ln::$0
(boolean~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@2
(label) print_ln::@return
(void()) print_sbyte((signed byte) print_sbyte::b)
(boolean~) print_sbyte::$0
(boolean~) print_sbyte::$1
(signed byte~) print_sbyte::$3
(byte~) print_sbyte::$4
(label) print_sbyte::@1
(label) print_sbyte::@2
(label) print_sbyte::@3
(label) print_sbyte::@4
(label) print_sbyte::@return
(signed byte) print_sbyte::b
(signed byte) print_sbyte::b#0
(signed byte) print_sbyte::b#1
(signed byte) print_sbyte::b#2
(signed byte) print_sbyte::b#3
(signed byte) print_sbyte::b#4
(signed byte) print_sbyte::b#5
(signed byte) print_sbyte::b#6
(void()) print_str((byte*) print_str::str)
(boolean~) print_str::$0
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0
(byte*) print_str::str#1
(byte*) print_str::str#10
(byte*) print_str::str#11
(byte*) print_str::str#12
(byte*) print_str::str#13
(byte*) print_str::str#14
(byte*) print_str::str#15
(byte*) print_str::str#16
(byte*) print_str::str#2
(byte*) print_str::str#3
(byte*) print_str::str#4
(byte*) print_str::str#5
(byte*) print_str::str#6
(byte*) print_str::str#7
(byte*) print_str::str#8
(byte*) print_str::str#9
(void()) print_sword((signed word) print_sword::w)
(boolean~) print_sword::$0
(boolean~) print_sword::$1
(signed word~) print_sword::$3
(word~) print_sword::$4
(label) print_sword::@1
(label) print_sword::@2
(label) print_sword::@3
(label) print_sword::@4
(label) print_sword::@return
(signed word) print_sword::w
(signed word) print_sword::w#0
(signed word) print_sword::w#1
(signed word) print_sword::w#2
(signed word) print_sword::w#3
(signed word) print_sword::w#4
(signed word) print_sword::w#5
(signed word) print_sword::w#6
(void()) print_word((word) print_word::w)
(byte~) print_word::$0
(byte~) print_word::$2
(label) print_word::@1
(label) print_word::@2
(label) print_word::@return
(word) print_word::w
(word) print_word::w#0
(word) print_word::w#1
(word) print_word::w#2
(word) print_word::w#3
(word) print_word::w#4
(word) print_word::w#5
(word) print_word::w#6
(signed word()) signed_multiply((signed byte) signed_multiply::a , (signed byte) signed_multiply::b)
(byte~) signed_multiply::$0
(byte~) signed_multiply::$1
(boolean~) signed_multiply::$10
(byte~) signed_multiply::$12
(byte~) signed_multiply::$13
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$14
(signed word~) signed_multiply::$15
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17
(word~) signed_multiply::$2
(boolean~) signed_multiply::$3
(boolean~) signed_multiply::$4
(byte~) signed_multiply::$6
(byte~) signed_multiply::$7
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$8
(boolean~) signed_multiply::$9
(label) signed_multiply::@1
(label) signed_multiply::@2
(label) signed_multiply::@3
(label) signed_multiply::@4
(label) signed_multiply::@6
(label) signed_multiply::@return
(signed byte) signed_multiply::a
(signed byte) signed_multiply::a#0
(signed byte) signed_multiply::a#1
(signed byte) signed_multiply::a#2
(signed byte) signed_multiply::a#3
(signed byte) signed_multiply::a#4
(signed byte) signed_multiply::a#5
(signed byte) signed_multiply::b
(signed byte) signed_multiply::b#0
(signed byte) signed_multiply::b#1
(signed byte) signed_multiply::b#2
(signed byte) signed_multiply::b#3
(signed byte) signed_multiply::b#4
(word) signed_multiply::m
(word) signed_multiply::m#0
(word) signed_multiply::m#1
(word) signed_multiply::m#2
(word) signed_multiply::m#3
(word) signed_multiply::m#4
(word) signed_multiply::m#5
(word) signed_multiply::m#6
(signed word) signed_multiply::return
(signed word) signed_multiply::return#0
(signed word) signed_multiply::return#1
(signed word) signed_multiply::return#2
(signed word) signed_multiply::return#3
(signed word) signed_multiply::return#4
(void()) signed_multiply_error((signed byte) signed_multiply_error::a , (signed byte) signed_multiply_error::b , (signed word) signed_multiply_error::ms , (signed word) signed_multiply_error::ma)
(label) signed_multiply_error::@1
(label) signed_multiply_error::@2
(label) signed_multiply_error::@3
(label) signed_multiply_error::@4
(label) signed_multiply_error::@5
(label) signed_multiply_error::@6
(label) signed_multiply_error::@7
(label) signed_multiply_error::@8
(label) signed_multiply_error::@9
(label) signed_multiply_error::@return
(signed byte) signed_multiply_error::a
(signed byte) signed_multiply_error::a#0
(signed byte) signed_multiply_error::a#1
(signed byte) signed_multiply_error::a#2
(signed byte) signed_multiply_error::b
(signed byte) signed_multiply_error::b#0
(signed byte) signed_multiply_error::b#1
(signed byte) signed_multiply_error::b#2
(signed byte) signed_multiply_error::b#3
(signed byte) signed_multiply_error::b#4
(signed word) signed_multiply_error::ma
(signed word) signed_multiply_error::ma#0
(signed word) signed_multiply_error::ma#1
(signed word) signed_multiply_error::ma#2
(signed word) signed_multiply_error::ma#3
(signed word) signed_multiply_error::ma#4
(signed word) signed_multiply_error::ma#5
(signed word) signed_multiply_error::ma#6
(signed word) signed_multiply_error::ma#7
(signed word) signed_multiply_error::ma#8
(signed word) signed_multiply_error::ms
(signed word) signed_multiply_error::ms#0
(signed word) signed_multiply_error::ms#1
(signed word) signed_multiply_error::ms#2
(signed word) signed_multiply_error::ms#3
(signed word) signed_multiply_error::ms#4
(signed word) signed_multiply_error::ms#5
(signed word) signed_multiply_error::ms#6
(const string) signed_multiply_error::str = (string) "signed multiply mismatch @"
(const string) signed_multiply_error::str1 = (string) "*@"
(const string) signed_multiply_error::str2 = (string) " slow:@"
(const string) signed_multiply_error::str3 = (string) " / fast asm:@"
(void()) signed_multiply_results_compare()
(signed byte/signed word/signed dword~) signed_multiply_results_compare::$0
(signed byte/signed word/signed dword~) signed_multiply_results_compare::$1
(boolean~) signed_multiply_results_compare::$10
(signed word~) signed_multiply_results_compare::$2
(signed word~) signed_multiply_results_compare::$3
(boolean~) signed_multiply_results_compare::$4
(boolean~) signed_multiply_results_compare::$5
(signed byte/signed word/signed dword~) signed_multiply_results_compare::$7
(boolean~) signed_multiply_results_compare::$8
(signed byte/signed word/signed dword~) signed_multiply_results_compare::$9
(label) signed_multiply_results_compare::@1
(label) signed_multiply_results_compare::@10
(label) signed_multiply_results_compare::@11
(label) signed_multiply_results_compare::@12
(label) signed_multiply_results_compare::@2
(label) signed_multiply_results_compare::@3
(label) signed_multiply_results_compare::@4
(label) signed_multiply_results_compare::@6
(label) signed_multiply_results_compare::@7
(label) signed_multiply_results_compare::@8
(label) signed_multiply_results_compare::@9
(label) signed_multiply_results_compare::@return
(signed byte) signed_multiply_results_compare::a
(signed byte) signed_multiply_results_compare::a#0
(signed byte) signed_multiply_results_compare::a#1
(signed byte) signed_multiply_results_compare::a#2
(signed byte) signed_multiply_results_compare::a#3
(signed byte) signed_multiply_results_compare::a#4
(signed byte) signed_multiply_results_compare::a#5
(signed byte) signed_multiply_results_compare::a#6
(signed byte) signed_multiply_results_compare::a#7
(signed byte) signed_multiply_results_compare::a#8
(signed byte) signed_multiply_results_compare::b
(signed byte) signed_multiply_results_compare::b#0
(signed byte) signed_multiply_results_compare::b#1
(signed byte) signed_multiply_results_compare::b#2
(signed byte) signed_multiply_results_compare::b#3
(signed byte) signed_multiply_results_compare::b#4
(signed byte) signed_multiply_results_compare::b#5
(signed byte) signed_multiply_results_compare::b#6
(signed word) signed_multiply_results_compare::ma
(signed word) signed_multiply_results_compare::ma#0
(signed word) signed_multiply_results_compare::ma#1
(signed word) signed_multiply_results_compare::ms
(signed word) signed_multiply_results_compare::ms#0
(signed word) signed_multiply_results_compare::ms#1
(signed word) signed_multiply_results_compare::ms#2
(const string) signed_multiply_results_compare::str = (string) "signed multiply results match!@"
(word()) slow_multiply((byte) slow_multiply::a , (byte) slow_multiply::b)
(boolean~) slow_multiply::$0
(boolean~) slow_multiply::$1
(word~) slow_multiply::$2
(boolean~) slow_multiply::$3
(label) slow_multiply::@1
(label) slow_multiply::@2
(label) slow_multiply::@3
(label) slow_multiply::@return
(byte) slow_multiply::a
(byte) slow_multiply::a#0
(byte) slow_multiply::a#1
(byte) slow_multiply::a#2
(byte) slow_multiply::a#3
(byte) slow_multiply::b
(byte) slow_multiply::b#0
(byte) slow_multiply::b#1
(byte) slow_multiply::b#2
(byte) slow_multiply::b#3
(byte) slow_multiply::i
(byte) slow_multiply::i#0
(byte) slow_multiply::i#1
(byte) slow_multiply::i#2
(word) slow_multiply::m
(word) slow_multiply::m#0
(word) slow_multiply::m#1
(word) slow_multiply::m#2
(word) slow_multiply::m#3
(word) slow_multiply::m#4
(word) slow_multiply::return
(word) slow_multiply::return#0
(word) slow_multiply::return#1
(word) slow_multiply::return#2
(word) slow_multiply::return#3
(word) slow_multiply::return#4
(signed word()) slow_signed_multiply((signed byte) slow_signed_multiply::a , (signed byte) slow_signed_multiply::b)
(boolean~) slow_signed_multiply::$0
(boolean~) slow_signed_multiply::$1
(signed word~) slow_signed_multiply::$2
(boolean~) slow_signed_multiply::$3
(boolean~) slow_signed_multiply::$4
(boolean~) slow_signed_multiply::$5
(signed word~) slow_signed_multiply::$6
(boolean~) slow_signed_multiply::$7
(label) slow_signed_multiply::@1
(label) slow_signed_multiply::@2
(label) slow_signed_multiply::@3
(label) slow_signed_multiply::@4
(label) slow_signed_multiply::@5
(label) slow_signed_multiply::@6
(label) slow_signed_multiply::@9
(label) slow_signed_multiply::@return
(signed byte) slow_signed_multiply::a
(signed byte) slow_signed_multiply::a#0
(signed byte) slow_signed_multiply::a#1
(signed byte) slow_signed_multiply::a#2
(signed byte) slow_signed_multiply::a#3
(signed byte) slow_signed_multiply::a#4
(signed byte) slow_signed_multiply::a#5
(signed byte) slow_signed_multiply::a#6
(signed byte) slow_signed_multiply::b
(signed byte) slow_signed_multiply::b#0
(signed byte) slow_signed_multiply::b#1
(signed byte) slow_signed_multiply::b#2
(signed byte) slow_signed_multiply::b#3
(signed byte) slow_signed_multiply::b#4
(signed byte) slow_signed_multiply::b#5
(signed byte) slow_signed_multiply::b#6
(signed byte) slow_signed_multiply::i
(signed byte) slow_signed_multiply::i#0
(signed byte) slow_signed_multiply::i#1
(signed byte) slow_signed_multiply::i#2
(signed byte) slow_signed_multiply::j
(signed byte) slow_signed_multiply::j#0
(signed byte) slow_signed_multiply::j#1
(signed byte) slow_signed_multiply::j#2
(signed word) slow_signed_multiply::m
(signed word) slow_signed_multiply::m#0
(signed word) slow_signed_multiply::m#1
(signed word) slow_signed_multiply::m#2
(signed word) slow_signed_multiply::m#3
(signed word) slow_signed_multiply::m#4
(signed word) slow_signed_multiply::m#5
(signed word) slow_signed_multiply::m#6
(signed word) slow_signed_multiply::m#7
(signed word) slow_signed_multiply::m#8
(signed word) slow_signed_multiply::m#9
(signed word) slow_signed_multiply::return
(signed word) slow_signed_multiply::return#0
(signed word) slow_signed_multiply::return#1
(signed word) slow_signed_multiply::return#2
(signed word) slow_signed_multiply::return#3
(signed word) slow_signed_multiply::return#4

OPTIMIZING CONTROL FLOW GRAPH
Inversing boolean not (boolean~) print_sword::$1 ← (signed word) print_sword::w#3 >= (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) print_sword::$0 ← (signed word) print_sword::w#3 < (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) print_sbyte::$1 ← (signed byte) print_sbyte::b#3 >= (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) print_sbyte::$0 ← (signed byte) print_sbyte::b#3 < (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) init_multiply::$4 ← (byte~) init_multiply::$2 != (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) init_multiply::$3 ← (byte~) init_multiply::$2 == (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) init_multiply::$14 ← (byte) init_multiply::x_255#1 != (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) init_multiply::$13 ← (byte) init_multiply::x_255#1 == (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) signed_multiply::$4 ← (signed byte) signed_multiply::a#2 >= (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) signed_multiply::$3 ← (signed byte) signed_multiply::a#2 < (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) signed_multiply::$10 ← (signed byte) signed_multiply::b#2 >= (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) signed_multiply::$9 ← (signed byte) signed_multiply::b#2 < (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) slow_multiply::$1 ← (byte) slow_multiply::a#1 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) slow_multiply::$0 ← (byte) slow_multiply::a#1 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) slow_signed_multiply::$1 ← (signed byte) slow_signed_multiply::a#1 >= (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) slow_signed_multiply::$0 ← (signed byte) slow_signed_multiply::a#1 < (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) slow_signed_multiply::$5 ← (signed byte) slow_signed_multiply::a#2 <= (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) slow_signed_multiply::$4 ← (signed byte) slow_signed_multiply::a#2 > (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) multiply_tables_compare::$1 ← *((byte*) multiply_tables_compare::kc_sqr#2) == *((byte*) multiply_tables_compare::asm_sqr#2) from (boolean~) multiply_tables_compare::$0 ← *((byte*) multiply_tables_compare::kc_sqr#2) != *((byte*) multiply_tables_compare::asm_sqr#2)
Inversing boolean not (boolean~) multiply_results_compare::$3 ← (word) multiply_results_compare::ms#1 == (word) multiply_results_compare::ma#0 from (boolean~) multiply_results_compare::$2 ← (word) multiply_results_compare::ms#1 != (word) multiply_results_compare::ma#0
Inversing boolean not (boolean~) signed_multiply_results_compare::$5 ← (signed word) signed_multiply_results_compare::ms#1 == (signed word) signed_multiply_results_compare::ma#0 from (boolean~) signed_multiply_results_compare::$4 ← (signed word) signed_multiply_results_compare::ms#1 != (signed word) signed_multiply_results_compare::ma#0
Succesful SSA optimization Pass2UnaryNotSimplification
Not aliassing across scopes: print_str::str#16 print_str::str#5
Not aliassing across scopes: char_cursor#135 char_cursor#130
Not aliassing across scopes: line_cursor#40 line_cursor#46
Not aliassing across scopes: char_cursor#118 char_cursor#41
Not aliassing across scopes: print_sword::w#3 print_sword::w#1
Not aliassing across scopes: char_cursor#136 char_cursor#52
Not aliassing across scopes: char_cursor#63 char_cursor#13
Not aliassing across scopes: char_cursor#64 char_cursor#18
Not aliassing across scopes: print_sbyte::b#3 print_sbyte::b#1
Not aliassing across scopes: char_cursor#137 char_cursor#48
Not aliassing across scopes: char_cursor#66 char_cursor#16
Not aliassing across scopes: char_cursor#67 char_cursor#18
Not aliassing across scopes: print_word::w#5 print_word::w#3
Not aliassing across scopes: char_cursor#123 char_cursor#38
Not aliassing across scopes: char_cursor#69 char_cursor#16
Not aliassing across scopes: char_cursor#70 char_cursor#16
Not aliassing across scopes: print_byte::b#5 print_byte::b#3
Not aliassing across scopes: char_cursor#124 char_cursor#34
Not aliassing across scopes: char_cursor#72 char_cursor#18
Not aliassing across scopes: char_cursor#73 char_cursor#18
Not aliassing across scopes: print_char::ch#4 print_char::ch#2
Not aliassing across scopes: char_cursor#75 char_cursor#124
Not aliassing across scopes: init_multiply::sqr2_hi#0 mul_sqr2_hi#0
Not aliassing across scopes: init_multiply::sqr2_lo#0 mul_sqr2_lo#0
Not aliassing across scopes: multiply::a#2 multiply::a#1
Not aliassing across scopes: multiply::b#2 multiply::b#1
Not aliassing across scopes: signed_multiply::a#1 signed_multiply::a#0
Not aliassing across scopes: signed_multiply::b#1 signed_multiply::b#0
Not aliassing across scopes: multiply::return#2 multiply::return#1
Not aliassing across scopes: signed_multiply::$2 multiply::return#5
Not aliassing across scopes: BGCOL#1 BGCOL#5
Not aliassing across scopes: char_cursor#154 char_cursor#134
Not aliassing across scopes: line_cursor#72 line_cursor#50
Not aliassing across scopes: char_cursor#77 char_cursor#27
Not aliassing across scopes: line_cursor#23 line_cursor#7
Not aliassing across scopes: char_cursor#78 char_cursor#31
Not aliassing across scopes: line_cursor#24 line_cursor#10
Not aliassing across scopes: char_cursor#79 char_cursor#45
Not aliassing across scopes: line_cursor#25 line_cursor#15
Not aliassing across scopes: slow_multiply::a#1 slow_multiply::a#0
Not aliassing across scopes: slow_multiply::b#3 slow_multiply::b#0
Not aliassing identity: slow_multiply::b#1 slow_multiply::b#1
Not aliassing identity: slow_multiply::a#2 slow_multiply::a#2
Not aliassing across scopes: slow_signed_multiply::a#1 slow_signed_multiply::a#0
Not aliassing across scopes: slow_signed_multiply::b#5 slow_signed_multiply::b#0
Not aliassing identity: slow_signed_multiply::b#1 slow_signed_multiply::b#1
Not aliassing identity: slow_signed_multiply::a#3 slow_signed_multiply::a#3
Not aliassing identity: slow_signed_multiply::b#2 slow_signed_multiply::b#2
Not aliassing identity: slow_signed_multiply::a#4 slow_signed_multiply::a#4
Not aliassing across scopes: BGCOL#9 BGCOL#14
Not aliassing across scopes: char_cursor#148 char_cursor#125
Not aliassing across scopes: line_cursor#81 line_cursor#41
Not aliassing across scopes: multiply_tables_compare::asm_sqr#0 asm_mul_sqr1_lo#0
Not aliassing across scopes: multiply_tables_compare::kc_sqr#0 mul_sqr1_lo#0
Not aliassing across scopes: char_cursor#81 char_cursor#2
Not aliassing across scopes: char_cursor#82 char_cursor#13
Not aliassing across scopes: char_cursor#83 char_cursor#2
Not aliassing across scopes: char_cursor#84 char_cursor#13
Not aliassing across scopes: char_cursor#86 char_cursor#2
Not aliassing across scopes: line_cursor#28 line_cursor#2
Not aliassing across scopes: char_cursor#87 char_cursor#4
Not aliassing across scopes: BGCOL#23 BGCOL#27
Not aliassing across scopes: char_cursor#159 char_cursor#19
Not aliassing across scopes: line_cursor#87 line_cursor#3
Not aliassing across scopes: slow_multiply::a#0 multiply_results_compare::a#2
Not aliassing across scopes: slow_multiply::b#0 multiply_results_compare::b#2
Not aliassing across scopes: slow_multiply::return#2 slow_multiply::return#1
Not aliassing across scopes: multiply_results_compare::$0 slow_multiply::return#4
Not aliassing across scopes: multiply::a#1 multiply_results_compare::a#3
Not aliassing across scopes: multiply::b#1 multiply_results_compare::b#3
Not aliassing across scopes: multiply::return#3 multiply::return#1
Not aliassing across scopes: multiply_results_compare::$1 multiply::return#6
Not aliassing across scopes: multiply_error::a#0 multiply_results_compare::a#4
Not aliassing across scopes: multiply_error::b#0 multiply_results_compare::b#5
Not aliassing across scopes: multiply_error::ms#0 multiply_results_compare::ms#2
Not aliassing across scopes: multiply_error::ma#0 multiply_results_compare::ma#1
Not aliassing across scopes: char_cursor#88 char_cursor#43
Not aliassing across scopes: line_cursor#29 line_cursor#13
Not aliassing across scopes: char_cursor#90 char_cursor#2
Not aliassing across scopes: line_cursor#31 line_cursor#2
Not aliassing across scopes: char_cursor#91 char_cursor#4
Not aliassing across scopes: char_cursor#130 char_cursor#128
Not aliassing across scopes: multiply_error::a#2 multiply_error::a#0
Not aliassing across scopes: multiply_error::b#4 multiply_error::b#0
Not aliassing across scopes: multiply_error::ms#6 multiply_error::ms#0
Not aliassing across scopes: multiply_error::ma#8 multiply_error::ma#0
Not aliassing across scopes: line_cursor#95 line_cursor#44
Not aliassing across scopes: char_cursor#92 char_cursor#2
Not aliassing across scopes: print_byte::b#3 multiply_error::a#1
Not aliassing across scopes: char_cursor#93 char_cursor#16
Not aliassing across scopes: char_cursor#94 char_cursor#2
Not aliassing across scopes: print_byte::b#4 multiply_error::b#1
Not aliassing across scopes: char_cursor#95 char_cursor#16
Not aliassing across scopes: char_cursor#96 char_cursor#2
Not aliassing across scopes: print_word::w#3 multiply_error::ms#1
Not aliassing across scopes: char_cursor#97 char_cursor#13
Not aliassing across scopes: char_cursor#98 char_cursor#2
Not aliassing across scopes: print_word::w#4 multiply_error::ma#1
Not aliassing across scopes: char_cursor#99 char_cursor#13
Not aliassing across scopes: line_cursor#32 line_cursor#2
Not aliassing across scopes: char_cursor#100 char_cursor#4
Not aliassing across scopes: BGCOL#25 BGCOL#28
Not aliassing across scopes: char_cursor#160 char_cursor#20
Not aliassing across scopes: line_cursor#89 line_cursor#4
Not aliassing across scopes: slow_signed_multiply::a#0 signed_multiply_results_compare::a#2
Not aliassing across scopes: slow_signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: slow_signed_multiply::return#2 slow_signed_multiply::return#1
Not aliassing across scopes: signed_multiply_results_compare::$2 slow_signed_multiply::return#4
Not aliassing across scopes: signed_multiply::a#0 signed_multiply_results_compare::a#3
Not aliassing across scopes: signed_multiply::b#0 signed_multiply_results_compare::b#3
Not aliassing across scopes: signed_multiply::return#2 signed_multiply::return#1
Not aliassing across scopes: signed_multiply_results_compare::$3 signed_multiply::return#4
Not aliassing across scopes: signed_multiply_error::a#0 signed_multiply_results_compare::a#4
Not aliassing across scopes: signed_multiply_error::b#0 signed_multiply_results_compare::b#5
Not aliassing across scopes: signed_multiply_error::ms#0 signed_multiply_results_compare::ms#2
Not aliassing across scopes: signed_multiply_error::ma#0 signed_multiply_results_compare::ma#1
Not aliassing across scopes: char_cursor#102 char_cursor#57
Not aliassing across scopes: line_cursor#34 line_cursor#18
Not aliassing across scopes: char_cursor#104 char_cursor#2
Not aliassing across scopes: line_cursor#36 line_cursor#2
Not aliassing across scopes: char_cursor#105 char_cursor#4
Not aliassing across scopes: char_cursor#133 char_cursor#131
Not aliassing across scopes: signed_multiply_error::a#2 signed_multiply_error::a#0
Not aliassing across scopes: signed_multiply_error::b#4 signed_multiply_error::b#0
Not aliassing across scopes: signed_multiply_error::ms#6 signed_multiply_error::ms#0
Not aliassing across scopes: signed_multiply_error::ma#8 signed_multiply_error::ma#0
Not aliassing across scopes: line_cursor#96 line_cursor#47
Not aliassing across scopes: char_cursor#106 char_cursor#2
Not aliassing across scopes: print_sbyte::b#1 signed_multiply_error::a#1
Not aliassing across scopes: char_cursor#107 char_cursor#10
Not aliassing across scopes: char_cursor#108 char_cursor#2
Not aliassing across scopes: print_sbyte::b#2 signed_multiply_error::b#1
Not aliassing across scopes: char_cursor#109 char_cursor#10
Not aliassing across scopes: char_cursor#110 char_cursor#2
Not aliassing across scopes: print_sword::w#1 signed_multiply_error::ms#1
Not aliassing across scopes: char_cursor#111 char_cursor#7
Not aliassing across scopes: char_cursor#112 char_cursor#2
Not aliassing across scopes: print_sword::w#2 signed_multiply_error::ma#1
Not aliassing across scopes: char_cursor#113 char_cursor#7
Not aliassing across scopes: line_cursor#37 line_cursor#2
Not aliassing across scopes: char_cursor#114 char_cursor#4
Not aliassing across scopes: char_cursor#116 char_cursor#22
Not aliassing across scopes: line_cursor#39 line_cursor#6
Alias (byte*) char_cursor#0 = (byte*) line_cursor#0 (byte*) char_cursor#153 (byte*) line_cursor#71 (byte*) char_cursor#147 (byte*) line_cursor#62 (byte*) char_cursor#145 (byte*) line_cursor#60 (byte*) char_cursor#134 (byte*) line_cursor#50 
Alias (byte*) print_str::str#14 = (byte*) print_str::str#15 
Alias (byte*) char_cursor#117 = (byte*) char_cursor#59 (byte*) char_cursor#60 (byte*) char_cursor#2 
Alias (byte*) line_cursor#1 = (byte*~) print_ln::$0 (byte*) line_cursor#21 (byte*) char_cursor#3 (byte*) line_cursor#22 (byte*) char_cursor#62 (byte*) line_cursor#2 (byte*) char_cursor#4 
Alias (word) print_word::w#0 = (word~) print_sword::$4 
Alias (byte*) char_cursor#5 = (byte*) char_cursor#63 (byte*) char_cursor#65 (byte*) char_cursor#7 
Alias (byte*) char_cursor#120 = (byte*) char_cursor#136 
Alias (signed word) print_sword::w#3 = (signed word) print_sword::w#6 (signed word) print_sword::w#5 
Alias (byte*) char_cursor#6 = (byte*) char_cursor#64 
Alias (signed word) print_sword::w#0 = (signed word~) print_sword::$3 
Alias (byte) print_byte::b#0 = (byte~) print_sbyte::$4 
Alias (byte*) char_cursor#10 = (byte*) char_cursor#8 (byte*) char_cursor#66 (byte*) char_cursor#68 
Alias (byte*) char_cursor#122 = (byte*) char_cursor#137 
Alias (signed byte) print_sbyte::b#3 = (signed byte) print_sbyte::b#6 (signed byte) print_sbyte::b#5 
Alias (byte*) char_cursor#67 = (byte*) char_cursor#9 
Alias (signed byte) print_sbyte::b#0 = (signed byte~) print_sbyte::$3 
Alias (byte) print_byte::b#1 = (byte~) print_word::$0 
Alias (word) print_word::w#5 = (word) print_word::w#6 
Alias (byte*) char_cursor#11 = (byte*) char_cursor#69 
Alias (byte) print_byte::b#2 = (byte~) print_word::$2 
Alias (byte*) char_cursor#12 = (byte*) char_cursor#70 (byte*) char_cursor#71 (byte*) char_cursor#13 
Alias (byte) print_byte::b#5 = (byte) print_byte::b#6 
Alias (byte*) char_cursor#14 = (byte*) char_cursor#72 
Alias (byte*) char_cursor#15 = (byte*) char_cursor#73 (byte*) char_cursor#74 (byte*) char_cursor#16 
Alias (byte*) char_cursor#17 = (byte*) char_cursor#76 (byte*) char_cursor#18 
Alias (byte*) init_multiply::sqr1_hi#0 = (byte*~) init_multiply::$0 
Alias (byte*) init_multiply::sqr1_lo#0 = (byte*~) init_multiply::$1 
Alias (word) init_multiply::sqr#1 = (word~) init_multiply::$7 
Alias (byte) init_multiply::x_2#3 = (byte) init_multiply::x_2#4 
Alias (word) init_multiply::sqr#4 = (word) init_multiply::sqr#5 
Alias (byte*) init_multiply::sqr1_lo#3 = (byte*) init_multiply::sqr1_lo#4 
Alias (byte*) init_multiply::sqr1_hi#3 = (byte*) init_multiply::sqr1_hi#4 
Alias (byte) init_multiply::c#1 = (byte) init_multiply::c#4 
Alias (byte) init_multiply::x_255#0 = (byte~) init_multiply::$11 
Alias (byte) init_multiply::x_255#1 = (byte/word~) init_multiply::$12 (byte) init_multiply::x_255#4 
Alias (byte*) init_multiply::sqr2_lo#2 = (byte*) init_multiply::sqr2_lo#4 
Alias (byte*) init_multiply::sqr2_hi#1 = (byte*) init_multiply::sqr2_hi#4 
Alias (word) multiply::return#0 = (word) multiply::return#4 (word) multiply::return#1 
Alias (byte) multiply::a#0 = (byte~) signed_multiply::$0 
Alias (byte) multiply::b#0 = (byte~) signed_multiply::$1 
Alias (word) multiply::return#2 = (word) multiply::return#5 
Alias (signed byte) signed_multiply::a#1 = (signed byte) signed_multiply::a#2 (signed byte) signed_multiply::a#5 
Alias (signed byte) signed_multiply::b#1 = (signed byte) signed_multiply::b#4 (signed byte) signed_multiply::b#3 
Alias (word) signed_multiply::m#0 = (word~) signed_multiply::$2 (word) signed_multiply::m#3 
Alias (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 = (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$8 
Alias (signed word) signed_multiply::return#0 = (signed word~) signed_multiply::$15 (signed word) signed_multiply::return#3 (signed word) signed_multiply::return#1 
Alias (word) signed_multiply::m#5 = (word) signed_multiply::m#6 
Alias (signed byte) signed_multiply::a#3 = (signed byte) signed_multiply::a#4 
Alias (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 = (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$14 
Alias (byte*) char_cursor#125 = (byte*) char_cursor#146 (byte*) char_cursor#154 (byte*) char_cursor#138 
Alias (byte*) line_cursor#41 = (byte*) line_cursor#61 (byte*) line_cursor#72 (byte*) line_cursor#51 
Alias (byte*) BGCOL#1 = (byte*) BGCOL#22 (byte*) BGCOL#17 (byte*) BGCOL#14 (byte*) BGCOL#27 (byte*) BGCOL#28 
Alias (byte*) char_cursor#19 = (byte*) char_cursor#77 
Alias (byte*) line_cursor#23 = (byte*) line_cursor#3 
Alias (byte*) char_cursor#20 = (byte*) char_cursor#78 
Alias (byte*) line_cursor#24 = (byte*) line_cursor#4 
Alias (byte*) char_cursor#21 = (byte*) char_cursor#79 (byte*) char_cursor#80 (byte*) char_cursor#22 
Alias (byte*) line_cursor#25 = (byte*) line_cursor#5 (byte*) line_cursor#26 (byte*) line_cursor#6 
Alias (word) slow_multiply::return#0 = (word) slow_multiply::m#2 (word) slow_multiply::return#3 (word) slow_multiply::return#1 
Alias (word) slow_multiply::m#0 = (word) slow_multiply::m#4 
Alias (byte) slow_multiply::b#2 = (byte) slow_multiply::b#3 
Alias (byte) slow_multiply::a#1 = (byte) slow_multiply::a#3 
Alias (word) slow_multiply::m#1 = (word~) slow_multiply::$2 
Alias (signed byte) slow_signed_multiply::a#1 = (signed byte) slow_signed_multiply::a#2 (signed byte) slow_signed_multiply::a#5 (signed byte) slow_signed_multiply::a#6 
Alias (signed word) slow_signed_multiply::m#0 = (signed word) slow_signed_multiply::m#9 (signed word) slow_signed_multiply::m#6 (signed word) slow_signed_multiply::m#7 (signed word) slow_signed_multiply::m#8 
Alias (signed byte) slow_signed_multiply::b#3 = (signed byte) slow_signed_multiply::b#6 (signed byte) slow_signed_multiply::b#5 (signed byte) slow_signed_multiply::b#4 
Alias (signed word) slow_signed_multiply::m#1 = (signed word~) slow_signed_multiply::$2 
Alias (signed word) slow_signed_multiply::return#0 = (signed word) slow_signed_multiply::m#4 (signed word) slow_signed_multiply::return#3 (signed word) slow_signed_multiply::return#1 
Alias (signed word) slow_signed_multiply::m#2 = (signed word~) slow_signed_multiply::$6 
Alias (byte*) BGCOL#0 = (byte*) BGCOL#13 (byte*) BGCOL#5 
Alias (byte*) multiply_tables_compare::asm_sqr#2 = (byte*) multiply_tables_compare::asm_sqr#3 (byte*) multiply_tables_compare::asm_sqr#5 (byte*) multiply_tables_compare::asm_sqr#4 
Alias (byte*) multiply_tables_compare::kc_sqr#2 = (byte*) multiply_tables_compare::kc_sqr#3 (byte*) multiply_tables_compare::kc_sqr#7 (byte*) multiply_tables_compare::kc_sqr#6 (byte*) multiply_tables_compare::kc_sqr#5 (byte*) multiply_tables_compare::kc_sqr#4 
Alias (byte*) BGCOL#10 = (byte*) BGCOL#6 (byte*) BGCOL#2 
Alias (byte*) char_cursor#126 = (byte*) char_cursor#140 (byte*) char_cursor#139 (byte*) char_cursor#127 
Alias (byte*) line_cursor#42 = (byte*) line_cursor#64 (byte*) line_cursor#73 (byte*) line_cursor#82 (byte*) line_cursor#74 (byte*) line_cursor#63 (byte*) line_cursor#52 (byte*) line_cursor#53 (byte*) line_cursor#43 
Alias (byte*) char_cursor#23 = (byte*) char_cursor#81 
Alias (word) print_word::w#1 = (word~) multiply_tables_compare::$3 
Alias (byte*) char_cursor#24 = (byte*) char_cursor#82 
Alias (byte*) char_cursor#25 = (byte*) char_cursor#83 
Alias (word) print_word::w#2 = (word~) multiply_tables_compare::$6 
Alias (byte*) char_cursor#26 = (byte*) char_cursor#84 
Alias (byte*) char_cursor#27 = (byte*) char_cursor#85 
Alias (byte*) line_cursor#27 = (byte*) line_cursor#7 
Alias (byte*) char_cursor#28 = (byte*) char_cursor#86 
Alias (byte*) line_cursor#28 = (byte*) line_cursor#8 
Alias (byte*) char_cursor#29 = (byte*) char_cursor#87 
Alias (word) slow_multiply::return#2 = (word) slow_multiply::return#4 
Alias (byte) multiply_results_compare::a#2 = (byte) multiply_results_compare::a#3 (byte) multiply_results_compare::a#8 (byte) multiply_results_compare::a#7 (byte) multiply_results_compare::a#4 (byte) multiply_results_compare::a#5 
Alias (byte) multiply_results_compare::b#2 = (byte) multiply_results_compare::b#3 (byte) multiply_results_compare::b#6 (byte) multiply_results_compare::b#4 (byte) multiply_results_compare::b#5 
Alias (byte*) BGCOL#11 = (byte*) BGCOL#15 (byte*) BGCOL#7 (byte*) BGCOL#19 (byte*) BGCOL#3 (byte*) BGCOL#24 
Alias (byte*) char_cursor#128 = (byte*) char_cursor#149 (byte*) char_cursor#155 (byte*) char_cursor#141 (byte*) char_cursor#150 (byte*) char_cursor#142 (byte*) char_cursor#129 
Alias (byte*) line_cursor#44 = (byte*) line_cursor#65 (byte*) line_cursor#75 (byte*) line_cursor#54 (byte*) line_cursor#76 (byte*) line_cursor#66 (byte*) line_cursor#55 (byte*) line_cursor#45 
Alias (word) multiply_results_compare::ms#0 = (word~) multiply_results_compare::$0 (word) multiply_results_compare::ms#1 (word) multiply_results_compare::ms#2 
Alias (word) multiply::return#3 = (word) multiply::return#6 
Alias (word) multiply_results_compare::ma#0 = (word~) multiply_results_compare::$1 (word) multiply_results_compare::ma#1 
Alias (byte*) char_cursor#30 = (byte*) char_cursor#88 
Alias (byte*) line_cursor#29 = (byte*) line_cursor#9 
Alias (byte*) char_cursor#31 = (byte*) char_cursor#89 
Alias (byte*) line_cursor#10 = (byte*) line_cursor#30 
Alias (byte*) char_cursor#32 = (byte*) char_cursor#90 
Alias (byte*) line_cursor#11 = (byte*) line_cursor#31 
Alias (byte*) char_cursor#33 = (byte*) char_cursor#91 
Alias (byte) multiply_error::a#1 = (byte) multiply_error::a#2 
Alias (byte) multiply_error::b#1 = (byte) multiply_error::b#3 (byte) multiply_error::b#4 (byte) multiply_error::b#2 
Alias (word) multiply_error::ms#1 = (word) multiply_error::ms#5 (word) multiply_error::ms#6 (word) multiply_error::ms#4 (word) multiply_error::ms#3 (word) multiply_error::ms#2 
Alias (word) multiply_error::ma#1 = (word) multiply_error::ma#7 (word) multiply_error::ma#8 (word) multiply_error::ma#6 (word) multiply_error::ma#5 (word) multiply_error::ma#4 (word) multiply_error::ma#3 (word) multiply_error::ma#2 
Alias (byte*) line_cursor#46 = (byte*) line_cursor#93 (byte*) line_cursor#95 (byte*) line_cursor#91 (byte*) line_cursor#88 (byte*) line_cursor#84 (byte*) line_cursor#77 (byte*) line_cursor#67 (byte*) line_cursor#56 
Alias (byte*) char_cursor#34 = (byte*) char_cursor#92 
Alias (byte*) char_cursor#35 = (byte*) char_cursor#93 
Alias (byte*) char_cursor#36 = (byte*) char_cursor#94 
Alias (byte*) char_cursor#37 = (byte*) char_cursor#95 
Alias (byte*) char_cursor#38 = (byte*) char_cursor#96 
Alias (byte*) char_cursor#39 = (byte*) char_cursor#97 
Alias (byte*) char_cursor#40 = (byte*) char_cursor#98 
Alias (byte*) char_cursor#41 = (byte*) char_cursor#99 
Alias (byte*) line_cursor#12 = (byte*) line_cursor#32 (byte*) line_cursor#33 (byte*) line_cursor#13 
Alias (byte*) char_cursor#100 = (byte*) char_cursor#42 (byte*) char_cursor#101 (byte*) char_cursor#43 
Alias (signed byte) signed_multiply_results_compare::a#0 = (signed byte/signed word/signed dword~) signed_multiply_results_compare::$0 
Alias (signed byte) signed_multiply_results_compare::b#0 = (signed byte/signed word/signed dword~) signed_multiply_results_compare::$1 
Alias (signed word) slow_signed_multiply::return#2 = (signed word) slow_signed_multiply::return#4 
Alias (signed byte) signed_multiply_results_compare::a#2 = (signed byte) signed_multiply_results_compare::a#3 (signed byte) signed_multiply_results_compare::a#8 (signed byte) signed_multiply_results_compare::a#7 (signed byte) signed_multiply_results_compare::a#4 (signed byte) signed_multiply_results_compare::a#5 
Alias (signed byte) signed_multiply_results_compare::b#2 = (signed byte) signed_multiply_results_compare::b#3 (signed byte) signed_multiply_results_compare::b#6 (signed byte) signed_multiply_results_compare::b#4 (signed byte) signed_multiply_results_compare::b#5 
Alias (byte*) BGCOL#12 = (byte*) BGCOL#16 (byte*) BGCOL#8 (byte*) BGCOL#21 (byte*) BGCOL#4 (byte*) BGCOL#26 
Alias (byte*) char_cursor#131 = (byte*) char_cursor#151 (byte*) char_cursor#156 (byte*) char_cursor#143 (byte*) char_cursor#152 (byte*) char_cursor#144 (byte*) char_cursor#132 
Alias (byte*) line_cursor#47 = (byte*) line_cursor#68 (byte*) line_cursor#78 (byte*) line_cursor#57 (byte*) line_cursor#79 (byte*) line_cursor#69 (byte*) line_cursor#58 (byte*) line_cursor#48 
Alias (signed word) signed_multiply_results_compare::ms#0 = (signed word~) signed_multiply_results_compare::$2 (signed word) signed_multiply_results_compare::ms#1 (signed word) signed_multiply_results_compare::ms#2 
Alias (signed word) signed_multiply::return#2 = (signed word) signed_multiply::return#4 
Alias (signed word) signed_multiply_results_compare::ma#0 = (signed word~) signed_multiply_results_compare::$3 (signed word) signed_multiply_results_compare::ma#1 
Alias (byte*) char_cursor#102 = (byte*) char_cursor#44 
Alias (byte*) line_cursor#14 = (byte*) line_cursor#34 
Alias (byte*) char_cursor#103 = (byte*) char_cursor#45 
Alias (byte*) line_cursor#15 = (byte*) line_cursor#35 
Alias (byte*) char_cursor#104 = (byte*) char_cursor#46 
Alias (byte*) line_cursor#16 = (byte*) line_cursor#36 
Alias (byte*) char_cursor#105 = (byte*) char_cursor#47 
Alias (signed byte) signed_multiply_error::a#1 = (signed byte) signed_multiply_error::a#2 
Alias (signed byte) signed_multiply_error::b#1 = (signed byte) signed_multiply_error::b#3 (signed byte) signed_multiply_error::b#4 (signed byte) signed_multiply_error::b#2 
Alias (signed word) signed_multiply_error::ms#1 = (signed word) signed_multiply_error::ms#5 (signed word) signed_multiply_error::ms#6 (signed word) signed_multiply_error::ms#4 (signed word) signed_multiply_error::ms#3 (signed word) signed_multiply_error::ms#2 
Alias (signed word) signed_multiply_error::ma#1 = (signed word) signed_multiply_error::ma#7 (signed word) signed_multiply_error::ma#8 (signed word) signed_multiply_error::ma#6 (signed word) signed_multiply_error::ma#5 (signed word) signed_multiply_error::ma#4 (signed word) signed_multiply_error::ma#3 (signed word) signed_multiply_error::ma#2 
Alias (byte*) line_cursor#49 = (byte*) line_cursor#94 (byte*) line_cursor#96 (byte*) line_cursor#92 (byte*) line_cursor#90 (byte*) line_cursor#86 (byte*) line_cursor#80 (byte*) line_cursor#70 (byte*) line_cursor#59 
Alias (byte*) char_cursor#106 = (byte*) char_cursor#48 
Alias (byte*) char_cursor#107 = (byte*) char_cursor#49 
Alias (byte*) char_cursor#108 = (byte*) char_cursor#50 
Alias (byte*) char_cursor#109 = (byte*) char_cursor#51 
Alias (byte*) char_cursor#110 = (byte*) char_cursor#52 
Alias (byte*) char_cursor#111 = (byte*) char_cursor#53 
Alias (byte*) char_cursor#112 = (byte*) char_cursor#54 
Alias (byte*) char_cursor#113 = (byte*) char_cursor#55 
Alias (byte*) line_cursor#17 = (byte*) line_cursor#37 (byte*) line_cursor#38 (byte*) line_cursor#18 
Alias (byte*) char_cursor#114 = (byte*) char_cursor#56 (byte*) char_cursor#115 (byte*) char_cursor#57 
Alias (byte*) char_cursor#116 = (byte*) char_cursor#58 
Alias (byte*) line_cursor#19 = (byte*) line_cursor#39 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: print_str::str#16 print_str::str#5
Not aliassing across scopes: char_cursor#135 char_cursor#130
Not aliassing across scopes: line_cursor#40 line_cursor#46
Not aliassing across scopes: char_cursor#118 char_cursor#41
Not aliassing across scopes: print_sword::w#3 print_sword::w#1
Not aliassing across scopes: char_cursor#120 char_cursor#110
Not aliassing across scopes: char_cursor#5 char_cursor#12
Not aliassing across scopes: char_cursor#6 char_cursor#17
Not aliassing across scopes: print_sbyte::b#3 print_sbyte::b#1
Not aliassing across scopes: char_cursor#122 char_cursor#106
Not aliassing across scopes: char_cursor#10 char_cursor#15
Not aliassing across scopes: char_cursor#67 char_cursor#17
Not aliassing across scopes: print_word::w#5 print_word::w#3
Not aliassing across scopes: char_cursor#123 char_cursor#38
Not aliassing across scopes: char_cursor#11 char_cursor#15
Not aliassing across scopes: char_cursor#12 char_cursor#15
Not aliassing across scopes: print_byte::b#5 print_byte::b#3
Not aliassing across scopes: char_cursor#124 char_cursor#34
Not aliassing across scopes: char_cursor#14 char_cursor#17
Not aliassing across scopes: char_cursor#15 char_cursor#17
Not aliassing across scopes: print_char::ch#4 print_char::ch#2
Not aliassing across scopes: char_cursor#75 char_cursor#124
Not aliassing across scopes: init_multiply::sqr2_hi#0 mul_sqr2_hi#0
Not aliassing across scopes: init_multiply::sqr2_lo#0 mul_sqr2_lo#0
Not aliassing across scopes: multiply::a#2 multiply::a#1
Not aliassing across scopes: multiply::b#2 multiply::b#1
Not aliassing across scopes: signed_multiply::a#1 signed_multiply::a#0
Not aliassing across scopes: signed_multiply::b#1 signed_multiply::b#0
Not aliassing across scopes: multiply::return#2 multiply::return#0
Not aliassing across scopes: signed_multiply::m#0 multiply::return#2
Not aliassing across scopes: BGCOL#1 BGCOL#0
Not aliassing across scopes: char_cursor#125 char_cursor#0
Not aliassing across scopes: line_cursor#41 char_cursor#0
Not aliassing across scopes: char_cursor#19 char_cursor#27
Not aliassing across scopes: line_cursor#23 line_cursor#27
Not aliassing across scopes: char_cursor#20 char_cursor#31
Not aliassing across scopes: line_cursor#24 line_cursor#10
Not aliassing across scopes: char_cursor#21 char_cursor#103
Not aliassing across scopes: line_cursor#25 line_cursor#15
Not aliassing across scopes: slow_multiply::a#1 slow_multiply::a#0
Not aliassing across scopes: slow_multiply::b#2 slow_multiply::b#0
Not aliassing identity: slow_multiply::b#1 slow_multiply::b#1
Not aliassing identity: slow_multiply::a#2 slow_multiply::a#2
Not aliassing across scopes: slow_signed_multiply::a#1 slow_signed_multiply::a#0
Not aliassing across scopes: slow_signed_multiply::b#3 slow_signed_multiply::b#0
Not aliassing identity: slow_signed_multiply::b#1 slow_signed_multiply::b#1
Not aliassing identity: slow_signed_multiply::a#3 slow_signed_multiply::a#3
Not aliassing identity: slow_signed_multiply::b#2 slow_signed_multiply::b#2
Not aliassing identity: slow_signed_multiply::a#4 slow_signed_multiply::a#4
Not aliassing across scopes: BGCOL#9 BGCOL#1
Not aliassing across scopes: char_cursor#148 char_cursor#125
Not aliassing across scopes: line_cursor#81 line_cursor#41
Not aliassing across scopes: multiply_tables_compare::asm_sqr#0 asm_mul_sqr1_lo#0
Not aliassing across scopes: multiply_tables_compare::kc_sqr#0 mul_sqr1_lo#0
Not aliassing across scopes: char_cursor#23 char_cursor#117
Not aliassing across scopes: char_cursor#24 char_cursor#12
Not aliassing across scopes: char_cursor#25 char_cursor#117
Not aliassing across scopes: char_cursor#26 char_cursor#12
Not aliassing across scopes: char_cursor#28 char_cursor#117
Not aliassing across scopes: line_cursor#28 line_cursor#1
Not aliassing across scopes: char_cursor#29 line_cursor#1
Not aliassing across scopes: BGCOL#23 BGCOL#1
Not aliassing across scopes: char_cursor#159 char_cursor#19
Not aliassing across scopes: line_cursor#87 line_cursor#23
Not aliassing across scopes: slow_multiply::a#0 multiply_results_compare::a#2
Not aliassing across scopes: slow_multiply::b#0 multiply_results_compare::b#2
Not aliassing across scopes: slow_multiply::return#2 slow_multiply::return#0
Not aliassing across scopes: multiply_results_compare::ms#0 slow_multiply::return#2
Not aliassing across scopes: multiply::a#1 multiply_results_compare::a#2
Not aliassing across scopes: multiply::b#1 multiply_results_compare::b#2
Not aliassing across scopes: multiply::return#3 multiply::return#0
Not aliassing across scopes: multiply_results_compare::ma#0 multiply::return#3
Not aliassing across scopes: multiply_error::a#0 multiply_results_compare::a#2
Not aliassing across scopes: multiply_error::b#0 multiply_results_compare::b#2
Not aliassing across scopes: multiply_error::ms#0 multiply_results_compare::ms#0
Not aliassing across scopes: multiply_error::ma#0 multiply_results_compare::ma#0
Not aliassing across scopes: char_cursor#30 char_cursor#100
Not aliassing across scopes: line_cursor#29 line_cursor#12
Not aliassing across scopes: char_cursor#32 char_cursor#117
Not aliassing across scopes: line_cursor#11 line_cursor#1
Not aliassing across scopes: char_cursor#33 line_cursor#1
Not aliassing across scopes: char_cursor#130 char_cursor#128
Not aliassing across scopes: multiply_error::a#1 multiply_error::a#0
Not aliassing across scopes: multiply_error::b#1 multiply_error::b#0
Not aliassing across scopes: multiply_error::ms#1 multiply_error::ms#0
Not aliassing across scopes: multiply_error::ma#1 multiply_error::ma#0
Not aliassing across scopes: line_cursor#46 line_cursor#44
Not aliassing across scopes: char_cursor#34 char_cursor#117
Not aliassing across scopes: print_byte::b#3 multiply_error::a#1
Not aliassing across scopes: char_cursor#35 char_cursor#15
Not aliassing across scopes: char_cursor#36 char_cursor#117
Not aliassing across scopes: print_byte::b#4 multiply_error::b#1
Not aliassing across scopes: char_cursor#37 char_cursor#15
Not aliassing across scopes: char_cursor#38 char_cursor#117
Not aliassing across scopes: print_word::w#3 multiply_error::ms#1
Not aliassing across scopes: char_cursor#39 char_cursor#12
Not aliassing across scopes: char_cursor#40 char_cursor#117
Not aliassing across scopes: print_word::w#4 multiply_error::ma#1
Not aliassing across scopes: char_cursor#41 char_cursor#12
Not aliassing across scopes: line_cursor#12 line_cursor#1
Not aliassing across scopes: char_cursor#100 line_cursor#1
Not aliassing across scopes: BGCOL#25 BGCOL#1
Not aliassing across scopes: char_cursor#160 char_cursor#20
Not aliassing across scopes: line_cursor#89 line_cursor#24
Not aliassing across scopes: slow_signed_multiply::a#0 signed_multiply_results_compare::a#2
Not aliassing across scopes: slow_signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: slow_signed_multiply::return#2 slow_signed_multiply::return#0
Not aliassing across scopes: signed_multiply_results_compare::ms#0 slow_signed_multiply::return#2
Not aliassing across scopes: signed_multiply::a#0 signed_multiply_results_compare::a#2
Not aliassing across scopes: signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply::return#2 signed_multiply::return#0
Not aliassing across scopes: signed_multiply_results_compare::ma#0 signed_multiply::return#2
Not aliassing across scopes: signed_multiply_error::a#0 signed_multiply_results_compare::a#2
Not aliassing across scopes: signed_multiply_error::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply_error::ms#0 signed_multiply_results_compare::ms#0
Not aliassing across scopes: signed_multiply_error::ma#0 signed_multiply_results_compare::ma#0
Not aliassing across scopes: char_cursor#102 char_cursor#114
Not aliassing across scopes: line_cursor#14 line_cursor#17
Not aliassing across scopes: char_cursor#104 char_cursor#117
Not aliassing across scopes: line_cursor#16 line_cursor#1
Not aliassing across scopes: char_cursor#105 line_cursor#1
Not aliassing across scopes: char_cursor#133 char_cursor#131
Not aliassing across scopes: signed_multiply_error::a#1 signed_multiply_error::a#0
Not aliassing across scopes: signed_multiply_error::b#1 signed_multiply_error::b#0
Not aliassing across scopes: signed_multiply_error::ms#1 signed_multiply_error::ms#0
Not aliassing across scopes: signed_multiply_error::ma#1 signed_multiply_error::ma#0
Not aliassing across scopes: line_cursor#49 line_cursor#47
Not aliassing across scopes: char_cursor#106 char_cursor#117
Not aliassing across scopes: print_sbyte::b#1 signed_multiply_error::a#1
Not aliassing across scopes: char_cursor#107 char_cursor#10
Not aliassing across scopes: char_cursor#108 char_cursor#117
Not aliassing across scopes: print_sbyte::b#2 signed_multiply_error::b#1
Not aliassing across scopes: char_cursor#109 char_cursor#10
Not aliassing across scopes: char_cursor#110 char_cursor#117
Not aliassing across scopes: print_sword::w#1 signed_multiply_error::ms#1
Not aliassing across scopes: char_cursor#111 char_cursor#5
Not aliassing across scopes: char_cursor#112 char_cursor#117
Not aliassing across scopes: print_sword::w#2 signed_multiply_error::ma#1
Not aliassing across scopes: char_cursor#113 char_cursor#5
Not aliassing across scopes: line_cursor#17 line_cursor#1
Not aliassing across scopes: char_cursor#114 line_cursor#1
Not aliassing across scopes: char_cursor#116 char_cursor#21
Not aliassing across scopes: line_cursor#19 line_cursor#25
Alias (byte*) init_multiply::sqr1_lo#2 = (byte*) init_multiply::sqr1_lo#3 
Alias (byte*) init_multiply::sqr1_hi#2 = (byte*) init_multiply::sqr1_hi#3 
Alias (byte) init_multiply::c#1 = (byte) init_multiply::c#3 
Alias (byte*) init_multiply::sqr2_lo#2 = (byte*) init_multiply::sqr2_lo#3 
Alias (byte) init_multiply::x_255#1 = (byte) init_multiply::x_255#3 
Alias (byte*) init_multiply::sqr2_hi#1 = (byte*) init_multiply::sqr2_hi#3 
Alias (signed byte) signed_multiply::b#1 = (signed byte) signed_multiply::b#2 
Alias (signed byte) signed_multiply::a#1 = (signed byte) signed_multiply::a#3 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: print_str::str#16 print_str::str#5
Not aliassing across scopes: char_cursor#135 char_cursor#130
Not aliassing across scopes: line_cursor#40 line_cursor#46
Not aliassing across scopes: char_cursor#118 char_cursor#41
Not aliassing across scopes: print_sword::w#3 print_sword::w#1
Not aliassing across scopes: char_cursor#120 char_cursor#110
Not aliassing across scopes: char_cursor#5 char_cursor#12
Not aliassing across scopes: char_cursor#6 char_cursor#17
Not aliassing across scopes: print_sbyte::b#3 print_sbyte::b#1
Not aliassing across scopes: char_cursor#122 char_cursor#106
Not aliassing across scopes: char_cursor#10 char_cursor#15
Not aliassing across scopes: char_cursor#67 char_cursor#17
Not aliassing across scopes: print_word::w#5 print_word::w#3
Not aliassing across scopes: char_cursor#123 char_cursor#38
Not aliassing across scopes: char_cursor#11 char_cursor#15
Not aliassing across scopes: char_cursor#12 char_cursor#15
Not aliassing across scopes: print_byte::b#5 print_byte::b#3
Not aliassing across scopes: char_cursor#124 char_cursor#34
Not aliassing across scopes: char_cursor#14 char_cursor#17
Not aliassing across scopes: char_cursor#15 char_cursor#17
Not aliassing across scopes: print_char::ch#4 print_char::ch#2
Not aliassing across scopes: char_cursor#75 char_cursor#124
Not aliassing across scopes: init_multiply::sqr2_hi#0 mul_sqr2_hi#0
Not aliassing across scopes: init_multiply::sqr2_lo#0 mul_sqr2_lo#0
Not aliassing across scopes: multiply::a#2 multiply::a#1
Not aliassing across scopes: multiply::b#2 multiply::b#1
Not aliassing across scopes: signed_multiply::a#1 signed_multiply::a#0
Not aliassing across scopes: signed_multiply::b#1 signed_multiply::b#0
Not aliassing across scopes: multiply::return#2 multiply::return#0
Not aliassing across scopes: signed_multiply::m#0 multiply::return#2
Not aliassing across scopes: BGCOL#1 BGCOL#0
Not aliassing across scopes: char_cursor#125 char_cursor#0
Not aliassing across scopes: line_cursor#41 char_cursor#0
Not aliassing across scopes: char_cursor#19 char_cursor#27
Not aliassing across scopes: line_cursor#23 line_cursor#27
Not aliassing across scopes: char_cursor#20 char_cursor#31
Not aliassing across scopes: line_cursor#24 line_cursor#10
Not aliassing across scopes: char_cursor#21 char_cursor#103
Not aliassing across scopes: line_cursor#25 line_cursor#15
Not aliassing across scopes: slow_multiply::a#1 slow_multiply::a#0
Not aliassing across scopes: slow_multiply::b#2 slow_multiply::b#0
Not aliassing identity: slow_multiply::b#1 slow_multiply::b#1
Not aliassing identity: slow_multiply::a#2 slow_multiply::a#2
Not aliassing across scopes: slow_signed_multiply::a#1 slow_signed_multiply::a#0
Not aliassing across scopes: slow_signed_multiply::b#3 slow_signed_multiply::b#0
Not aliassing identity: slow_signed_multiply::b#1 slow_signed_multiply::b#1
Not aliassing identity: slow_signed_multiply::a#3 slow_signed_multiply::a#3
Not aliassing identity: slow_signed_multiply::b#2 slow_signed_multiply::b#2
Not aliassing identity: slow_signed_multiply::a#4 slow_signed_multiply::a#4
Not aliassing across scopes: BGCOL#9 BGCOL#1
Not aliassing across scopes: char_cursor#148 char_cursor#125
Not aliassing across scopes: line_cursor#81 line_cursor#41
Not aliassing across scopes: multiply_tables_compare::asm_sqr#0 asm_mul_sqr1_lo#0
Not aliassing across scopes: multiply_tables_compare::kc_sqr#0 mul_sqr1_lo#0
Not aliassing across scopes: char_cursor#23 char_cursor#117
Not aliassing across scopes: char_cursor#24 char_cursor#12
Not aliassing across scopes: char_cursor#25 char_cursor#117
Not aliassing across scopes: char_cursor#26 char_cursor#12
Not aliassing across scopes: char_cursor#28 char_cursor#117
Not aliassing across scopes: line_cursor#28 line_cursor#1
Not aliassing across scopes: char_cursor#29 line_cursor#1
Not aliassing across scopes: BGCOL#23 BGCOL#1
Not aliassing across scopes: char_cursor#159 char_cursor#19
Not aliassing across scopes: line_cursor#87 line_cursor#23
Not aliassing across scopes: slow_multiply::a#0 multiply_results_compare::a#2
Not aliassing across scopes: slow_multiply::b#0 multiply_results_compare::b#2
Not aliassing across scopes: slow_multiply::return#2 slow_multiply::return#0
Not aliassing across scopes: multiply_results_compare::ms#0 slow_multiply::return#2
Not aliassing across scopes: multiply::a#1 multiply_results_compare::a#2
Not aliassing across scopes: multiply::b#1 multiply_results_compare::b#2
Not aliassing across scopes: multiply::return#3 multiply::return#0
Not aliassing across scopes: multiply_results_compare::ma#0 multiply::return#3
Not aliassing across scopes: multiply_error::a#0 multiply_results_compare::a#2
Not aliassing across scopes: multiply_error::b#0 multiply_results_compare::b#2
Not aliassing across scopes: multiply_error::ms#0 multiply_results_compare::ms#0
Not aliassing across scopes: multiply_error::ma#0 multiply_results_compare::ma#0
Not aliassing across scopes: char_cursor#30 char_cursor#100
Not aliassing across scopes: line_cursor#29 line_cursor#12
Not aliassing across scopes: char_cursor#32 char_cursor#117
Not aliassing across scopes: line_cursor#11 line_cursor#1
Not aliassing across scopes: char_cursor#33 line_cursor#1
Not aliassing across scopes: char_cursor#130 char_cursor#128
Not aliassing across scopes: multiply_error::a#1 multiply_error::a#0
Not aliassing across scopes: multiply_error::b#1 multiply_error::b#0
Not aliassing across scopes: multiply_error::ms#1 multiply_error::ms#0
Not aliassing across scopes: multiply_error::ma#1 multiply_error::ma#0
Not aliassing across scopes: line_cursor#46 line_cursor#44
Not aliassing across scopes: char_cursor#34 char_cursor#117
Not aliassing across scopes: print_byte::b#3 multiply_error::a#1
Not aliassing across scopes: char_cursor#35 char_cursor#15
Not aliassing across scopes: char_cursor#36 char_cursor#117
Not aliassing across scopes: print_byte::b#4 multiply_error::b#1
Not aliassing across scopes: char_cursor#37 char_cursor#15
Not aliassing across scopes: char_cursor#38 char_cursor#117
Not aliassing across scopes: print_word::w#3 multiply_error::ms#1
Not aliassing across scopes: char_cursor#39 char_cursor#12
Not aliassing across scopes: char_cursor#40 char_cursor#117
Not aliassing across scopes: print_word::w#4 multiply_error::ma#1
Not aliassing across scopes: char_cursor#41 char_cursor#12
Not aliassing across scopes: line_cursor#12 line_cursor#1
Not aliassing across scopes: char_cursor#100 line_cursor#1
Not aliassing across scopes: BGCOL#25 BGCOL#1
Not aliassing across scopes: char_cursor#160 char_cursor#20
Not aliassing across scopes: line_cursor#89 line_cursor#24
Not aliassing across scopes: slow_signed_multiply::a#0 signed_multiply_results_compare::a#2
Not aliassing across scopes: slow_signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: slow_signed_multiply::return#2 slow_signed_multiply::return#0
Not aliassing across scopes: signed_multiply_results_compare::ms#0 slow_signed_multiply::return#2
Not aliassing across scopes: signed_multiply::a#0 signed_multiply_results_compare::a#2
Not aliassing across scopes: signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply::return#2 signed_multiply::return#0
Not aliassing across scopes: signed_multiply_results_compare::ma#0 signed_multiply::return#2
Not aliassing across scopes: signed_multiply_error::a#0 signed_multiply_results_compare::a#2
Not aliassing across scopes: signed_multiply_error::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply_error::ms#0 signed_multiply_results_compare::ms#0
Not aliassing across scopes: signed_multiply_error::ma#0 signed_multiply_results_compare::ma#0
Not aliassing across scopes: char_cursor#102 char_cursor#114
Not aliassing across scopes: line_cursor#14 line_cursor#17
Not aliassing across scopes: char_cursor#104 char_cursor#117
Not aliassing across scopes: line_cursor#16 line_cursor#1
Not aliassing across scopes: char_cursor#105 line_cursor#1
Not aliassing across scopes: char_cursor#133 char_cursor#131
Not aliassing across scopes: signed_multiply_error::a#1 signed_multiply_error::a#0
Not aliassing across scopes: signed_multiply_error::b#1 signed_multiply_error::b#0
Not aliassing across scopes: signed_multiply_error::ms#1 signed_multiply_error::ms#0
Not aliassing across scopes: signed_multiply_error::ma#1 signed_multiply_error::ma#0
Not aliassing across scopes: line_cursor#49 line_cursor#47
Not aliassing across scopes: char_cursor#106 char_cursor#117
Not aliassing across scopes: print_sbyte::b#1 signed_multiply_error::a#1
Not aliassing across scopes: char_cursor#107 char_cursor#10
Not aliassing across scopes: char_cursor#108 char_cursor#117
Not aliassing across scopes: print_sbyte::b#2 signed_multiply_error::b#1
Not aliassing across scopes: char_cursor#109 char_cursor#10
Not aliassing across scopes: char_cursor#110 char_cursor#117
Not aliassing across scopes: print_sword::w#1 signed_multiply_error::ms#1
Not aliassing across scopes: char_cursor#111 char_cursor#5
Not aliassing across scopes: char_cursor#112 char_cursor#117
Not aliassing across scopes: print_sword::w#2 signed_multiply_error::ma#1
Not aliassing across scopes: char_cursor#113 char_cursor#5
Not aliassing across scopes: line_cursor#17 line_cursor#1
Not aliassing across scopes: char_cursor#114 line_cursor#1
Not aliassing across scopes: char_cursor#116 char_cursor#21
Not aliassing across scopes: line_cursor#19 line_cursor#25
Self Phi Eliminated (byte*) char_cursor#61
Self Phi Eliminated (byte) slow_multiply::b#1
Self Phi Eliminated (byte) slow_multiply::a#2
Self Phi Eliminated (signed byte) slow_signed_multiply::b#1
Self Phi Eliminated (signed byte) slow_signed_multiply::a#3
Self Phi Eliminated (signed byte) slow_signed_multiply::b#2
Self Phi Eliminated (signed byte) slow_signed_multiply::a#4
Self Phi Eliminated (byte*) BGCOL#10
Self Phi Eliminated (byte*) char_cursor#126
Self Phi Eliminated (byte*) line_cursor#42
Self Phi Eliminated (byte) multiply_results_compare::a#2
Self Phi Eliminated (byte*) BGCOL#11
Self Phi Eliminated (byte*) char_cursor#128
Self Phi Eliminated (byte*) line_cursor#44
Self Phi Eliminated (signed byte) signed_multiply_results_compare::a#2
Self Phi Eliminated (byte*) BGCOL#12
Self Phi Eliminated (byte*) char_cursor#131
Self Phi Eliminated (byte*) line_cursor#47
Succesful SSA optimization Pass2SelfPhiElimination
Redundant Phi (byte*) char_cursor#61 (byte*) char_cursor#118
Redundant Phi (byte*) char_cursor#5 (byte*) char_cursor#12
Redundant Phi (byte*) char_cursor#6 (byte*) char_cursor#17
Redundant Phi (byte*) char_cursor#10 (byte*) char_cursor#15
Redundant Phi (byte*) char_cursor#67 (byte*) char_cursor#17
Redundant Phi (byte*) char_cursor#11 (byte*) char_cursor#15
Redundant Phi (byte*) char_cursor#12 (byte*) char_cursor#15
Redundant Phi (byte*) char_cursor#14 (byte*) char_cursor#17
Redundant Phi (byte*) char_cursor#15 (byte*) char_cursor#17
Redundant Phi (signed byte) signed_multiply::a#1 (signed byte) signed_multiply::a#0
Redundant Phi (signed byte) signed_multiply::b#1 (signed byte) signed_multiply::b#0
Redundant Phi (byte*) BGCOL#1 (byte*) BGCOL#0
Redundant Phi (byte*) char_cursor#125 (byte*) char_cursor#0
Redundant Phi (byte*) line_cursor#41 (byte*) char_cursor#0
Redundant Phi (byte*) char_cursor#19 (byte*) char_cursor#27
Redundant Phi (byte*) line_cursor#23 (byte*) line_cursor#27
Redundant Phi (byte*) char_cursor#20 (byte*) char_cursor#31
Redundant Phi (byte*) line_cursor#24 (byte*) line_cursor#10
Redundant Phi (byte*) char_cursor#21 (byte*) char_cursor#103
Redundant Phi (byte*) line_cursor#25 (byte*) line_cursor#15
Redundant Phi (byte) slow_multiply::a#1 (byte) slow_multiply::a#0
Redundant Phi (byte) slow_multiply::b#2 (byte) slow_multiply::b#0
Redundant Phi (byte) slow_multiply::b#1 (byte) slow_multiply::b#2
Redundant Phi (byte) slow_multiply::a#2 (byte) slow_multiply::a#1
Redundant Phi (signed byte) slow_signed_multiply::a#1 (signed byte) slow_signed_multiply::a#0
Redundant Phi (signed byte) slow_signed_multiply::b#3 (signed byte) slow_signed_multiply::b#0
Redundant Phi (signed byte) slow_signed_multiply::b#1 (signed byte) slow_signed_multiply::b#3
Redundant Phi (signed byte) slow_signed_multiply::a#3 (signed byte) slow_signed_multiply::a#1
Redundant Phi (signed byte) slow_signed_multiply::b#2 (signed byte) slow_signed_multiply::b#3
Redundant Phi (signed byte) slow_signed_multiply::a#4 (signed byte) slow_signed_multiply::a#1
Redundant Phi (byte*) BGCOL#9 (byte*) BGCOL#1
Redundant Phi (byte*) char_cursor#148 (byte*) char_cursor#125
Redundant Phi (byte*) line_cursor#81 (byte*) line_cursor#41
Redundant Phi (byte*) BGCOL#10 (byte*) BGCOL#9
Redundant Phi (byte*) char_cursor#126 (byte*) char_cursor#148
Redundant Phi (byte*) line_cursor#42 (byte*) line_cursor#81
Redundant Phi (byte*) char_cursor#23 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#24 (byte*) char_cursor#12
Redundant Phi (byte*) char_cursor#25 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#26 (byte*) char_cursor#12
Redundant Phi (byte*) char_cursor#28 (byte*) char_cursor#117
Redundant Phi (byte*) line_cursor#28 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#29 (byte*) line_cursor#1
Redundant Phi (byte*) BGCOL#23 (byte*) BGCOL#1
Redundant Phi (byte*) char_cursor#159 (byte*) char_cursor#19
Redundant Phi (byte*) line_cursor#87 (byte*) line_cursor#23
Redundant Phi (byte) multiply_results_compare::a#2 (byte) multiply_results_compare::a#6
Redundant Phi (byte*) BGCOL#11 (byte*) BGCOL#18
Redundant Phi (byte*) char_cursor#128 (byte*) char_cursor#157
Redundant Phi (byte*) line_cursor#44 (byte*) line_cursor#83
Redundant Phi (byte*) char_cursor#30 (byte*) char_cursor#100
Redundant Phi (byte*) line_cursor#29 (byte*) line_cursor#12
Redundant Phi (byte*) char_cursor#32 (byte*) char_cursor#117
Redundant Phi (byte*) line_cursor#11 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#33 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#130 (byte*) char_cursor#128
Redundant Phi (byte) multiply_error::a#1 (byte) multiply_error::a#0
Redundant Phi (byte) multiply_error::b#1 (byte) multiply_error::b#0
Redundant Phi (word) multiply_error::ms#1 (word) multiply_error::ms#0
Redundant Phi (word) multiply_error::ma#1 (word) multiply_error::ma#0
Redundant Phi (byte*) line_cursor#46 (byte*) line_cursor#44
Redundant Phi (byte*) char_cursor#34 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#35 (byte*) char_cursor#15
Redundant Phi (byte*) char_cursor#36 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#37 (byte*) char_cursor#15
Redundant Phi (byte*) char_cursor#38 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#39 (byte*) char_cursor#12
Redundant Phi (byte*) char_cursor#40 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#41 (byte*) char_cursor#12
Redundant Phi (byte*) line_cursor#12 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#100 (byte*) line_cursor#1
Redundant Phi (byte*) BGCOL#25 (byte*) BGCOL#1
Redundant Phi (byte*) char_cursor#160 (byte*) char_cursor#20
Redundant Phi (byte*) line_cursor#89 (byte*) line_cursor#24
Redundant Phi (signed byte) signed_multiply_results_compare::a#2 (signed byte) signed_multiply_results_compare::a#6
Redundant Phi (byte*) BGCOL#12 (byte*) BGCOL#20
Redundant Phi (byte*) char_cursor#131 (byte*) char_cursor#158
Redundant Phi (byte*) line_cursor#47 (byte*) line_cursor#85
Redundant Phi (byte*) char_cursor#102 (byte*) char_cursor#114
Redundant Phi (byte*) line_cursor#14 (byte*) line_cursor#17
Redundant Phi (byte*) char_cursor#104 (byte*) char_cursor#117
Redundant Phi (byte*) line_cursor#16 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#105 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#133 (byte*) char_cursor#131
Redundant Phi (signed byte) signed_multiply_error::a#1 (signed byte) signed_multiply_error::a#0
Redundant Phi (signed byte) signed_multiply_error::b#1 (signed byte) signed_multiply_error::b#0
Redundant Phi (signed word) signed_multiply_error::ms#1 (signed word) signed_multiply_error::ms#0
Redundant Phi (signed word) signed_multiply_error::ma#1 (signed word) signed_multiply_error::ma#0
Redundant Phi (byte*) line_cursor#49 (byte*) line_cursor#47
Redundant Phi (byte*) char_cursor#106 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#107 (byte*) char_cursor#10
Redundant Phi (byte*) char_cursor#108 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#109 (byte*) char_cursor#10
Redundant Phi (byte*) char_cursor#110 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#111 (byte*) char_cursor#5
Redundant Phi (byte*) char_cursor#112 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#113 (byte*) char_cursor#5
Redundant Phi (byte*) line_cursor#17 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#114 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#116 (byte*) char_cursor#21
Redundant Phi (byte*) line_cursor#19 (byte*) line_cursor#25
Succesful SSA optimization Pass2RedundantPhiElimination
Redundant Phi (byte*) char_cursor#120 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#122 (byte*) char_cursor#117
Redundant Phi (byte*) char_cursor#31 (byte*) line_cursor#1
Redundant Phi (byte*) line_cursor#10 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#103 (byte*) line_cursor#1
Redundant Phi (byte*) line_cursor#15 (byte*) line_cursor#1
Succesful SSA optimization Pass2RedundantPhiElimination
Simple Condition (boolean~) print_str::$0 if(*((byte*) print_str::str#14)!=(byte) '@') goto print_str::@2
Simple Condition (boolean~) print_ln::$1 if((byte*) line_cursor#1<(byte*) char_cursor#118) goto print_ln::@1
Simple Condition (boolean~) print_sword::$1 if((signed word) print_sword::w#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1
Simple Condition (boolean~) print_sbyte::$1 if((signed byte) print_sbyte::b#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sbyte::@1
Simple Condition (boolean~) print_cls::$1 if((byte*) print_cls::sc#1!=(word/signed word/dword/signed dword~) print_cls::$0) goto print_cls::@1
Simple Condition (boolean~) init_multiply::$4 if((byte~) init_multiply::$2!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@2
Simple Condition (boolean~) init_multiply::$9 if((byte*) init_multiply::sqr1_lo#1!=(byte*~) init_multiply::$8) goto init_multiply::@1
Simple Condition (boolean~) init_multiply::$14 if((byte) init_multiply::x_255#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@4
Simple Condition (boolean~) init_multiply::$16 if((byte*) init_multiply::sqr2_lo#1!=(byte*~) init_multiply::$15) goto init_multiply::@3
Simple Condition (boolean~) signed_multiply::$4 if((signed byte) signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@1
Simple Condition (boolean~) signed_multiply::$10 if((signed byte) signed_multiply::b#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@2
Simple Condition (boolean~) slow_multiply::$1 if((byte) slow_multiply::a#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_multiply::@1
Simple Condition (boolean~) slow_multiply::$3 if((byte) slow_multiply::i#1!=(byte) slow_multiply::a#0) goto slow_multiply::@2
Simple Condition (boolean~) slow_signed_multiply::$1 if((signed byte) slow_signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@1
Simple Condition (boolean~) slow_signed_multiply::$5 if((signed byte) slow_signed_multiply::a#0<=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@4
Simple Condition (boolean~) slow_signed_multiply::$3 if((signed byte) slow_signed_multiply::i#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@2
Simple Condition (boolean~) slow_signed_multiply::$7 if((signed byte) slow_signed_multiply::j#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@5
Simple Condition (boolean~) multiply_tables_compare::$1 if(*((byte*) multiply_tables_compare::kc_sqr#2)==*((byte*) multiply_tables_compare::asm_sqr#2)) goto multiply_tables_compare::@2
Simple Condition (boolean~) multiply_tables_compare::$10 if((byte*) multiply_tables_compare::kc_sqr#1<(byte*~) multiply_tables_compare::$9) goto multiply_tables_compare::@1
Simple Condition (boolean~) multiply_results_compare::$3 if((word) multiply_results_compare::ms#0==(word) multiply_results_compare::ma#0) goto multiply_results_compare::@3
Simple Condition (boolean~) multiply_results_compare::$5 if((byte) multiply_results_compare::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@2
Simple Condition (boolean~) multiply_results_compare::$6 if((byte) multiply_results_compare::a#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@1
Simple Condition (boolean~) signed_multiply_results_compare::$5 if((signed word) signed_multiply_results_compare::ms#0==(signed word) signed_multiply_results_compare::ma#0) goto signed_multiply_results_compare::@3
Simple Condition (boolean~) signed_multiply_results_compare::$8 if((signed byte) signed_multiply_results_compare::b#1!=(signed byte/signed word/signed dword~) signed_multiply_results_compare::$7) goto signed_multiply_results_compare::@2
Simple Condition (boolean~) signed_multiply_results_compare::$10 if((signed byte) signed_multiply_results_compare::a#1!=(signed byte/signed word/signed dword~) signed_multiply_results_compare::$9) goto signed_multiply_results_compare::@1
Succesful SSA optimization Pass2ConditionalJumpSimplification
Constant (const byte*) char_cursor#0 = ((byte*))1024
Constant (const byte) print_char::ch#0 = '-'
Constant (const byte) print_char::ch#1 = '-'
Constant (const string) print_byte::hextab#0 = print_byte::$4
Constant (const byte*) print_cls::sc#0 = ((byte*))1024
Constant (const word/signed word/dword/signed dword) print_cls::$0 = 1024+1000
Constant (const byte[512]) mul_sqr1_lo#0 = { fill( 512, 0) }
Constant (const byte[512]) mul_sqr1_hi#0 = { fill( 512, 0) }
Constant (const byte[512]) mul_sqr2_lo#0 = { fill( 512, 0) }
Constant (const byte[512]) mul_sqr2_hi#0 = { fill( 512, 0) }
Constant (const word) init_multiply::sqr#0 = 0
Constant (const byte) init_multiply::x_2#0 = 0
Constant (const byte) init_multiply::c#0 = 0
Constant (const signed byte/signed word/signed dword) init_multiply::$10 = -1
Constant (const byte) init_multiply::dir#0 = 255
Constant (const byte) init_multiply::dir#1 = 1
Constant (const byte*) multiply::memA#0 = ((byte*))254
Constant (const byte*) multiply::memB#0 = ((byte*))255
Constant (const byte*) BGCOL#0 = ((byte*))53281
Constant (const word) slow_multiply::m#0 = 0
Constant (const byte) slow_multiply::i#0 = 0
Constant (const signed word) slow_signed_multiply::m#0 = 0
Constant (const signed byte) slow_signed_multiply::i#0 = 0
Constant (const signed byte) slow_signed_multiply::j#0 = 0
Constant (const byte[512]) asm_mul_sqr1_lo#0 = { fill( 512, 0) }
Constant (const byte[512]) asm_mul_sqr1_hi#0 = { fill( 512, 0) }
Constant (const byte[512]) asm_mul_sqr2_lo#0 = { fill( 512, 0) }
Constant (const byte[512]) asm_mul_sqr2_hi#0 = { fill( 512, 0) }
Constant (const byte*) init_multiply_asm::mem#0 = ((byte*))255
Constant (const word/signed word/dword/signed dword) multiply_tables_compare::$8 = 512*4
Constant (const string) print_str::str#1 = multiply_tables_compare::str
Constant (const string) print_str::str#2 = multiply_tables_compare::str1
Constant (const string) print_str::str#3 = multiply_tables_compare::str2
Constant (const byte) multiply_results_compare::a#0 = 0
Constant (const byte) multiply_results_compare::b#0 = 0
Constant (const string) print_str::str#4 = multiply_results_compare::str
Constant (const string) print_str::str#5 = multiply_error::str
Constant (const string) print_str::str#6 = multiply_error::str1
Constant (const string) print_str::str#7 = multiply_error::str2
Constant (const string) print_str::str#8 = multiply_error::str3
Constant (const signed byte) signed_multiply_results_compare::a#0 = -128
Constant (const signed byte) signed_multiply_results_compare::b#0 = -128
Constant (const signed byte/signed word/signed dword) signed_multiply_results_compare::$7 = -128
Constant (const signed byte/signed word/signed dword) signed_multiply_results_compare::$9 = -128
Constant (const string) print_str::str#9 = signed_multiply_results_compare::str
Constant (const string) print_str::str#10 = signed_multiply_error::str
Constant (const string) print_str::str#11 = signed_multiply_error::str1
Constant (const string) print_str::str#12 = signed_multiply_error::str2
Constant (const string) print_str::str#13 = signed_multiply_error::str3
Succesful SSA optimization Pass2ConstantIdentification
Constant (const byte*) init_multiply::sqr1_hi#0 = mul_sqr1_hi#0+1
Constant (const byte*) init_multiply::sqr1_lo#0 = mul_sqr1_lo#0+1
Constant (const byte*) init_multiply::$8 = mul_sqr1_lo#0+512
Constant (const byte) init_multiply::x_255#0 = ((byte))init_multiply::$10
Constant (const byte[512]) init_multiply::sqr2_hi#0 = mul_sqr2_hi#0
Constant (const byte[512]) init_multiply::sqr2_lo#0 = mul_sqr2_lo#0
Constant (const byte*) init_multiply::$15 = mul_sqr2_lo#0+511
Constant (const byte*) init_multiply::$17 = mul_sqr2_lo#0+511
Constant (const byte*) init_multiply::$18 = mul_sqr1_lo#0+256
Constant (const byte*) init_multiply::$19 = mul_sqr2_hi#0+511
Constant (const byte*) init_multiply::$20 = mul_sqr1_hi#0+256
Constant (const byte[512]) multiply_tables_compare::asm_sqr#0 = asm_mul_sqr1_lo#0
Constant (const byte[512]) multiply_tables_compare::kc_sqr#0 = mul_sqr1_lo#0
Constant (const byte*) multiply_tables_compare::$9 = mul_sqr1_lo#0+multiply_tables_compare::$8
Succesful SSA optimization Pass2ConstantIdentification
Fixing word constructor with multiply::$0 ← *(multiply::memB#0) w= *(multiply::memA#0)
Succesful SSA optimization Pass2FixWordConstructors
Eliminating Noop Cast (word) print_word::w#0 ← ((word)) (signed word) print_sword::w#4
Eliminating Noop Cast (byte) print_byte::b#0 ← ((byte)) (signed byte) print_sbyte::b#4
Eliminating Noop Cast (byte) multiply::a#0 ← ((byte)) (signed byte) signed_multiply::a#0
Eliminating Noop Cast (byte) multiply::b#0 ← ((byte)) (signed byte) signed_multiply::b#0
Eliminating Noop Cast (byte~) signed_multiply::$7 ← ((byte)) (signed byte) signed_multiply::b#0
Eliminating Noop Cast (signed word) signed_multiply::return#0 ← ((signed word)) (word) signed_multiply::m#4
Eliminating Noop Cast (byte~) signed_multiply::$13 ← ((byte)) (signed byte) signed_multiply::a#0
Eliminating Noop Cast (word) print_word::w#1 ← ((word)) (byte*) multiply_tables_compare::asm_sqr#2
Eliminating Noop Cast (word) print_word::w#2 ← ((word)) (byte*) multiply_tables_compare::kc_sqr#2
Succesful SSA optimization Pass2NopCastElimination
Culled Empty Block (label) print_ln::@2
Culled Empty Block (label) print_sword::@3
Culled Empty Block (label) print_sbyte::@3
Culled Empty Block (label) print_word::@2
Culled Empty Block (label) print_byte::@2
Culled Empty Block (label) @8
Culled Empty Block (label) init_multiply::@6
Not culling empty block because it shares successor with its predecessor. (label) init_multiply::@7
Culled Empty Block (label) @11
Culled Empty Block (label) main::@6
Culled Empty Block (label) slow_multiply::@3
Culled Empty Block (label) slow_signed_multiply::@6
Culled Empty Block (label) slow_signed_multiply::@4
Culled Empty Block (label) slow_signed_multiply::@9
Culled Empty Block (label) @14
Culled Empty Block (label) multiply_tables_compare::@9
Culled Empty Block (label) multiply_tables_compare::@11
Culled Empty Block (label) multiply_results_compare::@10
Culled Empty Block (label) multiply_results_compare::@12
Culled Empty Block (label) multiply_error::@9
Culled Empty Block (label) signed_multiply_results_compare::@10
Culled Empty Block (label) signed_multiply_results_compare::@12
Culled Empty Block (label) signed_multiply_error::@9
Culled Empty Block (label) @21
Succesful SSA optimization Pass2CullEmptyBlocks
Not culling empty block because it shares successor with its predecessor. (label) init_multiply::@7
Not aliassing across scopes: char_cursor#135 char_cursor#157
Not aliassing across scopes: line_cursor#40 line_cursor#83
Not aliassing across scopes: char_cursor#118 char_cursor#17
Not aliassing across scopes: print_sword::w#3 print_sword::w#1
Not aliassing across scopes: char_cursor#119 char_cursor#117
Not aliassing across scopes: print_sbyte::b#3 print_sbyte::b#1
Not aliassing across scopes: char_cursor#121 char_cursor#117
Not aliassing across scopes: print_word::w#5 print_word::w#3
Not aliassing across scopes: char_cursor#123 char_cursor#117
Not aliassing across scopes: print_byte::b#5 print_byte::b#3
Not aliassing across scopes: char_cursor#124 char_cursor#117
Not aliassing across scopes: print_char::ch#4 print_char::ch#2
Not aliassing across scopes: char_cursor#75 char_cursor#124
Not aliassing across scopes: multiply::a#2 multiply::a#1
Not aliassing across scopes: multiply::b#2 multiply::b#1
Not aliassing across scopes: multiply::return#2 multiply::return#0
Not aliassing across scopes: signed_multiply::m#0 multiply::return#2
Not aliassing across scopes: char_cursor#27 line_cursor#1
Not aliassing across scopes: line_cursor#27 line_cursor#1
Not aliassing across scopes: char_cursor#157 char_cursor#27
Not aliassing across scopes: line_cursor#83 line_cursor#27
Not aliassing across scopes: slow_multiply::a#0 multiply_results_compare::a#6
Not aliassing across scopes: slow_multiply::b#0 multiply_results_compare::b#2
Not aliassing across scopes: slow_multiply::return#2 slow_multiply::return#0
Not aliassing across scopes: multiply_results_compare::ms#0 slow_multiply::return#2
Not aliassing across scopes: multiply::a#1 multiply_results_compare::a#6
Not aliassing across scopes: multiply::b#1 multiply_results_compare::b#2
Not aliassing across scopes: multiply::return#3 multiply::return#0
Not aliassing across scopes: multiply_results_compare::ma#0 multiply::return#3
Not aliassing across scopes: multiply_error::a#0 multiply_results_compare::a#6
Not aliassing across scopes: multiply_error::b#0 multiply_results_compare::b#2
Not aliassing across scopes: multiply_error::ms#0 multiply_results_compare::ms#0
Not aliassing across scopes: multiply_error::ma#0 multiply_results_compare::ma#0
Not aliassing across scopes: print_byte::b#3 multiply_error::a#0
Not aliassing across scopes: print_byte::b#4 multiply_error::b#0
Not aliassing across scopes: print_word::w#3 multiply_error::ms#0
Not aliassing across scopes: print_word::w#4 multiply_error::ma#0
Not aliassing across scopes: char_cursor#158 line_cursor#1
Not aliassing across scopes: line_cursor#85 line_cursor#1
Not aliassing across scopes: slow_signed_multiply::a#0 signed_multiply_results_compare::a#6
Not aliassing across scopes: slow_signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: slow_signed_multiply::return#2 slow_signed_multiply::return#0
Not aliassing across scopes: signed_multiply_results_compare::ms#0 slow_signed_multiply::return#2
Not aliassing across scopes: signed_multiply::a#0 signed_multiply_results_compare::a#6
Not aliassing across scopes: signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply_results_compare::ma#0 signed_multiply::return#2
Not aliassing across scopes: signed_multiply_error::a#0 signed_multiply_results_compare::a#6
Not aliassing across scopes: signed_multiply_error::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply_error::ms#0 signed_multiply_results_compare::ms#0
Not aliassing across scopes: signed_multiply_error::ma#0 signed_multiply_results_compare::ma#0
Not aliassing across scopes: print_sbyte::b#1 signed_multiply_error::a#0
Not aliassing across scopes: print_sbyte::b#2 signed_multiply_error::b#0
Not aliassing across scopes: print_sword::w#1 signed_multiply_error::ms#0
Not aliassing across scopes: print_sword::w#2 signed_multiply_error::ma#0
Alias (word) multiply::return#0 = (word~) multiply::$0 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: char_cursor#135 char_cursor#157
Not aliassing across scopes: line_cursor#40 line_cursor#83
Not aliassing across scopes: char_cursor#118 char_cursor#17
Not aliassing across scopes: print_sword::w#3 print_sword::w#1
Not aliassing across scopes: char_cursor#119 char_cursor#117
Not aliassing across scopes: print_sbyte::b#3 print_sbyte::b#1
Not aliassing across scopes: char_cursor#121 char_cursor#117
Not aliassing across scopes: print_word::w#5 print_word::w#3
Not aliassing across scopes: char_cursor#123 char_cursor#117
Not aliassing across scopes: print_byte::b#5 print_byte::b#3
Not aliassing across scopes: char_cursor#124 char_cursor#117
Not aliassing across scopes: print_char::ch#4 print_char::ch#2
Not aliassing across scopes: char_cursor#75 char_cursor#124
Not aliassing across scopes: multiply::a#2 multiply::a#1
Not aliassing across scopes: multiply::b#2 multiply::b#1
Not aliassing across scopes: multiply::return#2 multiply::return#0
Not aliassing across scopes: signed_multiply::m#0 multiply::return#2
Not aliassing across scopes: char_cursor#27 line_cursor#1
Not aliassing across scopes: line_cursor#27 line_cursor#1
Not aliassing across scopes: char_cursor#157 char_cursor#27
Not aliassing across scopes: line_cursor#83 line_cursor#27
Not aliassing across scopes: slow_multiply::a#0 multiply_results_compare::a#6
Not aliassing across scopes: slow_multiply::b#0 multiply_results_compare::b#2
Not aliassing across scopes: slow_multiply::return#2 slow_multiply::return#0
Not aliassing across scopes: multiply_results_compare::ms#0 slow_multiply::return#2
Not aliassing across scopes: multiply::a#1 multiply_results_compare::a#6
Not aliassing across scopes: multiply::b#1 multiply_results_compare::b#2
Not aliassing across scopes: multiply::return#3 multiply::return#0
Not aliassing across scopes: multiply_results_compare::ma#0 multiply::return#3
Not aliassing across scopes: multiply_error::a#0 multiply_results_compare::a#6
Not aliassing across scopes: multiply_error::b#0 multiply_results_compare::b#2
Not aliassing across scopes: multiply_error::ms#0 multiply_results_compare::ms#0
Not aliassing across scopes: multiply_error::ma#0 multiply_results_compare::ma#0
Not aliassing across scopes: print_byte::b#3 multiply_error::a#0
Not aliassing across scopes: print_byte::b#4 multiply_error::b#0
Not aliassing across scopes: print_word::w#3 multiply_error::ms#0
Not aliassing across scopes: print_word::w#4 multiply_error::ma#0
Not aliassing across scopes: char_cursor#158 line_cursor#1
Not aliassing across scopes: line_cursor#85 line_cursor#1
Not aliassing across scopes: slow_signed_multiply::a#0 signed_multiply_results_compare::a#6
Not aliassing across scopes: slow_signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: slow_signed_multiply::return#2 slow_signed_multiply::return#0
Not aliassing across scopes: signed_multiply_results_compare::ms#0 slow_signed_multiply::return#2
Not aliassing across scopes: signed_multiply::a#0 signed_multiply_results_compare::a#6
Not aliassing across scopes: signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply_results_compare::ma#0 signed_multiply::return#2
Not aliassing across scopes: signed_multiply_error::a#0 signed_multiply_results_compare::a#6
Not aliassing across scopes: signed_multiply_error::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply_error::ms#0 signed_multiply_results_compare::ms#0
Not aliassing across scopes: signed_multiply_error::ma#0 signed_multiply_results_compare::ma#0
Not aliassing across scopes: print_sbyte::b#1 signed_multiply_error::a#0
Not aliassing across scopes: print_sbyte::b#2 signed_multiply_error::b#0
Not aliassing across scopes: print_sword::w#1 signed_multiply_error::ms#0
Not aliassing across scopes: print_sword::w#2 signed_multiply_error::ma#0
Self Phi Eliminated (byte*) BGCOL#18
Self Phi Eliminated (byte*) char_cursor#157
Self Phi Eliminated (byte*) line_cursor#83
Self Phi Eliminated (byte*) BGCOL#20
Self Phi Eliminated (byte*) char_cursor#158
Self Phi Eliminated (byte*) line_cursor#85
Succesful SSA optimization Pass2SelfPhiElimination
Redundant Phi (byte*) BGCOL#18 (const byte*) BGCOL#0
Redundant Phi (byte*) char_cursor#157 (byte*) char_cursor#27
Redundant Phi (byte*) line_cursor#83 (byte*) line_cursor#27
Redundant Phi (byte*) BGCOL#20 (const byte*) BGCOL#0
Redundant Phi (byte*) char_cursor#158 (byte*) line_cursor#1
Redundant Phi (byte*) line_cursor#85 (byte*) line_cursor#1
Succesful SSA optimization Pass2RedundantPhiElimination
Not culling empty block because it shares successor with its predecessor. (label) init_multiply::@7
Not aliassing across scopes: char_cursor#135 char_cursor#27
Not aliassing across scopes: line_cursor#40 line_cursor#27
Not aliassing across scopes: char_cursor#118 char_cursor#17
Not aliassing across scopes: print_sword::w#3 print_sword::w#1
Not aliassing across scopes: char_cursor#119 char_cursor#117
Not aliassing across scopes: print_sbyte::b#3 print_sbyte::b#1
Not aliassing across scopes: char_cursor#121 char_cursor#117
Not aliassing across scopes: print_word::w#5 print_word::w#3
Not aliassing across scopes: char_cursor#123 char_cursor#117
Not aliassing across scopes: print_byte::b#5 print_byte::b#3
Not aliassing across scopes: char_cursor#124 char_cursor#117
Not aliassing across scopes: print_char::ch#4 print_char::ch#2
Not aliassing across scopes: char_cursor#75 char_cursor#124
Not aliassing across scopes: multiply::a#2 multiply::a#1
Not aliassing across scopes: multiply::b#2 multiply::b#1
Not aliassing across scopes: multiply::return#2 multiply::return#0
Not aliassing across scopes: signed_multiply::m#0 multiply::return#2
Not aliassing across scopes: char_cursor#27 line_cursor#1
Not aliassing across scopes: line_cursor#27 line_cursor#1
Not aliassing across scopes: slow_multiply::a#0 multiply_results_compare::a#6
Not aliassing across scopes: slow_multiply::b#0 multiply_results_compare::b#2
Not aliassing across scopes: slow_multiply::return#2 slow_multiply::return#0
Not aliassing across scopes: multiply_results_compare::ms#0 slow_multiply::return#2
Not aliassing across scopes: multiply::a#1 multiply_results_compare::a#6
Not aliassing across scopes: multiply::b#1 multiply_results_compare::b#2
Not aliassing across scopes: multiply::return#3 multiply::return#0
Not aliassing across scopes: multiply_results_compare::ma#0 multiply::return#3
Not aliassing across scopes: multiply_error::a#0 multiply_results_compare::a#6
Not aliassing across scopes: multiply_error::b#0 multiply_results_compare::b#2
Not aliassing across scopes: multiply_error::ms#0 multiply_results_compare::ms#0
Not aliassing across scopes: multiply_error::ma#0 multiply_results_compare::ma#0
Not aliassing across scopes: print_byte::b#3 multiply_error::a#0
Not aliassing across scopes: print_byte::b#4 multiply_error::b#0
Not aliassing across scopes: print_word::w#3 multiply_error::ms#0
Not aliassing across scopes: print_word::w#4 multiply_error::ma#0
Not aliassing across scopes: slow_signed_multiply::a#0 signed_multiply_results_compare::a#6
Not aliassing across scopes: slow_signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: slow_signed_multiply::return#2 slow_signed_multiply::return#0
Not aliassing across scopes: signed_multiply_results_compare::ms#0 slow_signed_multiply::return#2
Not aliassing across scopes: signed_multiply::a#0 signed_multiply_results_compare::a#6
Not aliassing across scopes: signed_multiply::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply_results_compare::ma#0 signed_multiply::return#2
Not aliassing across scopes: signed_multiply_error::a#0 signed_multiply_results_compare::a#6
Not aliassing across scopes: signed_multiply_error::b#0 signed_multiply_results_compare::b#2
Not aliassing across scopes: signed_multiply_error::ms#0 signed_multiply_results_compare::ms#0
Not aliassing across scopes: signed_multiply_error::ma#0 signed_multiply_results_compare::ma#0
Not aliassing across scopes: print_sbyte::b#1 signed_multiply_error::a#0
Not aliassing across scopes: print_sbyte::b#2 signed_multiply_error::b#0
Not aliassing across scopes: print_sword::w#1 signed_multiply_error::ms#0
Not aliassing across scopes: print_sword::w#2 signed_multiply_error::ma#0
OPTIMIZING CONTROL FLOW GRAPH
Inlining constant with var siblings (const string) print_str::str#1
Inlining constant with var siblings (const string) print_str::str#1
Inlining constant with var siblings (const string) print_str::str#1
Inlining constant with var siblings (const string) print_str::str#2
Inlining constant with var siblings (const string) print_str::str#2
Inlining constant with var siblings (const string) print_str::str#2
Inlining constant with var siblings (const string) print_str::str#3
Inlining constant with var siblings (const string) print_str::str#3
Inlining constant with var siblings (const string) print_str::str#3
Inlining constant with var siblings (const string) print_str::str#4
Inlining constant with var siblings (const string) print_str::str#4
Inlining constant with var siblings (const string) print_str::str#4
Inlining constant with var siblings (const string) print_str::str#5
Inlining constant with var siblings (const string) print_str::str#5
Inlining constant with var siblings (const string) print_str::str#5
Inlining constant with var siblings (const string) print_str::str#6
Inlining constant with var siblings (const string) print_str::str#6
Inlining constant with var siblings (const string) print_str::str#6
Inlining constant with var siblings (const string) print_str::str#7
Inlining constant with var siblings (const string) print_str::str#7
Inlining constant with var siblings (const string) print_str::str#7
Inlining constant with var siblings (const string) print_str::str#8
Inlining constant with var siblings (const string) print_str::str#8
Inlining constant with var siblings (const string) print_str::str#8
Inlining constant with var siblings (const string) print_str::str#9
Inlining constant with var siblings (const string) print_str::str#9
Inlining constant with var siblings (const string) print_str::str#9
Inlining constant with var siblings (const string) print_str::str#10
Inlining constant with var siblings (const string) print_str::str#10
Inlining constant with var siblings (const string) print_str::str#10
Inlining constant with var siblings (const string) print_str::str#11
Inlining constant with var siblings (const string) print_str::str#11
Inlining constant with var siblings (const string) print_str::str#11
Inlining constant with var siblings (const string) print_str::str#12
Inlining constant with var siblings (const string) print_str::str#12
Inlining constant with var siblings (const string) print_str::str#12
Inlining constant with var siblings (const string) print_str::str#13
Inlining constant with var siblings (const string) print_str::str#13
Inlining constant with var siblings (const string) print_str::str#13
Inlining constant with var siblings (const byte) print_char::ch#0
Inlining constant with var siblings (const byte) print_char::ch#0
Inlining constant with var siblings (const byte) print_char::ch#0
Inlining constant with different constant siblings (const byte) print_char::ch#0
Inlining constant with var siblings (const byte) print_char::ch#1
Inlining constant with var siblings (const byte) print_char::ch#1
Inlining constant with var siblings (const byte) print_char::ch#1
Inlining constant with different constant siblings (const byte) print_char::ch#1
Inlining constant with var siblings (const byte*) print_cls::sc#0
Inlining constant with var siblings (const byte*) print_cls::sc#0
Inlining constant with var siblings (const word) init_multiply::sqr#0
Inlining constant with var siblings (const word) init_multiply::sqr#0
Inlining constant with var siblings (const word) init_multiply::sqr#0
Inlining constant with var siblings (const word) init_multiply::sqr#0
Inlining constant with var siblings (const byte) init_multiply::x_2#0
Inlining constant with var siblings (const byte) init_multiply::x_2#0
Inlining constant with var siblings (const byte) init_multiply::x_2#0
Inlining constant with var siblings (const byte) init_multiply::c#0
Inlining constant with var siblings (const byte) init_multiply::c#0
Inlining constant with var siblings (const byte) init_multiply::dir#0
Inlining constant with var siblings (const byte) init_multiply::dir#0
Inlining constant with different constant siblings (const byte) init_multiply::dir#0
Inlining constant with var siblings (const byte) init_multiply::dir#1
Inlining constant with var siblings (const byte) init_multiply::dir#1
Inlining constant with different constant siblings (const byte) init_multiply::dir#1
Inlining constant with var siblings (const byte*) init_multiply::sqr1_hi#0
Inlining constant with var siblings (const byte*) init_multiply::sqr1_hi#0
Inlining constant with var siblings (const byte*) init_multiply::sqr1_lo#0
Inlining constant with var siblings (const byte*) init_multiply::sqr1_lo#0
Inlining constant with var siblings (const byte) init_multiply::x_255#0
Inlining constant with var siblings (const byte) init_multiply::x_255#0
Inlining constant with var siblings (const byte[512]) init_multiply::sqr2_hi#0
Inlining constant with var siblings (const byte[512]) init_multiply::sqr2_hi#0
Inlining constant with var siblings (const byte[512]) init_multiply::sqr2_lo#0
Inlining constant with var siblings (const byte[512]) init_multiply::sqr2_lo#0
Inlining constant with var siblings (const word) slow_multiply::m#0
Inlining constant with var siblings (const word) slow_multiply::m#0
Inlining constant with var siblings (const byte) slow_multiply::i#0
Inlining constant with var siblings (const byte) slow_multiply::i#0
Inlining constant with var siblings (const signed word) slow_signed_multiply::m#0
Inlining constant with var siblings (const signed word) slow_signed_multiply::m#0
Inlining constant with var siblings (const signed word) slow_signed_multiply::m#0
Inlining constant with var siblings (const signed word) slow_signed_multiply::m#0
Inlining constant with var siblings (const signed byte) slow_signed_multiply::i#0
Inlining constant with var siblings (const signed byte) slow_signed_multiply::i#0
Inlining constant with var siblings (const signed byte) slow_signed_multiply::j#0
Inlining constant with var siblings (const signed byte) slow_signed_multiply::j#0
Inlining constant with var siblings (const byte[512]) multiply_tables_compare::asm_sqr#0
Inlining constant with var siblings (const byte[512]) multiply_tables_compare::asm_sqr#0
Inlining constant with var siblings (const byte[512]) multiply_tables_compare::kc_sqr#0
Inlining constant with var siblings (const byte[512]) multiply_tables_compare::kc_sqr#0
Inlining constant with var siblings (const byte) multiply_results_compare::a#0
Inlining constant with var siblings (const byte) multiply_results_compare::a#0
Inlining constant with var siblings (const byte) multiply_results_compare::b#0
Inlining constant with var siblings (const byte) multiply_results_compare::b#0
Inlining constant with var siblings (const signed byte) signed_multiply_results_compare::a#0
Inlining constant with var siblings (const signed byte) signed_multiply_results_compare::a#0
Inlining constant with var siblings (const signed byte) signed_multiply_results_compare::b#0
Inlining constant with var siblings (const signed byte) signed_multiply_results_compare::b#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Constant inlined slow_multiply::m#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined init_multiply::dir#0 = (byte/word/signed word/dword/signed dword) 255
Constant inlined init_multiply::$8 = (const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512
Constant inlined slow_signed_multiply::m#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined slow_multiply::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined init_multiply::x_255#0 = ((byte))-(byte/signed byte/word/signed word/dword/signed dword) 1
Constant inlined init_multiply::dir#1 = (byte/signed byte/word/signed word/dword/signed dword) 1
Constant inlined multiply_tables_compare::asm_sqr#0 = (const byte[512]) asm_mul_sqr1_lo#0
Constant inlined init_multiply::$20 = (const byte[512]) mul_sqr1_hi#0+(word/signed word/dword/signed dword) 256
Constant inlined slow_signed_multiply::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined init_multiply::sqr2_hi#0 = (const byte[512]) mul_sqr2_hi#0
Constant inlined init_multiply::sqr2_lo#0 = (const byte[512]) mul_sqr2_lo#0
Constant inlined multiply_tables_compare::kc_sqr#0 = (const byte[512]) mul_sqr1_lo#0
Constant inlined signed_multiply_results_compare::$7 = -(byte/word/signed word/dword/signed dword) 128
Constant inlined init_multiply::c#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined signed_multiply_results_compare::a#0 = -(byte/word/signed word/dword/signed dword) 128
Constant inlined signed_multiply_results_compare::$9 = -(byte/word/signed word/dword/signed dword) 128
Constant inlined init_multiply::sqr1_lo#0 = (const byte[512]) mul_sqr1_lo#0+(byte/signed byte/word/signed word/dword/signed dword) 1
Constant inlined init_multiply::sqr1_hi#0 = (const byte[512]) mul_sqr1_hi#0+(byte/signed byte/word/signed word/dword/signed dword) 1
Constant inlined print_str::str#9 = (const string) signed_multiply_results_compare::str
Constant inlined multiply_results_compare::a#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined print_str::str#4 = (const string) multiply_results_compare::str
Constant inlined print_str::str#3 = (const string) multiply_tables_compare::str2
Constant inlined print_str::str#2 = (const string) multiply_tables_compare::str1
Constant inlined print_str::str#1 = (const string) multiply_tables_compare::str
Constant inlined print_str::str#8 = (const string) multiply_error::str3
Constant inlined print_str::str#7 = (const string) multiply_error::str2
Constant inlined print_str::str#6 = (const string) multiply_error::str1
Constant inlined print_str::str#5 = (const string) multiply_error::str
Constant inlined print_cls::$0 = (word/signed word/dword/signed dword) 1024+(word/signed word/dword/signed dword) 1000
Constant inlined print_str::str#13 = (const string) signed_multiply_error::str3
Constant inlined print_str::str#12 = (const string) signed_multiply_error::str2
Constant inlined print_str::str#11 = (const string) signed_multiply_error::str1
Constant inlined print_str::str#10 = (const string) signed_multiply_error::str
Constant inlined init_multiply::sqr#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined multiply_tables_compare::$9 = (const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512*(byte/signed byte/word/signed word/dword/signed dword) 4
Constant inlined slow_signed_multiply::j#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined multiply_tables_compare::$8 = (word/signed word/dword/signed dword) 512*(byte/signed byte/word/signed word/dword/signed dword) 4
Constant inlined init_multiply::$18 = (const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 256
Constant inlined init_multiply::$19 = (const byte[512]) mul_sqr2_hi#0+(word/signed word/dword/signed dword) 511
Constant inlined signed_multiply_results_compare::b#0 = -(byte/word/signed word/dword/signed dword) 128
Constant inlined init_multiply::$10 = -(byte/signed byte/word/signed word/dword/signed dword) 1
Constant inlined print_cls::sc#0 = ((byte*))(word/signed word/dword/signed dword) 1024
Constant inlined init_multiply::$17 = (const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511
Constant inlined init_multiply::$15 = (const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511
Constant inlined print_char::ch#1 = (byte) '-'
Constant inlined print_char::ch#0 = (byte) '-'
Constant inlined multiply_results_compare::b#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined char_cursor#0 = ((byte*))(word/signed word/dword/signed dword) 1024
Constant inlined print_byte::$4 = (const string) print_byte::hextab#0
Constant inlined init_multiply::x_2#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Succesful SSA optimization Pass2ConstantInlining
Block Sequence Planned @begin @20 @end main main::@1 main::@2 main::@3 main::@4 main::@5 main::@return signed_multiply_results_compare signed_multiply_results_compare::@1 signed_multiply_results_compare::@2 signed_multiply_results_compare::@8 signed_multiply_results_compare::@9 signed_multiply_results_compare::@4 signed_multiply_results_compare::@return signed_multiply_results_compare::@3 signed_multiply_results_compare::@6 signed_multiply_results_compare::@7 signed_multiply_results_compare::@11 print_ln print_ln::@1 print_ln::@return print_str print_str::@1 print_str::@return print_str::@2 signed_multiply_error signed_multiply_error::@1 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@6 signed_multiply_error::@7 signed_multiply_error::@8 signed_multiply_error::@return print_sword print_sword::@2 print_sword::@4 print_sword::@1 print_sword::@return print_word print_word::@1 print_word::@return print_byte print_byte::@1 print_byte::@return print_char print_char::@return print_sbyte print_sbyte::@2 print_sbyte::@4 print_sbyte::@1 print_sbyte::@return signed_multiply signed_multiply::@6 signed_multiply::@3 signed_multiply::@1 signed_multiply::@4 signed_multiply::@2 signed_multiply::@return multiply multiply::@return slow_signed_multiply slow_signed_multiply::@2 slow_signed_multiply::@3 slow_signed_multiply::@return slow_signed_multiply::@1 slow_signed_multiply::@5 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@2 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@4 multiply_results_compare::@return multiply_results_compare::@3 multiply_results_compare::@6 multiply_results_compare::@7 multiply_results_compare::@11 multiply_error multiply_error::@1 multiply_error::@2 multiply_error::@3 multiply_error::@4 multiply_error::@5 multiply_error::@6 multiply_error::@7 multiply_error::@8 multiply_error::@return slow_multiply slow_multiply::@2 slow_multiply::@1 slow_multiply::@return multiply_tables_compare multiply_tables_compare::@1 multiply_tables_compare::@3 multiply_tables_compare::@6 multiply_tables_compare::@7 multiply_tables_compare::@8 multiply_tables_compare::@return multiply_tables_compare::@2 multiply_tables_compare::@5 multiply_tables_compare::@10 init_multiply_asm init_multiply_asm::@return init_multiply init_multiply::@1 init_multiply::@5 init_multiply::@2 init_multiply::@3 init_multiply::@7 init_multiply::@4 init_multiply::@8 init_multiply::@return print_cls print_cls::@1 print_cls::@return 
Added new block during phi lifting signed_multiply_results_compare::@13(between signed_multiply_results_compare::@6 and signed_multiply_results_compare::@1)
Added new block during phi lifting signed_multiply_results_compare::@14(between signed_multiply_results_compare::@3 and signed_multiply_results_compare::@2)
Added new block during phi lifting print_ln::@3(between print_ln::@1 and print_ln::@1)
Added new block during phi lifting print_sword::@5(between print_sword and print_sword::@1)
Added new block during phi lifting print_sbyte::@5(between print_sbyte and print_sbyte::@1)
Added new block during phi lifting signed_multiply::@7(between signed_multiply::@6 and signed_multiply::@1)
Added new block during phi lifting signed_multiply::@8(between signed_multiply::@1 and signed_multiply::@2)
Added new block during phi lifting slow_signed_multiply::@12(between slow_signed_multiply::@2 and slow_signed_multiply::@2)
Added new block during phi lifting slow_signed_multiply::@13(between slow_signed_multiply::@2 and slow_signed_multiply::@3)
Added new block during phi lifting slow_signed_multiply::@14(between slow_signed_multiply::@5 and slow_signed_multiply::@3)
Added new block during phi lifting slow_signed_multiply::@15(between slow_signed_multiply::@5 and slow_signed_multiply::@5)
Added new block during phi lifting multiply_results_compare::@13(between multiply_results_compare::@6 and multiply_results_compare::@1)
Added new block during phi lifting multiply_results_compare::@14(between multiply_results_compare::@3 and multiply_results_compare::@2)
Added new block during phi lifting slow_multiply::@6(between slow_multiply::@2 and slow_multiply::@2)
Added new block during phi lifting slow_multiply::@7(between slow_multiply::@2 and slow_multiply::@1)
Added new block during phi lifting multiply_tables_compare::@12(between multiply_tables_compare::@2 and multiply_tables_compare::@1)
Added new block during phi lifting init_multiply::@9(between init_multiply::@2 and init_multiply::@1)
Added new block during phi lifting init_multiply::@10(between init_multiply::@1 and init_multiply::@2)
Added new block during phi lifting init_multiply::@11(between init_multiply::@4 and init_multiply::@3)
Added new block during phi lifting init_multiply::@12(between init_multiply::@3 and init_multiply::@4)
Added new block during phi lifting print_cls::@3(between print_cls::@1 and print_cls::@1)
Block Sequence Planned @begin @20 @end main main::@1 main::@2 main::@3 main::@4 main::@5 main::@return signed_multiply_results_compare signed_multiply_results_compare::@1 signed_multiply_results_compare::@2 signed_multiply_results_compare::@8 signed_multiply_results_compare::@9 signed_multiply_results_compare::@4 signed_multiply_results_compare::@return signed_multiply_results_compare::@3 signed_multiply_results_compare::@6 signed_multiply_results_compare::@7 signed_multiply_results_compare::@11 signed_multiply_results_compare::@13 signed_multiply_results_compare::@14 print_ln print_ln::@1 print_ln::@return print_ln::@3 print_str print_str::@1 print_str::@return print_str::@2 signed_multiply_error signed_multiply_error::@1 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@6 signed_multiply_error::@7 signed_multiply_error::@8 signed_multiply_error::@return print_sword print_sword::@2 print_sword::@4 print_sword::@1 print_sword::@return print_sword::@5 print_word print_word::@1 print_word::@return print_byte print_byte::@1 print_byte::@return print_char print_char::@return print_sbyte print_sbyte::@2 print_sbyte::@4 print_sbyte::@1 print_sbyte::@return print_sbyte::@5 signed_multiply signed_multiply::@6 signed_multiply::@3 signed_multiply::@1 signed_multiply::@4 signed_multiply::@2 signed_multiply::@return signed_multiply::@8 signed_multiply::@7 multiply multiply::@return slow_signed_multiply slow_signed_multiply::@2 slow_signed_multiply::@13 slow_signed_multiply::@3 slow_signed_multiply::@return slow_signed_multiply::@12 slow_signed_multiply::@1 slow_signed_multiply::@5 slow_signed_multiply::@14 slow_signed_multiply::@15 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@2 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@4 multiply_results_compare::@return multiply_results_compare::@3 multiply_results_compare::@6 multiply_results_compare::@7 multiply_results_compare::@11 multiply_results_compare::@13 multiply_results_compare::@14 multiply_error multiply_error::@1 multiply_error::@2 multiply_error::@3 multiply_error::@4 multiply_error::@5 multiply_error::@6 multiply_error::@7 multiply_error::@8 multiply_error::@return slow_multiply slow_multiply::@2 slow_multiply::@7 slow_multiply::@1 slow_multiply::@return slow_multiply::@6 multiply_tables_compare multiply_tables_compare::@1 multiply_tables_compare::@3 multiply_tables_compare::@6 multiply_tables_compare::@7 multiply_tables_compare::@8 multiply_tables_compare::@return multiply_tables_compare::@2 multiply_tables_compare::@5 multiply_tables_compare::@10 multiply_tables_compare::@12 init_multiply_asm init_multiply_asm::@return init_multiply init_multiply::@1 init_multiply::@5 init_multiply::@2 init_multiply::@3 init_multiply::@7 init_multiply::@4 init_multiply::@8 init_multiply::@return init_multiply::@11 init_multiply::@12 init_multiply::@9 init_multiply::@10 print_cls print_cls::@1 print_cls::@return print_cls::@3 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @20
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of signed_multiply_results_compare
Adding NOP phi() at start of multiply_results_compare
Adding NOP phi() at start of multiply_tables_compare
Adding NOP phi() at start of multiply_tables_compare::@5
Adding NOP phi() at start of init_multiply
Adding NOP phi() at start of init_multiply::@7
Adding NOP phi() at start of print_cls
CALL GRAPH
Calls in [] to main:2 
Calls in [main] to print_cls:5 init_multiply:7 init_multiply_asm:9 multiply_tables_compare:11 multiply_results_compare:13 signed_multiply_results_compare:15 
Calls in [signed_multiply_results_compare] to slow_signed_multiply:22 signed_multiply:27 signed_multiply_error:36 print_str:43 print_ln:46 
Calls in [signed_multiply_error] to print_str:68 print_sbyte:71 print_str:73 print_sbyte:76 print_str:78 print_sword:81 print_str:83 print_sword:86 print_ln:89 
Calls in [print_sword] to print_char:94 print_word:101 
Calls in [print_word] to print_byte:109 print_byte:113 
Calls in [print_byte] to print_char:120 print_char:125 
Calls in [print_sbyte] to print_char:134 print_byte:141 
Calls in [signed_multiply] to multiply:147 
Calls in [multiply_results_compare] to slow_multiply:194 multiply:201 multiply_error:210 print_str:217 print_ln:220 
Calls in [multiply_error] to print_str:224 print_byte:228 print_str:230 print_byte:234 print_str:236 print_word:240 print_str:242 print_word:246 print_ln:249 
Calls in [multiply_tables_compare] to print_str:265 print_word:268 print_str:270 print_word:273 print_str:281 print_ln:283 

Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Created 52 initial phi equivalence classes
Not coalescing [42] char_cursor#176 ← line_cursor#1
Coalesced [44] line_cursor#100 ← line_cursor#1
Coalesced [45] char_cursor#165 ← char_cursor#117
Coalesced [47] signed_multiply_results_compare::a#9 ← signed_multiply_results_compare::a#1
Coalesced [48] signed_multiply_results_compare::b#7 ← signed_multiply_results_compare::b#1
Coalesced [50] line_cursor#101 ← line_cursor#40
Coalesced (already) [55] line_cursor#102 ← line_cursor#1
Coalesced [57] print_str::str#17 ← print_str::str#16
Coalesced [58] char_cursor#177 ← char_cursor#135
Coalesced [65] print_str::str#18 ← print_str::str#0
Coalesced [66] char_cursor#178 ← char_cursor#1
Not coalescing [67] char_cursor#172 ← line_cursor#1
Coalesced [70] print_sbyte::b#7 ← print_sbyte::b#1
Coalesced [72] char_cursor#173 ← char_cursor#17
Coalesced [75] print_sbyte::b#8 ← print_sbyte::b#2
Coalesced (already) [77] char_cursor#174 ← char_cursor#17
Coalesced [80] print_sword::w#7 ← print_sword::w#1
Coalesced (already) [82] char_cursor#175 ← char_cursor#17
Coalesced [85] print_sword::w#8 ← print_sword::w#2
Coalesced (already) [87] line_cursor#99 ← line_cursor#1
Coalesced (already) [88] char_cursor#164 ← char_cursor#17
Coalesced [93] char_cursor#194 ← char_cursor#117
Coalesced [96] print_sword::w#10 ← print_sword::w#0
Coalesced [97] char_cursor#180 ← char_cursor#17
Coalesced [100] char_cursor#185 ← char_cursor#119
Coalesced [103] print_sword::w#9 ← print_sword::w#3
Coalesced (already) [104] char_cursor#179 ← char_cursor#117
Coalesced [107] print_byte::b#10 ← print_byte::b#1
Coalesced [108] char_cursor#189 ← char_cursor#123
Coalesced [111] print_byte::b#11 ← print_byte::b#2
Coalesced (already) [112] char_cursor#190 ← char_cursor#17
Coalesced [118] print_char::ch#5 ← print_char::ch#2
Coalesced (already) [119] char_cursor#191 ← char_cursor#124
Coalesced [123] print_char::ch#6 ← print_char::ch#3
Coalesced (already) [124] char_cursor#192 ← char_cursor#17
Coalesced (already) [133] char_cursor#193 ← char_cursor#117
Coalesced [136] print_sbyte::b#10 ← print_sbyte::b#0
Coalesced [137] char_cursor#196 ← char_cursor#17
Coalesced (already) [140] char_cursor#188 ← char_cursor#121
Coalesced [143] print_sbyte::b#9 ← print_sbyte::b#3
Coalesced (already) [144] char_cursor#195 ← char_cursor#117
Coalesced [154] signed_multiply::m#7 ← signed_multiply::m#1
Coalesced [160] signed_multiply::m#10 ← signed_multiply::m#2
Coalesced [163] signed_multiply::m#9 ← signed_multiply::m#5
Coalesced [164] signed_multiply::m#8 ← signed_multiply::m#0
Coalesced [176] slow_signed_multiply::return#5 ← slow_signed_multiply::m#1
Coalesced [179] slow_signed_multiply::m#10 ← slow_signed_multiply::m#1
Coalesced [180] slow_signed_multiply::i#3 ← slow_signed_multiply::i#1
Coalesced [186] slow_signed_multiply::return#6 ← slow_signed_multiply::m#2
Coalesced [187] slow_signed_multiply::m#11 ← slow_signed_multiply::m#2
Coalesced [188] slow_signed_multiply::j#3 ← slow_signed_multiply::j#1
Coalesced [199] multiply::a#3 ← multiply::a#1
Coalesced [200] multiply::b#3 ← multiply::b#1
Coalesced [216] char_cursor#170 ← char_cursor#27
Coalesced [218] line_cursor#98 ← line_cursor#27
Coalesced (already) [219] char_cursor#162 ← char_cursor#117
Coalesced [221] multiply_results_compare::a#9 ← multiply_results_compare::a#1
Coalesced [222] multiply_results_compare::b#7 ← multiply_results_compare::b#1
Coalesced (already) [223] char_cursor#166 ← char_cursor#27
Coalesced [226] print_byte::b#7 ← print_byte::b#3
Coalesced (already) [227] char_cursor#186 ← char_cursor#117
Coalesced (already) [229] char_cursor#167 ← char_cursor#17
Coalesced [232] print_byte::b#8 ← print_byte::b#4
Coalesced (already) [233] char_cursor#187 ← char_cursor#117
Coalesced (already) [235] char_cursor#168 ← char_cursor#17
Coalesced [238] print_word::w#7 ← print_word::w#3
Coalesced (already) [239] char_cursor#181 ← char_cursor#117
Coalesced (already) [241] char_cursor#169 ← char_cursor#17
Coalesced [244] print_word::w#8 ← print_word::w#4
Coalesced (already) [245] char_cursor#182 ← char_cursor#117
Coalesced (already) [247] line_cursor#97 ← line_cursor#27
Coalesced (already) [248] char_cursor#161 ← char_cursor#17
Coalesced [256] slow_multiply::return#5 ← slow_multiply::m#1
Coalesced [259] slow_multiply::m#5 ← slow_multiply::m#1
Coalesced [260] slow_multiply::i#3 ← slow_multiply::i#1
Coalesced (already) [267] char_cursor#183 ← char_cursor#117
Coalesced (already) [269] char_cursor#171 ← char_cursor#17
Coalesced (already) [272] char_cursor#184 ← char_cursor#117
Coalesced (already) [274] char_cursor#198 ← char_cursor#17
Coalesced (already) [282] char_cursor#163 ← char_cursor#117
Not coalescing [284] char_cursor#197 ← line_cursor#1
Coalesced (already) [285] line_cursor#103 ← line_cursor#1
Coalesced [286] multiply_tables_compare::kc_sqr#8 ← multiply_tables_compare::kc_sqr#1
Coalesced [287] multiply_tables_compare::asm_sqr#6 ← multiply_tables_compare::asm_sqr#1
Coalesced [301] init_multiply::sqr#8 ← init_multiply::sqr#2
Coalesced [302] init_multiply::x_2#7 ← init_multiply::x_2#1
Coalesced [325] init_multiply::x_255#5 ← init_multiply::x_255#1
Coalesced [326] init_multiply::sqr2_lo#5 ← init_multiply::sqr2_lo#1
Coalesced [327] init_multiply::sqr2_hi#5 ← init_multiply::sqr2_hi#1
Coalesced [328] init_multiply::dir#4 ← init_multiply::dir#3
Coalesced (already) [329] init_multiply::dir#5 ← init_multiply::dir#2
Coalesced [330] init_multiply::c#5 ← init_multiply::c#1
Coalesced [331] init_multiply::sqr#6 ← init_multiply::sqr#1
Coalesced [332] init_multiply::sqr1_lo#5 ← init_multiply::sqr1_lo#1
Coalesced [333] init_multiply::sqr1_hi#5 ← init_multiply::sqr1_hi#1
Coalesced [334] init_multiply::x_2#5 ← init_multiply::x_2#2
Coalesced [335] init_multiply::sqr#7 ← init_multiply::sqr#4
Coalesced (already) [336] init_multiply::x_2#6 ← init_multiply::x_2#3
Coalesced [343] print_cls::sc#3 ← print_cls::sc#1
Coalesced down to 32 phi equivalence classes
Culled Empty Block (label) signed_multiply_results_compare::@13
Culled Empty Block (label) signed_multiply_results_compare::@14
Culled Empty Block (label) print_ln::@3
Culled Empty Block (label) print_sword::@5
Culled Empty Block (label) print_sbyte::@5
Culled Empty Block (label) signed_multiply::@8
Culled Empty Block (label) signed_multiply::@7
Culled Empty Block (label) slow_signed_multiply::@13
Culled Empty Block (label) slow_signed_multiply::@12
Culled Empty Block (label) slow_signed_multiply::@14
Culled Empty Block (label) slow_signed_multiply::@15
Culled Empty Block (label) multiply_results_compare::@13
Culled Empty Block (label) multiply_results_compare::@14
Culled Empty Block (label) slow_multiply::@7
Culled Empty Block (label) slow_multiply::@6
Culled Empty Block (label) multiply_tables_compare::@12
Culled Empty Block (label) init_multiply::@7
Culled Empty Block (label) init_multiply::@11
Not culling empty block because it shares successor with its predecessor. (label) init_multiply::@12
Culled Empty Block (label) init_multiply::@9
Culled Empty Block (label) init_multiply::@10
Culled Empty Block (label) print_cls::@3
Block Sequence Planned @begin @20 @end main main::@1 main::@2 main::@3 main::@4 main::@5 main::@return signed_multiply_results_compare signed_multiply_results_compare::@1 signed_multiply_results_compare::@2 signed_multiply_results_compare::@8 signed_multiply_results_compare::@9 signed_multiply_results_compare::@4 signed_multiply_results_compare::@return signed_multiply_results_compare::@3 signed_multiply_results_compare::@6 signed_multiply_results_compare::@7 signed_multiply_results_compare::@11 print_ln print_ln::@1 print_ln::@return print_str print_str::@1 print_str::@return print_str::@2 signed_multiply_error signed_multiply_error::@1 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@6 signed_multiply_error::@7 signed_multiply_error::@8 signed_multiply_error::@return print_sword print_sword::@2 print_sword::@4 print_sword::@1 print_sword::@return print_word print_word::@1 print_word::@return print_byte print_byte::@1 print_byte::@return print_char print_char::@return print_sbyte print_sbyte::@2 print_sbyte::@4 print_sbyte::@1 print_sbyte::@return signed_multiply signed_multiply::@6 signed_multiply::@3 signed_multiply::@1 signed_multiply::@4 signed_multiply::@2 signed_multiply::@return multiply multiply::@return slow_signed_multiply slow_signed_multiply::@2 slow_signed_multiply::@3 slow_signed_multiply::@return slow_signed_multiply::@1 slow_signed_multiply::@5 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@2 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@4 multiply_results_compare::@return multiply_results_compare::@3 multiply_results_compare::@6 multiply_results_compare::@7 multiply_results_compare::@11 multiply_error multiply_error::@1 multiply_error::@2 multiply_error::@3 multiply_error::@4 multiply_error::@5 multiply_error::@6 multiply_error::@7 multiply_error::@8 multiply_error::@return slow_multiply slow_multiply::@2 slow_multiply::@1 slow_multiply::@return multiply_tables_compare multiply_tables_compare::@1 multiply_tables_compare::@3 multiply_tables_compare::@6 multiply_tables_compare::@7 multiply_tables_compare::@8 multiply_tables_compare::@return multiply_tables_compare::@2 multiply_tables_compare::@5 multiply_tables_compare::@10 init_multiply_asm init_multiply_asm::@return init_multiply init_multiply::@1 init_multiply::@5 init_multiply::@2 init_multiply::@3 init_multiply::@4 init_multiply::@8 init_multiply::@return init_multiply::@12 print_cls print_cls::@1 print_cls::@return 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @20
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of signed_multiply_results_compare
Adding NOP phi() at start of signed_multiply_results_compare::@11
Adding NOP phi() at start of signed_multiply_error::@2
Adding NOP phi() at start of signed_multiply_error::@4
Adding NOP phi() at start of signed_multiply_error::@6
Adding NOP phi() at start of signed_multiply_error::@8
Adding NOP phi() at start of print_sword::@2
Adding NOP phi() at start of print_sbyte::@2
Adding NOP phi() at start of multiply_results_compare
Adding NOP phi() at start of multiply_results_compare::@7
Adding NOP phi() at start of multiply_results_compare::@11
Adding NOP phi() at start of multiply_error
Adding NOP phi() at start of multiply_error::@2
Adding NOP phi() at start of multiply_error::@4
Adding NOP phi() at start of multiply_error::@6
Adding NOP phi() at start of multiply_error::@8
Adding NOP phi() at start of multiply_tables_compare
Adding NOP phi() at start of multiply_tables_compare::@7
Adding NOP phi() at start of multiply_tables_compare::@5
Adding NOP phi() at start of multiply_tables_compare::@10
Adding NOP phi() at start of init_multiply
Adding NOP phi() at start of init_multiply::@12
Adding NOP phi() at start of print_cls
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...

FINAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@20
@20: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @20
  [3] phi() [ ] ( )
main: scope:[main]  from @20
  [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2 [ ] )
  [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi() [ ] ( main:2 [ ] )
  [7] call init_multiply param-assignment [ ] ( main:2 [ ] )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi() [ ] ( main:2 [ ] )
  [9] call init_multiply_asm param-assignment [ ] ( main:2 [ ] )
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] phi() [ ] ( main:2 [ ] )
  [11] call multiply_tables_compare param-assignment [ line_cursor#27 char_cursor#27 ] ( main:2 [ line_cursor#27 char_cursor#27 ] )
  to:main::@4
main::@4: scope:[main]  from main::@3
  [12] phi() [ line_cursor#27 char_cursor#27 ] ( main:2 [ line_cursor#27 char_cursor#27 ] )
  [13] call multiply_results_compare param-assignment [ line_cursor#1 ] ( main:2 [ line_cursor#1 ] )
  to:main::@5
main::@5: scope:[main]  from main::@4
  [14] phi() [ line_cursor#1 ] ( main:2 [ line_cursor#1 ] )
  [15] call signed_multiply_results_compare param-assignment [ ] ( main:2 [ ] )
  to:main::@return
main::@return: scope:[main]  from main::@5
  [16] return  [ ] ( main:2 [ ] )
  to:@return
signed_multiply_results_compare: scope:[signed_multiply_results_compare]  from main::@5
  [17] phi() [ line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ line_cursor#1 ] )
  to:signed_multiply_results_compare::@1
signed_multiply_results_compare::@1: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare signed_multiply_results_compare::@6
  [18] (signed byte) signed_multiply_results_compare::a#6 ← phi( signed_multiply_results_compare/-(byte/word/signed word/dword/signed dword) 128 signed_multiply_results_compare::@6/(signed byte) signed_multiply_results_compare::a#1 ) [ signed_multiply_results_compare::a#6 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 line_cursor#1 ] )
  to:signed_multiply_results_compare::@2
signed_multiply_results_compare::@2: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@1 signed_multiply_results_compare::@3
  [19] (signed byte) signed_multiply_results_compare::b#2 ← phi( signed_multiply_results_compare::@1/-(byte/word/signed word/dword/signed dword) 128 signed_multiply_results_compare::@3/(signed byte) signed_multiply_results_compare::b#1 ) [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 ] )
  [20] (signed byte) slow_signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 line_cursor#1 ] )
  [21] (signed byte) slow_signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 slow_signed_multiply::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 slow_signed_multiply::b#0 line_cursor#1 ] )
  [22] call slow_signed_multiply param-assignment [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#0 line_cursor#1 ] )
  [23] (signed word) slow_signed_multiply::return#2 ← (signed word) slow_signed_multiply::return#0 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] )
  to:signed_multiply_results_compare::@8
signed_multiply_results_compare::@8: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@2
  [24] (signed word) signed_multiply_results_compare::ms#0 ← (signed word) slow_signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] )
  [25] (signed byte) signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 line_cursor#1 ] )
  [26] (signed byte) signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 signed_multiply::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 signed_multiply::b#0 line_cursor#1 ] )
  [27] call signed_multiply param-assignment [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::m#4 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::m#4 line_cursor#1 ] )
  [28] (signed word) signed_multiply::return#2 ← (signed word)(word) signed_multiply::m#4 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] )
  to:signed_multiply_results_compare::@9
signed_multiply_results_compare::@9: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@8
  [29] (signed word) signed_multiply_results_compare::ma#0 ← (signed word) signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] )
  [30] if((signed word) signed_multiply_results_compare::ms#0==(signed word) signed_multiply_results_compare::ma#0) goto signed_multiply_results_compare::@3 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] )
  to:signed_multiply_results_compare::@4
signed_multiply_results_compare::@4: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@9
  [31] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] )
  [32] (signed byte) signed_multiply_error::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 line_cursor#1 ] )
  [33] (signed byte) signed_multiply_error::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 line_cursor#1 ] )
  [34] (signed word) signed_multiply_error::ms#0 ← (signed word) signed_multiply_results_compare::ms#0 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] )
  [35] (signed word) signed_multiply_error::ma#0 ← (signed word) signed_multiply_results_compare::ma#0 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] )
  [36] call signed_multiply_error param-assignment [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
  to:signed_multiply_results_compare::@return
signed_multiply_results_compare::@return: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@11 signed_multiply_results_compare::@4
  [37] return  [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
  to:@return
signed_multiply_results_compare::@3: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@9
  [38] (signed byte) signed_multiply_results_compare::b#1 ← ++ (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] )
  [39] if((signed byte) signed_multiply_results_compare::b#1!=-(byte/word/signed word/dword/signed dword) 128) goto signed_multiply_results_compare::@2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] )
  to:signed_multiply_results_compare::@6
signed_multiply_results_compare::@6: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@3
  [40] (signed byte) signed_multiply_results_compare::a#1 ← ++ (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#1 line_cursor#1 ] )
  [41] if((signed byte) signed_multiply_results_compare::a#1!=-(byte/word/signed word/dword/signed dword) 128) goto signed_multiply_results_compare::@1 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#1 line_cursor#1 ] )
  to:signed_multiply_results_compare::@7
signed_multiply_results_compare::@7: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@6
  [42] (byte*~) char_cursor#176 ← (byte*) line_cursor#1 [ char_cursor#176 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ char_cursor#176 line_cursor#1 ] )
  [43] call print_str param-assignment [ line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15 [ line_cursor#1 char_cursor#117 ] )
  to:signed_multiply_results_compare::@11
signed_multiply_results_compare::@11: scope:[signed_multiply_results_compare]  from signed_multiply_results_compare::@7
  [44] phi() [ line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15 [ line_cursor#1 char_cursor#117 ] )
  [45] call print_ln param-assignment [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
  to:signed_multiply_results_compare::@return
print_ln: scope:[print_ln]  from multiply_error::@8 multiply_results_compare::@11 multiply_tables_compare::@10 signed_multiply_error::@8 signed_multiply_results_compare::@11
  [46] (byte*) char_cursor#118 ← phi( multiply_error::@8/(byte*) char_cursor#17 multiply_results_compare::@11/(byte*) char_cursor#117 multiply_tables_compare::@10/(byte*) char_cursor#117 signed_multiply_error::@8/(byte*) char_cursor#17 signed_multiply_results_compare::@11/(byte*) char_cursor#117 ) [ line_cursor#40 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#40 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#40 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#40 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#40 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#40 char_cursor#118 ] )
  [46] (byte*) line_cursor#40 ← phi( multiply_error::@8/(byte*) line_cursor#27 multiply_results_compare::@11/(byte*) line_cursor#27 multiply_tables_compare::@10/((byte*))(word/signed word/dword/signed dword) 1024 signed_multiply_error::@8/(byte*) line_cursor#1 signed_multiply_results_compare::@11/(byte*) line_cursor#1 ) [ line_cursor#40 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#40 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#40 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#40 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#40 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#40 char_cursor#118 ] )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [47] (byte*) line_cursor#20 ← phi( print_ln/(byte*) line_cursor#40 print_ln::@1/(byte*) line_cursor#1 ) [ char_cursor#118 line_cursor#20 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ char_cursor#118 line_cursor#20 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ char_cursor#118 line_cursor#20 ] main:2::multiply_results_compare:13::print_ln:175 [ char_cursor#118 line_cursor#20 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ char_cursor#118 line_cursor#20 ] main:2::multiply_tables_compare:11::print_ln:221 [ char_cursor#118 line_cursor#20 ] )
  [48] (byte*) line_cursor#1 ← (byte*) line_cursor#20 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] )
  [49] if((byte*) line_cursor#1<(byte*) char_cursor#118) goto print_ln::@1 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] )
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [50] return  [ line_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 ] )
  to:@return
print_str: scope:[print_str]  from multiply_error multiply_error::@2 multiply_error::@4 multiply_error::@6 multiply_results_compare::@7 multiply_tables_compare::@3 multiply_tables_compare::@5 multiply_tables_compare::@7 signed_multiply_error signed_multiply_error::@2 signed_multiply_error::@4 signed_multiply_error::@6 signed_multiply_results_compare::@7
  [51] (byte*) char_cursor#135 ← phi( multiply_error/(byte*) char_cursor#27 multiply_error::@2/(byte*) char_cursor#17 multiply_error::@4/(byte*) char_cursor#17 multiply_error::@6/(byte*) char_cursor#17 multiply_results_compare::@7/(byte*) char_cursor#27 multiply_tables_compare::@3/((byte*))(word/signed word/dword/signed dword) 1024 multiply_tables_compare::@5/((byte*))(word/signed word/dword/signed dword) 1024 multiply_tables_compare::@7/(byte*) char_cursor#17 signed_multiply_error/(byte*~) char_cursor#172 signed_multiply_error::@2/(byte*) char_cursor#17 signed_multiply_error::@4/(byte*) char_cursor#17 signed_multiply_error::@6/(byte*) char_cursor#17 signed_multiply_results_compare::@7/(byte*~) char_cursor#176 ) [ print_str::str#16 char_cursor#135 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#16 char_cursor#135 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#16 char_cursor#135 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#16 char_cursor#135 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#16 char_cursor#135 ] )
  [51] (byte*) print_str::str#16 ← phi( multiply_error/(const string) multiply_error::str multiply_error::@2/(const string) multiply_error::str1 multiply_error::@4/(const string) multiply_error::str2 multiply_error::@6/(const string) multiply_error::str3 multiply_results_compare::@7/(const string) multiply_results_compare::str multiply_tables_compare::@3/(const string) multiply_tables_compare::str multiply_tables_compare::@5/(const string) multiply_tables_compare::str2 multiply_tables_compare::@7/(const string) multiply_tables_compare::str1 signed_multiply_error/(const string) signed_multiply_error::str signed_multiply_error::@2/(const string) signed_multiply_error::str1 signed_multiply_error::@4/(const string) signed_multiply_error::str2 signed_multiply_error::@6/(const string) signed_multiply_error::str3 signed_multiply_results_compare::@7/(const string) signed_multiply_results_compare::str ) [ print_str::str#16 char_cursor#135 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#16 char_cursor#135 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#16 char_cursor#135 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#16 char_cursor#135 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#16 char_cursor#135 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#16 char_cursor#135 ] )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [52] (byte*) char_cursor#117 ← phi( print_str/(byte*) char_cursor#135 print_str::@2/(byte*) char_cursor#1 ) [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] )
  [52] (byte*) print_str::str#14 ← phi( print_str/(byte*) print_str::str#16 print_str::@2/(byte*) print_str::str#0 ) [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] )
  [53] if(*((byte*) print_str::str#14)!=(byte) '@') goto print_str::@2 [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] )
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [54] return  [ char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 ] )
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [55] *((byte*) char_cursor#117) ← *((byte*) print_str::str#14) [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] )
  [56] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#117 [ print_str::str#14 char_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#14 char_cursor#1 ] )
  [57] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#14 [ print_str::str#0 char_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#0 char_cursor#1 ] )
  to:print_str::@1
signed_multiply_error: scope:[signed_multiply_error]  from signed_multiply_results_compare::@4
  [58] (byte*~) char_cursor#172 ← (byte*) line_cursor#1 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] )
  [59] call print_str param-assignment [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  to:signed_multiply_error::@1
signed_multiply_error::@1: scope:[signed_multiply_error]  from signed_multiply_error
  [60] (signed byte) print_sbyte::b#1 ← (signed byte) signed_multiply_error::a#0 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#1 ] )
  [61] call print_sbyte param-assignment [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  to:signed_multiply_error::@2
signed_multiply_error::@2: scope:[signed_multiply_error]  from signed_multiply_error::@1
  [62] phi() [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  [63] call print_str param-assignment [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  to:signed_multiply_error::@3
signed_multiply_error::@3: scope:[signed_multiply_error]  from signed_multiply_error::@2
  [64] (signed byte) print_sbyte::b#2 ← (signed byte) signed_multiply_error::b#0 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#2 ] )
  [65] call print_sbyte param-assignment [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  to:signed_multiply_error::@4
signed_multiply_error::@4: scope:[signed_multiply_error]  from signed_multiply_error::@3
  [66] phi() [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  [67] call print_str param-assignment [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  to:signed_multiply_error::@5
signed_multiply_error::@5: scope:[signed_multiply_error]  from signed_multiply_error::@4
  [68] (signed word) print_sword::w#1 ← (signed word) signed_multiply_error::ms#0 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] )
  [69] call print_sword param-assignment [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  to:signed_multiply_error::@6
signed_multiply_error::@6: scope:[signed_multiply_error]  from signed_multiply_error::@5
  [70] phi() [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  [71] call print_str param-assignment [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  to:signed_multiply_error::@7
signed_multiply_error::@7: scope:[signed_multiply_error]  from signed_multiply_error::@6
  [72] (signed word) print_sword::w#2 ← (signed word) signed_multiply_error::ma#0 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] )
  [73] call print_sword param-assignment [ line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#17 ] )
  to:signed_multiply_error::@8
signed_multiply_error::@8: scope:[signed_multiply_error]  from signed_multiply_error::@7
  [74] phi() [ line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#17 ] )
  [75] call print_ln param-assignment [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ ] )
  to:signed_multiply_error::@return
signed_multiply_error::@return: scope:[signed_multiply_error]  from signed_multiply_error::@8
  [76] return  [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ ] )
  to:@return
print_sword: scope:[print_sword]  from signed_multiply_error::@5 signed_multiply_error::@7
  [77] (signed word) print_sword::w#3 ← phi( signed_multiply_error::@5/(signed word) print_sword::w#1 signed_multiply_error::@7/(signed word) print_sword::w#2 ) [ char_cursor#117 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#117 print_sword::w#3 ] )
  [78] if((signed word) print_sword::w#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1 [ char_cursor#117 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#117 print_sword::w#3 ] )
  to:print_sword::@2
print_sword::@2: scope:[print_sword]  from print_sword
  [79] phi() [ char_cursor#117 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#117 print_sword::w#3 ] )
  [80] call print_char param-assignment [ char_cursor#17 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#3 ] )
  to:print_sword::@4
print_sword::@4: scope:[print_sword]  from print_sword::@2
  [81] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#3 [ char_cursor#17 print_sword::w#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#0 ] )
  to:print_sword::@1
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@4
  [82] (byte*) char_cursor#119 ← phi( print_sword/(byte*) char_cursor#117 print_sword::@4/(byte*) char_cursor#17 ) [ print_sword::w#4 char_cursor#119 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#4 char_cursor#119 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 print_sword::w#4 char_cursor#119 ] )
  [82] (signed word) print_sword::w#4 ← phi( print_sword/(signed word) print_sword::w#3 print_sword::@4/(signed word) print_sword::w#0 ) [ print_sword::w#4 char_cursor#119 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#4 char_cursor#119 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 print_sword::w#4 char_cursor#119 ] )
  [83] (word~) print_word::w#11 ← (word)(signed word) print_sword::w#4 [ char_cursor#119 print_word::w#11 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#119 print_word::w#11 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#119 print_word::w#11 ] )
  [84] call print_word param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 ] )
  to:print_sword::@return
print_sword::@return: scope:[print_sword]  from print_sword::@1
  [85] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 ] )
  to:@return
print_word: scope:[print_word]  from multiply_error::@5 multiply_error::@7 multiply_tables_compare::@6 multiply_tables_compare::@8 print_sword::@1
  [86] (byte*) char_cursor#123 ← phi( multiply_error::@5/(byte*) char_cursor#117 multiply_error::@7/(byte*) char_cursor#117 multiply_tables_compare::@6/(byte*) char_cursor#117 multiply_tables_compare::@8/(byte*) char_cursor#117 print_sword::@1/(byte*) char_cursor#119 ) [ print_word::w#5 char_cursor#123 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#123 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 print_word::w#5 char_cursor#123 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#123 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 print_word::w#5 char_cursor#123 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#123 ] main:2::multiply_tables_compare:11::print_word:212 [ print_word::w#5 char_cursor#123 ] )
  [86] (word) print_word::w#5 ← phi( multiply_error::@5/(word) print_word::w#3 multiply_error::@7/(word) print_word::w#4 multiply_tables_compare::@6/(word~) print_word::w#9 multiply_tables_compare::@8/(word~) print_word::w#10 print_sword::@1/(word~) print_word::w#11 ) [ print_word::w#5 char_cursor#123 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#123 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 print_word::w#5 char_cursor#123 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#123 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 print_word::w#5 char_cursor#123 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#123 ] main:2::multiply_tables_compare:11::print_word:212 [ print_word::w#5 char_cursor#123 ] )
  [87] (byte) print_byte::b#1 ← > (word) print_word::w#5 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:212 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] )
  [88] call print_byte param-assignment [ char_cursor#17 print_word::w#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_word::w#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_word::w#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_word::w#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_word::w#5 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_word::w#5 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_word::w#5 ] )
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  [89] (byte) print_byte::b#2 ← < (word) print_word::w#5 [ char_cursor#17 print_byte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_byte::b#2 ] )
  [90] call print_byte param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 ] )
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@1
  [91] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 ] )
  to:@return
print_byte: scope:[print_byte]  from multiply_error::@1 multiply_error::@3 print_sbyte::@1 print_word print_word::@1
  [92] (byte*) char_cursor#124 ← phi( multiply_error::@1/(byte*) char_cursor#117 multiply_error::@3/(byte*) char_cursor#117 print_sbyte::@1/(byte*) char_cursor#121 print_word/(byte*) char_cursor#123 print_word::@1/(byte*) char_cursor#17 ) [ print_byte::b#5 char_cursor#124 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 ] )
  [92] (byte) print_byte::b#5 ← phi( multiply_error::@1/(byte) print_byte::b#3 multiply_error::@3/(byte) print_byte::b#4 print_sbyte::@1/(byte~) print_byte::b#9 print_word/(byte) print_byte::b#1 print_word::@1/(byte) print_byte::b#2 ) [ print_byte::b#5 char_cursor#124 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 ] )
  [93] (byte~) print_byte::$0 ← (byte) print_byte::b#5 >> (byte/signed byte/word/signed word/dword/signed dword) 4 [ print_byte::b#5 char_cursor#124 print_byte::$0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] )
  [94] (byte) print_char::ch#2 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_byte::b#5 char_cursor#124 print_char::ch#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] )
  [95] call print_char param-assignment [ char_cursor#17 print_byte::b#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] )
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [96] (byte~) print_byte::$2 ← (byte) print_byte::b#5 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ char_cursor#17 print_byte::$2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] )
  [97] (byte) print_char::ch#3 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#17 print_char::ch#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] )
  [98] call print_char param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] )
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [99] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] )
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1 print_sbyte::@2 print_sword::@2
  [100] (byte*) char_cursor#75 ← phi( print_byte/(byte*) char_cursor#124 print_byte::@1/(byte*) char_cursor#17 print_sbyte::@2/(byte*) char_cursor#117 print_sword::@2/(byte*) char_cursor#117 ) [ print_char::ch#4 char_cursor#75 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 print_char::ch#4 char_cursor#75 ] )
  [100] (byte) print_char::ch#4 ← phi( print_byte/(byte) print_char::ch#2 print_byte::@1/(byte) print_char::ch#3 print_sbyte::@2/(byte) '-' print_sword::@2/(byte) '-' ) [ print_char::ch#4 char_cursor#75 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_char::ch#4 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_char::ch#4 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 print_char::ch#4 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 print_char::ch#4 char_cursor#75 ] )
  [101] *((byte*) char_cursor#75) ← (byte) print_char::ch#4 [ char_cursor#75 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] )
  [102] (byte*) char_cursor#17 ← ++ (byte*) char_cursor#75 [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] )
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [103] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] )
  to:@return
print_sbyte: scope:[print_sbyte]  from signed_multiply_error::@1 signed_multiply_error::@3
  [104] (signed byte) print_sbyte::b#3 ← phi( signed_multiply_error::@1/(signed byte) print_sbyte::b#1 signed_multiply_error::@3/(signed byte) print_sbyte::b#2 ) [ char_cursor#117 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] )
  [105] if((signed byte) print_sbyte::b#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sbyte::@1 [ char_cursor#117 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] )
  to:print_sbyte::@2
print_sbyte::@2: scope:[print_sbyte]  from print_sbyte
  [106] phi() [ char_cursor#117 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] )
  [107] call print_char param-assignment [ char_cursor#17 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#3 ] )
  to:print_sbyte::@4
print_sbyte::@4: scope:[print_sbyte]  from print_sbyte::@2
  [108] (signed byte) print_sbyte::b#0 ← - (signed byte) print_sbyte::b#3 [ char_cursor#17 print_sbyte::b#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] )
  to:print_sbyte::@1
print_sbyte::@1: scope:[print_sbyte]  from print_sbyte print_sbyte::@4
  [109] (byte*) char_cursor#121 ← phi( print_sbyte/(byte*) char_cursor#117 print_sbyte::@4/(byte*) char_cursor#17 ) [ char_cursor#121 print_sbyte::b#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#121 print_sbyte::b#4 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#121 print_sbyte::b#4 ] )
  [109] (signed byte) print_sbyte::b#4 ← phi( print_sbyte/(signed byte) print_sbyte::b#3 print_sbyte::@4/(signed byte) print_sbyte::b#0 ) [ char_cursor#121 print_sbyte::b#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#121 print_sbyte::b#4 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#121 print_sbyte::b#4 ] )
  [110] (byte~) print_byte::b#9 ← (byte)(signed byte) print_sbyte::b#4 [ print_byte::b#9 char_cursor#121 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#9 char_cursor#121 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#9 char_cursor#121 ] )
  [111] call print_byte param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  to:print_sbyte::@return
print_sbyte::@return: scope:[print_sbyte]  from print_sbyte::@1
  [112] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  to:@return
signed_multiply: scope:[signed_multiply]  from signed_multiply_results_compare::@8
  [113] (byte~) multiply::a#4 ← (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 ] )
  [114] (byte~) multiply::b#4 ← (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 multiply::b#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 multiply::b#4 ] )
  [115] call multiply param-assignment [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] )
  [116] (word) multiply::return#2 ← (word) multiply::return#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] )
  to:signed_multiply::@6
signed_multiply::@6: scope:[signed_multiply]  from signed_multiply
  [117] (word) signed_multiply::m#0 ← (word) multiply::return#2 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] )
  [118] if((signed byte) signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@1 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] )
  to:signed_multiply::@3
signed_multiply::@3: scope:[signed_multiply]  from signed_multiply::@6
  [119] (byte~) signed_multiply::$6 ← > (word) signed_multiply::m#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] )
  [120] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 ← (byte~) signed_multiply::$6 - (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] )
  [121] (word) signed_multiply::m#1 ← (word) signed_multiply::m#0 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#1 ] )
  to:signed_multiply::@1
signed_multiply::@1: scope:[signed_multiply]  from signed_multiply::@3 signed_multiply::@6
  [122] (word) signed_multiply::m#5 ← phi( signed_multiply::@3/(word) signed_multiply::m#1 signed_multiply::@6/(word) signed_multiply::m#0 ) [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#5 ] )
  [123] if((signed byte) signed_multiply::b#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@2 [ signed_multiply::a#0 signed_multiply::m#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 ] )
  to:signed_multiply::@4
signed_multiply::@4: scope:[signed_multiply]  from signed_multiply::@1
  [124] (byte~) signed_multiply::$12 ← > (word) signed_multiply::m#5 [ signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] )
  [125] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 ← (byte~) signed_multiply::$12 - (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::m#5 signed_multiply::$17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#5 signed_multiply::$17 ] )
  [126] (word) signed_multiply::m#2 ← (word) signed_multiply::m#5 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 [ signed_multiply::m#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#2 ] )
  to:signed_multiply::@2
signed_multiply::@2: scope:[signed_multiply]  from signed_multiply::@1 signed_multiply::@4
  [127] (word) signed_multiply::m#4 ← phi( signed_multiply::@1/(word) signed_multiply::m#5 signed_multiply::@4/(word) signed_multiply::m#2 ) [ signed_multiply::m#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#4 ] )
  to:signed_multiply::@return
signed_multiply::@return: scope:[signed_multiply]  from signed_multiply::@2
  [128] return  [ signed_multiply::m#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#4 ] )
  to:@return
multiply: scope:[multiply]  from multiply_results_compare::@8 signed_multiply
  [129] (byte) multiply::b#2 ← phi( multiply_results_compare::@8/(byte) multiply::b#1 signed_multiply/(byte~) multiply::b#4 ) [ multiply::a#2 multiply::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#2 multiply::b#2 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::a#2 multiply::b#2 ] )
  [129] (byte) multiply::a#2 ← phi( multiply_results_compare::@8/(byte) multiply::a#1 signed_multiply/(byte~) multiply::a#4 ) [ multiply::a#2 multiply::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#2 multiply::b#2 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::a#2 multiply::b#2 ] )
  [130] *((const byte*) multiply::memA#0) ← (byte) multiply::a#2 [ multiply::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::b#2 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::b#2 ] )
  [131] *((const byte*) multiply::memB#0) ← (byte) multiply::b#2 [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] )
  asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamul_sqr1_lo,x sm2: sbcmul_sqr2_lo,x stamemA sm3: ldamul_sqr1_hi,x sm4: sbcmul_sqr2_hi,x stamemB  }
  [133] (word) multiply::return#0 ← *((const byte*) multiply::memB#0) w= *((const byte*) multiply::memA#0) [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] )
  to:multiply::@return
multiply::@return: scope:[multiply]  from multiply
  [134] return  [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] )
  to:@return
slow_signed_multiply: scope:[slow_signed_multiply]  from signed_multiply_results_compare::@2
  [135] if((signed byte) slow_signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@1 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] )
  to:slow_signed_multiply::@2
slow_signed_multiply::@2: scope:[slow_signed_multiply]  from slow_signed_multiply slow_signed_multiply::@2
  [136] (signed byte) slow_signed_multiply::i#2 ← phi( slow_signed_multiply::@2/(signed byte) slow_signed_multiply::i#1 slow_signed_multiply/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#3 slow_signed_multiply::i#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#3 slow_signed_multiply::i#2 ] )
  [136] (signed word) slow_signed_multiply::m#3 ← phi( slow_signed_multiply::@2/(signed word) slow_signed_multiply::m#1 slow_signed_multiply/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#3 slow_signed_multiply::i#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#3 slow_signed_multiply::i#2 ] )
  [137] (signed word) slow_signed_multiply::m#1 ← (signed word) slow_signed_multiply::m#3 - (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] )
  [138] (signed byte) slow_signed_multiply::i#1 ← -- (signed byte) slow_signed_multiply::i#2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] )
  [139] if((signed byte) slow_signed_multiply::i#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] )
  to:slow_signed_multiply::@3
slow_signed_multiply::@3: scope:[slow_signed_multiply]  from slow_signed_multiply::@1 slow_signed_multiply::@2 slow_signed_multiply::@5
  [140] (signed word) slow_signed_multiply::return#0 ← phi( slow_signed_multiply::@2/(signed word) slow_signed_multiply::m#1 slow_signed_multiply::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 slow_signed_multiply::@5/(signed word) slow_signed_multiply::m#2 ) [ slow_signed_multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::return#0 ] )
  to:slow_signed_multiply::@return
slow_signed_multiply::@return: scope:[slow_signed_multiply]  from slow_signed_multiply::@3
  [141] return  [ slow_signed_multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::return#0 ] )
  to:@return
slow_signed_multiply::@1: scope:[slow_signed_multiply]  from slow_signed_multiply
  [142] if((signed byte) slow_signed_multiply::a#0<=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@3 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] )
  to:slow_signed_multiply::@5
slow_signed_multiply::@5: scope:[slow_signed_multiply]  from slow_signed_multiply::@1 slow_signed_multiply::@5
  [143] (signed byte) slow_signed_multiply::j#2 ← phi( slow_signed_multiply::@5/(signed byte) slow_signed_multiply::j#1 slow_signed_multiply::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#5 slow_signed_multiply::j#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#5 slow_signed_multiply::j#2 ] )
  [143] (signed word) slow_signed_multiply::m#5 ← phi( slow_signed_multiply::@5/(signed word) slow_signed_multiply::m#2 slow_signed_multiply::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#5 slow_signed_multiply::j#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#5 slow_signed_multiply::j#2 ] )
  [144] (signed word) slow_signed_multiply::m#2 ← (signed word) slow_signed_multiply::m#5 + (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] )
  [145] (signed byte) slow_signed_multiply::j#1 ← ++ (signed byte) slow_signed_multiply::j#2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] )
  [146] if((signed byte) slow_signed_multiply::j#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@5 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] )
  to:slow_signed_multiply::@3
multiply_results_compare: scope:[multiply_results_compare]  from main::@4
  [147] phi() [ line_cursor#27 char_cursor#27 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 ] )
  to:multiply_results_compare::@1
multiply_results_compare::@1: scope:[multiply_results_compare]  from multiply_results_compare multiply_results_compare::@6
  [148] (byte) multiply_results_compare::a#6 ← phi( multiply_results_compare/(byte/signed byte/word/signed word/dword/signed dword) 0 multiply_results_compare::@6/(byte) multiply_results_compare::a#1 ) [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 ] )
  to:multiply_results_compare::@2
multiply_results_compare::@2: scope:[multiply_results_compare]  from multiply_results_compare::@1 multiply_results_compare::@3
  [149] (byte) multiply_results_compare::b#2 ← phi( multiply_results_compare::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 multiply_results_compare::@3/(byte) multiply_results_compare::b#1 ) [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 ] )
  [150] (byte) slow_multiply::a#0 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 ] )
  [151] (byte) slow_multiply::b#0 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] )
  [152] call slow_multiply param-assignment [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] )
  [153] (word) slow_multiply::return#2 ← (word) slow_multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] )
  to:multiply_results_compare::@8
multiply_results_compare::@8: scope:[multiply_results_compare]  from multiply_results_compare::@2
  [154] (word) multiply_results_compare::ms#0 ← (word) slow_multiply::return#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] )
  [155] (byte) multiply::a#1 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] )
  [156] (byte) multiply::b#1 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply::b#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply::b#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] )
  [157] call multiply param-assignment [ line_cursor#27 char_cursor#27 multiply::return#0 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::return#0 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] )
  [158] (word) multiply::return#3 ← (word) multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] )
  to:multiply_results_compare::@9
multiply_results_compare::@9: scope:[multiply_results_compare]  from multiply_results_compare::@8
  [159] (word) multiply_results_compare::ma#0 ← (word) multiply::return#3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] )
  [160] if((word) multiply_results_compare::ms#0==(word) multiply_results_compare::ma#0) goto multiply_results_compare::@3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] )
  to:multiply_results_compare::@4
multiply_results_compare::@4: scope:[multiply_results_compare]  from multiply_results_compare::@9
  [161] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] )
  [162] (byte) multiply_error::a#0 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 ] )
  [163] (byte) multiply_error::b#0 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 ] )
  [164] (word) multiply_error::ms#0 ← (word) multiply_results_compare::ms#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] )
  [165] (word) multiply_error::ma#0 ← (word) multiply_results_compare::ma#0 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  [166] call multiply_error param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
  to:multiply_results_compare::@return
multiply_results_compare::@return: scope:[multiply_results_compare]  from multiply_results_compare::@11 multiply_results_compare::@4
  [167] return  [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
  to:@return
multiply_results_compare::@3: scope:[multiply_results_compare]  from multiply_results_compare::@9
  [168] (byte) multiply_results_compare::b#1 ← ++ (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] )
  [169] if((byte) multiply_results_compare::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] )
  to:multiply_results_compare::@6
multiply_results_compare::@6: scope:[multiply_results_compare]  from multiply_results_compare::@3
  [170] (byte) multiply_results_compare::a#1 ← ++ (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] )
  [171] if((byte) multiply_results_compare::a#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@1 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] )
  to:multiply_results_compare::@7
multiply_results_compare::@7: scope:[multiply_results_compare]  from multiply_results_compare::@6
  [172] phi() [ line_cursor#27 char_cursor#27 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 ] )
  [173] call print_str param-assignment [ char_cursor#117 line_cursor#27 ] ( main:2::multiply_results_compare:13 [ char_cursor#117 line_cursor#27 ] )
  to:multiply_results_compare::@11
multiply_results_compare::@11: scope:[multiply_results_compare]  from multiply_results_compare::@7
  [174] phi() [ char_cursor#117 line_cursor#27 ] ( main:2::multiply_results_compare:13 [ char_cursor#117 line_cursor#27 ] )
  [175] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
  to:multiply_results_compare::@return
multiply_error: scope:[multiply_error]  from multiply_results_compare::@4
  [176] phi() [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  [177] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  to:multiply_error::@1
multiply_error::@1: scope:[multiply_error]  from multiply_error
  [178] (byte) print_byte::b#3 ← (byte) multiply_error::a#0 [ char_cursor#117 line_cursor#27 print_byte::b#3 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_byte::b#3 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  [179] call print_byte param-assignment [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  to:multiply_error::@2
multiply_error::@2: scope:[multiply_error]  from multiply_error::@1
  [180] phi() [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  [181] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  to:multiply_error::@3
multiply_error::@3: scope:[multiply_error]  from multiply_error::@2
  [182] (byte) print_byte::b#4 ← (byte) multiply_error::b#0 [ char_cursor#117 line_cursor#27 print_byte::b#4 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_byte::b#4 multiply_error::ms#0 multiply_error::ma#0 ] )
  [183] call print_byte param-assignment [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] )
  to:multiply_error::@4
multiply_error::@4: scope:[multiply_error]  from multiply_error::@3
  [184] phi() [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] )
  [185] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] )
  to:multiply_error::@5
multiply_error::@5: scope:[multiply_error]  from multiply_error::@4
  [186] (word) print_word::w#3 ← (word) multiply_error::ms#0 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] )
  [187] call print_word param-assignment [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] )
  to:multiply_error::@6
multiply_error::@6: scope:[multiply_error]  from multiply_error::@5
  [188] phi() [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] )
  [189] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::ma#0 ] )
  to:multiply_error::@7
multiply_error::@7: scope:[multiply_error]  from multiply_error::@6
  [190] (word) print_word::w#4 ← (word) multiply_error::ma#0 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#4 ] )
  [191] call print_word param-assignment [ char_cursor#17 line_cursor#27 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 ] )
  to:multiply_error::@8
multiply_error::@8: scope:[multiply_error]  from multiply_error::@7
  [192] phi() [ char_cursor#17 line_cursor#27 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 ] )
  [193] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ line_cursor#1 ] )
  to:multiply_error::@return
multiply_error::@return: scope:[multiply_error]  from multiply_error::@8
  [194] return  [ line_cursor#1 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ line_cursor#1 ] )
  to:@return
slow_multiply: scope:[slow_multiply]  from multiply_results_compare::@2
  [195] if((byte) slow_multiply::a#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_multiply::@1 [ slow_multiply::a#0 slow_multiply::b#0 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] )
  to:slow_multiply::@2
slow_multiply::@2: scope:[slow_multiply]  from slow_multiply slow_multiply::@2
  [196] (byte) slow_multiply::i#2 ← phi( slow_multiply::@2/(byte) slow_multiply::i#1 slow_multiply/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#3 slow_multiply::i#2 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#3 slow_multiply::i#2 ] )
  [196] (word) slow_multiply::m#3 ← phi( slow_multiply::@2/(word) slow_multiply::m#1 slow_multiply/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#3 slow_multiply::i#2 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#3 slow_multiply::i#2 ] )
  [197] (word) slow_multiply::m#1 ← (word) slow_multiply::m#3 + (byte) slow_multiply::b#0 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] )
  [198] (byte) slow_multiply::i#1 ← ++ (byte) slow_multiply::i#2 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] )
  [199] if((byte) slow_multiply::i#1!=(byte) slow_multiply::a#0) goto slow_multiply::@2 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] )
  to:slow_multiply::@1
slow_multiply::@1: scope:[slow_multiply]  from slow_multiply slow_multiply::@2
  [200] (word) slow_multiply::return#0 ← phi( slow_multiply/(byte/signed byte/word/signed word/dword/signed dword) 0 slow_multiply::@2/(word) slow_multiply::m#1 ) [ slow_multiply::return#0 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] )
  to:slow_multiply::@return
slow_multiply::@return: scope:[slow_multiply]  from slow_multiply::@1
  [201] return  [ slow_multiply::return#0 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] )
  to:@return
multiply_tables_compare: scope:[multiply_tables_compare]  from main::@3
  [202] phi() [ ] ( main:2::multiply_tables_compare:11 [ ] )
  to:multiply_tables_compare::@1
multiply_tables_compare::@1: scope:[multiply_tables_compare]  from multiply_tables_compare multiply_tables_compare::@2
  [203] (byte*) multiply_tables_compare::asm_sqr#2 ← phi( multiply_tables_compare/(const byte[512]) asm_mul_sqr1_lo#0 multiply_tables_compare::@2/(byte*) multiply_tables_compare::asm_sqr#1 ) [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] )
  [203] (byte*) multiply_tables_compare::kc_sqr#2 ← phi( multiply_tables_compare/(const byte[512]) mul_sqr1_lo#0 multiply_tables_compare::@2/(byte*) multiply_tables_compare::kc_sqr#1 ) [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] )
  [204] if(*((byte*) multiply_tables_compare::kc_sqr#2)==*((byte*) multiply_tables_compare::asm_sqr#2)) goto multiply_tables_compare::@2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] )
  to:multiply_tables_compare::@3
multiply_tables_compare::@3: scope:[multiply_tables_compare]  from multiply_tables_compare::@1
  [205] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] )
  [206] call print_str param-assignment [ char_cursor#117 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] )
  to:multiply_tables_compare::@6
multiply_tables_compare::@6: scope:[multiply_tables_compare]  from multiply_tables_compare::@3
  [207] (word~) print_word::w#9 ← (word)(byte*) multiply_tables_compare::asm_sqr#2 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] )
  [208] call print_word param-assignment [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] )
  to:multiply_tables_compare::@7
multiply_tables_compare::@7: scope:[multiply_tables_compare]  from multiply_tables_compare::@6
  [209] phi() [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] )
  [210] call print_str param-assignment [ char_cursor#117 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 multiply_tables_compare::kc_sqr#2 ] )
  to:multiply_tables_compare::@8
multiply_tables_compare::@8: scope:[multiply_tables_compare]  from multiply_tables_compare::@7
  [211] (word~) print_word::w#10 ← (word)(byte*) multiply_tables_compare::kc_sqr#2 [ char_cursor#117 print_word::w#10 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#10 ] )
  [212] call print_word param-assignment [ char_cursor#17 ] ( main:2::multiply_tables_compare:11 [ char_cursor#17 ] )
  to:multiply_tables_compare::@return
multiply_tables_compare::@return: scope:[multiply_tables_compare]  from multiply_tables_compare::@10 multiply_tables_compare::@8
  [213] (byte*) line_cursor#27 ← phi( multiply_tables_compare::@10/(byte*) line_cursor#1 multiply_tables_compare::@8/((byte*))(word/signed word/dword/signed dword) 1024 ) [ line_cursor#27 char_cursor#27 ] ( main:2::multiply_tables_compare:11 [ line_cursor#27 char_cursor#27 ] )
  [213] (byte*) char_cursor#27 ← phi( multiply_tables_compare::@10/(byte*~) char_cursor#197 multiply_tables_compare::@8/(byte*) char_cursor#17 ) [ line_cursor#27 char_cursor#27 ] ( main:2::multiply_tables_compare:11 [ line_cursor#27 char_cursor#27 ] )
  [214] return  [ line_cursor#27 char_cursor#27 ] ( main:2::multiply_tables_compare:11 [ line_cursor#27 char_cursor#27 ] )
  to:@return
multiply_tables_compare::@2: scope:[multiply_tables_compare]  from multiply_tables_compare::@1
  [215] (byte*) multiply_tables_compare::asm_sqr#1 ← ++ (byte*) multiply_tables_compare::asm_sqr#2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#1 ] )
  [216] (byte*) multiply_tables_compare::kc_sqr#1 ← ++ (byte*) multiply_tables_compare::kc_sqr#2 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] )
  [217] if((byte*) multiply_tables_compare::kc_sqr#1<(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512*(byte/signed byte/word/signed word/dword/signed dword) 4) goto multiply_tables_compare::@1 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] )
  to:multiply_tables_compare::@5
multiply_tables_compare::@5: scope:[multiply_tables_compare]  from multiply_tables_compare::@2
  [218] phi() [ ] ( main:2::multiply_tables_compare:11 [ ] )
  [219] call print_str param-assignment [ char_cursor#117 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 ] )
  to:multiply_tables_compare::@10
multiply_tables_compare::@10: scope:[multiply_tables_compare]  from multiply_tables_compare::@5
  [220] phi() [ char_cursor#117 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 ] )
  [221] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 ] )
  [222] (byte*~) char_cursor#197 ← (byte*) line_cursor#1 [ line_cursor#1 char_cursor#197 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 char_cursor#197 ] )
  to:multiply_tables_compare::@return
init_multiply_asm: scope:[init_multiply_asm]  from main::@2
  asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: staasm_mul_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: staasm_mul_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldaasm_mul_sqr1_hi+1,x staasm_mul_sqr2_hi+$100,x ldaasm_mul_sqr1_hi,x staasm_mul_sqr2_hi,y ldaasm_mul_sqr1_lo+1,x staasm_mul_sqr2_lo+$100,x ldaasm_mul_sqr1_lo,x staasm_mul_sqr2_lo,y dey inx bne!-  }
  [224] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] )
  [225] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] )
  [226] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] )
  [227] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] )
  to:init_multiply_asm::@return
init_multiply_asm::@return: scope:[init_multiply_asm]  from init_multiply_asm
  [228] return  [ ] ( main:2::init_multiply_asm:9 [ ] )
  to:@return
init_multiply: scope:[init_multiply]  from main::@1
  [229] phi() [ ] ( main:2::init_multiply:7 [ ] )
  to:init_multiply::@1
init_multiply::@1: scope:[init_multiply]  from init_multiply init_multiply::@2
  [230] (byte) init_multiply::x_2#3 ← phi( init_multiply/(byte/signed byte/word/signed word/dword/signed dword) 0 init_multiply::@2/(byte) init_multiply::x_2#2 ) [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] ( main:2::init_multiply:7 [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] )
  [230] (byte*) init_multiply::sqr1_hi#2 ← phi( init_multiply/(const byte[512]) mul_sqr1_hi#0+(byte/signed byte/word/signed word/dword/signed dword) 1 init_multiply::@2/(byte*) init_multiply::sqr1_hi#1 ) [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] ( main:2::init_multiply:7 [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] )
  [230] (byte*) init_multiply::sqr1_lo#2 ← phi( init_multiply/(const byte[512]) mul_sqr1_lo#0+(byte/signed byte/word/signed word/dword/signed dword) 1 init_multiply::@2/(byte*) init_multiply::sqr1_lo#1 ) [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] ( main:2::init_multiply:7 [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] )
  [230] (word) init_multiply::sqr#4 ← phi( init_multiply/(byte/signed byte/word/signed word/dword/signed dword) 0 init_multiply::@2/(word) init_multiply::sqr#1 ) [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] ( main:2::init_multiply:7 [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] )
  [230] (byte) init_multiply::c#2 ← phi( init_multiply/(byte/signed byte/word/signed word/dword/signed dword) 0 init_multiply::@2/(byte) init_multiply::c#1 ) [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] ( main:2::init_multiply:7 [ init_multiply::c#2 init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 ] )
  [231] (byte) init_multiply::c#1 ← ++ (byte) init_multiply::c#2 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] )
  [232] (byte~) init_multiply::$2 ← (byte) init_multiply::c#1 & (byte/signed byte/word/signed word/dword/signed dword) 1 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] )
  [233] if((byte~) init_multiply::$2!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@2 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] )
  to:init_multiply::@5
init_multiply::@5: scope:[init_multiply]  from init_multiply::@1
  [234] (byte) init_multiply::x_2#1 ← ++ (byte) init_multiply::x_2#3 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 ] )
  [235] (word) init_multiply::sqr#2 ← ++ (word) init_multiply::sqr#4 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 init_multiply::sqr#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 init_multiply::sqr#2 ] )
  to:init_multiply::@2
init_multiply::@2: scope:[init_multiply]  from init_multiply::@1 init_multiply::@5
  [236] (byte) init_multiply::x_2#2 ← phi( init_multiply::@1/(byte) init_multiply::x_2#3 init_multiply::@5/(byte) init_multiply::x_2#1 ) [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] )
  [236] (word) init_multiply::sqr#3 ← phi( init_multiply::@1/(word) init_multiply::sqr#4 init_multiply::@5/(word) init_multiply::sqr#2 ) [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] )
  [237] (byte~) init_multiply::$5 ← < (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] )
  [238] *((byte*) init_multiply::sqr1_lo#2) ← (byte~) init_multiply::$5 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] )
  [239] (byte~) init_multiply::$6 ← > (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] )
  [240] *((byte*) init_multiply::sqr1_hi#2) ← (byte~) init_multiply::$6 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] )
  [241] (byte*) init_multiply::sqr1_hi#1 ← ++ (byte*) init_multiply::sqr1_hi#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 init_multiply::sqr#3 ] )
  [242] (word) init_multiply::sqr#1 ← (word) init_multiply::sqr#3 + (byte) init_multiply::x_2#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] )
  [243] (byte*) init_multiply::sqr1_lo#1 ← ++ (byte*) init_multiply::sqr1_lo#2 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] )
  [244] if((byte*) init_multiply::sqr1_lo#1!=(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512) goto init_multiply::@1 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] )
  to:init_multiply::@3
init_multiply::@3: scope:[init_multiply]  from init_multiply::@2 init_multiply::@4
  [245] (byte) init_multiply::dir#2 ← phi( init_multiply::@4/(byte) init_multiply::dir#3 init_multiply::@2/(byte/word/signed word/dword/signed dword) 255 ) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] )
  [245] (byte*) init_multiply::sqr2_hi#2 ← phi( init_multiply::@4/(byte*) init_multiply::sqr2_hi#1 init_multiply::@2/(const byte[512]) mul_sqr2_hi#0 ) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] )
  [245] (byte*) init_multiply::sqr2_lo#2 ← phi( init_multiply::@4/(byte*) init_multiply::sqr2_lo#1 init_multiply::@2/(const byte[512]) mul_sqr2_lo#0 ) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] )
  [245] (byte) init_multiply::x_255#2 ← phi( init_multiply::@4/(byte) init_multiply::x_255#1 init_multiply::@2/((byte))-(byte/signed byte/word/signed word/dword/signed dword) 1 ) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] )
  [246] *((byte*) init_multiply::sqr2_lo#2) ← *((const byte[512]) mul_sqr1_lo#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] )
  [247] *((byte*) init_multiply::sqr2_hi#2) ← *((const byte[512]) mul_sqr1_hi#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] )
  [248] (byte*) init_multiply::sqr2_hi#1 ← ++ (byte*) init_multiply::sqr2_hi#2 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::sqr2_hi#1 ] )
  [249] (byte) init_multiply::x_255#1 ← (byte) init_multiply::x_255#2 + (byte) init_multiply::dir#2 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] )
  [250] if((byte) init_multiply::x_255#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@12 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] )
  to:init_multiply::@4
init_multiply::@4: scope:[init_multiply]  from init_multiply::@12 init_multiply::@3
  [251] (byte) init_multiply::dir#3 ← phi( init_multiply::@12/(byte) init_multiply::dir#2 init_multiply::@3/(byte/signed byte/word/signed word/dword/signed dword) 1 ) [ init_multiply::sqr2_lo#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] )
  [252] (byte*) init_multiply::sqr2_lo#1 ← ++ (byte*) init_multiply::sqr2_lo#2 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] )
  [253] if((byte*) init_multiply::sqr2_lo#1!=(const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) goto init_multiply::@3 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] )
  to:init_multiply::@8
init_multiply::@8: scope:[init_multiply]  from init_multiply::@4
  [254] *((const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] )
  [255] *((const byte[512]) mul_sqr2_hi#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_hi#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] )
  to:init_multiply::@return
init_multiply::@return: scope:[init_multiply]  from init_multiply::@8
  [256] return  [ ] ( main:2::init_multiply:7 [ ] )
  to:@return
init_multiply::@12: scope:[init_multiply]  from init_multiply::@3
  [257] phi() [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] )
  to:init_multiply::@4
print_cls: scope:[print_cls]  from main
  [258] phi() [ ] ( main:2::print_cls:5 [ ] )
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [259] (byte*) print_cls::sc#2 ← phi( print_cls/((byte*))(word/signed word/dword/signed dword) 1024 print_cls::@1/(byte*) print_cls::sc#1 ) [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [260] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [261] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  [262] if((byte*) print_cls::sc#1!=(word/signed word/dword/signed dword) 1024+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [263] return  [ ] ( main:2::print_cls:5 [ ] )
  to:@return

DOMINATORS
@begin dominated by  @begin 
@20 dominated by  @20 @begin 
@end dominated by  @20 @end @begin 
main dominated by  @20 main @begin 
main::@1 dominated by  main::@1 @20 main @begin 
main::@2 dominated by  main::@1 main::@2 @20 main @begin 
main::@3 dominated by  main::@1 main::@2 main::@3 @20 main @begin 
main::@4 dominated by  main::@1 main::@2 main::@3 main::@4 @20 main @begin 
main::@5 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 @20 main @begin 
main::@return dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 main::@return @20 main @begin 
signed_multiply_results_compare dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare @20 main @begin 
signed_multiply_results_compare::@1 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@1 signed_multiply_results_compare @20 main @begin 
signed_multiply_results_compare::@2 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare @20 main @begin 
signed_multiply_results_compare::@8 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
signed_multiply_results_compare::@9 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
signed_multiply_results_compare::@4 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 main @begin 
signed_multiply_results_compare::@return dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare signed_multiply_results_compare::@return @20 main @begin 
signed_multiply_results_compare::@3 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@3 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
signed_multiply_results_compare::@6 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@3 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@6 signed_multiply_results_compare @20 main @begin 
signed_multiply_results_compare::@7 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@3 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@7 signed_multiply_results_compare::@6 signed_multiply_results_compare @20 main @begin 
signed_multiply_results_compare::@11 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@3 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@7 signed_multiply_results_compare::@6 signed_multiply_results_compare @20 main @begin signed_multiply_results_compare::@11 
print_ln dominated by  main::@1 main::@2 main::@3 print_ln @20 main @begin 
print_ln::@1 dominated by  main::@1 main::@2 main::@3 print_ln @20 print_ln::@1 main @begin 
print_ln::@return dominated by  print_ln::@return main::@1 main::@2 main::@3 print_ln @20 print_ln::@1 main @begin 
print_str dominated by  main::@1 main::@2 main::@3 print_str @20 main @begin 
print_str::@1 dominated by  main::@1 main::@2 main::@3 print_str::@1 print_str @20 main @begin 
print_str::@return dominated by  main::@1 main::@2 main::@3 print_str::@return print_str::@1 print_str @20 main @begin 
print_str::@2 dominated by  main::@1 main::@2 main::@3 print_str::@1 print_str::@2 print_str @20 main @begin 
signed_multiply_error dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 main @begin signed_multiply_error 
signed_multiply_error::@1 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 main signed_multiply_error::@1 @begin signed_multiply_error 
signed_multiply_error::@2 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 main signed_multiply_error::@2 signed_multiply_error::@1 @begin signed_multiply_error 
signed_multiply_error::@3 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 main signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
signed_multiply_error::@4 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 main signed_multiply_error::@4 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
signed_multiply_error::@5 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
signed_multiply_error::@6 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 signed_multiply_error::@6 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
signed_multiply_error::@7 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 signed_multiply_error::@6 signed_multiply_error::@7 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
signed_multiply_error::@8 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 signed_multiply_error::@8 signed_multiply_error::@6 signed_multiply_error::@7 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
signed_multiply_error::@return dominated by  signed_multiply_error::@return main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare @20 signed_multiply_error::@8 signed_multiply_error::@6 signed_multiply_error::@7 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
print_sword dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sword @20 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
print_sword::@2 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sword @20 print_sword::@2 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
print_sword::@4 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sword @20 print_sword::@2 print_sword::@4 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
print_sword::@1 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sword @20 print_sword::@1 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error 
print_sword::@return dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sword @20 print_sword::@1 main signed_multiply_error::@4 signed_multiply_error::@5 signed_multiply_error::@2 signed_multiply_error::@3 signed_multiply_error::@1 @begin signed_multiply_error print_sword::@return 
print_word dominated by  print_word main::@1 main::@2 main::@3 @20 main @begin 
print_word::@1 dominated by  print_word main::@1 main::@2 main::@3 print_word::@1 @20 main @begin 
print_word::@return dominated by  print_word main::@1 main::@2 main::@3 print_word::@return print_word::@1 @20 main @begin 
print_byte dominated by  main::@1 main::@2 main::@3 print_byte @20 main @begin 
print_byte::@1 dominated by  main::@1 main::@2 main::@3 print_byte::@1 print_byte @20 main @begin 
print_byte::@return dominated by  main::@1 main::@2 main::@3 print_byte::@1 print_byte @20 main @begin print_byte::@return 
print_char dominated by  main::@1 main::@2 main::@3 @20 main print_char @begin 
print_char::@return dominated by  main::@1 main::@2 main::@3 @20 main print_char print_char::@return @begin 
print_sbyte dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sbyte @20 main signed_multiply_error::@1 @begin signed_multiply_error 
print_sbyte::@2 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sbyte @20 main print_sbyte::@2 signed_multiply_error::@1 @begin signed_multiply_error 
print_sbyte::@4 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sbyte @20 main print_sbyte::@4 print_sbyte::@2 signed_multiply_error::@1 @begin signed_multiply_error 
print_sbyte::@1 dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sbyte @20 main print_sbyte::@1 signed_multiply_error::@1 @begin signed_multiply_error 
print_sbyte::@return dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@4 signed_multiply_results_compare print_sbyte @20 main print_sbyte::@1 signed_multiply_error::@1 @begin print_sbyte::@return signed_multiply_error 
signed_multiply dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
signed_multiply::@6 dominated by  main::@1 main::@2 signed_multiply::@6 main::@5 main::@3 main::@4 signed_multiply signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
signed_multiply::@3 dominated by  main::@1 main::@2 signed_multiply::@6 main::@5 main::@3 signed_multiply::@3 main::@4 signed_multiply signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
signed_multiply::@1 dominated by  main::@1 main::@2 signed_multiply::@6 main::@5 signed_multiply::@1 main::@3 main::@4 signed_multiply signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
signed_multiply::@4 dominated by  main::@1 main::@2 signed_multiply::@6 main::@5 signed_multiply::@1 main::@3 main::@4 signed_multiply::@4 signed_multiply signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
signed_multiply::@2 dominated by  main::@1 main::@2 signed_multiply::@6 main::@5 signed_multiply::@1 signed_multiply::@2 main::@3 main::@4 signed_multiply signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
signed_multiply::@return dominated by  main::@1 main::@2 signed_multiply::@6 main::@5 signed_multiply::@1 signed_multiply::@return signed_multiply::@2 main::@3 main::@4 signed_multiply signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare::@8 signed_multiply_results_compare @20 main @begin 
multiply dominated by  main::@1 main::@2 main::@3 main::@4 @20 main @begin multiply 
multiply::@return dominated by  main::@1 main::@2 main::@3 main::@4 @20 main multiply::@return @begin multiply 
slow_signed_multiply dominated by  main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare slow_signed_multiply @20 main @begin 
slow_signed_multiply::@2 dominated by  slow_signed_multiply::@2 main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare slow_signed_multiply @20 main @begin 
slow_signed_multiply::@3 dominated by  slow_signed_multiply::@3 main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare slow_signed_multiply @20 main @begin 
slow_signed_multiply::@return dominated by  slow_signed_multiply::@3 main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare slow_signed_multiply @20 main @begin slow_signed_multiply::@return 
slow_signed_multiply::@1 dominated by  slow_signed_multiply::@1 main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare slow_signed_multiply @20 main @begin 
slow_signed_multiply::@5 dominated by  slow_signed_multiply::@1 slow_signed_multiply::@5 main::@1 main::@2 main::@5 main::@3 main::@4 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 signed_multiply_results_compare slow_signed_multiply @20 main @begin 
multiply_results_compare dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare @20 main @begin 
multiply_results_compare::@1 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare multiply_results_compare::@1 @20 main @begin 
multiply_results_compare::@2 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 @20 main @begin 
multiply_results_compare::@8 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@8 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 @20 main @begin 
multiply_results_compare::@9 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 @20 main @begin 
multiply_results_compare::@4 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 main @begin 
multiply_results_compare::@return dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@return multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 @20 main @begin 
multiply_results_compare::@3 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@3 @20 main @begin 
multiply_results_compare::@6 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@3 multiply_results_compare::@6 @20 main @begin 
multiply_results_compare::@7 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@8 multiply_results_compare::@7 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@3 multiply_results_compare::@6 @20 main @begin 
multiply_results_compare::@11 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@8 multiply_results_compare::@7 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@3 multiply_results_compare::@6 @20 main @begin multiply_results_compare::@11 
multiply_error dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin 
multiply_error::@1 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_error::@1 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin 
multiply_error::@2 dominated by  main::@1 main::@2 main::@3 main::@4 multiply_error::@2 multiply_error::@1 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin 
multiply_error::@3 dominated by  multiply_error::@3 main::@1 main::@2 main::@3 main::@4 multiply_error::@2 multiply_error::@1 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin 
multiply_error::@4 dominated by  multiply_error::@4 multiply_error::@3 main::@1 main::@2 main::@3 main::@4 multiply_error::@2 multiply_error::@1 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin 
multiply_error::@5 dominated by  multiply_error::@5 multiply_error::@4 multiply_error::@3 main::@1 main::@2 main::@3 main::@4 multiply_error::@2 multiply_error::@1 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin 
multiply_error::@6 dominated by  multiply_error::@6 multiply_error::@5 multiply_error::@4 multiply_error::@3 main::@1 main::@2 main::@3 main::@4 multiply_error::@2 multiply_error::@1 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin 
multiply_error::@7 dominated by  multiply_error::@6 multiply_error::@5 multiply_error::@4 multiply_error::@3 multiply_error::@7 main::@1 main::@2 main::@3 main::@4 multiply_error::@2 multiply_error::@1 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin 
multiply_error::@8 dominated by  multiply_error::@6 multiply_error::@5 multiply_error::@4 multiply_error::@3 multiply_error::@8 multiply_error::@7 main::@1 main::@2 main::@3 main::@4 multiply_error::@2 multiply_error::@1 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin 
multiply_error::@return dominated by  multiply_error::@6 multiply_error::@5 multiply_error::@4 multiply_error::@3 multiply_error::@8 multiply_error::@7 main::@1 main::@2 main::@3 main::@4 multiply_error::@2 multiply_error::@1 multiply_results_compare::@8 multiply_results_compare::@9 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 multiply_results_compare::@4 @20 multiply_error main @begin multiply_error::@return 
slow_multiply dominated by  main::@1 main::@2 main::@3 main::@4 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 @20 main @begin slow_multiply 
slow_multiply::@2 dominated by  main::@1 main::@2 main::@3 main::@4 slow_multiply::@2 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 @20 main @begin slow_multiply 
slow_multiply::@1 dominated by  main::@1 main::@2 main::@3 main::@4 slow_multiply::@1 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 @20 main @begin slow_multiply 
slow_multiply::@return dominated by  main::@1 main::@2 main::@3 main::@4 slow_multiply::@1 multiply_results_compare::@2 multiply_results_compare multiply_results_compare::@1 @20 main @begin slow_multiply slow_multiply::@return 
multiply_tables_compare dominated by  main::@1 main::@2 main::@3 @20 main @begin multiply_tables_compare 
multiply_tables_compare::@1 dominated by  main::@1 main::@2 main::@3 multiply_tables_compare::@1 @20 main @begin multiply_tables_compare 
multiply_tables_compare::@3 dominated by  main::@1 main::@2 main::@3 multiply_tables_compare::@3 multiply_tables_compare::@1 @20 main @begin multiply_tables_compare 
multiply_tables_compare::@6 dominated by  main::@1 main::@2 main::@3 multiply_tables_compare::@6 multiply_tables_compare::@3 multiply_tables_compare::@1 @20 main @begin multiply_tables_compare 
multiply_tables_compare::@7 dominated by  main::@1 main::@2 main::@3 multiply_tables_compare::@7 multiply_tables_compare::@6 multiply_tables_compare::@3 multiply_tables_compare::@1 @20 main @begin multiply_tables_compare 
multiply_tables_compare::@8 dominated by  main::@1 main::@2 main::@3 multiply_tables_compare::@7 multiply_tables_compare::@6 multiply_tables_compare::@8 multiply_tables_compare::@3 multiply_tables_compare::@1 @20 main @begin multiply_tables_compare 
multiply_tables_compare::@return dominated by  main::@1 main::@2 main::@3 multiply_tables_compare::@1 @20 main @begin multiply_tables_compare::@return multiply_tables_compare 
multiply_tables_compare::@2 dominated by  main::@1 main::@2 main::@3 multiply_tables_compare::@2 multiply_tables_compare::@1 @20 main @begin multiply_tables_compare 
multiply_tables_compare::@5 dominated by  main::@1 main::@2 main::@3 multiply_tables_compare::@2 multiply_tables_compare::@5 multiply_tables_compare::@1 @20 main @begin multiply_tables_compare 
multiply_tables_compare::@10 dominated by  main::@1 main::@2 main::@3 multiply_tables_compare::@2 multiply_tables_compare::@5 multiply_tables_compare::@1 multiply_tables_compare::@10 @20 main @begin multiply_tables_compare 
init_multiply_asm dominated by  main::@1 main::@2 init_multiply_asm @20 main @begin 
init_multiply_asm::@return dominated by  main::@1 main::@2 init_multiply_asm @20 init_multiply_asm::@return main @begin 
init_multiply dominated by  main::@1 @20 main @begin init_multiply 
init_multiply::@1 dominated by  main::@1 @20 main @begin init_multiply::@1 init_multiply 
init_multiply::@5 dominated by  main::@1 @20 main @begin init_multiply::@1 init_multiply::@5 init_multiply 
init_multiply::@2 dominated by  main::@1 @20 main @begin init_multiply::@1 init_multiply::@2 init_multiply 
init_multiply::@3 dominated by  main::@1 @20 main @begin init_multiply::@3 init_multiply::@1 init_multiply::@2 init_multiply 
init_multiply::@4 dominated by  main::@1 @20 main @begin init_multiply::@3 init_multiply::@4 init_multiply::@1 init_multiply::@2 init_multiply 
init_multiply::@8 dominated by  main::@1 @20 main @begin init_multiply::@3 init_multiply::@4 init_multiply::@1 init_multiply::@2 init_multiply::@8 init_multiply 
init_multiply::@return dominated by  main::@1 @20 init_multiply::@return main @begin init_multiply::@3 init_multiply::@4 init_multiply::@1 init_multiply::@2 init_multiply::@8 init_multiply 
init_multiply::@12 dominated by  init_multiply::@12 main::@1 @20 main @begin init_multiply::@3 init_multiply::@1 init_multiply::@2 init_multiply 
print_cls dominated by  print_cls @20 main @begin 
print_cls::@1 dominated by  print_cls @20 main @begin print_cls::@1 
print_cls::@return dominated by  print_cls @20 main @begin print_cls::@return print_cls::@1 

NATURAL LOOPS
Found back edge: Loop head: signed_multiply_results_compare::@2 tails: signed_multiply_results_compare::@3 blocks: null
Found back edge: Loop head: signed_multiply_results_compare::@1 tails: signed_multiply_results_compare::@6 blocks: null
Found back edge: Loop head: print_ln::@1 tails: print_ln::@1 blocks: null
Found back edge: Loop head: print_str::@1 tails: print_str::@2 blocks: null
Found back edge: Loop head: slow_signed_multiply::@2 tails: slow_signed_multiply::@2 blocks: null
Found back edge: Loop head: slow_signed_multiply::@5 tails: slow_signed_multiply::@5 blocks: null
Found back edge: Loop head: multiply_results_compare::@2 tails: multiply_results_compare::@3 blocks: null
Found back edge: Loop head: multiply_results_compare::@1 tails: multiply_results_compare::@6 blocks: null
Found back edge: Loop head: slow_multiply::@2 tails: slow_multiply::@2 blocks: null
Found back edge: Loop head: multiply_tables_compare::@1 tails: multiply_tables_compare::@2 blocks: null
Found back edge: Loop head: init_multiply::@1 tails: init_multiply::@2 blocks: null
Found back edge: Loop head: init_multiply::@3 tails: init_multiply::@4 blocks: null
Found back edge: Loop head: print_cls::@1 tails: print_cls::@1 blocks: null
Populated: Loop head: signed_multiply_results_compare::@2 tails: signed_multiply_results_compare::@3 blocks: signed_multiply_results_compare::@3 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@2 
Populated: Loop head: signed_multiply_results_compare::@1 tails: signed_multiply_results_compare::@6 blocks: signed_multiply_results_compare::@6 signed_multiply_results_compare::@3 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 
Populated: Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1 
Populated: Loop head: print_str::@1 tails: print_str::@2 blocks: print_str::@2 print_str::@1 
Populated: Loop head: slow_signed_multiply::@2 tails: slow_signed_multiply::@2 blocks: slow_signed_multiply::@2 
Populated: Loop head: slow_signed_multiply::@5 tails: slow_signed_multiply::@5 blocks: slow_signed_multiply::@5 
Populated: Loop head: multiply_results_compare::@2 tails: multiply_results_compare::@3 blocks: multiply_results_compare::@3 multiply_results_compare::@9 multiply_results_compare::@8 multiply_results_compare::@2 
Populated: Loop head: multiply_results_compare::@1 tails: multiply_results_compare::@6 blocks: multiply_results_compare::@6 multiply_results_compare::@3 multiply_results_compare::@9 multiply_results_compare::@8 multiply_results_compare::@2 multiply_results_compare::@1 
Populated: Loop head: slow_multiply::@2 tails: slow_multiply::@2 blocks: slow_multiply::@2 
Populated: Loop head: multiply_tables_compare::@1 tails: multiply_tables_compare::@2 blocks: multiply_tables_compare::@2 multiply_tables_compare::@1 
Populated: Loop head: init_multiply::@1 tails: init_multiply::@2 blocks: init_multiply::@2 init_multiply::@1 init_multiply::@5 
Populated: Loop head: init_multiply::@3 tails: init_multiply::@4 blocks: init_multiply::@4 init_multiply::@12 init_multiply::@3 
Populated: Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1 
Loop head: signed_multiply_results_compare::@2 tails: signed_multiply_results_compare::@3 blocks: signed_multiply_results_compare::@3 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@2 
Loop head: signed_multiply_results_compare::@1 tails: signed_multiply_results_compare::@6 blocks: signed_multiply_results_compare::@6 signed_multiply_results_compare::@3 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 
Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1 
Loop head: print_str::@1 tails: print_str::@2 blocks: print_str::@2 print_str::@1 
Loop head: slow_signed_multiply::@2 tails: slow_signed_multiply::@2 blocks: slow_signed_multiply::@2 
Loop head: slow_signed_multiply::@5 tails: slow_signed_multiply::@5 blocks: slow_signed_multiply::@5 
Loop head: multiply_results_compare::@2 tails: multiply_results_compare::@3 blocks: multiply_results_compare::@3 multiply_results_compare::@9 multiply_results_compare::@8 multiply_results_compare::@2 
Loop head: multiply_results_compare::@1 tails: multiply_results_compare::@6 blocks: multiply_results_compare::@6 multiply_results_compare::@3 multiply_results_compare::@9 multiply_results_compare::@8 multiply_results_compare::@2 multiply_results_compare::@1 
Loop head: slow_multiply::@2 tails: slow_multiply::@2 blocks: slow_multiply::@2 
Loop head: multiply_tables_compare::@1 tails: multiply_tables_compare::@2 blocks: multiply_tables_compare::@2 multiply_tables_compare::@1 
Loop head: init_multiply::@1 tails: init_multiply::@2 blocks: init_multiply::@2 init_multiply::@1 init_multiply::@5 
Loop head: init_multiply::@3 tails: init_multiply::@4 blocks: init_multiply::@4 init_multiply::@12 init_multiply::@3 
Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1 

NATURAL LOOPS WITH DEPTH
Found 0 loops in scope []
Found 0 loops in scope [main]
Found 1 loops in scope [print_cls]
  Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1 
Found 2 loops in scope [init_multiply]
  Loop head: init_multiply::@1 tails: init_multiply::@2 blocks: init_multiply::@2 init_multiply::@1 init_multiply::@5 
  Loop head: init_multiply::@3 tails: init_multiply::@4 blocks: init_multiply::@4 init_multiply::@12 init_multiply::@3 
Found 0 loops in scope [init_multiply_asm]
Found 1 loops in scope [multiply_tables_compare]
  Loop head: multiply_tables_compare::@1 tails: multiply_tables_compare::@2 blocks: multiply_tables_compare::@2 multiply_tables_compare::@1 
Found 2 loops in scope [multiply_results_compare]
  Loop head: multiply_results_compare::@2 tails: multiply_results_compare::@3 blocks: multiply_results_compare::@3 multiply_results_compare::@9 multiply_results_compare::@8 multiply_results_compare::@2 
  Loop head: multiply_results_compare::@1 tails: multiply_results_compare::@6 blocks: multiply_results_compare::@6 multiply_results_compare::@3 multiply_results_compare::@9 multiply_results_compare::@8 multiply_results_compare::@2 multiply_results_compare::@1 
Found 2 loops in scope [signed_multiply_results_compare]
  Loop head: signed_multiply_results_compare::@2 tails: signed_multiply_results_compare::@3 blocks: signed_multiply_results_compare::@3 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@2 
  Loop head: signed_multiply_results_compare::@1 tails: signed_multiply_results_compare::@6 blocks: signed_multiply_results_compare::@6 signed_multiply_results_compare::@3 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1 
Found 1 loops in scope [print_str]
  Loop head: print_str::@1 tails: print_str::@2 blocks: print_str::@2 print_str::@1 
Found 0 loops in scope [print_word]
Found 1 loops in scope [print_ln]
  Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1 
Found 1 loops in scope [slow_multiply]
  Loop head: slow_multiply::@2 tails: slow_multiply::@2 blocks: slow_multiply::@2 
Found 0 loops in scope [multiply]
Found 0 loops in scope [multiply_error]
Found 2 loops in scope [slow_signed_multiply]
  Loop head: slow_signed_multiply::@2 tails: slow_signed_multiply::@2 blocks: slow_signed_multiply::@2 
  Loop head: slow_signed_multiply::@5 tails: slow_signed_multiply::@5 blocks: slow_signed_multiply::@5 
Found 0 loops in scope [signed_multiply]
Found 0 loops in scope [signed_multiply_error]
Found 0 loops in scope [print_byte]
Found 0 loops in scope [print_sbyte]
Found 0 loops in scope [print_sword]
Found 0 loops in scope [print_char]
Loop head: signed_multiply_results_compare::@2 tails: signed_multiply_results_compare::@3 blocks: signed_multiply_results_compare::@3 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@2  depth: 2
Loop head: signed_multiply_results_compare::@1 tails: signed_multiply_results_compare::@6 blocks: signed_multiply_results_compare::@6 signed_multiply_results_compare::@3 signed_multiply_results_compare::@9 signed_multiply_results_compare::@8 signed_multiply_results_compare::@2 signed_multiply_results_compare::@1  depth: 1
Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1  depth: 1
Loop head: print_str::@1 tails: print_str::@2 blocks: print_str::@2 print_str::@1  depth: 1
Loop head: slow_signed_multiply::@2 tails: slow_signed_multiply::@2 blocks: slow_signed_multiply::@2  depth: 3
Loop head: slow_signed_multiply::@5 tails: slow_signed_multiply::@5 blocks: slow_signed_multiply::@5  depth: 3
Loop head: multiply_results_compare::@2 tails: multiply_results_compare::@3 blocks: multiply_results_compare::@3 multiply_results_compare::@9 multiply_results_compare::@8 multiply_results_compare::@2  depth: 2
Loop head: multiply_results_compare::@1 tails: multiply_results_compare::@6 blocks: multiply_results_compare::@6 multiply_results_compare::@3 multiply_results_compare::@9 multiply_results_compare::@8 multiply_results_compare::@2 multiply_results_compare::@1  depth: 1
Loop head: slow_multiply::@2 tails: slow_multiply::@2 blocks: slow_multiply::@2  depth: 3
Loop head: multiply_tables_compare::@1 tails: multiply_tables_compare::@2 blocks: multiply_tables_compare::@2 multiply_tables_compare::@1  depth: 1
Loop head: init_multiply::@1 tails: init_multiply::@2 blocks: init_multiply::@2 init_multiply::@1 init_multiply::@5  depth: 1
Loop head: init_multiply::@3 tails: init_multiply::@4 blocks: init_multiply::@4 init_multiply::@12 init_multiply::@3  depth: 1
Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1  depth: 1


VARIABLE REGISTER WEIGHTS
(byte*) BGCOL
(byte[512]) asm_mul_sqr1_hi
(byte[512]) asm_mul_sqr1_lo
(byte[512]) asm_mul_sqr2_hi
(byte[512]) asm_mul_sqr2_lo
(byte*) char_cursor
(byte*) char_cursor#1 11.0
(byte*) char_cursor#117 1.6944444444444446
(byte*) char_cursor#118 5.25
(byte*) char_cursor#119 3.0
(byte*) char_cursor#121 3.0
(byte*) char_cursor#123 6.0
(byte*) char_cursor#124 3.9999999999999996
(byte*) char_cursor#135 24.0
(byte*) char_cursor#17 0.7894736842105261
(byte*~) char_cursor#172 4.0
(byte*~) char_cursor#176 4.0
(byte*~) char_cursor#197 4.0
(byte*) char_cursor#27 0.27586206896551724
(byte*) char_cursor#75 6.0
(void()) init_multiply()
(byte~) init_multiply::$2 22.0
(byte~) init_multiply::$5 22.0
(byte~) init_multiply::$6 22.0
(byte) init_multiply::c
(byte) init_multiply::c#1 2.357142857142857
(byte) init_multiply::c#2 22.0
(byte) init_multiply::dir
(byte) init_multiply::dir#2 4.714285714285714
(byte) init_multiply::dir#3 7.333333333333333
(word) init_multiply::sqr
(word) init_multiply::sqr#1 7.333333333333333
(word) init_multiply::sqr#2 22.0
(word) init_multiply::sqr#3 9.166666666666666
(word) init_multiply::sqr#4 6.6000000000000005
(byte*) init_multiply::sqr1_hi
(byte*) init_multiply::sqr1_hi#1 5.5
(byte*) init_multiply::sqr1_hi#2 3.0
(byte*) init_multiply::sqr1_lo
(byte*) init_multiply::sqr1_lo#1 16.5
(byte*) init_multiply::sqr1_lo#2 2.5384615384615383
(byte*) init_multiply::sqr2_hi
(byte*) init_multiply::sqr2_hi#1 3.142857142857143
(byte*) init_multiply::sqr2_hi#2 11.0
(byte*) init_multiply::sqr2_lo
(byte*) init_multiply::sqr2_lo#1 16.5
(byte*) init_multiply::sqr2_lo#2 4.125
(byte) init_multiply::x_2
(byte) init_multiply::x_2#1 11.0
(byte) init_multiply::x_2#2 4.888888888888889
(byte) init_multiply::x_2#3 8.25
(byte) init_multiply::x_255
(byte) init_multiply::x_255#1 5.5
(byte) init_multiply::x_255#2 11.0
(void()) init_multiply_asm()
(byte*) init_multiply_asm::mem
(byte*) line_cursor
(byte*) line_cursor#1 0.8181818181818181
(byte*) line_cursor#20 24.0
(byte*) line_cursor#27 0.1276595744680851
(byte*) line_cursor#40 10.0
(void()) main()
(byte[512]) mul_sqr1_hi
(byte[512]) mul_sqr1_lo
(byte[512]) mul_sqr2_hi
(byte[512]) mul_sqr2_lo
(word()) multiply((byte) multiply::a , (byte) multiply::b)
(byte) multiply::a
(byte) multiply::a#1 101.0
(byte) multiply::a#2 105.0
(byte~) multiply::a#4 2.0
(byte) multiply::b
(byte) multiply::b#1 202.0
(byte) multiply::b#2 52.5
(byte~) multiply::b#4 4.0
(byte*) multiply::memA
(byte*) multiply::memB
(word) multiply::return
(word) multiply::return#0 26.25
(word) multiply::return#2 4.0
(word) multiply::return#3 202.0
(void()) multiply_error((byte) multiply_error::a , (byte) multiply_error::b , (word) multiply_error::ms , (word) multiply_error::ma)
(byte) multiply_error::a
(byte) multiply_error::a#0 0.6666666666666666
(byte) multiply_error::b
(byte) multiply_error::b#0 0.4444444444444444
(word) multiply_error::ma
(word) multiply_error::ma#0 0.26666666666666666
(word) multiply_error::ms
(word) multiply_error::ms#0 0.3333333333333333
(void()) multiply_results_compare()
(byte) multiply_results_compare::a
(byte) multiply_results_compare::a#1 16.5
(byte) multiply_results_compare::a#6 14.125
(byte) multiply_results_compare::b
(byte) multiply_results_compare::b#1 151.5
(byte) multiply_results_compare::b#2 29.0
(word) multiply_results_compare::ma
(word) multiply_results_compare::ma#0 34.0
(word) multiply_results_compare::ms
(word) multiply_results_compare::ms#0 20.4
(void()) multiply_tables_compare()
(byte*) multiply_tables_compare::asm_sqr
(byte*) multiply_tables_compare::asm_sqr#1 7.333333333333333
(byte*) multiply_tables_compare::asm_sqr#2 8.25
(byte*) multiply_tables_compare::kc_sqr
(byte*) multiply_tables_compare::kc_sqr#1 16.5
(byte*) multiply_tables_compare::kc_sqr#2 3.666666666666667
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 4.0
(byte~) print_byte::$2 4.0
(byte) print_byte::b
(byte) print_byte::b#1 4.0
(byte) print_byte::b#2 4.0
(byte) print_byte::b#3 4.0
(byte) print_byte::b#4 4.0
(byte) print_byte::b#5 3.5
(byte~) print_byte::b#9 4.0
(byte[]) print_byte::hextab
(void()) print_char((byte) print_char::ch)
(byte) print_char::ch
(byte) print_char::ch#2 4.0
(byte) print_char::ch#3 4.0
(byte) print_char::ch#4 6.0
(void()) print_cls()
(byte*) print_cls::sc
(byte*) print_cls::sc#1 16.5
(byte*) print_cls::sc#2 16.5
(void()) print_ln()
(void()) print_sbyte((signed byte) print_sbyte::b)
(signed byte) print_sbyte::b
(signed byte) print_sbyte::b#0 4.0
(signed byte) print_sbyte::b#1 4.0
(signed byte) print_sbyte::b#2 4.0
(signed byte) print_sbyte::b#3 2.5
(signed byte) print_sbyte::b#4 4.0
(void()) print_str((byte*) print_str::str)
(byte*) print_str::str
(byte*) print_str::str#0 22.0
(byte*) print_str::str#14 11.5
(byte*) print_str::str#16 2.0
(void()) print_sword((signed word) print_sword::w)
(signed word) print_sword::w
(signed word) print_sword::w#0 4.0
(signed word) print_sword::w#1 4.0
(signed word) print_sword::w#2 4.0
(signed word) print_sword::w#3 2.5
(signed word) print_sword::w#4 4.0
(void()) print_word((word) print_word::w)
(word) print_word::w
(word~) print_word::w#10 4.0
(word~) print_word::w#11 4.0
(word) print_word::w#3 4.0
(word) print_word::w#4 4.0
(word) print_word::w#5 4.666666666666666
(word~) print_word::w#9 4.0
(signed word()) signed_multiply((signed byte) signed_multiply::a , (signed byte) signed_multiply::b)
(byte~) signed_multiply::$12 4.0
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 4.0
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 4.0
(byte~) signed_multiply::$6 4.0
(signed byte) signed_multiply::a
(signed byte) signed_multiply::a#0 7.357142857142858
(signed byte) signed_multiply::b
(signed byte) signed_multiply::b#0 9.363636363636363
(word) signed_multiply::m
(word) signed_multiply::m#0 2.0
(word) signed_multiply::m#1 4.0
(word) signed_multiply::m#2 4.0
(word) signed_multiply::m#4 1.3333333333333333
(word) signed_multiply::m#5 2.5
(signed word) signed_multiply::return
(signed word) signed_multiply::return#2 202.0
(void()) signed_multiply_error((signed byte) signed_multiply_error::a , (signed byte) signed_multiply_error::b , (signed word) signed_multiply_error::ms , (signed word) signed_multiply_error::ma)
(signed byte) signed_multiply_error::a
(signed byte) signed_multiply_error::a#0 0.6666666666666666
(signed byte) signed_multiply_error::b
(signed byte) signed_multiply_error::b#0 0.4444444444444444
(signed word) signed_multiply_error::ma
(signed word) signed_multiply_error::ma#0 0.26666666666666666
(signed word) signed_multiply_error::ms
(signed word) signed_multiply_error::ms#0 0.3333333333333333
(void()) signed_multiply_results_compare()
(signed byte) signed_multiply_results_compare::a
(signed byte) signed_multiply_results_compare::a#1 16.5
(signed byte) signed_multiply_results_compare::a#6 14.125
(signed byte) signed_multiply_results_compare::b
(signed byte) signed_multiply_results_compare::b#1 151.5
(signed byte) signed_multiply_results_compare::b#2 29.0
(signed word) signed_multiply_results_compare::ma
(signed word) signed_multiply_results_compare::ma#0 34.0
(signed word) signed_multiply_results_compare::ms
(signed word) signed_multiply_results_compare::ms#0 20.4
(word()) slow_multiply((byte) slow_multiply::a , (byte) slow_multiply::b)
(byte) slow_multiply::a
(byte) slow_multiply::a#0 157.71428571428572
(byte) slow_multiply::b
(byte) slow_multiply::b#0 183.66666666666669
(byte) slow_multiply::i
(byte) slow_multiply::i#1 1501.5
(byte) slow_multiply::i#2 1001.0
(word) slow_multiply::m
(word) slow_multiply::m#1 1001.0
(word) slow_multiply::m#3 2002.0
(word) slow_multiply::return
(word) slow_multiply::return#0 367.33333333333337
(word) slow_multiply::return#2 202.0
(signed word()) slow_signed_multiply((signed byte) slow_signed_multiply::a , (signed byte) slow_signed_multiply::b)
(signed byte) slow_signed_multiply::a
(signed byte) slow_signed_multiply::a#0 175.58333333333334
(signed byte) slow_signed_multiply::b
(signed byte) slow_signed_multiply::b#0 191.1818181818182
(signed byte) slow_signed_multiply::i
(signed byte) slow_signed_multiply::i#1 1501.5
(signed byte) slow_signed_multiply::i#2 1001.0
(signed byte) slow_signed_multiply::j
(signed byte) slow_signed_multiply::j#1 1501.5
(signed byte) slow_signed_multiply::j#2 1001.0
(signed word) slow_signed_multiply::m
(signed word) slow_signed_multiply::m#1 1001.0
(signed word) slow_signed_multiply::m#2 1001.0
(signed word) slow_signed_multiply::m#3 2002.0
(signed word) slow_signed_multiply::m#5 2002.0
(signed word) slow_signed_multiply::return
(signed word) slow_signed_multiply::return#0 701.0
(signed word) slow_signed_multiply::return#2 202.0

Initial phi equivalence classes
[ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ]
[ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ]
[ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 ]
[ print_str::str#14 print_str::str#16 print_str::str#0 ]
[ print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 ]
[ print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 ]
[ print_byte::b#5 print_byte::b#3 print_byte::b#4 print_byte::b#9 print_byte::b#1 print_byte::b#2 ]
[ print_char::ch#4 print_char::ch#2 print_char::ch#3 ]
[ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 ]
[ print_sbyte::b#4 print_sbyte::b#3 print_sbyte::b#1 print_sbyte::b#2 print_sbyte::b#0 ]
[ signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 ]
[ multiply::a#2 multiply::a#1 multiply::a#4 ]
[ multiply::b#2 multiply::b#1 multiply::b#4 ]
[ slow_signed_multiply::i#2 slow_signed_multiply::i#1 ]
[ slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 ]
[ slow_signed_multiply::j#2 slow_signed_multiply::j#1 ]
[ multiply_results_compare::a#6 multiply_results_compare::a#1 ]
[ multiply_results_compare::b#2 multiply_results_compare::b#1 ]
[ slow_multiply::i#2 slow_multiply::i#1 ]
[ slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 ]
[ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 ]
[ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 ]
[ init_multiply::c#2 init_multiply::c#1 ]
[ init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 ]
[ init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 ]
[ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ]
[ init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 ]
[ init_multiply::x_255#2 init_multiply::x_255#1 ]
[ init_multiply::sqr2_lo#2 init_multiply::sqr2_lo#1 ]
[ init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 ]
[ init_multiply::dir#2 init_multiply::dir#3 ]
[ print_cls::sc#2 print_cls::sc#1 ]
Added variable slow_signed_multiply::a#0 to zero page equivalence class [ slow_signed_multiply::a#0 ]
Added variable slow_signed_multiply::b#0 to zero page equivalence class [ slow_signed_multiply::b#0 ]
Added variable slow_signed_multiply::return#2 to zero page equivalence class [ slow_signed_multiply::return#2 ]
Added variable signed_multiply_results_compare::ms#0 to zero page equivalence class [ signed_multiply_results_compare::ms#0 ]
Added variable signed_multiply::a#0 to zero page equivalence class [ signed_multiply::a#0 ]
Added variable signed_multiply::b#0 to zero page equivalence class [ signed_multiply::b#0 ]
Added variable signed_multiply::return#2 to zero page equivalence class [ signed_multiply::return#2 ]
Added variable signed_multiply_results_compare::ma#0 to zero page equivalence class [ signed_multiply_results_compare::ma#0 ]
Added variable signed_multiply_error::a#0 to zero page equivalence class [ signed_multiply_error::a#0 ]
Added variable signed_multiply_error::b#0 to zero page equivalence class [ signed_multiply_error::b#0 ]
Added variable signed_multiply_error::ms#0 to zero page equivalence class [ signed_multiply_error::ms#0 ]
Added variable signed_multiply_error::ma#0 to zero page equivalence class [ signed_multiply_error::ma#0 ]
Added variable print_byte::$0 to zero page equivalence class [ print_byte::$0 ]
Added variable print_byte::$2 to zero page equivalence class [ print_byte::$2 ]
Added variable multiply::return#2 to zero page equivalence class [ multiply::return#2 ]
Added variable signed_multiply::$6 to zero page equivalence class [ signed_multiply::$6 ]
Added variable signed_multiply::$16 to zero page equivalence class [ signed_multiply::$16 ]
Added variable signed_multiply::$12 to zero page equivalence class [ signed_multiply::$12 ]
Added variable signed_multiply::$17 to zero page equivalence class [ signed_multiply::$17 ]
Added variable multiply::return#0 to zero page equivalence class [ multiply::return#0 ]
Added variable slow_multiply::a#0 to zero page equivalence class [ slow_multiply::a#0 ]
Added variable slow_multiply::b#0 to zero page equivalence class [ slow_multiply::b#0 ]
Added variable slow_multiply::return#2 to zero page equivalence class [ slow_multiply::return#2 ]
Added variable multiply_results_compare::ms#0 to zero page equivalence class [ multiply_results_compare::ms#0 ]
Added variable multiply::return#3 to zero page equivalence class [ multiply::return#3 ]
Added variable multiply_results_compare::ma#0 to zero page equivalence class [ multiply_results_compare::ma#0 ]
Added variable multiply_error::a#0 to zero page equivalence class [ multiply_error::a#0 ]
Added variable multiply_error::b#0 to zero page equivalence class [ multiply_error::b#0 ]
Added variable multiply_error::ms#0 to zero page equivalence class [ multiply_error::ms#0 ]
Added variable multiply_error::ma#0 to zero page equivalence class [ multiply_error::ma#0 ]
Added variable init_multiply::$2 to zero page equivalence class [ init_multiply::$2 ]
Added variable init_multiply::$5 to zero page equivalence class [ init_multiply::$5 ]
Added variable init_multiply::$6 to zero page equivalence class [ init_multiply::$6 ]
Complete equivalence classes
[ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ]
[ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ]
[ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 ]
[ print_str::str#14 print_str::str#16 print_str::str#0 ]
[ print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 ]
[ print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 ]
[ print_byte::b#5 print_byte::b#3 print_byte::b#4 print_byte::b#9 print_byte::b#1 print_byte::b#2 ]
[ print_char::ch#4 print_char::ch#2 print_char::ch#3 ]
[ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 ]
[ print_sbyte::b#4 print_sbyte::b#3 print_sbyte::b#1 print_sbyte::b#2 print_sbyte::b#0 ]
[ signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 ]
[ multiply::a#2 multiply::a#1 multiply::a#4 ]
[ multiply::b#2 multiply::b#1 multiply::b#4 ]
[ slow_signed_multiply::i#2 slow_signed_multiply::i#1 ]
[ slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 ]
[ slow_signed_multiply::j#2 slow_signed_multiply::j#1 ]
[ multiply_results_compare::a#6 multiply_results_compare::a#1 ]
[ multiply_results_compare::b#2 multiply_results_compare::b#1 ]
[ slow_multiply::i#2 slow_multiply::i#1 ]
[ slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 ]
[ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 ]
[ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 ]
[ init_multiply::c#2 init_multiply::c#1 ]
[ init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 ]
[ init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 ]
[ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ]
[ init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 ]
[ init_multiply::x_255#2 init_multiply::x_255#1 ]
[ init_multiply::sqr2_lo#2 init_multiply::sqr2_lo#1 ]
[ init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 ]
[ init_multiply::dir#2 init_multiply::dir#3 ]
[ print_cls::sc#2 print_cls::sc#1 ]
[ slow_signed_multiply::a#0 ]
[ slow_signed_multiply::b#0 ]
[ slow_signed_multiply::return#2 ]
[ signed_multiply_results_compare::ms#0 ]
[ signed_multiply::a#0 ]
[ signed_multiply::b#0 ]
[ signed_multiply::return#2 ]
[ signed_multiply_results_compare::ma#0 ]
[ signed_multiply_error::a#0 ]
[ signed_multiply_error::b#0 ]
[ signed_multiply_error::ms#0 ]
[ signed_multiply_error::ma#0 ]
[ print_byte::$0 ]
[ print_byte::$2 ]
[ multiply::return#2 ]
[ signed_multiply::$6 ]
[ signed_multiply::$16 ]
[ signed_multiply::$12 ]
[ signed_multiply::$17 ]
[ multiply::return#0 ]
[ slow_multiply::a#0 ]
[ slow_multiply::b#0 ]
[ slow_multiply::return#2 ]
[ multiply_results_compare::ms#0 ]
[ multiply::return#3 ]
[ multiply_results_compare::ma#0 ]
[ multiply_error::a#0 ]
[ multiply_error::b#0 ]
[ multiply_error::ms#0 ]
[ multiply_error::ma#0 ]
[ init_multiply::$2 ]
[ init_multiply::$5 ]
[ init_multiply::$6 ]
Allocated zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ]
Allocated zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ]
Allocated zp ZP_WORD:4 [ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 ]
Allocated zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 ]
Allocated zp ZP_WORD:8 [ print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 ]
Allocated zp ZP_WORD:10 [ print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 ]
Allocated zp ZP_BYTE:12 [ print_byte::b#5 print_byte::b#3 print_byte::b#4 print_byte::b#9 print_byte::b#1 print_byte::b#2 ]
Allocated zp ZP_BYTE:13 [ print_char::ch#4 print_char::ch#2 print_char::ch#3 ]
Allocated zp ZP_WORD:14 [ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 ]
Allocated zp ZP_BYTE:16 [ print_sbyte::b#4 print_sbyte::b#3 print_sbyte::b#1 print_sbyte::b#2 print_sbyte::b#0 ]
Allocated zp ZP_WORD:17 [ signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 ]
Allocated zp ZP_BYTE:19 [ multiply::a#2 multiply::a#1 multiply::a#4 ]
Allocated zp ZP_BYTE:20 [ multiply::b#2 multiply::b#1 multiply::b#4 ]
Allocated zp ZP_BYTE:21 [ slow_signed_multiply::i#2 slow_signed_multiply::i#1 ]
Allocated zp ZP_WORD:22 [ slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 ]
Allocated zp ZP_BYTE:24 [ slow_signed_multiply::j#2 slow_signed_multiply::j#1 ]
Allocated zp ZP_BYTE:25 [ multiply_results_compare::a#6 multiply_results_compare::a#1 ]
Allocated zp ZP_BYTE:26 [ multiply_results_compare::b#2 multiply_results_compare::b#1 ]
Allocated zp ZP_BYTE:27 [ slow_multiply::i#2 slow_multiply::i#1 ]
Allocated zp ZP_WORD:28 [ slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 ]
Allocated zp ZP_WORD:30 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 ]
Allocated zp ZP_WORD:32 [ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 ]
Allocated zp ZP_BYTE:34 [ init_multiply::c#2 init_multiply::c#1 ]
Allocated zp ZP_WORD:35 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 ]
Allocated zp ZP_WORD:37 [ init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 ]
Allocated zp ZP_BYTE:39 [ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ]
Allocated zp ZP_WORD:40 [ init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 ]
Allocated zp ZP_BYTE:42 [ init_multiply::x_255#2 init_multiply::x_255#1 ]
Allocated zp ZP_WORD:43 [ init_multiply::sqr2_lo#2 init_multiply::sqr2_lo#1 ]
Allocated zp ZP_WORD:45 [ init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 ]
Allocated zp ZP_BYTE:47 [ init_multiply::dir#2 init_multiply::dir#3 ]
Allocated zp ZP_WORD:48 [ print_cls::sc#2 print_cls::sc#1 ]
Allocated zp ZP_BYTE:50 [ slow_signed_multiply::a#0 ]
Allocated zp ZP_BYTE:51 [ slow_signed_multiply::b#0 ]
Allocated zp ZP_WORD:52 [ slow_signed_multiply::return#2 ]
Allocated zp ZP_WORD:54 [ signed_multiply_results_compare::ms#0 ]
Allocated zp ZP_BYTE:56 [ signed_multiply::a#0 ]
Allocated zp ZP_BYTE:57 [ signed_multiply::b#0 ]
Allocated zp ZP_WORD:58 [ signed_multiply::return#2 ]
Allocated zp ZP_WORD:60 [ signed_multiply_results_compare::ma#0 ]
Allocated zp ZP_BYTE:62 [ signed_multiply_error::a#0 ]
Allocated zp ZP_BYTE:63 [ signed_multiply_error::b#0 ]
Allocated zp ZP_WORD:64 [ signed_multiply_error::ms#0 ]
Allocated zp ZP_WORD:66 [ signed_multiply_error::ma#0 ]
Allocated zp ZP_BYTE:68 [ print_byte::$0 ]
Allocated zp ZP_BYTE:69 [ print_byte::$2 ]
Allocated zp ZP_WORD:70 [ multiply::return#2 ]
Allocated zp ZP_BYTE:72 [ signed_multiply::$6 ]
Allocated zp ZP_BYTE:73 [ signed_multiply::$16 ]
Allocated zp ZP_BYTE:74 [ signed_multiply::$12 ]
Allocated zp ZP_BYTE:75 [ signed_multiply::$17 ]
Allocated zp ZP_WORD:76 [ multiply::return#0 ]
Allocated zp ZP_BYTE:78 [ slow_multiply::a#0 ]
Allocated zp ZP_BYTE:79 [ slow_multiply::b#0 ]
Allocated zp ZP_WORD:80 [ slow_multiply::return#2 ]
Allocated zp ZP_WORD:82 [ multiply_results_compare::ms#0 ]
Allocated zp ZP_WORD:84 [ multiply::return#3 ]
Allocated zp ZP_WORD:86 [ multiply_results_compare::ma#0 ]
Allocated zp ZP_BYTE:88 [ multiply_error::a#0 ]
Allocated zp ZP_BYTE:89 [ multiply_error::b#0 ]
Allocated zp ZP_WORD:90 [ multiply_error::ms#0 ]
Allocated zp ZP_WORD:92 [ multiply_error::ma#0 ]
Allocated zp ZP_BYTE:94 [ init_multiply::$2 ]
Allocated zp ZP_BYTE:95 [ init_multiply::$5 ]
Allocated zp ZP_BYTE:96 [ init_multiply::$6 ]

INITIAL ASM
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d021
  .label char_cursor = $e
  .label line_cursor = 4
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @20 [phi:@begin->@20]
b20_from_bbegin:
  jmp b20
//SEG4 @20
b20:
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @20 to @end [phi:@20->@end]
bend_from_b20:
  jmp bend
//SEG7 @end
bend:
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #5
    sta BGCOL
  //SEG10 [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  //SEG11 [258] phi from main to print_cls [phi:main->print_cls]
  print_cls_from_main:
    jsr print_cls
  //SEG12 [6] phi from main to main::@1 [phi:main->main::@1]
  b1_from_main:
    jmp b1
  //SEG13 main::@1
  b1:
  //SEG14 [7] call init_multiply param-assignment [ ] ( main:2 [ ] )
  //SEG15 [229] phi from main::@1 to init_multiply [phi:main::@1->init_multiply]
  init_multiply_from_b1:
    jsr init_multiply
  //SEG16 [8] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  b2_from_b1:
    jmp b2
  //SEG17 main::@2
  b2:
  //SEG18 [9] call init_multiply_asm param-assignment [ ] ( main:2 [ ] )
    jsr init_multiply_asm
  //SEG19 [10] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  b3_from_b2:
    jmp b3
  //SEG20 main::@3
  b3:
  //SEG21 [11] call multiply_tables_compare param-assignment [ line_cursor#27 char_cursor#27 ] ( main:2 [ line_cursor#27 char_cursor#27 ] )
  //SEG22 [202] phi from main::@3 to multiply_tables_compare [phi:main::@3->multiply_tables_compare]
  multiply_tables_compare_from_b3:
    jsr multiply_tables_compare
  //SEG23 [12] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  b4_from_b3:
    jmp b4
  //SEG24 main::@4
  b4:
  //SEG25 [13] call multiply_results_compare param-assignment [ line_cursor#1 ] ( main:2 [ line_cursor#1 ] )
  //SEG26 [147] phi from main::@4 to multiply_results_compare [phi:main::@4->multiply_results_compare]
  multiply_results_compare_from_b4:
    jsr multiply_results_compare
  //SEG27 [14] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  b5_from_b4:
    jmp b5
  //SEG28 main::@5
  b5:
  //SEG29 [15] call signed_multiply_results_compare param-assignment [ ] ( main:2 [ ] )
  //SEG30 [17] phi from main::@5 to signed_multiply_results_compare [phi:main::@5->signed_multiply_results_compare]
  signed_multiply_results_compare_from_b5:
    jsr signed_multiply_results_compare
    jmp breturn
  //SEG31 main::@return
  breturn:
  //SEG32 [16] return  [ ] ( main:2 [ ] )
    rts
}
//SEG33 signed_multiply_results_compare
signed_multiply_results_compare: {
    .label ms = $36
    .label ma = $3c
    .label b = 3
    .label a = 2
  //SEG34 [18] phi from signed_multiply_results_compare to signed_multiply_results_compare::@1 [phi:signed_multiply_results_compare->signed_multiply_results_compare::@1]
  b1_from_signed_multiply_results_compare:
  //SEG35 [18] phi (signed byte) signed_multiply_results_compare::a#6 = -(byte/word/signed word/dword/signed dword) 128 [phi:signed_multiply_results_compare->signed_multiply_results_compare::@1#0] -- vbsz1=vbsc1 
    lda #-$80
    sta a
    jmp b1
  //SEG36 [18] phi from signed_multiply_results_compare::@6 to signed_multiply_results_compare::@1 [phi:signed_multiply_results_compare::@6->signed_multiply_results_compare::@1]
  b1_from_b6:
  //SEG37 [18] phi (signed byte) signed_multiply_results_compare::a#6 = (signed byte) signed_multiply_results_compare::a#1 [phi:signed_multiply_results_compare::@6->signed_multiply_results_compare::@1#0] -- register_copy 
    jmp b1
  //SEG38 signed_multiply_results_compare::@1
  b1:
  //SEG39 [19] phi from signed_multiply_results_compare::@1 to signed_multiply_results_compare::@2 [phi:signed_multiply_results_compare::@1->signed_multiply_results_compare::@2]
  b2_from_b1:
  //SEG40 [19] phi (signed byte) signed_multiply_results_compare::b#2 = -(byte/word/signed word/dword/signed dword) 128 [phi:signed_multiply_results_compare::@1->signed_multiply_results_compare::@2#0] -- vbsz1=vbsc1 
    lda #-$80
    sta b
    jmp b2
  //SEG41 [19] phi from signed_multiply_results_compare::@3 to signed_multiply_results_compare::@2 [phi:signed_multiply_results_compare::@3->signed_multiply_results_compare::@2]
  b2_from_b3:
  //SEG42 [19] phi (signed byte) signed_multiply_results_compare::b#2 = (signed byte) signed_multiply_results_compare::b#1 [phi:signed_multiply_results_compare::@3->signed_multiply_results_compare::@2#0] -- register_copy 
    jmp b2
  //SEG43 signed_multiply_results_compare::@2
  b2:
  //SEG44 [20] (signed byte) slow_signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 line_cursor#1 ] ) -- vbsz1=vbsz2 
    lda a
    sta slow_signed_multiply.a
  //SEG45 [21] (signed byte) slow_signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 slow_signed_multiply::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 slow_signed_multiply::b#0 line_cursor#1 ] ) -- vbsz1=vbsz2 
    lda b
    sta slow_signed_multiply.b
  //SEG46 [22] call slow_signed_multiply param-assignment [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#0 line_cursor#1 ] )
    jsr slow_signed_multiply
  //SEG47 [23] (signed word) slow_signed_multiply::return#2 ← (signed word) slow_signed_multiply::return#0 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda slow_signed_multiply.return
    sta slow_signed_multiply.return_2
    lda slow_signed_multiply.return+1
    sta slow_signed_multiply.return_2+1
    jmp b8
  //SEG48 signed_multiply_results_compare::@8
  b8:
  //SEG49 [24] (signed word) signed_multiply_results_compare::ms#0 ← (signed word) slow_signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda slow_signed_multiply.return_2
    sta ms
    lda slow_signed_multiply.return_2+1
    sta ms+1
  //SEG50 [25] (signed byte) signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 line_cursor#1 ] ) -- vbsz1=vbsz2 
    lda a
    sta signed_multiply.a
  //SEG51 [26] (signed byte) signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 signed_multiply::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 signed_multiply::b#0 line_cursor#1 ] ) -- vbsz1=vbsz2 
    lda b
    sta signed_multiply.b
  //SEG52 [27] call signed_multiply param-assignment [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::m#4 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::m#4 line_cursor#1 ] )
    jsr signed_multiply
  //SEG53 [28] (signed word) signed_multiply::return#2 ← (signed word)(word) signed_multiply::m#4 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda signed_multiply.m
    sta signed_multiply.return
    lda signed_multiply.m+1
    sta signed_multiply.return+1
    jmp b9
  //SEG54 signed_multiply_results_compare::@9
  b9:
  //SEG55 [29] (signed word) signed_multiply_results_compare::ma#0 ← (signed word) signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda signed_multiply.return
    sta ma
    lda signed_multiply.return+1
    sta ma+1
  //SEG56 [30] if((signed word) signed_multiply_results_compare::ms#0==(signed word) signed_multiply_results_compare::ma#0) goto signed_multiply_results_compare::@3 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) -- vwsz1_eq_vwsz2_then_la1 
    lda ms
    cmp ma
    bne !+
    lda ms+1
    cmp ma+1
    beq b3
  !:
    jmp b4
  //SEG57 signed_multiply_results_compare::@4
  b4:
  //SEG58 [31] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL
  //SEG59 [32] (signed byte) signed_multiply_error::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 line_cursor#1 ] ) -- vbsz1=vbsz2 
    lda a
    sta signed_multiply_error.a
  //SEG60 [33] (signed byte) signed_multiply_error::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 line_cursor#1 ] ) -- vbsz1=vbsz2 
    lda b
    sta signed_multiply_error.b
  //SEG61 [34] (signed word) signed_multiply_error::ms#0 ← (signed word) signed_multiply_results_compare::ms#0 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda ms
    sta signed_multiply_error.ms
    lda ms+1
    sta signed_multiply_error.ms+1
  //SEG62 [35] (signed word) signed_multiply_error::ma#0 ← (signed word) signed_multiply_results_compare::ma#0 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda ma
    sta signed_multiply_error.ma
    lda ma+1
    sta signed_multiply_error.ma+1
  //SEG63 [36] call signed_multiply_error param-assignment [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
    jsr signed_multiply_error
    jmp breturn
  //SEG64 signed_multiply_results_compare::@return
  breturn:
  //SEG65 [37] return  [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
    rts
  //SEG66 signed_multiply_results_compare::@3
  b3:
  //SEG67 [38] (signed byte) signed_multiply_results_compare::b#1 ← ++ (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ) -- vbsz1=_inc_vbsz1 
    inc b
  //SEG68 [39] if((signed byte) signed_multiply_results_compare::b#1!=-(byte/word/signed word/dword/signed dword) 128) goto signed_multiply_results_compare::@2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ) -- vbsz1_neq_vbsc1_then_la1 
    lda b
    cmp #-$80
    bne b2_from_b3
    jmp b6
  //SEG69 signed_multiply_results_compare::@6
  b6:
  //SEG70 [40] (signed byte) signed_multiply_results_compare::a#1 ← ++ (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ) -- vbsz1=_inc_vbsz1 
    inc a
  //SEG71 [41] if((signed byte) signed_multiply_results_compare::a#1!=-(byte/word/signed word/dword/signed dword) 128) goto signed_multiply_results_compare::@1 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ) -- vbsz1_neq_vbsc1_then_la1 
    lda a
    cmp #-$80
    bne b1_from_b6
    jmp b7
  //SEG72 signed_multiply_results_compare::@7
  b7:
  //SEG73 [42] (byte*~) char_cursor#176 ← (byte*) line_cursor#1 [ char_cursor#176 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ char_cursor#176 line_cursor#1 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG74 [43] call print_str param-assignment [ line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15 [ line_cursor#1 char_cursor#117 ] )
  //SEG75 [51] phi from signed_multiply_results_compare::@7 to print_str [phi:signed_multiply_results_compare::@7->print_str]
  print_str_from_b7:
  //SEG76 [51] phi (byte*) char_cursor#135 = (byte*~) char_cursor#176 [phi:signed_multiply_results_compare::@7->print_str#0] -- register_copy 
  //SEG77 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_results_compare::str [phi:signed_multiply_results_compare::@7->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
  //SEG78 [44] phi from signed_multiply_results_compare::@7 to signed_multiply_results_compare::@11 [phi:signed_multiply_results_compare::@7->signed_multiply_results_compare::@11]
  b11_from_b7:
    jmp b11
  //SEG79 signed_multiply_results_compare::@11
  b11:
  //SEG80 [45] call print_ln param-assignment [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
  //SEG81 [46] phi from signed_multiply_results_compare::@11 to print_ln [phi:signed_multiply_results_compare::@11->print_ln]
  print_ln_from_b11:
  //SEG82 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#117 [phi:signed_multiply_results_compare::@11->print_ln#0] -- register_copy 
  //SEG83 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#1 [phi:signed_multiply_results_compare::@11->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
    str: .text "signed multiply results match!@"
}
//SEG84 print_ln
print_ln: {
  //SEG85 [47] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  b1_from_print_ln:
  b1_from_b1:
  //SEG86 [47] phi (byte*) line_cursor#20 = (byte*) line_cursor#40 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp b1
  //SEG87 print_ln::@1
  b1:
  //SEG88 [48] (byte*) line_cursor#1 ← (byte*) line_cursor#20 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda line_cursor
    clc
    adc #$28
    sta line_cursor
    bcc !+
    inc line_cursor+1
  !:
  //SEG89 [49] if((byte*) line_cursor#1<(byte*) char_cursor#118) goto print_ln::@1 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) -- pbuz1_lt_pbuz2_then_la1 
    lda line_cursor+1
    cmp char_cursor+1
    bcc b1_from_b1
    bne !+
    lda line_cursor
    cmp char_cursor
    bcc b1_from_b1
  !:
    jmp breturn
  //SEG90 print_ln::@return
  breturn:
  //SEG91 [50] return  [ line_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 ] )
    rts
}
//SEG92 print_str
print_str: {
    .label str = 6
  //SEG93 [52] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  b1_from_print_str:
  b1_from_b2:
  //SEG94 [52] phi (byte*) char_cursor#117 = (byte*) char_cursor#135 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
  //SEG95 [52] phi (byte*) print_str::str#14 = (byte*) print_str::str#16 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    jmp b1
  //SEG96 print_str::@1
  b1:
  //SEG97 [53] if(*((byte*) print_str::str#14)!=(byte) '@') goto print_str::@2 [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (str),y
    cmp #'@'
    bne b2
    jmp breturn
  //SEG98 print_str::@return
  breturn:
  //SEG99 [54] return  [ char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 ] )
    rts
  //SEG100 print_str::@2
  b2:
  //SEG101 [55] *((byte*) char_cursor#117) ← *((byte*) print_str::str#14) [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    ldy #0
    sta (char_cursor),y
  //SEG102 [56] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#117 [ print_str::str#14 char_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#14 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
  //SEG103 [57] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#14 [ print_str::str#0 char_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#0 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc str
    bne !+
    inc str+1
  !:
    jmp b1_from_b2
}
//SEG104 signed_multiply_error
signed_multiply_error: {
    .label a = $3e
    .label b = $3f
    .label ms = $40
    .label ma = $42
  //SEG105 [58] (byte*~) char_cursor#172 ← (byte*) line_cursor#1 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG106 [59] call print_str param-assignment [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG107 [51] phi from signed_multiply_error to print_str [phi:signed_multiply_error->print_str]
  print_str_from_signed_multiply_error:
  //SEG108 [51] phi (byte*) char_cursor#135 = (byte*~) char_cursor#172 [phi:signed_multiply_error->print_str#0] -- register_copy 
  //SEG109 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str [phi:signed_multiply_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
    jmp b1
  //SEG110 signed_multiply_error::@1
  b1:
  //SEG111 [60] (signed byte) print_sbyte::b#1 ← (signed byte) signed_multiply_error::a#0 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#1 ] ) -- vbsz1=vbsz2 
    lda a
    sta print_sbyte.b
  //SEG112 [61] call print_sbyte param-assignment [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG113 [104] phi from signed_multiply_error::@1 to print_sbyte [phi:signed_multiply_error::@1->print_sbyte]
  print_sbyte_from_b1:
  //SEG114 [104] phi (signed byte) print_sbyte::b#3 = (signed byte) print_sbyte::b#1 [phi:signed_multiply_error::@1->print_sbyte#0] -- register_copy 
    jsr print_sbyte
  //SEG115 [62] phi from signed_multiply_error::@1 to signed_multiply_error::@2 [phi:signed_multiply_error::@1->signed_multiply_error::@2]
  b2_from_b1:
    jmp b2
  //SEG116 signed_multiply_error::@2
  b2:
  //SEG117 [63] call print_str param-assignment [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG118 [51] phi from signed_multiply_error::@2 to print_str [phi:signed_multiply_error::@2->print_str]
  print_str_from_b2:
  //SEG119 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:signed_multiply_error::@2->print_str#0] -- register_copy 
  //SEG120 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str1 [phi:signed_multiply_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta print_str.str
    lda #>str1
    sta print_str.str+1
    jsr print_str
    jmp b3
  //SEG121 signed_multiply_error::@3
  b3:
  //SEG122 [64] (signed byte) print_sbyte::b#2 ← (signed byte) signed_multiply_error::b#0 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#2 ] ) -- vbsz1=vbsz2 
    lda b
    sta print_sbyte.b
  //SEG123 [65] call print_sbyte param-assignment [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG124 [104] phi from signed_multiply_error::@3 to print_sbyte [phi:signed_multiply_error::@3->print_sbyte]
  print_sbyte_from_b3:
  //SEG125 [104] phi (signed byte) print_sbyte::b#3 = (signed byte) print_sbyte::b#2 [phi:signed_multiply_error::@3->print_sbyte#0] -- register_copy 
    jsr print_sbyte
  //SEG126 [66] phi from signed_multiply_error::@3 to signed_multiply_error::@4 [phi:signed_multiply_error::@3->signed_multiply_error::@4]
  b4_from_b3:
    jmp b4
  //SEG127 signed_multiply_error::@4
  b4:
  //SEG128 [67] call print_str param-assignment [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG129 [51] phi from signed_multiply_error::@4 to print_str [phi:signed_multiply_error::@4->print_str]
  print_str_from_b4:
  //SEG130 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:signed_multiply_error::@4->print_str#0] -- register_copy 
  //SEG131 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str2 [phi:signed_multiply_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta print_str.str
    lda #>str2
    sta print_str.str+1
    jsr print_str
    jmp b5
  //SEG132 signed_multiply_error::@5
  b5:
  //SEG133 [68] (signed word) print_sword::w#1 ← (signed word) signed_multiply_error::ms#0 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ) -- vwsz1=vwsz2 
    lda ms
    sta print_sword.w
    lda ms+1
    sta print_sword.w+1
  //SEG134 [69] call print_sword param-assignment [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG135 [77] phi from signed_multiply_error::@5 to print_sword [phi:signed_multiply_error::@5->print_sword]
  print_sword_from_b5:
  //SEG136 [77] phi (signed word) print_sword::w#3 = (signed word) print_sword::w#1 [phi:signed_multiply_error::@5->print_sword#0] -- register_copy 
    jsr print_sword
  //SEG137 [70] phi from signed_multiply_error::@5 to signed_multiply_error::@6 [phi:signed_multiply_error::@5->signed_multiply_error::@6]
  b6_from_b5:
    jmp b6
  //SEG138 signed_multiply_error::@6
  b6:
  //SEG139 [71] call print_str param-assignment [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG140 [51] phi from signed_multiply_error::@6 to print_str [phi:signed_multiply_error::@6->print_str]
  print_str_from_b6:
  //SEG141 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:signed_multiply_error::@6->print_str#0] -- register_copy 
  //SEG142 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str3 [phi:signed_multiply_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta print_str.str
    lda #>str3
    sta print_str.str+1
    jsr print_str
    jmp b7
  //SEG143 signed_multiply_error::@7
  b7:
  //SEG144 [72] (signed word) print_sword::w#2 ← (signed word) signed_multiply_error::ma#0 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ) -- vwsz1=vwsz2 
    lda ma
    sta print_sword.w
    lda ma+1
    sta print_sword.w+1
  //SEG145 [73] call print_sword param-assignment [ line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#17 ] )
  //SEG146 [77] phi from signed_multiply_error::@7 to print_sword [phi:signed_multiply_error::@7->print_sword]
  print_sword_from_b7:
  //SEG147 [77] phi (signed word) print_sword::w#3 = (signed word) print_sword::w#2 [phi:signed_multiply_error::@7->print_sword#0] -- register_copy 
    jsr print_sword
  //SEG148 [74] phi from signed_multiply_error::@7 to signed_multiply_error::@8 [phi:signed_multiply_error::@7->signed_multiply_error::@8]
  b8_from_b7:
    jmp b8
  //SEG149 signed_multiply_error::@8
  b8:
  //SEG150 [75] call print_ln param-assignment [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ ] )
  //SEG151 [46] phi from signed_multiply_error::@8 to print_ln [phi:signed_multiply_error::@8->print_ln]
  print_ln_from_b8:
  //SEG152 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#17 [phi:signed_multiply_error::@8->print_ln#0] -- register_copy 
  //SEG153 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#1 [phi:signed_multiply_error::@8->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
  //SEG154 signed_multiply_error::@return
  breturn:
  //SEG155 [76] return  [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ ] )
    rts
    str: .text "signed multiply mismatch @"
    str1: .text "*@"
    str2: .text " slow:@"
    str3: .text " / fast asm:@"
}
//SEG156 print_sword
print_sword: {
    .label w = 8
  //SEG157 [78] if((signed word) print_sword::w#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1 [ char_cursor#117 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#117 print_sword::w#3 ] ) -- vwsz1_ge_0_then_la1 
    lda w+1
    bpl b1_from_print_sword
  //SEG158 [79] phi from print_sword to print_sword::@2 [phi:print_sword->print_sword::@2]
  b2_from_print_sword:
    jmp b2
  //SEG159 print_sword::@2
  b2:
  //SEG160 [80] call print_char param-assignment [ char_cursor#17 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#3 ] )
  //SEG161 [100] phi from print_sword::@2 to print_char [phi:print_sword::@2->print_char]
  print_char_from_b2:
  //SEG162 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#117 [phi:print_sword::@2->print_char#0] -- register_copy 
  //SEG163 [100] phi (byte) print_char::ch#4 = (byte) '-' [phi:print_sword::@2->print_char#1] -- vbuz1=vbuc1 
    lda #'-'
    sta print_char.ch
    jsr print_char
    jmp b4
  //SEG164 print_sword::@4
  b4:
  //SEG165 [81] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#3 [ char_cursor#17 print_sword::w#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#0 ] ) -- vwsz1=_neg_vwsz1 
    sec
    lda w
    eor #$ff
    adc #0
    sta w
    lda w+1
    eor #$ff
    adc #0
    sta w+1
  //SEG166 [82] phi from print_sword print_sword::@4 to print_sword::@1 [phi:print_sword/print_sword::@4->print_sword::@1]
  b1_from_print_sword:
  b1_from_b4:
  //SEG167 [82] phi (byte*) char_cursor#119 = (byte*) char_cursor#117 [phi:print_sword/print_sword::@4->print_sword::@1#0] -- register_copy 
  //SEG168 [82] phi (signed word) print_sword::w#4 = (signed word) print_sword::w#3 [phi:print_sword/print_sword::@4->print_sword::@1#1] -- register_copy 
    jmp b1
  //SEG169 print_sword::@1
  b1:
  //SEG170 [83] (word~) print_word::w#11 ← (word)(signed word) print_sword::w#4 [ char_cursor#119 print_word::w#11 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#119 print_word::w#11 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#119 print_word::w#11 ] ) -- vwuz1=vwuz2 
    lda w
    sta print_word.w
    lda w+1
    sta print_word.w+1
  //SEG171 [84] call print_word param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 ] )
  //SEG172 [86] phi from print_sword::@1 to print_word [phi:print_sword::@1->print_word]
  print_word_from_b1:
  //SEG173 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#119 [phi:print_sword::@1->print_word#0] -- register_copy 
  //SEG174 [86] phi (word) print_word::w#5 = (word~) print_word::w#11 [phi:print_sword::@1->print_word#1] -- register_copy 
    jsr print_word
    jmp breturn
  //SEG175 print_sword::@return
  breturn:
  //SEG176 [85] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 ] )
    rts
}
//SEG177 print_word
print_word: {
    .label w = $a
  //SEG178 [87] (byte) print_byte::b#1 ← > (word) print_word::w#5 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:212 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ) -- vbuz1=_hi_vwuz2 
    lda w+1
    sta print_byte.b
  //SEG179 [88] call print_byte param-assignment [ char_cursor#17 print_word::w#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_word::w#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_word::w#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_word::w#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_word::w#5 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_word::w#5 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_word::w#5 ] )
  //SEG180 [92] phi from print_word to print_byte [phi:print_word->print_byte]
  print_byte_from_print_word:
  //SEG181 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#123 [phi:print_word->print_byte#0] -- register_copy 
  //SEG182 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#1 [phi:print_word->print_byte#1] -- register_copy 
    jsr print_byte
    jmp b1
  //SEG183 print_word::@1
  b1:
  //SEG184 [89] (byte) print_byte::b#2 ← < (word) print_word::w#5 [ char_cursor#17 print_byte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_byte::b#2 ] ) -- vbuz1=_lo_vwuz2 
    lda w
    sta print_byte.b
  //SEG185 [90] call print_byte param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 ] )
  //SEG186 [92] phi from print_word::@1 to print_byte [phi:print_word::@1->print_byte]
  print_byte_from_b1:
  //SEG187 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#17 [phi:print_word::@1->print_byte#0] -- register_copy 
  //SEG188 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#2 [phi:print_word::@1->print_byte#1] -- register_copy 
    jsr print_byte
    jmp breturn
  //SEG189 print_word::@return
  breturn:
  //SEG190 [91] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 ] )
    rts
}
//SEG191 print_byte
print_byte: {
    .label _0 = $44
    .label _2 = $45
    .label b = $c
  //SEG192 [93] (byte~) print_byte::$0 ← (byte) print_byte::b#5 >> (byte/signed byte/word/signed word/dword/signed dword) 4 [ print_byte::b#5 char_cursor#124 print_byte::$0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] ) -- vbuz1=vbuz2_ror_4 
    lda b
    lsr
    lsr
    lsr
    lsr
    sta _0
  //SEG193 [94] (byte) print_char::ch#2 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_byte::b#5 char_cursor#124 print_char::ch#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy _0
    lda hextab,y
    sta print_char.ch
  //SEG194 [95] call print_char param-assignment [ char_cursor#17 print_byte::b#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] )
  //SEG195 [100] phi from print_byte to print_char [phi:print_byte->print_char]
  print_char_from_print_byte:
  //SEG196 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#124 [phi:print_byte->print_char#0] -- register_copy 
  //SEG197 [100] phi (byte) print_char::ch#4 = (byte) print_char::ch#2 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    jmp b1
  //SEG198 print_byte::@1
  b1:
  //SEG199 [96] (byte~) print_byte::$2 ← (byte) print_byte::b#5 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ char_cursor#17 print_byte::$2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and b
    sta _2
  //SEG200 [97] (byte) print_char::ch#3 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#17 print_char::ch#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy _2
    lda hextab,y
    sta print_char.ch
  //SEG201 [98] call print_char param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] )
  //SEG202 [100] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  print_char_from_b1:
  //SEG203 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#17 [phi:print_byte::@1->print_char#0] -- register_copy 
  //SEG204 [100] phi (byte) print_char::ch#4 = (byte) print_char::ch#3 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp breturn
  //SEG205 print_byte::@return
  breturn:
  //SEG206 [99] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] )
    rts
    hextab: .text "0123456789abcdef"
}
//SEG207 print_char
print_char: {
    .label ch = $d
  //SEG208 [101] *((byte*) char_cursor#75) ← (byte) print_char::ch#4 [ char_cursor#75 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] ) -- _deref_pbuz1=vbuz2 
    lda ch
    ldy #0
    sta (char_cursor),y
  //SEG209 [102] (byte*) char_cursor#17 ← ++ (byte*) char_cursor#75 [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
    jmp breturn
  //SEG210 print_char::@return
  breturn:
  //SEG211 [103] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] )
    rts
}
//SEG212 print_sbyte
print_sbyte: {
    .label b = $10
  //SEG213 [105] if((signed byte) print_sbyte::b#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sbyte::@1 [ char_cursor#117 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] ) -- vbsz1_ge_0_then_la1 
    lda b
    cmp #0
    bpl b1_from_print_sbyte
  //SEG214 [106] phi from print_sbyte to print_sbyte::@2 [phi:print_sbyte->print_sbyte::@2]
  b2_from_print_sbyte:
    jmp b2
  //SEG215 print_sbyte::@2
  b2:
  //SEG216 [107] call print_char param-assignment [ char_cursor#17 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#3 ] )
  //SEG217 [100] phi from print_sbyte::@2 to print_char [phi:print_sbyte::@2->print_char]
  print_char_from_b2:
  //SEG218 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#117 [phi:print_sbyte::@2->print_char#0] -- register_copy 
  //SEG219 [100] phi (byte) print_char::ch#4 = (byte) '-' [phi:print_sbyte::@2->print_char#1] -- vbuz1=vbuc1 
    lda #'-'
    sta print_char.ch
    jsr print_char
    jmp b4
  //SEG220 print_sbyte::@4
  b4:
  //SEG221 [108] (signed byte) print_sbyte::b#0 ← - (signed byte) print_sbyte::b#3 [ char_cursor#17 print_sbyte::b#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] ) -- vbsz1=_neg_vbsz1 
    lda b
    eor #$ff
    clc
    adc #1
    sta b
  //SEG222 [109] phi from print_sbyte print_sbyte::@4 to print_sbyte::@1 [phi:print_sbyte/print_sbyte::@4->print_sbyte::@1]
  b1_from_print_sbyte:
  b1_from_b4:
  //SEG223 [109] phi (byte*) char_cursor#121 = (byte*) char_cursor#117 [phi:print_sbyte/print_sbyte::@4->print_sbyte::@1#0] -- register_copy 
  //SEG224 [109] phi (signed byte) print_sbyte::b#4 = (signed byte) print_sbyte::b#3 [phi:print_sbyte/print_sbyte::@4->print_sbyte::@1#1] -- register_copy 
    jmp b1
  //SEG225 print_sbyte::@1
  b1:
  //SEG226 [110] (byte~) print_byte::b#9 ← (byte)(signed byte) print_sbyte::b#4 [ print_byte::b#9 char_cursor#121 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#9 char_cursor#121 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#9 char_cursor#121 ] ) -- vbuz1=vbuz2 
    lda b
    sta print_byte.b
  //SEG227 [111] call print_byte param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG228 [92] phi from print_sbyte::@1 to print_byte [phi:print_sbyte::@1->print_byte]
  print_byte_from_b1:
  //SEG229 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#121 [phi:print_sbyte::@1->print_byte#0] -- register_copy 
  //SEG230 [92] phi (byte) print_byte::b#5 = (byte~) print_byte::b#9 [phi:print_sbyte::@1->print_byte#1] -- register_copy 
    jsr print_byte
    jmp breturn
  //SEG231 print_sbyte::@return
  breturn:
  //SEG232 [112] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
    rts
}
//SEG233 signed_multiply
signed_multiply: {
    .label _6 = $48
    .label _12 = $4a
    .label _16 = $49
    .label _17 = $4b
    .label m = $11
    .label a = $38
    .label b = $39
    .label return = $3a
  //SEG234 [113] (byte~) multiply::a#4 ← (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 ] ) -- vbuz1=vbuz2 
    lda a
    sta multiply.a
  //SEG235 [114] (byte~) multiply::b#4 ← (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 multiply::b#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 multiply::b#4 ] ) -- vbuz1=vbuz2 
    lda b
    sta multiply.b
  //SEG236 [115] call multiply param-assignment [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] )
  //SEG237 [129] phi from signed_multiply to multiply [phi:signed_multiply->multiply]
  multiply_from_signed_multiply:
  //SEG238 [129] phi (byte) multiply::b#2 = (byte~) multiply::b#4 [phi:signed_multiply->multiply#0] -- register_copy 
  //SEG239 [129] phi (byte) multiply::a#2 = (byte~) multiply::a#4 [phi:signed_multiply->multiply#1] -- register_copy 
    jsr multiply
  //SEG240 [116] (word) multiply::return#2 ← (word) multiply::return#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] ) -- vwuz1=vwuz2 
    lda multiply.return
    sta multiply.return_2
    lda multiply.return+1
    sta multiply.return_2+1
    jmp b6
  //SEG241 signed_multiply::@6
  b6:
  //SEG242 [117] (word) signed_multiply::m#0 ← (word) multiply::return#2 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ) -- vwuz1=vwuz2 
    lda multiply.return_2
    sta m
    lda multiply.return_2+1
    sta m+1
  //SEG243 [118] if((signed byte) signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@1 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ) -- vbsz1_ge_0_then_la1 
    lda a
    cmp #0
    bpl b1_from_b6
    jmp b3
  //SEG244 signed_multiply::@3
  b3:
  //SEG245 [119] (byte~) signed_multiply::$6 ← > (word) signed_multiply::m#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ) -- vbuz1=_hi_vwuz2 
    lda m+1
    sta _6
  //SEG246 [120] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 ← (byte~) signed_multiply::$6 - (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ) -- vbuz1=vbuz2_minus_vbuz3 
    lda _6
    sec
    sbc b
    sta _16
  //SEG247 [121] (word) signed_multiply::m#1 ← (word) signed_multiply::m#0 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#1 ] ) -- vwuz1=vwuz1_sethi_vbuz2 
    lda _16
    sta m+1
  //SEG248 [122] phi from signed_multiply::@3 signed_multiply::@6 to signed_multiply::@1 [phi:signed_multiply::@3/signed_multiply::@6->signed_multiply::@1]
  b1_from_b3:
  b1_from_b6:
  //SEG249 [122] phi (word) signed_multiply::m#5 = (word) signed_multiply::m#1 [phi:signed_multiply::@3/signed_multiply::@6->signed_multiply::@1#0] -- register_copy 
    jmp b1
  //SEG250 signed_multiply::@1
  b1:
  //SEG251 [123] if((signed byte) signed_multiply::b#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@2 [ signed_multiply::a#0 signed_multiply::m#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 ] ) -- vbsz1_ge_0_then_la1 
    lda b
    cmp #0
    bpl b2_from_b1
    jmp b4
  //SEG252 signed_multiply::@4
  b4:
  //SEG253 [124] (byte~) signed_multiply::$12 ← > (word) signed_multiply::m#5 [ signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ) -- vbuz1=_hi_vwuz2 
    lda m+1
    sta _12
  //SEG254 [125] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 ← (byte~) signed_multiply::$12 - (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::m#5 signed_multiply::$17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#5 signed_multiply::$17 ] ) -- vbuz1=vbuz2_minus_vbuz3 
    lda _12
    sec
    sbc a
    sta _17
  //SEG255 [126] (word) signed_multiply::m#2 ← (word) signed_multiply::m#5 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 [ signed_multiply::m#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#2 ] ) -- vwuz1=vwuz1_sethi_vbuz2 
    lda _17
    sta m+1
  //SEG256 [127] phi from signed_multiply::@1 signed_multiply::@4 to signed_multiply::@2 [phi:signed_multiply::@1/signed_multiply::@4->signed_multiply::@2]
  b2_from_b1:
  b2_from_b4:
  //SEG257 [127] phi (word) signed_multiply::m#4 = (word) signed_multiply::m#5 [phi:signed_multiply::@1/signed_multiply::@4->signed_multiply::@2#0] -- register_copy 
    jmp b2
  //SEG258 signed_multiply::@2
  b2:
    jmp breturn
  //SEG259 signed_multiply::@return
  breturn:
  //SEG260 [128] return  [ signed_multiply::m#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#4 ] )
    rts
}
//SEG261 multiply
multiply: {
    .const memA = $fe
    .const memB = $ff
    .label return = $4c
    .label return_2 = $46
    .label a = $13
    .label b = $14
    .label return_3 = $54
  //SEG262 [130] *((const byte*) multiply::memA#0) ← (byte) multiply::a#2 [ multiply::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::b#2 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::b#2 ] ) -- _deref_pbuc1=vbuz1 
    lda a
    sta memA
  //SEG263 [131] *((const byte*) multiply::memB#0) ← (byte) multiply::b#2 [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- _deref_pbuc1=vbuz1 
    lda b
    sta memB
  //SEG264 asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamul_sqr1_lo,x sm2: sbcmul_sqr2_lo,x stamemA sm3: ldamul_sqr1_hi,x sm4: sbcmul_sqr2_hi,x stamemB  }
    lda memA
    sta sm1+1
    sta sm3+1
    eor #$ff
    sta sm2+1
    sta sm4+1
    ldx memB
    sec
  sm1:
    lda mul_sqr1_lo,x
  sm2:
    sbc mul_sqr2_lo,x
    sta memA
  sm3:
    lda mul_sqr1_hi,x
  sm4:
    sbc mul_sqr2_hi,x
    sta memB
  //SEG265 [133] (word) multiply::return#0 ← *((const byte*) multiply::memB#0) w= *((const byte*) multiply::memA#0) [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] ) -- vwuz1=_deref_pbuc1_word__deref_pbuc2 
    lda memA
    sta return
    lda memB
    sta return+1
    jmp breturn
  //SEG266 multiply::@return
  breturn:
  //SEG267 [134] return  [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] )
    rts
}
//SEG268 slow_signed_multiply
slow_signed_multiply: {
    .label m = $16
    .label i = $15
    .label return = $16
    .label j = $18
    .label a = $32
    .label b = $33
    .label return_2 = $34
  //SEG269 [135] if((signed byte) slow_signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@1 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ) -- vbsz1_ge_0_then_la1 
    lda a
    cmp #0
    bpl b1
  //SEG270 [136] phi from slow_signed_multiply to slow_signed_multiply::@2 [phi:slow_signed_multiply->slow_signed_multiply::@2]
  b2_from_slow_signed_multiply:
  //SEG271 [136] phi (signed byte) slow_signed_multiply::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply->slow_signed_multiply::@2#0] -- vbsz1=vbuc1 
    lda #0
    sta i
  //SEG272 [136] phi (signed word) slow_signed_multiply::m#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply->slow_signed_multiply::@2#1] -- vwsz1=vbuc1 
    lda #0
    sta m
    lda #0
    sta m+1
    jmp b2
  //SEG273 [136] phi from slow_signed_multiply::@2 to slow_signed_multiply::@2 [phi:slow_signed_multiply::@2->slow_signed_multiply::@2]
  b2_from_b2:
  //SEG274 [136] phi (signed byte) slow_signed_multiply::i#2 = (signed byte) slow_signed_multiply::i#1 [phi:slow_signed_multiply::@2->slow_signed_multiply::@2#0] -- register_copy 
  //SEG275 [136] phi (signed word) slow_signed_multiply::m#3 = (signed word) slow_signed_multiply::m#1 [phi:slow_signed_multiply::@2->slow_signed_multiply::@2#1] -- register_copy 
    jmp b2
  //SEG276 slow_signed_multiply::@2
  b2:
  //SEG277 [137] (signed word) slow_signed_multiply::m#1 ← (signed word) slow_signed_multiply::m#3 - (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ) -- vwsz1=vwsz1_minus_vbsz2 
    lda b
    sta $fe
    ora #$7f
    bmi !+
    lda #0
  !:
    sta $ff
    sec
    lda m
    sbc $fe
    sta m
    lda m+1
    sbc $ff
    sta m+1
  //SEG278 [138] (signed byte) slow_signed_multiply::i#1 ← -- (signed byte) slow_signed_multiply::i#2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ) -- vbsz1=_dec_vbsz1 
    dec i
  //SEG279 [139] if((signed byte) slow_signed_multiply::i#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ) -- vbsz1_neq_vbsz2_then_la1 
    lda i
    cmp a
    bne b2_from_b2
  //SEG280 [140] phi from slow_signed_multiply::@2 slow_signed_multiply::@5 to slow_signed_multiply::@3 [phi:slow_signed_multiply::@2/slow_signed_multiply::@5->slow_signed_multiply::@3]
  b3_from_b2:
  b3_from_b5:
  //SEG281 [140] phi (signed word) slow_signed_multiply::return#0 = (signed word) slow_signed_multiply::m#1 [phi:slow_signed_multiply::@2/slow_signed_multiply::@5->slow_signed_multiply::@3#0] -- register_copy 
    jmp b3
  //SEG282 [140] phi from slow_signed_multiply::@1 to slow_signed_multiply::@3 [phi:slow_signed_multiply::@1->slow_signed_multiply::@3]
  b3_from_b1:
  //SEG283 [140] phi (signed word) slow_signed_multiply::return#0 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply::@1->slow_signed_multiply::@3#0] -- vwsz1=vbuc1 
    lda #0
    sta return
    lda #0
    sta return+1
    jmp b3
  //SEG284 slow_signed_multiply::@3
  b3:
    jmp breturn
  //SEG285 slow_signed_multiply::@return
  breturn:
  //SEG286 [141] return  [ slow_signed_multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::return#0 ] )
    rts
  //SEG287 slow_signed_multiply::@1
  b1:
  //SEG288 [142] if((signed byte) slow_signed_multiply::a#0<=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@3 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ) -- vbsz1_le_0_then_la1 
    lda a
    cmp #1
    bmi b3_from_b1
  //SEG289 [143] phi from slow_signed_multiply::@1 to slow_signed_multiply::@5 [phi:slow_signed_multiply::@1->slow_signed_multiply::@5]
  b5_from_b1:
  //SEG290 [143] phi (signed byte) slow_signed_multiply::j#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply::@1->slow_signed_multiply::@5#0] -- vbsz1=vbuc1 
    lda #0
    sta j
  //SEG291 [143] phi (signed word) slow_signed_multiply::m#5 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply::@1->slow_signed_multiply::@5#1] -- vwsz1=vbuc1 
    lda #0
    sta m
    lda #0
    sta m+1
    jmp b5
  //SEG292 [143] phi from slow_signed_multiply::@5 to slow_signed_multiply::@5 [phi:slow_signed_multiply::@5->slow_signed_multiply::@5]
  b5_from_b5:
  //SEG293 [143] phi (signed byte) slow_signed_multiply::j#2 = (signed byte) slow_signed_multiply::j#1 [phi:slow_signed_multiply::@5->slow_signed_multiply::@5#0] -- register_copy 
  //SEG294 [143] phi (signed word) slow_signed_multiply::m#5 = (signed word) slow_signed_multiply::m#2 [phi:slow_signed_multiply::@5->slow_signed_multiply::@5#1] -- register_copy 
    jmp b5
  //SEG295 slow_signed_multiply::@5
  b5:
  //SEG296 [144] (signed word) slow_signed_multiply::m#2 ← (signed word) slow_signed_multiply::m#5 + (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ) -- vwsz1=vwsz1_plus_vbsz2 
    lda b
    sta $fe
    ora #$7f
    bmi !+
    lda #0
  !:
    sta $ff
    clc
    lda m
    adc $fe
    sta m
    lda m+1
    adc $ff
    sta m+1
  //SEG297 [145] (signed byte) slow_signed_multiply::j#1 ← ++ (signed byte) slow_signed_multiply::j#2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ) -- vbsz1=_inc_vbsz1 
    inc j
  //SEG298 [146] if((signed byte) slow_signed_multiply::j#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@5 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ) -- vbsz1_neq_vbsz2_then_la1 
    lda j
    cmp a
    bne b5_from_b5
    jmp b3_from_b5
}
//SEG299 multiply_results_compare
multiply_results_compare: {
    .label ms = $52
    .label ma = $56
    .label b = $1a
    .label a = $19
  //SEG300 [148] phi from multiply_results_compare to multiply_results_compare::@1 [phi:multiply_results_compare->multiply_results_compare::@1]
  b1_from_multiply_results_compare:
  //SEG301 [148] phi (byte) multiply_results_compare::a#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:multiply_results_compare->multiply_results_compare::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta a
    jmp b1
  //SEG302 [148] phi from multiply_results_compare::@6 to multiply_results_compare::@1 [phi:multiply_results_compare::@6->multiply_results_compare::@1]
  b1_from_b6:
  //SEG303 [148] phi (byte) multiply_results_compare::a#6 = (byte) multiply_results_compare::a#1 [phi:multiply_results_compare::@6->multiply_results_compare::@1#0] -- register_copy 
    jmp b1
  //SEG304 multiply_results_compare::@1
  b1:
  //SEG305 [149] phi from multiply_results_compare::@1 to multiply_results_compare::@2 [phi:multiply_results_compare::@1->multiply_results_compare::@2]
  b2_from_b1:
  //SEG306 [149] phi (byte) multiply_results_compare::b#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:multiply_results_compare::@1->multiply_results_compare::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta b
    jmp b2
  //SEG307 [149] phi from multiply_results_compare::@3 to multiply_results_compare::@2 [phi:multiply_results_compare::@3->multiply_results_compare::@2]
  b2_from_b3:
  //SEG308 [149] phi (byte) multiply_results_compare::b#2 = (byte) multiply_results_compare::b#1 [phi:multiply_results_compare::@3->multiply_results_compare::@2#0] -- register_copy 
    jmp b2
  //SEG309 multiply_results_compare::@2
  b2:
  //SEG310 [150] (byte) slow_multiply::a#0 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 ] ) -- vbuz1=vbuz2 
    lda a
    sta slow_multiply.a
  //SEG311 [151] (byte) slow_multiply::b#0 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ) -- vbuz1=vbuz2 
    lda b
    sta slow_multiply.b
  //SEG312 [152] call slow_multiply param-assignment [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] )
    jsr slow_multiply
  //SEG313 [153] (word) slow_multiply::return#2 ← (word) slow_multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] ) -- vwuz1=vwuz2 
    lda slow_multiply.return
    sta slow_multiply.return_2
    lda slow_multiply.return+1
    sta slow_multiply.return_2+1
    jmp b8
  //SEG314 multiply_results_compare::@8
  b8:
  //SEG315 [154] (word) multiply_results_compare::ms#0 ← (word) slow_multiply::return#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- vwuz1=vwuz2 
    lda slow_multiply.return_2
    sta ms
    lda slow_multiply.return_2+1
    sta ms+1
  //SEG316 [155] (byte) multiply::a#1 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- vbuz1=vbuz2 
    lda a
    sta multiply.a
  //SEG317 [156] (byte) multiply::b#1 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply::b#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply::b#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- vbuz1=vbuz2 
    lda b
    sta multiply.b
  //SEG318 [157] call multiply param-assignment [ line_cursor#27 char_cursor#27 multiply::return#0 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::return#0 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] )
  //SEG319 [129] phi from multiply_results_compare::@8 to multiply [phi:multiply_results_compare::@8->multiply]
  multiply_from_b8:
  //SEG320 [129] phi (byte) multiply::b#2 = (byte) multiply::b#1 [phi:multiply_results_compare::@8->multiply#0] -- register_copy 
  //SEG321 [129] phi (byte) multiply::a#2 = (byte) multiply::a#1 [phi:multiply_results_compare::@8->multiply#1] -- register_copy 
    jsr multiply
  //SEG322 [158] (word) multiply::return#3 ← (word) multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] ) -- vwuz1=vwuz2 
    lda multiply.return
    sta multiply.return_3
    lda multiply.return+1
    sta multiply.return_3+1
    jmp b9
  //SEG323 multiply_results_compare::@9
  b9:
  //SEG324 [159] (word) multiply_results_compare::ma#0 ← (word) multiply::return#3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) -- vwuz1=vwuz2 
    lda multiply.return_3
    sta ma
    lda multiply.return_3+1
    sta ma+1
  //SEG325 [160] if((word) multiply_results_compare::ms#0==(word) multiply_results_compare::ma#0) goto multiply_results_compare::@3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) -- vwuz1_eq_vwuz2_then_la1 
    lda ms
    cmp ma
    bne !+
    lda ms+1
    cmp ma+1
    beq b3
  !:
    jmp b4
  //SEG326 multiply_results_compare::@4
  b4:
  //SEG327 [161] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL
  //SEG328 [162] (byte) multiply_error::a#0 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 ] ) -- vbuz1=vbuz2 
    lda a
    sta multiply_error.a
  //SEG329 [163] (byte) multiply_error::b#0 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 ] ) -- vbuz1=vbuz2 
    lda b
    sta multiply_error.b
  //SEG330 [164] (word) multiply_error::ms#0 ← (word) multiply_results_compare::ms#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] ) -- vwuz1=vwuz2 
    lda ms
    sta multiply_error.ms
    lda ms+1
    sta multiply_error.ms+1
  //SEG331 [165] (word) multiply_error::ma#0 ← (word) multiply_results_compare::ma#0 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ) -- vwuz1=vwuz2 
    lda ma
    sta multiply_error.ma
    lda ma+1
    sta multiply_error.ma+1
  //SEG332 [166] call multiply_error param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
  //SEG333 [176] phi from multiply_results_compare::@4 to multiply_error [phi:multiply_results_compare::@4->multiply_error]
  multiply_error_from_b4:
    jsr multiply_error
    jmp breturn
  //SEG334 multiply_results_compare::@return
  breturn:
  //SEG335 [167] return  [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
    rts
  //SEG336 multiply_results_compare::@3
  b3:
  //SEG337 [168] (byte) multiply_results_compare::b#1 ← ++ (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ) -- vbuz1=_inc_vbuz1 
    inc b
  //SEG338 [169] if((byte) multiply_results_compare::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ) -- vbuz1_neq_0_then_la1 
    lda b
    bne b2_from_b3
    jmp b6
  //SEG339 multiply_results_compare::@6
  b6:
  //SEG340 [170] (byte) multiply_results_compare::a#1 ← ++ (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ) -- vbuz1=_inc_vbuz1 
    inc a
  //SEG341 [171] if((byte) multiply_results_compare::a#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@1 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ) -- vbuz1_neq_0_then_la1 
    lda a
    bne b1_from_b6
  //SEG342 [172] phi from multiply_results_compare::@6 to multiply_results_compare::@7 [phi:multiply_results_compare::@6->multiply_results_compare::@7]
  b7_from_b6:
    jmp b7
  //SEG343 multiply_results_compare::@7
  b7:
  //SEG344 [173] call print_str param-assignment [ char_cursor#117 line_cursor#27 ] ( main:2::multiply_results_compare:13 [ char_cursor#117 line_cursor#27 ] )
  //SEG345 [51] phi from multiply_results_compare::@7 to print_str [phi:multiply_results_compare::@7->print_str]
  print_str_from_b7:
  //SEG346 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#27 [phi:multiply_results_compare::@7->print_str#0] -- register_copy 
  //SEG347 [51] phi (byte*) print_str::str#16 = (const string) multiply_results_compare::str [phi:multiply_results_compare::@7->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
  //SEG348 [174] phi from multiply_results_compare::@7 to multiply_results_compare::@11 [phi:multiply_results_compare::@7->multiply_results_compare::@11]
  b11_from_b7:
    jmp b11
  //SEG349 multiply_results_compare::@11
  b11:
  //SEG350 [175] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
  //SEG351 [46] phi from multiply_results_compare::@11 to print_ln [phi:multiply_results_compare::@11->print_ln]
  print_ln_from_b11:
  //SEG352 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#117 [phi:multiply_results_compare::@11->print_ln#0] -- register_copy 
  //SEG353 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#27 [phi:multiply_results_compare::@11->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
    str: .text "multiply results match!@"
}
//SEG354 multiply_error
multiply_error: {
    .label a = $58
    .label b = $59
    .label ms = $5a
    .label ma = $5c
  //SEG355 [177] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG356 [51] phi from multiply_error to print_str [phi:multiply_error->print_str]
  print_str_from_multiply_error:
  //SEG357 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#27 [phi:multiply_error->print_str#0] -- register_copy 
  //SEG358 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str [phi:multiply_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
    jmp b1
  //SEG359 multiply_error::@1
  b1:
  //SEG360 [178] (byte) print_byte::b#3 ← (byte) multiply_error::a#0 [ char_cursor#117 line_cursor#27 print_byte::b#3 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_byte::b#3 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ) -- vbuz1=vbuz2 
    lda a
    sta print_byte.b
  //SEG361 [179] call print_byte param-assignment [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG362 [92] phi from multiply_error::@1 to print_byte [phi:multiply_error::@1->print_byte]
  print_byte_from_b1:
  //SEG363 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#117 [phi:multiply_error::@1->print_byte#0] -- register_copy 
  //SEG364 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#3 [phi:multiply_error::@1->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG365 [180] phi from multiply_error::@1 to multiply_error::@2 [phi:multiply_error::@1->multiply_error::@2]
  b2_from_b1:
    jmp b2
  //SEG366 multiply_error::@2
  b2:
  //SEG367 [181] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG368 [51] phi from multiply_error::@2 to print_str [phi:multiply_error::@2->print_str]
  print_str_from_b2:
  //SEG369 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_error::@2->print_str#0] -- register_copy 
  //SEG370 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str1 [phi:multiply_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta print_str.str
    lda #>str1
    sta print_str.str+1
    jsr print_str
    jmp b3
  //SEG371 multiply_error::@3
  b3:
  //SEG372 [182] (byte) print_byte::b#4 ← (byte) multiply_error::b#0 [ char_cursor#117 line_cursor#27 print_byte::b#4 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_byte::b#4 multiply_error::ms#0 multiply_error::ma#0 ] ) -- vbuz1=vbuz2 
    lda b
    sta print_byte.b
  //SEG373 [183] call print_byte param-assignment [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG374 [92] phi from multiply_error::@3 to print_byte [phi:multiply_error::@3->print_byte]
  print_byte_from_b3:
  //SEG375 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#117 [phi:multiply_error::@3->print_byte#0] -- register_copy 
  //SEG376 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#4 [phi:multiply_error::@3->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG377 [184] phi from multiply_error::@3 to multiply_error::@4 [phi:multiply_error::@3->multiply_error::@4]
  b4_from_b3:
    jmp b4
  //SEG378 multiply_error::@4
  b4:
  //SEG379 [185] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG380 [51] phi from multiply_error::@4 to print_str [phi:multiply_error::@4->print_str]
  print_str_from_b4:
  //SEG381 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_error::@4->print_str#0] -- register_copy 
  //SEG382 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str2 [phi:multiply_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta print_str.str
    lda #>str2
    sta print_str.str+1
    jsr print_str
    jmp b5
  //SEG383 multiply_error::@5
  b5:
  //SEG384 [186] (word) print_word::w#3 ← (word) multiply_error::ms#0 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ) -- vwuz1=vwuz2 
    lda ms
    sta print_word.w
    lda ms+1
    sta print_word.w+1
  //SEG385 [187] call print_word param-assignment [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] )
  //SEG386 [86] phi from multiply_error::@5 to print_word [phi:multiply_error::@5->print_word]
  print_word_from_b5:
  //SEG387 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_error::@5->print_word#0] -- register_copy 
  //SEG388 [86] phi (word) print_word::w#5 = (word) print_word::w#3 [phi:multiply_error::@5->print_word#1] -- register_copy 
    jsr print_word
  //SEG389 [188] phi from multiply_error::@5 to multiply_error::@6 [phi:multiply_error::@5->multiply_error::@6]
  b6_from_b5:
    jmp b6
  //SEG390 multiply_error::@6
  b6:
  //SEG391 [189] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::ma#0 ] )
  //SEG392 [51] phi from multiply_error::@6 to print_str [phi:multiply_error::@6->print_str]
  print_str_from_b6:
  //SEG393 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_error::@6->print_str#0] -- register_copy 
  //SEG394 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str3 [phi:multiply_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta print_str.str
    lda #>str3
    sta print_str.str+1
    jsr print_str
    jmp b7
  //SEG395 multiply_error::@7
  b7:
  //SEG396 [190] (word) print_word::w#4 ← (word) multiply_error::ma#0 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ) -- vwuz1=vwuz2 
    lda ma
    sta print_word.w
    lda ma+1
    sta print_word.w+1
  //SEG397 [191] call print_word param-assignment [ char_cursor#17 line_cursor#27 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 ] )
  //SEG398 [86] phi from multiply_error::@7 to print_word [phi:multiply_error::@7->print_word]
  print_word_from_b7:
  //SEG399 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_error::@7->print_word#0] -- register_copy 
  //SEG400 [86] phi (word) print_word::w#5 = (word) print_word::w#4 [phi:multiply_error::@7->print_word#1] -- register_copy 
    jsr print_word
  //SEG401 [192] phi from multiply_error::@7 to multiply_error::@8 [phi:multiply_error::@7->multiply_error::@8]
  b8_from_b7:
    jmp b8
  //SEG402 multiply_error::@8
  b8:
  //SEG403 [193] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ line_cursor#1 ] )
  //SEG404 [46] phi from multiply_error::@8 to print_ln [phi:multiply_error::@8->print_ln]
  print_ln_from_b8:
  //SEG405 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#17 [phi:multiply_error::@8->print_ln#0] -- register_copy 
  //SEG406 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#27 [phi:multiply_error::@8->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
  //SEG407 multiply_error::@return
  breturn:
  //SEG408 [194] return  [ line_cursor#1 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ line_cursor#1 ] )
    rts
    str: .text "multiply mismatch @"
    str1: .text "*@"
    str2: .text " slow:@"
    str3: .text " / fast asm:@"
}
//SEG409 slow_multiply
slow_multiply: {
    .label return = $1c
    .label m = $1c
    .label i = $1b
    .label a = $4e
    .label b = $4f
    .label return_2 = $50
  //SEG410 [195] if((byte) slow_multiply::a#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_multiply::@1 [ slow_multiply::a#0 slow_multiply::b#0 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ) -- vbuz1_eq_0_then_la1 
    lda a
    beq b1_from_slow_multiply
  //SEG411 [196] phi from slow_multiply to slow_multiply::@2 [phi:slow_multiply->slow_multiply::@2]
  b2_from_slow_multiply:
  //SEG412 [196] phi (byte) slow_multiply::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_multiply->slow_multiply::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta i
  //SEG413 [196] phi (word) slow_multiply::m#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_multiply->slow_multiply::@2#1] -- vwuz1=vbuc1 
    lda #0
    sta m
    lda #0
    sta m+1
    jmp b2
  //SEG414 [196] phi from slow_multiply::@2 to slow_multiply::@2 [phi:slow_multiply::@2->slow_multiply::@2]
  b2_from_b2:
  //SEG415 [196] phi (byte) slow_multiply::i#2 = (byte) slow_multiply::i#1 [phi:slow_multiply::@2->slow_multiply::@2#0] -- register_copy 
  //SEG416 [196] phi (word) slow_multiply::m#3 = (word) slow_multiply::m#1 [phi:slow_multiply::@2->slow_multiply::@2#1] -- register_copy 
    jmp b2
  //SEG417 slow_multiply::@2
  b2:
  //SEG418 [197] (word) slow_multiply::m#1 ← (word) slow_multiply::m#3 + (byte) slow_multiply::b#0 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ) -- vwuz1=vwuz1_plus_vbuz2 
    lda b
    clc
    adc m
    sta m
    lda #0
    adc m+1
    sta m+1
  //SEG419 [198] (byte) slow_multiply::i#1 ← ++ (byte) slow_multiply::i#2 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG420 [199] if((byte) slow_multiply::i#1!=(byte) slow_multiply::a#0) goto slow_multiply::@2 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ) -- vbuz1_neq_vbuz2_then_la1 
    lda i
    cmp a
    bne b2_from_b2
  //SEG421 [200] phi from slow_multiply::@2 to slow_multiply::@1 [phi:slow_multiply::@2->slow_multiply::@1]
  b1_from_b2:
  //SEG422 [200] phi (word) slow_multiply::return#0 = (word) slow_multiply::m#1 [phi:slow_multiply::@2->slow_multiply::@1#0] -- register_copy 
    jmp b1
  //SEG423 [200] phi from slow_multiply to slow_multiply::@1 [phi:slow_multiply->slow_multiply::@1]
  b1_from_slow_multiply:
  //SEG424 [200] phi (word) slow_multiply::return#0 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_multiply->slow_multiply::@1#0] -- vwuz1=vbuc1 
    lda #0
    sta return
    lda #0
    sta return+1
    jmp b1
  //SEG425 slow_multiply::@1
  b1:
    jmp breturn
  //SEG426 slow_multiply::@return
  breturn:
  //SEG427 [201] return  [ slow_multiply::return#0 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] )
    rts
}
//SEG428 multiply_tables_compare
multiply_tables_compare: {
    .label asm_sqr = $20
    .label kc_sqr = $1e
  //SEG429 [203] phi from multiply_tables_compare to multiply_tables_compare::@1 [phi:multiply_tables_compare->multiply_tables_compare::@1]
  b1_from_multiply_tables_compare:
  //SEG430 [203] phi (byte*) multiply_tables_compare::asm_sqr#2 = (const byte[512]) asm_mul_sqr1_lo#0 [phi:multiply_tables_compare->multiply_tables_compare::@1#0] -- pbuz1=pbuc1 
    lda #<asm_mul_sqr1_lo
    sta asm_sqr
    lda #>asm_mul_sqr1_lo
    sta asm_sqr+1
  //SEG431 [203] phi (byte*) multiply_tables_compare::kc_sqr#2 = (const byte[512]) mul_sqr1_lo#0 [phi:multiply_tables_compare->multiply_tables_compare::@1#1] -- pbuz1=pbuc1 
    lda #<mul_sqr1_lo
    sta kc_sqr
    lda #>mul_sqr1_lo
    sta kc_sqr+1
    jmp b1
  //SEG432 [203] phi from multiply_tables_compare::@2 to multiply_tables_compare::@1 [phi:multiply_tables_compare::@2->multiply_tables_compare::@1]
  b1_from_b2:
  //SEG433 [203] phi (byte*) multiply_tables_compare::asm_sqr#2 = (byte*) multiply_tables_compare::asm_sqr#1 [phi:multiply_tables_compare::@2->multiply_tables_compare::@1#0] -- register_copy 
  //SEG434 [203] phi (byte*) multiply_tables_compare::kc_sqr#2 = (byte*) multiply_tables_compare::kc_sqr#1 [phi:multiply_tables_compare::@2->multiply_tables_compare::@1#1] -- register_copy 
    jmp b1
  //SEG435 multiply_tables_compare::@1
  b1:
  //SEG436 [204] if(*((byte*) multiply_tables_compare::kc_sqr#2)==*((byte*) multiply_tables_compare::asm_sqr#2)) goto multiply_tables_compare::@2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) -- _deref_pbuz1_eq__deref_pbuz2_then_la1 
    ldy #0
    lda (kc_sqr),y
    ldy #0
    cmp (asm_sqr),y
    beq b2
    jmp b3
  //SEG437 multiply_tables_compare::@3
  b3:
  //SEG438 [205] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL
  //SEG439 [206] call print_str param-assignment [ char_cursor#117 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] )
  //SEG440 [51] phi from multiply_tables_compare::@3 to print_str [phi:multiply_tables_compare::@3->print_str]
  print_str_from_b3:
  //SEG441 [51] phi (byte*) char_cursor#135 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@3->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta char_cursor
    lda #>$400
    sta char_cursor+1
  //SEG442 [51] phi (byte*) print_str::str#16 = (const string) multiply_tables_compare::str [phi:multiply_tables_compare::@3->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
    jmp b6
  //SEG443 multiply_tables_compare::@6
  b6:
  //SEG444 [207] (word~) print_word::w#9 ← (word)(byte*) multiply_tables_compare::asm_sqr#2 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ) -- vwuz1=vwuz2 
    lda asm_sqr
    sta print_word.w
    lda asm_sqr+1
    sta print_word.w+1
  //SEG445 [208] call print_word param-assignment [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] )
  //SEG446 [86] phi from multiply_tables_compare::@6 to print_word [phi:multiply_tables_compare::@6->print_word]
  print_word_from_b6:
  //SEG447 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_tables_compare::@6->print_word#0] -- register_copy 
  //SEG448 [86] phi (word) print_word::w#5 = (word~) print_word::w#9 [phi:multiply_tables_compare::@6->print_word#1] -- register_copy 
    jsr print_word
  //SEG449 [209] phi from multiply_tables_compare::@6 to multiply_tables_compare::@7 [phi:multiply_tables_compare::@6->multiply_tables_compare::@7]
  b7_from_b6:
    jmp b7
  //SEG450 multiply_tables_compare::@7
  b7:
  //SEG451 [210] call print_str param-assignment [ char_cursor#117 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 multiply_tables_compare::kc_sqr#2 ] )
  //SEG452 [51] phi from multiply_tables_compare::@7 to print_str [phi:multiply_tables_compare::@7->print_str]
  print_str_from_b7:
  //SEG453 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_tables_compare::@7->print_str#0] -- register_copy 
  //SEG454 [51] phi (byte*) print_str::str#16 = (const string) multiply_tables_compare::str1 [phi:multiply_tables_compare::@7->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta print_str.str
    lda #>str1
    sta print_str.str+1
    jsr print_str
    jmp b8
  //SEG455 multiply_tables_compare::@8
  b8:
  //SEG456 [211] (word~) print_word::w#10 ← (word)(byte*) multiply_tables_compare::kc_sqr#2 [ char_cursor#117 print_word::w#10 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#10 ] ) -- vwuz1=vwuz2 
    lda kc_sqr
    sta print_word.w
    lda kc_sqr+1
    sta print_word.w+1
  //SEG457 [212] call print_word param-assignment [ char_cursor#17 ] ( main:2::multiply_tables_compare:11 [ char_cursor#17 ] )
  //SEG458 [86] phi from multiply_tables_compare::@8 to print_word [phi:multiply_tables_compare::@8->print_word]
  print_word_from_b8:
  //SEG459 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_tables_compare::@8->print_word#0] -- register_copy 
  //SEG460 [86] phi (word) print_word::w#5 = (word~) print_word::w#10 [phi:multiply_tables_compare::@8->print_word#1] -- register_copy 
    jsr print_word
  //SEG461 [213] phi from multiply_tables_compare::@8 to multiply_tables_compare::@return [phi:multiply_tables_compare::@8->multiply_tables_compare::@return]
  breturn_from_b8:
  //SEG462 [213] phi (byte*) line_cursor#27 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@8->multiply_tables_compare::@return#0] -- pbuz1=pbuc1 
    lda #<$400
    sta line_cursor
    lda #>$400
    sta line_cursor+1
  //SEG463 [213] phi (byte*) char_cursor#27 = (byte*) char_cursor#17 [phi:multiply_tables_compare::@8->multiply_tables_compare::@return#1] -- register_copy 
    jmp breturn
  //SEG464 multiply_tables_compare::@return
  breturn:
  //SEG465 [214] return  [ line_cursor#27 char_cursor#27 ] ( main:2::multiply_tables_compare:11 [ line_cursor#27 char_cursor#27 ] )
    rts
  //SEG466 multiply_tables_compare::@2
  b2:
  //SEG467 [215] (byte*) multiply_tables_compare::asm_sqr#1 ← ++ (byte*) multiply_tables_compare::asm_sqr#2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#1 ] ) -- pbuz1=_inc_pbuz1 
    inc asm_sqr
    bne !+
    inc asm_sqr+1
  !:
  //SEG468 [216] (byte*) multiply_tables_compare::kc_sqr#1 ← ++ (byte*) multiply_tables_compare::kc_sqr#2 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ) -- pbuz1=_inc_pbuz1 
    inc kc_sqr
    bne !+
    inc kc_sqr+1
  !:
  //SEG469 [217] if((byte*) multiply_tables_compare::kc_sqr#1<(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512*(byte/signed byte/word/signed word/dword/signed dword) 4) goto multiply_tables_compare::@1 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ) -- pbuz1_lt_pbuc1_then_la1 
    lda kc_sqr+1
    cmp #>mul_sqr1_lo+$200*4
    bcc b1_from_b2
    bne !+
    lda kc_sqr
    cmp #<mul_sqr1_lo+$200*4
    bcc b1_from_b2
  !:
  //SEG470 [218] phi from multiply_tables_compare::@2 to multiply_tables_compare::@5 [phi:multiply_tables_compare::@2->multiply_tables_compare::@5]
  b5_from_b2:
    jmp b5
  //SEG471 multiply_tables_compare::@5
  b5:
  //SEG472 [219] call print_str param-assignment [ char_cursor#117 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 ] )
  //SEG473 [51] phi from multiply_tables_compare::@5 to print_str [phi:multiply_tables_compare::@5->print_str]
  print_str_from_b5:
  //SEG474 [51] phi (byte*) char_cursor#135 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@5->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta char_cursor
    lda #>$400
    sta char_cursor+1
  //SEG475 [51] phi (byte*) print_str::str#16 = (const string) multiply_tables_compare::str2 [phi:multiply_tables_compare::@5->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta print_str.str
    lda #>str2
    sta print_str.str+1
    jsr print_str
  //SEG476 [220] phi from multiply_tables_compare::@5 to multiply_tables_compare::@10 [phi:multiply_tables_compare::@5->multiply_tables_compare::@10]
  b10_from_b5:
    jmp b10
  //SEG477 multiply_tables_compare::@10
  b10:
  //SEG478 [221] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 ] )
  //SEG479 [46] phi from multiply_tables_compare::@10 to print_ln [phi:multiply_tables_compare::@10->print_ln]
  print_ln_from_b10:
  //SEG480 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#117 [phi:multiply_tables_compare::@10->print_ln#0] -- register_copy 
  //SEG481 [46] phi (byte*) line_cursor#40 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@10->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta line_cursor
    lda #>$400
    sta line_cursor+1
    jsr print_ln
  //SEG482 [222] (byte*~) char_cursor#197 ← (byte*) line_cursor#1 [ line_cursor#1 char_cursor#197 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 char_cursor#197 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG483 [213] phi from multiply_tables_compare::@10 to multiply_tables_compare::@return [phi:multiply_tables_compare::@10->multiply_tables_compare::@return]
  breturn_from_b10:
  //SEG484 [213] phi (byte*) line_cursor#27 = (byte*) line_cursor#1 [phi:multiply_tables_compare::@10->multiply_tables_compare::@return#0] -- register_copy 
  //SEG485 [213] phi (byte*) char_cursor#27 = (byte*~) char_cursor#197 [phi:multiply_tables_compare::@10->multiply_tables_compare::@return#1] -- register_copy 
    jmp breturn
    str: .text "multiply table mismatch at @"
    str1: .text " / @"
    str2: .text "multiply tables match!@"
}
//SEG486 init_multiply_asm
init_multiply_asm: {
    .const mem = $ff
  //SEG487 asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: staasm_mul_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: staasm_mul_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldaasm_mul_sqr1_hi+1,x staasm_mul_sqr2_hi+$100,x ldaasm_mul_sqr1_hi,x staasm_mul_sqr2_hi,y ldaasm_mul_sqr1_lo+1,x staasm_mul_sqr2_lo+$100,x ldaasm_mul_sqr1_lo,x staasm_mul_sqr2_lo,y dey inx bne!-  }
    ldx #0
    txa
    .byte $c9
  lb1:
    tya
    adc #0
  ml1:
    sta asm_mul_sqr1_hi,x
    tay
    cmp #$40
    txa
    ror
  ml9:
    adc #0
    sta ml9+1
    inx
  ml0:
    sta asm_mul_sqr1_lo,x
    bne lb1
    inc ml0+2
    inc ml1+2
    clc
    iny
    bne lb1
    ldx #0
    ldy #$ff
  !:
    lda asm_mul_sqr1_hi+1,x
    sta asm_mul_sqr2_hi+$100,x
    lda asm_mul_sqr1_hi,x
    sta asm_mul_sqr2_hi,y
    lda asm_mul_sqr1_lo+1,x
    sta asm_mul_sqr2_lo+$100,x
    lda asm_mul_sqr1_lo,x
    sta asm_mul_sqr2_lo,y
    dey
    inx
    bne !-
  //SEG488 [224] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr1_lo
    sta mem
  //SEG489 [225] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr1_hi
    sta mem
  //SEG490 [226] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr2_lo
    sta mem
  //SEG491 [227] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr2_hi
    sta mem
    jmp breturn
  //SEG492 init_multiply_asm::@return
  breturn:
  //SEG493 [228] return  [ ] ( main:2::init_multiply_asm:9 [ ] )
    rts
}
//SEG494 init_multiply
init_multiply: {
    .label _2 = $5e
    .label _5 = $5f
    .label _6 = $60
    .label c = $22
    .label sqr1_hi = $25
    .label sqr = $28
    .label sqr1_lo = $23
    .label x_2 = $27
    .label sqr2_hi = $2d
    .label x_255 = $2a
    .label sqr2_lo = $2b
    .label dir = $2f
  //SEG495 [230] phi from init_multiply to init_multiply::@1 [phi:init_multiply->init_multiply::@1]
  b1_from_init_multiply:
  //SEG496 [230] phi (byte) init_multiply::x_2#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init_multiply->init_multiply::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta x_2
  //SEG497 [230] phi (byte*) init_multiply::sqr1_hi#2 = (const byte[512]) mul_sqr1_hi#0+(byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply->init_multiply::@1#1] -- pbuz1=pbuc1 
    lda #<mul_sqr1_hi+1
    sta sqr1_hi
    lda #>mul_sqr1_hi+1
    sta sqr1_hi+1
  //SEG498 [230] phi (byte*) init_multiply::sqr1_lo#2 = (const byte[512]) mul_sqr1_lo#0+(byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply->init_multiply::@1#2] -- pbuz1=pbuc1 
    lda #<mul_sqr1_lo+1
    sta sqr1_lo
    lda #>mul_sqr1_lo+1
    sta sqr1_lo+1
  //SEG499 [230] phi (word) init_multiply::sqr#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init_multiply->init_multiply::@1#3] -- vwuz1=vbuc1 
    lda #0
    sta sqr
    lda #0
    sta sqr+1
  //SEG500 [230] phi (byte) init_multiply::c#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init_multiply->init_multiply::@1#4] -- vbuz1=vbuc1 
    lda #0
    sta c
    jmp b1
  //SEG501 [230] phi from init_multiply::@2 to init_multiply::@1 [phi:init_multiply::@2->init_multiply::@1]
  b1_from_b2:
  //SEG502 [230] phi (byte) init_multiply::x_2#3 = (byte) init_multiply::x_2#2 [phi:init_multiply::@2->init_multiply::@1#0] -- register_copy 
  //SEG503 [230] phi (byte*) init_multiply::sqr1_hi#2 = (byte*) init_multiply::sqr1_hi#1 [phi:init_multiply::@2->init_multiply::@1#1] -- register_copy 
  //SEG504 [230] phi (byte*) init_multiply::sqr1_lo#2 = (byte*) init_multiply::sqr1_lo#1 [phi:init_multiply::@2->init_multiply::@1#2] -- register_copy 
  //SEG505 [230] phi (word) init_multiply::sqr#4 = (word) init_multiply::sqr#1 [phi:init_multiply::@2->init_multiply::@1#3] -- register_copy 
  //SEG506 [230] phi (byte) init_multiply::c#2 = (byte) init_multiply::c#1 [phi:init_multiply::@2->init_multiply::@1#4] -- register_copy 
    jmp b1
  //SEG507 init_multiply::@1
  b1:
  //SEG508 [231] (byte) init_multiply::c#1 ← ++ (byte) init_multiply::c#2 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ) -- vbuz1=_inc_vbuz1 
    inc c
  //SEG509 [232] (byte~) init_multiply::$2 ← (byte) init_multiply::c#1 & (byte/signed byte/word/signed word/dword/signed dword) 1 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #1
    and c
    sta _2
  //SEG510 [233] if((byte~) init_multiply::$2!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@2 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ) -- vbuz1_neq_0_then_la1 
    lda _2
    bne b2_from_b1
    jmp b5
  //SEG511 init_multiply::@5
  b5:
  //SEG512 [234] (byte) init_multiply::x_2#1 ← ++ (byte) init_multiply::x_2#3 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 ] ) -- vbuz1=_inc_vbuz1 
    inc x_2
  //SEG513 [235] (word) init_multiply::sqr#2 ← ++ (word) init_multiply::sqr#4 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 init_multiply::sqr#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 init_multiply::sqr#2 ] ) -- vwuz1=_inc_vwuz1 
    inc sqr
    bne !+
    inc sqr+1
  !:
  //SEG514 [236] phi from init_multiply::@1 init_multiply::@5 to init_multiply::@2 [phi:init_multiply::@1/init_multiply::@5->init_multiply::@2]
  b2_from_b1:
  b2_from_b5:
  //SEG515 [236] phi (byte) init_multiply::x_2#2 = (byte) init_multiply::x_2#3 [phi:init_multiply::@1/init_multiply::@5->init_multiply::@2#0] -- register_copy 
  //SEG516 [236] phi (word) init_multiply::sqr#3 = (word) init_multiply::sqr#4 [phi:init_multiply::@1/init_multiply::@5->init_multiply::@2#1] -- register_copy 
    jmp b2
  //SEG517 init_multiply::@2
  b2:
  //SEG518 [237] (byte~) init_multiply::$5 ← < (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ) -- vbuz1=_lo_vwuz2 
    lda sqr
    sta _5
  //SEG519 [238] *((byte*) init_multiply::sqr1_lo#2) ← (byte~) init_multiply::$5 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) -- _deref_pbuz1=vbuz2 
    lda _5
    ldy #0
    sta (sqr1_lo),y
  //SEG520 [239] (byte~) init_multiply::$6 ← > (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ) -- vbuz1=_hi_vwuz2 
    lda sqr+1
    sta _6
  //SEG521 [240] *((byte*) init_multiply::sqr1_hi#2) ← (byte~) init_multiply::$6 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) -- _deref_pbuz1=vbuz2 
    lda _6
    ldy #0
    sta (sqr1_hi),y
  //SEG522 [241] (byte*) init_multiply::sqr1_hi#1 ← ++ (byte*) init_multiply::sqr1_hi#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr1_hi
    bne !+
    inc sqr1_hi+1
  !:
  //SEG523 [242] (word) init_multiply::sqr#1 ← (word) init_multiply::sqr#3 + (byte) init_multiply::x_2#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) -- vwuz1=vwuz1_plus_vbuz2 
    lda x_2
    clc
    adc sqr
    sta sqr
    lda #0
    adc sqr+1
    sta sqr+1
  //SEG524 [243] (byte*) init_multiply::sqr1_lo#1 ← ++ (byte*) init_multiply::sqr1_lo#2 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr1_lo
    bne !+
    inc sqr1_lo+1
  !:
  //SEG525 [244] if((byte*) init_multiply::sqr1_lo#1!=(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512) goto init_multiply::@1 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda sqr1_lo+1
    cmp #>mul_sqr1_lo+$200
    bne b1_from_b2
    lda sqr1_lo
    cmp #<mul_sqr1_lo+$200
    bne b1_from_b2
  //SEG526 [245] phi from init_multiply::@2 to init_multiply::@3 [phi:init_multiply::@2->init_multiply::@3]
  b3_from_b2:
  //SEG527 [245] phi (byte) init_multiply::dir#2 = (byte/word/signed word/dword/signed dword) 255 [phi:init_multiply::@2->init_multiply::@3#0] -- vbuz1=vbuc1 
    lda #$ff
    sta dir
  //SEG528 [245] phi (byte*) init_multiply::sqr2_hi#2 = (const byte[512]) mul_sqr2_hi#0 [phi:init_multiply::@2->init_multiply::@3#1] -- pbuz1=pbuc1 
    lda #<mul_sqr2_hi
    sta sqr2_hi
    lda #>mul_sqr2_hi
    sta sqr2_hi+1
  //SEG529 [245] phi (byte*) init_multiply::sqr2_lo#2 = (const byte[512]) mul_sqr2_lo#0 [phi:init_multiply::@2->init_multiply::@3#2] -- pbuz1=pbuc1 
    lda #<mul_sqr2_lo
    sta sqr2_lo
    lda #>mul_sqr2_lo
    sta sqr2_lo+1
  //SEG530 [245] phi (byte) init_multiply::x_255#2 = ((byte))-(byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply::@2->init_multiply::@3#3] -- vbuz1=vbuc1 
    lda #-1
    sta x_255
    jmp b3
  //SEG531 [245] phi from init_multiply::@4 to init_multiply::@3 [phi:init_multiply::@4->init_multiply::@3]
  b3_from_b4:
  //SEG532 [245] phi (byte) init_multiply::dir#2 = (byte) init_multiply::dir#3 [phi:init_multiply::@4->init_multiply::@3#0] -- register_copy 
  //SEG533 [245] phi (byte*) init_multiply::sqr2_hi#2 = (byte*) init_multiply::sqr2_hi#1 [phi:init_multiply::@4->init_multiply::@3#1] -- register_copy 
  //SEG534 [245] phi (byte*) init_multiply::sqr2_lo#2 = (byte*) init_multiply::sqr2_lo#1 [phi:init_multiply::@4->init_multiply::@3#2] -- register_copy 
  //SEG535 [245] phi (byte) init_multiply::x_255#2 = (byte) init_multiply::x_255#1 [phi:init_multiply::@4->init_multiply::@3#3] -- register_copy 
    jmp b3
  //SEG536 init_multiply::@3
  b3:
  //SEG537 [246] *((byte*) init_multiply::sqr2_lo#2) ← *((const byte[512]) mul_sqr1_lo#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy x_255
    lda mul_sqr1_lo,y
    ldy #0
    sta (sqr2_lo),y
  //SEG538 [247] *((byte*) init_multiply::sqr2_hi#2) ← *((const byte[512]) mul_sqr1_hi#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy x_255
    lda mul_sqr1_hi,y
    ldy #0
    sta (sqr2_hi),y
  //SEG539 [248] (byte*) init_multiply::sqr2_hi#1 ← ++ (byte*) init_multiply::sqr2_hi#2 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::sqr2_hi#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr2_hi
    bne !+
    inc sqr2_hi+1
  !:
  //SEG540 [249] (byte) init_multiply::x_255#1 ← (byte) init_multiply::x_255#2 + (byte) init_multiply::dir#2 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ) -- vbuz1=vbuz1_plus_vbuz2 
    lda x_255
    clc
    adc dir
    sta x_255
  //SEG541 [250] if((byte) init_multiply::x_255#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@12 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ) -- vbuz1_neq_0_then_la1 
    lda x_255
    bne b12_from_b3
  //SEG542 [251] phi from init_multiply::@3 to init_multiply::@4 [phi:init_multiply::@3->init_multiply::@4]
  b4_from_b3:
  //SEG543 [251] phi (byte) init_multiply::dir#3 = (byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply::@3->init_multiply::@4#0] -- vbuz1=vbuc1 
    lda #1
    sta dir
    jmp b4
  //SEG544 init_multiply::@4
  b4:
  //SEG545 [252] (byte*) init_multiply::sqr2_lo#1 ← ++ (byte*) init_multiply::sqr2_lo#2 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr2_lo
    bne !+
    inc sqr2_lo+1
  !:
  //SEG546 [253] if((byte*) init_multiply::sqr2_lo#1!=(const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) goto init_multiply::@3 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda sqr2_lo+1
    cmp #>mul_sqr2_lo+$1ff
    bne b3_from_b4
    lda sqr2_lo
    cmp #<mul_sqr2_lo+$1ff
    bne b3_from_b4
    jmp b8
  //SEG547 init_multiply::@8
  b8:
  //SEG548 [254] *((const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda mul_sqr1_lo+$100
    sta mul_sqr2_lo+$1ff
  //SEG549 [255] *((const byte[512]) mul_sqr2_hi#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_hi#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda mul_sqr1_hi+$100
    sta mul_sqr2_hi+$1ff
    jmp breturn
  //SEG550 init_multiply::@return
  breturn:
  //SEG551 [256] return  [ ] ( main:2::init_multiply:7 [ ] )
    rts
  //SEG552 [257] phi from init_multiply::@3 to init_multiply::@12 [phi:init_multiply::@3->init_multiply::@12]
  b12_from_b3:
    jmp b12
  //SEG553 init_multiply::@12
  b12:
  //SEG554 [251] phi from init_multiply::@12 to init_multiply::@4 [phi:init_multiply::@12->init_multiply::@4]
  b4_from_b12:
  //SEG555 [251] phi (byte) init_multiply::dir#3 = (byte) init_multiply::dir#2 [phi:init_multiply::@12->init_multiply::@4#0] -- register_copy 
    jmp b4
}
//SEG556 print_cls
print_cls: {
    .label sc = $30
  //SEG557 [259] phi from print_cls to print_cls::@1 [phi:print_cls->print_cls::@1]
  b1_from_print_cls:
  //SEG558 [259] phi (byte*) print_cls::sc#2 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:print_cls->print_cls::@1#0] -- pbuz1=pbuc1 
    lda #<$400
    sta sc
    lda #>$400
    sta sc+1
    jmp b1
  //SEG559 [259] phi from print_cls::@1 to print_cls::@1 [phi:print_cls::@1->print_cls::@1]
  b1_from_b1:
  //SEG560 [259] phi (byte*) print_cls::sc#2 = (byte*) print_cls::sc#1 [phi:print_cls::@1->print_cls::@1#0] -- register_copy 
    jmp b1
  //SEG561 print_cls::@1
  b1:
  //SEG562 [260] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG563 [261] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG564 [262] if((byte*) print_cls::sc#1!=(word/signed word/dword/signed dword) 1024+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1_neq_vwuc1_then_la1 
    lda sc+1
    cmp #>$400+$3e8
    bne b1_from_b1
    lda sc
    cmp #<$400+$3e8
    bne b1_from_b1
    jmp breturn
  //SEG565 print_cls::@return
  breturn:
  //SEG566 [263] return  [ ] ( main:2::print_cls:5 [ ] )
    rts
}
  .align $100
  mul_sqr1_lo: .fill $200, 0
  .align $100
  mul_sqr1_hi: .fill $200, 0
  .align $100
  mul_sqr2_lo: .fill $200, 0
  .align $100
  mul_sqr2_hi: .fill $200, 0
  .align $100
  asm_mul_sqr1_lo: .fill $200, 0
  .align $100
  asm_mul_sqr1_hi: .fill $200, 0
  .align $100
  asm_mul_sqr2_lo: .fill $200, 0
  .align $100
  asm_mul_sqr2_hi: .fill $200, 0

REGISTER UPLIFT POTENTIAL REGISTERS
Statement [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [23] (signed word) slow_signed_multiply::return#2 ← (signed word) slow_signed_multiply::return#0 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ]
Statement [24] (signed word) signed_multiply_results_compare::ms#0 ← (signed word) slow_signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [28] (signed word) signed_multiply::return#2 ← (signed word)(word) signed_multiply::m#4 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] ) always clobbers reg byte a 
Statement [29] (signed word) signed_multiply_results_compare::ma#0 ← (signed word) signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [30] if((signed word) signed_multiply_results_compare::ms#0==(signed word) signed_multiply_results_compare::ma#0) goto signed_multiply_results_compare::@3 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [31] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [34] (signed word) signed_multiply_error::ms#0 ← (signed word) signed_multiply_results_compare::ms#0 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:62 [ signed_multiply_error::a#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:63 [ signed_multiply_error::b#0 ]
Statement [35] (signed word) signed_multiply_error::ma#0 ← (signed word) signed_multiply_results_compare::ma#0 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [42] (byte*~) char_cursor#176 ← (byte*) line_cursor#1 [ char_cursor#176 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ char_cursor#176 line_cursor#1 ] ) always clobbers reg byte a 
Statement [48] (byte*) line_cursor#1 ← (byte*) line_cursor#20 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) always clobbers reg byte a 
Statement [49] if((byte*) line_cursor#1<(byte*) char_cursor#118) goto print_ln::@1 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) always clobbers reg byte a 
Statement [53] if(*((byte*) print_str::str#14)!=(byte) '@') goto print_str::@2 [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:62 [ signed_multiply_error::a#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:63 [ signed_multiply_error::b#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:88 [ multiply_error::a#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:88 [ multiply_error::a#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:89 [ multiply_error::b#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:89 [ multiply_error::b#0 ]
Statement [55] *((byte*) char_cursor#117) ← *((byte*) print_str::str#14) [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) always clobbers reg byte a reg byte y 
Statement [58] (byte*~) char_cursor#172 ← (byte*) line_cursor#1 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ) always clobbers reg byte a 
Statement [68] (signed word) print_sword::w#1 ← (signed word) signed_multiply_error::ms#0 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ) always clobbers reg byte a 
Statement [72] (signed word) print_sword::w#2 ← (signed word) signed_multiply_error::ma#0 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ) always clobbers reg byte a 
Statement [78] if((signed word) print_sword::w#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1 [ char_cursor#117 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#117 print_sword::w#3 ] ) always clobbers reg byte a 
Statement [81] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#3 [ char_cursor#17 print_sword::w#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#0 ] ) always clobbers reg byte a 
Statement [83] (word~) print_word::w#11 ← (word)(signed word) print_sword::w#4 [ char_cursor#119 print_word::w#11 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#119 print_word::w#11 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#119 print_word::w#11 ] ) always clobbers reg byte a 
Statement [87] (byte) print_byte::b#1 ← > (word) print_word::w#5 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:212 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ) always clobbers reg byte a 
Statement [89] (byte) print_byte::b#2 ← < (word) print_word::w#5 [ char_cursor#17 print_byte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_byte::b#2 ] ) always clobbers reg byte a 
Statement [96] (byte~) print_byte::$2 ← (byte) print_byte::b#5 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ char_cursor#17 print_byte::$2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] ) always clobbers reg byte a 
Statement [101] *((byte*) char_cursor#75) ← (byte) print_char::ch#4 [ char_cursor#75 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:12 [ print_byte::b#5 print_byte::b#3 print_byte::b#4 print_byte::b#9 print_byte::b#1 print_byte::b#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:16 [ print_sbyte::b#4 print_sbyte::b#3 print_sbyte::b#1 print_sbyte::b#2 print_sbyte::b#0 ]
Statement [108] (signed byte) print_sbyte::b#0 ← - (signed byte) print_sbyte::b#3 [ char_cursor#17 print_sbyte::b#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] ) always clobbers reg byte a 
Statement [116] (word) multiply::return#2 ← (word) multiply::return#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:56 [ signed_multiply::a#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:57 [ signed_multiply::b#0 ]
Statement [117] (word) signed_multiply::m#0 ← (word) multiply::return#2 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ) always clobbers reg byte a 
Statement [119] (byte~) signed_multiply::$6 ← > (word) signed_multiply::m#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ) always clobbers reg byte a 
Statement [120] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 ← (byte~) signed_multiply::$6 - (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ) always clobbers reg byte a 
Statement [124] (byte~) signed_multiply::$12 ← > (word) signed_multiply::m#5 [ signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ) always clobbers reg byte a 
Statement [125] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 ← (byte~) signed_multiply::$12 - (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::m#5 signed_multiply::$17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#5 signed_multiply::$17 ] ) always clobbers reg byte a 
Statement asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamul_sqr1_lo,x sm2: sbcmul_sqr2_lo,x stamemA sm3: ldamul_sqr1_hi,x sm4: sbcmul_sqr2_hi,x stamemB  } always clobbers reg byte a reg byte x 
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ]
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ]
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:56 [ signed_multiply::a#0 ]
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:57 [ signed_multiply::b#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:25 [ multiply_results_compare::a#6 multiply_results_compare::a#1 ]
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:25 [ multiply_results_compare::a#6 multiply_results_compare::a#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:26 [ multiply_results_compare::b#2 multiply_results_compare::b#1 ]
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:26 [ multiply_results_compare::b#2 multiply_results_compare::b#1 ]
Statement [133] (word) multiply::return#0 ← *((const byte*) multiply::memB#0) w= *((const byte*) multiply::memA#0) [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] ) always clobbers reg byte a 
Statement [137] (signed word) slow_signed_multiply::m#1 ← (signed word) slow_signed_multiply::m#3 - (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:50 [ slow_signed_multiply::a#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:51 [ slow_signed_multiply::b#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:21 [ slow_signed_multiply::i#2 slow_signed_multiply::i#1 ]
Statement [144] (signed word) slow_signed_multiply::m#2 ← (signed word) slow_signed_multiply::m#5 + (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:24 [ slow_signed_multiply::j#2 slow_signed_multiply::j#1 ]
Statement [153] (word) slow_multiply::return#2 ← (word) slow_multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] ) always clobbers reg byte a 
Statement [154] (word) multiply_results_compare::ms#0 ← (word) slow_multiply::return#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) always clobbers reg byte a 
Statement [158] (word) multiply::return#3 ← (word) multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] ) always clobbers reg byte a 
Statement [159] (word) multiply_results_compare::ma#0 ← (word) multiply::return#3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) always clobbers reg byte a 
Statement [160] if((word) multiply_results_compare::ms#0==(word) multiply_results_compare::ma#0) goto multiply_results_compare::@3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) always clobbers reg byte a 
Statement [161] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) always clobbers reg byte a 
Statement [164] (word) multiply_error::ms#0 ← (word) multiply_results_compare::ms#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] ) always clobbers reg byte a 
Statement [165] (word) multiply_error::ma#0 ← (word) multiply_results_compare::ma#0 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ) always clobbers reg byte a 
Statement [186] (word) print_word::w#3 ← (word) multiply_error::ms#0 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ) always clobbers reg byte a 
Statement [190] (word) print_word::w#4 ← (word) multiply_error::ma#0 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ) always clobbers reg byte a 
Statement [197] (word) slow_multiply::m#1 ← (word) slow_multiply::m#3 + (byte) slow_multiply::b#0 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:78 [ slow_multiply::a#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:79 [ slow_multiply::b#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:27 [ slow_multiply::i#2 slow_multiply::i#1 ]
Statement [204] if(*((byte*) multiply_tables_compare::kc_sqr#2)==*((byte*) multiply_tables_compare::asm_sqr#2)) goto multiply_tables_compare::@2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) always clobbers reg byte a reg byte y 
Statement [205] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) always clobbers reg byte a 
Statement [207] (word~) print_word::w#9 ← (word)(byte*) multiply_tables_compare::asm_sqr#2 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ) always clobbers reg byte a 
Statement [211] (word~) print_word::w#10 ← (word)(byte*) multiply_tables_compare::kc_sqr#2 [ char_cursor#117 print_word::w#10 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#10 ] ) always clobbers reg byte a 
Statement [217] if((byte*) multiply_tables_compare::kc_sqr#1<(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512*(byte/signed byte/word/signed word/dword/signed dword) 4) goto multiply_tables_compare::@1 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ) always clobbers reg byte a 
Statement [222] (byte*~) char_cursor#197 ← (byte*) line_cursor#1 [ line_cursor#1 char_cursor#197 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 char_cursor#197 ] ) always clobbers reg byte a 
Statement asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: staasm_mul_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: staasm_mul_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldaasm_mul_sqr1_hi+1,x staasm_mul_sqr2_hi+$100,x ldaasm_mul_sqr1_hi,x staasm_mul_sqr2_hi,y ldaasm_mul_sqr1_lo+1,x staasm_mul_sqr2_lo+$100,x ldaasm_mul_sqr1_lo,x staasm_mul_sqr2_lo,y dey inx bne!-  } always clobbers reg byte a reg byte x reg byte y 
Statement [224] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) always clobbers reg byte a 
Statement [225] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) always clobbers reg byte a 
Statement [226] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) always clobbers reg byte a 
Statement [227] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) always clobbers reg byte a 
Statement [232] (byte~) init_multiply::$2 ← (byte) init_multiply::c#1 & (byte/signed byte/word/signed word/dword/signed dword) 1 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:39 [ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:34 [ init_multiply::c#2 init_multiply::c#1 ]
Statement [237] (byte~) init_multiply::$5 ← < (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ) always clobbers reg byte a 
Statement [238] *((byte*) init_multiply::sqr1_lo#2) ← (byte~) init_multiply::$5 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:34 [ init_multiply::c#2 init_multiply::c#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:39 [ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ]
Statement [239] (byte~) init_multiply::$6 ← > (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ) always clobbers reg byte a 
Statement [240] *((byte*) init_multiply::sqr1_hi#2) ← (byte~) init_multiply::$6 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) always clobbers reg byte y 
Statement [242] (word) init_multiply::sqr#1 ← (word) init_multiply::sqr#3 + (byte) init_multiply::x_2#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) always clobbers reg byte a 
Statement [244] if((byte*) init_multiply::sqr1_lo#1!=(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512) goto init_multiply::@1 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) always clobbers reg byte a 
Statement [246] *((byte*) init_multiply::sqr2_lo#2) ← *((const byte[512]) mul_sqr1_lo#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:42 [ init_multiply::x_255#2 init_multiply::x_255#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:42 [ init_multiply::x_255#2 init_multiply::x_255#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:47 [ init_multiply::dir#2 init_multiply::dir#3 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:47 [ init_multiply::dir#2 init_multiply::dir#3 ]
Statement [247] *((byte*) init_multiply::sqr2_hi#2) ← *((const byte[512]) mul_sqr1_hi#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) always clobbers reg byte a reg byte y 
Statement [249] (byte) init_multiply::x_255#1 ← (byte) init_multiply::x_255#2 + (byte) init_multiply::dir#2 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ) always clobbers reg byte a 
Statement [253] if((byte*) init_multiply::sqr2_lo#1!=(const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) goto init_multiply::@3 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ) always clobbers reg byte a 
Statement [254] *((const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) always clobbers reg byte a 
Statement [255] *((const byte[512]) mul_sqr2_hi#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_hi#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) always clobbers reg byte a 
Statement [260] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [262] if((byte*) print_cls::sc#1!=(word/signed word/dword/signed dword) 1024+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) always clobbers reg byte a 
Statement [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [23] (signed word) slow_signed_multiply::return#2 ← (signed word) slow_signed_multiply::return#0 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] ) always clobbers reg byte a 
Statement [24] (signed word) signed_multiply_results_compare::ms#0 ← (signed word) slow_signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [28] (signed word) signed_multiply::return#2 ← (signed word)(word) signed_multiply::m#4 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] ) always clobbers reg byte a 
Statement [29] (signed word) signed_multiply_results_compare::ma#0 ← (signed word) signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [30] if((signed word) signed_multiply_results_compare::ms#0==(signed word) signed_multiply_results_compare::ma#0) goto signed_multiply_results_compare::@3 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [31] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [34] (signed word) signed_multiply_error::ms#0 ← (signed word) signed_multiply_results_compare::ms#0 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [35] (signed word) signed_multiply_error::ma#0 ← (signed word) signed_multiply_results_compare::ma#0 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ) always clobbers reg byte a 
Statement [42] (byte*~) char_cursor#176 ← (byte*) line_cursor#1 [ char_cursor#176 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ char_cursor#176 line_cursor#1 ] ) always clobbers reg byte a 
Statement [48] (byte*) line_cursor#1 ← (byte*) line_cursor#20 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) always clobbers reg byte a 
Statement [49] if((byte*) line_cursor#1<(byte*) char_cursor#118) goto print_ln::@1 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) always clobbers reg byte a 
Statement [53] if(*((byte*) print_str::str#14)!=(byte) '@') goto print_str::@2 [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) always clobbers reg byte a reg byte y 
Statement [55] *((byte*) char_cursor#117) ← *((byte*) print_str::str#14) [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) always clobbers reg byte a reg byte y 
Statement [58] (byte*~) char_cursor#172 ← (byte*) line_cursor#1 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ) always clobbers reg byte a 
Statement [68] (signed word) print_sword::w#1 ← (signed word) signed_multiply_error::ms#0 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ) always clobbers reg byte a 
Statement [72] (signed word) print_sword::w#2 ← (signed word) signed_multiply_error::ma#0 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ) always clobbers reg byte a 
Statement [78] if((signed word) print_sword::w#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1 [ char_cursor#117 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#117 print_sword::w#3 ] ) always clobbers reg byte a 
Statement [81] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#3 [ char_cursor#17 print_sword::w#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#0 ] ) always clobbers reg byte a 
Statement [83] (word~) print_word::w#11 ← (word)(signed word) print_sword::w#4 [ char_cursor#119 print_word::w#11 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#119 print_word::w#11 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#119 print_word::w#11 ] ) always clobbers reg byte a 
Statement [87] (byte) print_byte::b#1 ← > (word) print_word::w#5 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:212 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ) always clobbers reg byte a 
Statement [89] (byte) print_byte::b#2 ← < (word) print_word::w#5 [ char_cursor#17 print_byte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_byte::b#2 ] ) always clobbers reg byte a 
Statement [96] (byte~) print_byte::$2 ← (byte) print_byte::b#5 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ char_cursor#17 print_byte::$2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] ) always clobbers reg byte a 
Statement [101] *((byte*) char_cursor#75) ← (byte) print_char::ch#4 [ char_cursor#75 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] ) always clobbers reg byte y 
Statement [108] (signed byte) print_sbyte::b#0 ← - (signed byte) print_sbyte::b#3 [ char_cursor#17 print_sbyte::b#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] ) always clobbers reg byte a 
Statement [116] (word) multiply::return#2 ← (word) multiply::return#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] ) always clobbers reg byte a 
Statement [117] (word) signed_multiply::m#0 ← (word) multiply::return#2 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ) always clobbers reg byte a 
Statement [119] (byte~) signed_multiply::$6 ← > (word) signed_multiply::m#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ) always clobbers reg byte a 
Statement [120] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 ← (byte~) signed_multiply::$6 - (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ) always clobbers reg byte a 
Statement [124] (byte~) signed_multiply::$12 ← > (word) signed_multiply::m#5 [ signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ) always clobbers reg byte a 
Statement [125] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 ← (byte~) signed_multiply::$12 - (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::m#5 signed_multiply::$17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#5 signed_multiply::$17 ] ) always clobbers reg byte a 
Statement asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamul_sqr1_lo,x sm2: sbcmul_sqr2_lo,x stamemA sm3: ldamul_sqr1_hi,x sm4: sbcmul_sqr2_hi,x stamemB  } always clobbers reg byte a reg byte x 
Statement [133] (word) multiply::return#0 ← *((const byte*) multiply::memB#0) w= *((const byte*) multiply::memA#0) [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] ) always clobbers reg byte a 
Statement [137] (signed word) slow_signed_multiply::m#1 ← (signed word) slow_signed_multiply::m#3 - (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ) always clobbers reg byte a 
Statement [144] (signed word) slow_signed_multiply::m#2 ← (signed word) slow_signed_multiply::m#5 + (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ) always clobbers reg byte a 
Statement [153] (word) slow_multiply::return#2 ← (word) slow_multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] ) always clobbers reg byte a 
Statement [154] (word) multiply_results_compare::ms#0 ← (word) slow_multiply::return#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) always clobbers reg byte a 
Statement [158] (word) multiply::return#3 ← (word) multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] ) always clobbers reg byte a 
Statement [159] (word) multiply_results_compare::ma#0 ← (word) multiply::return#3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) always clobbers reg byte a 
Statement [160] if((word) multiply_results_compare::ms#0==(word) multiply_results_compare::ma#0) goto multiply_results_compare::@3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) always clobbers reg byte a 
Statement [161] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) always clobbers reg byte a 
Statement [164] (word) multiply_error::ms#0 ← (word) multiply_results_compare::ms#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] ) always clobbers reg byte a 
Statement [165] (word) multiply_error::ma#0 ← (word) multiply_results_compare::ma#0 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ) always clobbers reg byte a 
Statement [186] (word) print_word::w#3 ← (word) multiply_error::ms#0 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ) always clobbers reg byte a 
Statement [190] (word) print_word::w#4 ← (word) multiply_error::ma#0 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ) always clobbers reg byte a 
Statement [197] (word) slow_multiply::m#1 ← (word) slow_multiply::m#3 + (byte) slow_multiply::b#0 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ) always clobbers reg byte a 
Statement [204] if(*((byte*) multiply_tables_compare::kc_sqr#2)==*((byte*) multiply_tables_compare::asm_sqr#2)) goto multiply_tables_compare::@2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) always clobbers reg byte a reg byte y 
Statement [205] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) always clobbers reg byte a 
Statement [207] (word~) print_word::w#9 ← (word)(byte*) multiply_tables_compare::asm_sqr#2 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ) always clobbers reg byte a 
Statement [211] (word~) print_word::w#10 ← (word)(byte*) multiply_tables_compare::kc_sqr#2 [ char_cursor#117 print_word::w#10 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#10 ] ) always clobbers reg byte a 
Statement [217] if((byte*) multiply_tables_compare::kc_sqr#1<(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512*(byte/signed byte/word/signed word/dword/signed dword) 4) goto multiply_tables_compare::@1 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ) always clobbers reg byte a 
Statement [222] (byte*~) char_cursor#197 ← (byte*) line_cursor#1 [ line_cursor#1 char_cursor#197 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 char_cursor#197 ] ) always clobbers reg byte a 
Statement asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: staasm_mul_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: staasm_mul_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldaasm_mul_sqr1_hi+1,x staasm_mul_sqr2_hi+$100,x ldaasm_mul_sqr1_hi,x staasm_mul_sqr2_hi,y ldaasm_mul_sqr1_lo+1,x staasm_mul_sqr2_lo+$100,x ldaasm_mul_sqr1_lo,x staasm_mul_sqr2_lo,y dey inx bne!-  } always clobbers reg byte a reg byte x reg byte y 
Statement [224] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) always clobbers reg byte a 
Statement [225] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) always clobbers reg byte a 
Statement [226] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) always clobbers reg byte a 
Statement [227] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) always clobbers reg byte a 
Statement [232] (byte~) init_multiply::$2 ← (byte) init_multiply::c#1 & (byte/signed byte/word/signed word/dword/signed dword) 1 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ) always clobbers reg byte a 
Statement [237] (byte~) init_multiply::$5 ← < (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ) always clobbers reg byte a 
Statement [238] *((byte*) init_multiply::sqr1_lo#2) ← (byte~) init_multiply::$5 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) always clobbers reg byte y 
Statement [239] (byte~) init_multiply::$6 ← > (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ) always clobbers reg byte a 
Statement [240] *((byte*) init_multiply::sqr1_hi#2) ← (byte~) init_multiply::$6 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) always clobbers reg byte y 
Statement [242] (word) init_multiply::sqr#1 ← (word) init_multiply::sqr#3 + (byte) init_multiply::x_2#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) always clobbers reg byte a 
Statement [244] if((byte*) init_multiply::sqr1_lo#1!=(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512) goto init_multiply::@1 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) always clobbers reg byte a 
Statement [246] *((byte*) init_multiply::sqr2_lo#2) ← *((const byte[512]) mul_sqr1_lo#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) always clobbers reg byte a reg byte y 
Statement [247] *((byte*) init_multiply::sqr2_hi#2) ← *((const byte[512]) mul_sqr1_hi#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) always clobbers reg byte a reg byte y 
Statement [249] (byte) init_multiply::x_255#1 ← (byte) init_multiply::x_255#2 + (byte) init_multiply::dir#2 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ) always clobbers reg byte a 
Statement [253] if((byte*) init_multiply::sqr2_lo#1!=(const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) goto init_multiply::@3 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ) always clobbers reg byte a 
Statement [254] *((const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) always clobbers reg byte a 
Statement [255] *((const byte[512]) mul_sqr2_hi#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_hi#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) always clobbers reg byte a 
Statement [260] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [262] if((byte*) print_cls::sc#1!=(word/signed word/dword/signed dword) 1024+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) always clobbers reg byte a 
Potential registers zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ] : zp ZP_BYTE:2 , reg byte y , 
Potential registers zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ] : zp ZP_BYTE:3 , reg byte y , 
Potential registers zp ZP_WORD:4 [ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 ] : zp ZP_WORD:4 , 
Potential registers zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 ] : zp ZP_WORD:6 , 
Potential registers zp ZP_WORD:8 [ print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 ] : zp ZP_WORD:8 , 
Potential registers zp ZP_WORD:10 [ print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 ] : zp ZP_WORD:10 , 
Potential registers zp ZP_BYTE:12 [ print_byte::b#5 print_byte::b#3 print_byte::b#4 print_byte::b#9 print_byte::b#1 print_byte::b#2 ] : zp ZP_BYTE:12 , reg byte a , reg byte x , 
Potential registers zp ZP_BYTE:13 [ print_char::ch#4 print_char::ch#2 print_char::ch#3 ] : zp ZP_BYTE:13 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:14 [ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 ] : zp ZP_WORD:14 , 
Potential registers zp ZP_BYTE:16 [ print_sbyte::b#4 print_sbyte::b#3 print_sbyte::b#1 print_sbyte::b#2 print_sbyte::b#0 ] : zp ZP_BYTE:16 , reg byte a , reg byte x , 
Potential registers zp ZP_WORD:17 [ signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 ] : zp ZP_WORD:17 , 
Potential registers zp ZP_BYTE:19 [ multiply::a#2 multiply::a#1 multiply::a#4 ] : zp ZP_BYTE:19 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:20 [ multiply::b#2 multiply::b#1 multiply::b#4 ] : zp ZP_BYTE:20 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:21 [ slow_signed_multiply::i#2 slow_signed_multiply::i#1 ] : zp ZP_BYTE:21 , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:22 [ slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 ] : zp ZP_WORD:22 , 
Potential registers zp ZP_BYTE:24 [ slow_signed_multiply::j#2 slow_signed_multiply::j#1 ] : zp ZP_BYTE:24 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:25 [ multiply_results_compare::a#6 multiply_results_compare::a#1 ] : zp ZP_BYTE:25 , reg byte y , 
Potential registers zp ZP_BYTE:26 [ multiply_results_compare::b#2 multiply_results_compare::b#1 ] : zp ZP_BYTE:26 , reg byte y , 
Potential registers zp ZP_BYTE:27 [ slow_multiply::i#2 slow_multiply::i#1 ] : zp ZP_BYTE:27 , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:28 [ slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 ] : zp ZP_WORD:28 , 
Potential registers zp ZP_WORD:30 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 ] : zp ZP_WORD:30 , 
Potential registers zp ZP_WORD:32 [ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 ] : zp ZP_WORD:32 , 
Potential registers zp ZP_BYTE:34 [ init_multiply::c#2 init_multiply::c#1 ] : zp ZP_BYTE:34 , reg byte x , 
Potential registers zp ZP_WORD:35 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 ] : zp ZP_WORD:35 , 
Potential registers zp ZP_WORD:37 [ init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 ] : zp ZP_WORD:37 , 
Potential registers zp ZP_BYTE:39 [ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ] : zp ZP_BYTE:39 , reg byte x , 
Potential registers zp ZP_WORD:40 [ init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 ] : zp ZP_WORD:40 , 
Potential registers zp ZP_BYTE:42 [ init_multiply::x_255#2 init_multiply::x_255#1 ] : zp ZP_BYTE:42 , reg byte x , 
Potential registers zp ZP_WORD:43 [ init_multiply::sqr2_lo#2 init_multiply::sqr2_lo#1 ] : zp ZP_WORD:43 , 
Potential registers zp ZP_WORD:45 [ init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 ] : zp ZP_WORD:45 , 
Potential registers zp ZP_BYTE:47 [ init_multiply::dir#2 init_multiply::dir#3 ] : zp ZP_BYTE:47 , reg byte x , 
Potential registers zp ZP_WORD:48 [ print_cls::sc#2 print_cls::sc#1 ] : zp ZP_WORD:48 , 
Potential registers zp ZP_BYTE:50 [ slow_signed_multiply::a#0 ] : zp ZP_BYTE:50 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:51 [ slow_signed_multiply::b#0 ] : zp ZP_BYTE:51 , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:52 [ slow_signed_multiply::return#2 ] : zp ZP_WORD:52 , 
Potential registers zp ZP_WORD:54 [ signed_multiply_results_compare::ms#0 ] : zp ZP_WORD:54 , 
Potential registers zp ZP_BYTE:56 [ signed_multiply::a#0 ] : zp ZP_BYTE:56 , reg byte y , 
Potential registers zp ZP_BYTE:57 [ signed_multiply::b#0 ] : zp ZP_BYTE:57 , reg byte y , 
Potential registers zp ZP_WORD:58 [ signed_multiply::return#2 ] : zp ZP_WORD:58 , 
Potential registers zp ZP_WORD:60 [ signed_multiply_results_compare::ma#0 ] : zp ZP_WORD:60 , 
Potential registers zp ZP_BYTE:62 [ signed_multiply_error::a#0 ] : zp ZP_BYTE:62 , reg byte x , 
Potential registers zp ZP_BYTE:63 [ signed_multiply_error::b#0 ] : zp ZP_BYTE:63 , reg byte x , 
Potential registers zp ZP_WORD:64 [ signed_multiply_error::ms#0 ] : zp ZP_WORD:64 , 
Potential registers zp ZP_WORD:66 [ signed_multiply_error::ma#0 ] : zp ZP_WORD:66 , 
Potential registers zp ZP_BYTE:68 [ print_byte::$0 ] : zp ZP_BYTE:68 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:69 [ print_byte::$2 ] : zp ZP_BYTE:69 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:70 [ multiply::return#2 ] : zp ZP_WORD:70 , 
Potential registers zp ZP_BYTE:72 [ signed_multiply::$6 ] : zp ZP_BYTE:72 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:73 [ signed_multiply::$16 ] : zp ZP_BYTE:73 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:74 [ signed_multiply::$12 ] : zp ZP_BYTE:74 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:75 [ signed_multiply::$17 ] : zp ZP_BYTE:75 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:76 [ multiply::return#0 ] : zp ZP_WORD:76 , 
Potential registers zp ZP_BYTE:78 [ slow_multiply::a#0 ] : zp ZP_BYTE:78 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:79 [ slow_multiply::b#0 ] : zp ZP_BYTE:79 , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:80 [ slow_multiply::return#2 ] : zp ZP_WORD:80 , 
Potential registers zp ZP_WORD:82 [ multiply_results_compare::ms#0 ] : zp ZP_WORD:82 , 
Potential registers zp ZP_WORD:84 [ multiply::return#3 ] : zp ZP_WORD:84 , 
Potential registers zp ZP_WORD:86 [ multiply_results_compare::ma#0 ] : zp ZP_WORD:86 , 
Potential registers zp ZP_BYTE:88 [ multiply_error::a#0 ] : zp ZP_BYTE:88 , reg byte x , 
Potential registers zp ZP_BYTE:89 [ multiply_error::b#0 ] : zp ZP_BYTE:89 , reg byte x , 
Potential registers zp ZP_WORD:90 [ multiply_error::ms#0 ] : zp ZP_WORD:90 , 
Potential registers zp ZP_WORD:92 [ multiply_error::ma#0 ] : zp ZP_WORD:92 , 
Potential registers zp ZP_BYTE:94 [ init_multiply::$2 ] : zp ZP_BYTE:94 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:95 [ init_multiply::$5 ] : zp ZP_BYTE:95 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:96 [ init_multiply::$6 ] : zp ZP_BYTE:96 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [slow_signed_multiply] 6,707: zp ZP_WORD:22 [ slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 ] 2,502.5: zp ZP_BYTE:21 [ slow_signed_multiply::i#2 slow_signed_multiply::i#1 ] 2,502.5: zp ZP_BYTE:24 [ slow_signed_multiply::j#2 slow_signed_multiply::j#1 ] 202: zp ZP_WORD:52 [ slow_signed_multiply::return#2 ] 191.18: zp ZP_BYTE:51 [ slow_signed_multiply::b#0 ] 175.58: zp ZP_BYTE:50 [ slow_signed_multiply::a#0 ] 
Uplift Scope [slow_multiply] 3,370.33: zp ZP_WORD:28 [ slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 ] 2,502.5: zp ZP_BYTE:27 [ slow_multiply::i#2 slow_multiply::i#1 ] 202: zp ZP_WORD:80 [ slow_multiply::return#2 ] 183.67: zp ZP_BYTE:79 [ slow_multiply::b#0 ] 157.71: zp ZP_BYTE:78 [ slow_multiply::a#0 ] 
Uplift Scope [multiply] 258.5: zp ZP_BYTE:20 [ multiply::b#2 multiply::b#1 multiply::b#4 ] 208: zp ZP_BYTE:19 [ multiply::a#2 multiply::a#1 multiply::a#4 ] 202: zp ZP_WORD:84 [ multiply::return#3 ] 26.25: zp ZP_WORD:76 [ multiply::return#0 ] 4: zp ZP_WORD:70 [ multiply::return#2 ] 
Uplift Scope [multiply_results_compare] 180.5: zp ZP_BYTE:26 [ multiply_results_compare::b#2 multiply_results_compare::b#1 ] 34: zp ZP_WORD:86 [ multiply_results_compare::ma#0 ] 30.62: zp ZP_BYTE:25 [ multiply_results_compare::a#6 multiply_results_compare::a#1 ] 20.4: zp ZP_WORD:82 [ multiply_results_compare::ms#0 ] 
Uplift Scope [signed_multiply_results_compare] 180.5: zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ] 34: zp ZP_WORD:60 [ signed_multiply_results_compare::ma#0 ] 30.62: zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ] 20.4: zp ZP_WORD:54 [ signed_multiply_results_compare::ms#0 ] 
Uplift Scope [init_multiply] 45.1: zp ZP_WORD:40 [ init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 ] 24.36: zp ZP_BYTE:34 [ init_multiply::c#2 init_multiply::c#1 ] 24.14: zp ZP_BYTE:39 [ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ] 22: zp ZP_BYTE:94 [ init_multiply::$2 ] 22: zp ZP_BYTE:95 [ init_multiply::$5 ] 22: zp ZP_BYTE:96 [ init_multiply::$6 ] 20.62: zp ZP_WORD:43 [ init_multiply::sqr2_lo#2 init_multiply::sqr2_lo#1 ] 19.04: zp ZP_WORD:35 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 ] 16.5: zp ZP_BYTE:42 [ init_multiply::x_255#2 init_multiply::x_255#1 ] 14.14: zp ZP_WORD:45 [ init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 ] 12.05: zp ZP_BYTE:47 [ init_multiply::dir#2 init_multiply::dir#3 ] 8.5: zp ZP_WORD:37 [ init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 ] 
Uplift Scope [signed_multiply] 202: zp ZP_WORD:58 [ signed_multiply::return#2 ] 13.83: zp ZP_WORD:17 [ signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 ] 9.36: zp ZP_BYTE:57 [ signed_multiply::b#0 ] 7.36: zp ZP_BYTE:56 [ signed_multiply::a#0 ] 4: zp ZP_BYTE:72 [ signed_multiply::$6 ] 4: zp ZP_BYTE:73 [ signed_multiply::$16 ] 4: zp ZP_BYTE:74 [ signed_multiply::$12 ] 4: zp ZP_BYTE:75 [ signed_multiply::$17 ] 
Uplift Scope [] 77.01: zp ZP_WORD:14 [ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 ] 34.95: zp ZP_WORD:4 [ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 ] 
Uplift Scope [multiply_tables_compare] 20.17: zp ZP_WORD:30 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 ] 15.58: zp ZP_WORD:32 [ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 ] 
Uplift Scope [print_str] 35.5: zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 ] 
Uplift Scope [print_cls] 33: zp ZP_WORD:48 [ print_cls::sc#2 print_cls::sc#1 ] 
Uplift Scope [print_byte] 23.5: zp ZP_BYTE:12 [ print_byte::b#5 print_byte::b#3 print_byte::b#4 print_byte::b#9 print_byte::b#1 print_byte::b#2 ] 4: zp ZP_BYTE:68 [ print_byte::$0 ] 4: zp ZP_BYTE:69 [ print_byte::$2 ] 
Uplift Scope [print_word] 24.67: zp ZP_WORD:10 [ print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 ] 
Uplift Scope [print_sword] 18.5: zp ZP_WORD:8 [ print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 ] 
Uplift Scope [print_sbyte] 18.5: zp ZP_BYTE:16 [ print_sbyte::b#4 print_sbyte::b#3 print_sbyte::b#1 print_sbyte::b#2 print_sbyte::b#0 ] 
Uplift Scope [print_char] 14: zp ZP_BYTE:13 [ print_char::ch#4 print_char::ch#2 print_char::ch#3 ] 
Uplift Scope [multiply_error] 0.67: zp ZP_BYTE:88 [ multiply_error::a#0 ] 0.44: zp ZP_BYTE:89 [ multiply_error::b#0 ] 0.33: zp ZP_WORD:90 [ multiply_error::ms#0 ] 0.27: zp ZP_WORD:92 [ multiply_error::ma#0 ] 
Uplift Scope [signed_multiply_error] 0.67: zp ZP_BYTE:62 [ signed_multiply_error::a#0 ] 0.44: zp ZP_BYTE:63 [ signed_multiply_error::b#0 ] 0.33: zp ZP_WORD:64 [ signed_multiply_error::ms#0 ] 0.27: zp ZP_WORD:66 [ signed_multiply_error::ma#0 ] 
Uplift Scope [print_ln] 
Uplift Scope [main] 
Uplift Scope [init_multiply_asm] 

Uplifting [slow_signed_multiply] best 214499 combination zp ZP_WORD:22 [ slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 ] reg byte y [ slow_signed_multiply::i#2 slow_signed_multiply::i#1 ] reg byte y [ slow_signed_multiply::j#2 slow_signed_multiply::j#1 ] zp ZP_WORD:52 [ slow_signed_multiply::return#2 ] reg byte x [ slow_signed_multiply::b#0 ] zp ZP_BYTE:50 [ slow_signed_multiply::a#0 ] 
Uplifting [slow_multiply] best 204199 combination zp ZP_WORD:28 [ slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 ] reg byte y [ slow_multiply::i#2 slow_multiply::i#1 ] zp ZP_WORD:80 [ slow_multiply::return#2 ] reg byte x [ slow_multiply::b#0 ] zp ZP_BYTE:78 [ slow_multiply::a#0 ] 
Uplifting [multiply] best 203587 combination reg byte x [ multiply::b#2 multiply::b#1 multiply::b#4 ] reg byte a [ multiply::a#2 multiply::a#1 multiply::a#4 ] zp ZP_WORD:84 [ multiply::return#3 ] zp ZP_WORD:76 [ multiply::return#0 ] zp ZP_WORD:70 [ multiply::return#2 ] 
Uplifting [multiply_results_compare] best 203587 combination zp ZP_BYTE:26 [ multiply_results_compare::b#2 multiply_results_compare::b#1 ] zp ZP_WORD:86 [ multiply_results_compare::ma#0 ] zp ZP_BYTE:25 [ multiply_results_compare::a#6 multiply_results_compare::a#1 ] zp ZP_WORD:82 [ multiply_results_compare::ms#0 ] 
Uplifting [signed_multiply_results_compare] best 203587 combination zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ] zp ZP_WORD:60 [ signed_multiply_results_compare::ma#0 ] zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ] zp ZP_WORD:54 [ signed_multiply_results_compare::ms#0 ] 
Uplifting [init_multiply] best 203237 combination zp ZP_WORD:40 [ init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 ] reg byte x [ init_multiply::c#2 init_multiply::c#1 ] zp ZP_BYTE:39 [ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ] reg byte a [ init_multiply::$2 ] reg byte a [ init_multiply::$5 ] reg byte a [ init_multiply::$6 ] zp ZP_WORD:43 [ init_multiply::sqr2_lo#2 init_multiply::sqr2_lo#1 ] zp ZP_WORD:35 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 ] reg byte x [ init_multiply::x_255#2 init_multiply::x_255#1 ] zp ZP_WORD:45 [ init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 ] zp ZP_BYTE:47 [ init_multiply::dir#2 init_multiply::dir#3 ] zp ZP_WORD:37 [ init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 ] 
Uplifting [signed_multiply] best 202912 combination zp ZP_WORD:58 [ signed_multiply::return#2 ] zp ZP_WORD:17 [ signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 ] zp ZP_BYTE:57 [ signed_multiply::b#0 ] reg byte y [ signed_multiply::a#0 ] reg byte a [ signed_multiply::$6 ] reg byte a [ signed_multiply::$16 ] reg byte a [ signed_multiply::$12 ] reg byte a [ signed_multiply::$17 ] 
Uplifting [] best 202912 combination zp ZP_WORD:14 [ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 ] zp ZP_WORD:4 [ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 ] 
Uplifting [multiply_tables_compare] best 202912 combination zp ZP_WORD:30 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 ] zp ZP_WORD:32 [ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 ] 
Uplifting [print_str] best 202912 combination zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 ] 
Uplifting [print_cls] best 202912 combination zp ZP_WORD:48 [ print_cls::sc#2 print_cls::sc#1 ] 
Uplifting [print_byte] best 202891 combination reg byte x [ print_byte::b#5 print_byte::b#3 print_byte::b#4 print_byte::b#9 print_byte::b#1 print_byte::b#2 ] reg byte a [ print_byte::$0 ] reg byte a [ print_byte::$2 ] 
Uplifting [print_word] best 202891 combination zp ZP_WORD:10 [ print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 ] 
Uplifting [print_sword] best 202891 combination zp ZP_WORD:8 [ print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 ] 
Uplifting [print_sbyte] best 202877 combination reg byte x [ print_sbyte::b#4 print_sbyte::b#3 print_sbyte::b#1 print_sbyte::b#2 print_sbyte::b#0 ] 
Uplifting [print_char] best 202862 combination reg byte a [ print_char::ch#4 print_char::ch#2 print_char::ch#3 ] 
Uplifting [multiply_error] best 202856 combination reg byte x [ multiply_error::a#0 ] zp ZP_BYTE:89 [ multiply_error::b#0 ] zp ZP_WORD:90 [ multiply_error::ms#0 ] zp ZP_WORD:92 [ multiply_error::ma#0 ] 
Uplifting [signed_multiply_error] best 202850 combination reg byte x [ signed_multiply_error::a#0 ] zp ZP_BYTE:63 [ signed_multiply_error::b#0 ] zp ZP_WORD:64 [ signed_multiply_error::ms#0 ] zp ZP_WORD:66 [ signed_multiply_error::ma#0 ] 
Uplifting [print_ln] best 202850 combination 
Uplifting [main] best 202850 combination 
Uplifting [init_multiply_asm] best 202850 combination 
Attempting to uplift remaining variables inzp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ]
Uplifting [signed_multiply_results_compare] best 202850 combination zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:26 [ multiply_results_compare::b#2 multiply_results_compare::b#1 ]
Uplifting [multiply_results_compare] best 202850 combination zp ZP_BYTE:26 [ multiply_results_compare::b#2 multiply_results_compare::b#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:50 [ slow_signed_multiply::a#0 ]
Uplifting [slow_signed_multiply] best 202850 combination zp ZP_BYTE:50 [ slow_signed_multiply::a#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:78 [ slow_multiply::a#0 ]
Uplifting [slow_multiply] best 202850 combination zp ZP_BYTE:78 [ slow_multiply::a#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ]
Uplifting [signed_multiply_results_compare] best 202850 combination zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:25 [ multiply_results_compare::a#6 multiply_results_compare::a#1 ]
Uplifting [multiply_results_compare] best 202850 combination zp ZP_BYTE:25 [ multiply_results_compare::a#6 multiply_results_compare::a#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:39 [ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ]
Uplifting [init_multiply] best 202850 combination zp ZP_BYTE:39 [ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:47 [ init_multiply::dir#2 init_multiply::dir#3 ]
Uplifting [init_multiply] best 202850 combination zp ZP_BYTE:47 [ init_multiply::dir#2 init_multiply::dir#3 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:57 [ signed_multiply::b#0 ]
Uplifting [signed_multiply] best 202850 combination zp ZP_BYTE:57 [ signed_multiply::b#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:63 [ signed_multiply_error::b#0 ]
Uplifting [signed_multiply_error] best 202850 combination zp ZP_BYTE:63 [ signed_multiply_error::b#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:89 [ multiply_error::b#0 ]
Uplifting [multiply_error] best 202850 combination zp ZP_BYTE:89 [ multiply_error::b#0 ] 
Coalescing zero page register [ zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 ] ] with [ zp ZP_BYTE:25 [ multiply_results_compare::a#6 multiply_results_compare::a#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 multiply_results_compare::a#6 multiply_results_compare::a#1 ] ] with [ zp ZP_BYTE:39 [ init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 multiply_results_compare::a#6 multiply_results_compare::a#1 init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 ] ] with [ zp ZP_BYTE:47 [ init_multiply::dir#2 init_multiply::dir#3 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 multiply_results_compare::a#6 multiply_results_compare::a#1 init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 init_multiply::dir#2 init_multiply::dir#3 ] ] with [ zp ZP_BYTE:50 [ slow_signed_multiply::a#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 multiply_results_compare::a#6 multiply_results_compare::a#1 init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 init_multiply::dir#2 init_multiply::dir#3 slow_signed_multiply::a#0 ] ] with [ zp ZP_BYTE:63 [ signed_multiply_error::b#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 multiply_results_compare::a#6 multiply_results_compare::a#1 init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 init_multiply::dir#2 init_multiply::dir#3 slow_signed_multiply::a#0 signed_multiply_error::b#0 ] ] with [ zp ZP_BYTE:78 [ slow_multiply::a#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 multiply_results_compare::a#6 multiply_results_compare::a#1 init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 init_multiply::dir#2 init_multiply::dir#3 slow_signed_multiply::a#0 signed_multiply_error::b#0 slow_multiply::a#0 ] ] with [ zp ZP_BYTE:89 [ multiply_error::b#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 ] ] with [ zp ZP_BYTE:26 [ multiply_results_compare::b#2 multiply_results_compare::b#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 multiply_results_compare::b#2 multiply_results_compare::b#1 ] ] with [ zp ZP_BYTE:57 [ signed_multiply::b#0 ] ]
Coalescing zero page register [ zp ZP_WORD:4 [ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 ] ] with [ zp ZP_WORD:30 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 ] ]
Coalescing zero page register [ zp ZP_WORD:4 [ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 ] ] with [ zp ZP_WORD:35 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 ] ]
Coalescing zero page register [ zp ZP_WORD:4 [ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 ] ] with [ zp ZP_WORD:43 [ init_multiply::sqr2_lo#2 init_multiply::sqr2_lo#1 ] ]
Coalescing zero page register [ zp ZP_WORD:4 [ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 init_multiply::sqr2_lo#2 init_multiply::sqr2_lo#1 ] ] with [ zp ZP_WORD:48 [ print_cls::sc#2 print_cls::sc#1 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 ] ] with [ zp ZP_WORD:8 [ print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 ] ] with [ zp ZP_WORD:10 [ print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 ] ] with [ zp ZP_WORD:17 [ signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 ] ] with [ zp ZP_WORD:22 [ slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 ] ] with [ zp ZP_WORD:28 [ slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 ] ] with [ zp ZP_WORD:37 [ init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 ] ] with [ zp ZP_WORD:45 [ init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 ] ] with [ zp ZP_WORD:52 [ slow_signed_multiply::return#2 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 slow_signed_multiply::return#2 ] ] with [ zp ZP_WORD:58 [ signed_multiply::return#2 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 slow_signed_multiply::return#2 signed_multiply::return#2 ] ] with [ zp ZP_WORD:60 [ signed_multiply_results_compare::ma#0 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 slow_signed_multiply::return#2 signed_multiply::return#2 signed_multiply_results_compare::ma#0 ] ] with [ zp ZP_WORD:70 [ multiply::return#2 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 slow_signed_multiply::return#2 signed_multiply::return#2 signed_multiply_results_compare::ma#0 multiply::return#2 ] ] with [ zp ZP_WORD:76 [ multiply::return#0 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 slow_signed_multiply::return#2 signed_multiply::return#2 signed_multiply_results_compare::ma#0 multiply::return#2 multiply::return#0 ] ] with [ zp ZP_WORD:80 [ slow_multiply::return#2 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 slow_signed_multiply::return#2 signed_multiply::return#2 signed_multiply_results_compare::ma#0 multiply::return#2 multiply::return#0 slow_multiply::return#2 ] ] with [ zp ZP_WORD:84 [ multiply::return#3 ] ]
Coalescing zero page register [ zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 slow_signed_multiply::return#2 signed_multiply::return#2 signed_multiply_results_compare::ma#0 multiply::return#2 multiply::return#0 slow_multiply::return#2 multiply::return#3 ] ] with [ zp ZP_WORD:86 [ multiply_results_compare::ma#0 ] ]
Coalescing zero page register [ zp ZP_WORD:14 [ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 ] ] with [ zp ZP_WORD:40 [ init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 ] ]
Coalescing zero page register [ zp ZP_WORD:14 [ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 ] ] with [ zp ZP_WORD:54 [ signed_multiply_results_compare::ms#0 ] ]
Coalescing zero page register [ zp ZP_WORD:32 [ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 ] ] with [ zp ZP_WORD:64 [ signed_multiply_error::ms#0 ] ]
Coalescing zero page register [ zp ZP_WORD:32 [ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 signed_multiply_error::ms#0 ] ] with [ zp ZP_WORD:82 [ multiply_results_compare::ms#0 ] ]
Coalescing zero page register [ zp ZP_WORD:32 [ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 signed_multiply_error::ms#0 multiply_results_compare::ms#0 ] ] with [ zp ZP_WORD:90 [ multiply_error::ms#0 ] ]
Coalescing zero page register [ zp ZP_WORD:66 [ signed_multiply_error::ma#0 ] ] with [ zp ZP_WORD:92 [ multiply_error::ma#0 ] ]
Allocated (was zp ZP_WORD:14) zp ZP_WORD:8 [ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 signed_multiply_results_compare::ms#0 ]
Allocated (was zp ZP_WORD:32) zp ZP_WORD:10 [ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 signed_multiply_error::ms#0 multiply_results_compare::ms#0 multiply_error::ms#0 ]
Allocated (was zp ZP_WORD:66) zp ZP_WORD:12 [ signed_multiply_error::ma#0 multiply_error::ma#0 ]

ASSEMBLER BEFORE OPTIMIZATION
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d021
  .label char_cursor = 8
  .label line_cursor = 4
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @20 [phi:@begin->@20]
b20_from_bbegin:
  jmp b20
//SEG4 @20
b20:
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @20 to @end [phi:@20->@end]
bend_from_b20:
  jmp bend
//SEG7 @end
bend:
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #5
    sta BGCOL
  //SEG10 [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  //SEG11 [258] phi from main to print_cls [phi:main->print_cls]
  print_cls_from_main:
    jsr print_cls
  //SEG12 [6] phi from main to main::@1 [phi:main->main::@1]
  b1_from_main:
    jmp b1
  //SEG13 main::@1
  b1:
  //SEG14 [7] call init_multiply param-assignment [ ] ( main:2 [ ] )
  //SEG15 [229] phi from main::@1 to init_multiply [phi:main::@1->init_multiply]
  init_multiply_from_b1:
    jsr init_multiply
  //SEG16 [8] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  b2_from_b1:
    jmp b2
  //SEG17 main::@2
  b2:
  //SEG18 [9] call init_multiply_asm param-assignment [ ] ( main:2 [ ] )
    jsr init_multiply_asm
  //SEG19 [10] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  b3_from_b2:
    jmp b3
  //SEG20 main::@3
  b3:
  //SEG21 [11] call multiply_tables_compare param-assignment [ line_cursor#27 char_cursor#27 ] ( main:2 [ line_cursor#27 char_cursor#27 ] )
  //SEG22 [202] phi from main::@3 to multiply_tables_compare [phi:main::@3->multiply_tables_compare]
  multiply_tables_compare_from_b3:
    jsr multiply_tables_compare
  //SEG23 [12] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  b4_from_b3:
    jmp b4
  //SEG24 main::@4
  b4:
  //SEG25 [13] call multiply_results_compare param-assignment [ line_cursor#1 ] ( main:2 [ line_cursor#1 ] )
  //SEG26 [147] phi from main::@4 to multiply_results_compare [phi:main::@4->multiply_results_compare]
  multiply_results_compare_from_b4:
    jsr multiply_results_compare
  //SEG27 [14] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  b5_from_b4:
    jmp b5
  //SEG28 main::@5
  b5:
  //SEG29 [15] call signed_multiply_results_compare param-assignment [ ] ( main:2 [ ] )
  //SEG30 [17] phi from main::@5 to signed_multiply_results_compare [phi:main::@5->signed_multiply_results_compare]
  signed_multiply_results_compare_from_b5:
    jsr signed_multiply_results_compare
    jmp breturn
  //SEG31 main::@return
  breturn:
  //SEG32 [16] return  [ ] ( main:2 [ ] )
    rts
}
//SEG33 signed_multiply_results_compare
signed_multiply_results_compare: {
    .label ms = 8
    .label ma = 6
    .label b = 3
    .label a = 2
  //SEG34 [18] phi from signed_multiply_results_compare to signed_multiply_results_compare::@1 [phi:signed_multiply_results_compare->signed_multiply_results_compare::@1]
  b1_from_signed_multiply_results_compare:
  //SEG35 [18] phi (signed byte) signed_multiply_results_compare::a#6 = -(byte/word/signed word/dword/signed dword) 128 [phi:signed_multiply_results_compare->signed_multiply_results_compare::@1#0] -- vbsz1=vbsc1 
    lda #-$80
    sta a
    jmp b1
  //SEG36 [18] phi from signed_multiply_results_compare::@6 to signed_multiply_results_compare::@1 [phi:signed_multiply_results_compare::@6->signed_multiply_results_compare::@1]
  b1_from_b6:
  //SEG37 [18] phi (signed byte) signed_multiply_results_compare::a#6 = (signed byte) signed_multiply_results_compare::a#1 [phi:signed_multiply_results_compare::@6->signed_multiply_results_compare::@1#0] -- register_copy 
    jmp b1
  //SEG38 signed_multiply_results_compare::@1
  b1:
  //SEG39 [19] phi from signed_multiply_results_compare::@1 to signed_multiply_results_compare::@2 [phi:signed_multiply_results_compare::@1->signed_multiply_results_compare::@2]
  b2_from_b1:
  //SEG40 [19] phi (signed byte) signed_multiply_results_compare::b#2 = -(byte/word/signed word/dword/signed dword) 128 [phi:signed_multiply_results_compare::@1->signed_multiply_results_compare::@2#0] -- vbsz1=vbsc1 
    lda #-$80
    sta b
    jmp b2
  //SEG41 [19] phi from signed_multiply_results_compare::@3 to signed_multiply_results_compare::@2 [phi:signed_multiply_results_compare::@3->signed_multiply_results_compare::@2]
  b2_from_b3:
  //SEG42 [19] phi (signed byte) signed_multiply_results_compare::b#2 = (signed byte) signed_multiply_results_compare::b#1 [phi:signed_multiply_results_compare::@3->signed_multiply_results_compare::@2#0] -- register_copy 
    jmp b2
  //SEG43 signed_multiply_results_compare::@2
  b2:
  //SEG44 [20] (signed byte) slow_signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 line_cursor#1 ] )
    // (signed byte) slow_signed_multiply::a#0 = (signed byte) signed_multiply_results_compare::a#6  // register copy zp ZP_BYTE:2
  //SEG45 [21] (signed byte) slow_signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 slow_signed_multiply::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 slow_signed_multiply::b#0 line_cursor#1 ] ) -- vbsxx=vbsz1 
    ldx b
  //SEG46 [22] call slow_signed_multiply param-assignment [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#0 line_cursor#1 ] )
    jsr slow_signed_multiply
  //SEG47 [23] (signed word) slow_signed_multiply::return#2 ← (signed word) slow_signed_multiply::return#0 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] )
    // (signed word) slow_signed_multiply::return#2 = (signed word) slow_signed_multiply::return#0  // register copy zp ZP_WORD:6
    jmp b8
  //SEG48 signed_multiply_results_compare::@8
  b8:
  //SEG49 [24] (signed word) signed_multiply_results_compare::ms#0 ← (signed word) slow_signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda slow_signed_multiply.return
    sta ms
    lda slow_signed_multiply.return+1
    sta ms+1
  //SEG50 [25] (signed byte) signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 line_cursor#1 ] ) -- vbsyy=vbsz1 
    ldy a
  //SEG51 [26] (signed byte) signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 signed_multiply::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 signed_multiply::b#0 line_cursor#1 ] )
    // (signed byte) signed_multiply::b#0 = (signed byte) signed_multiply_results_compare::b#2  // register copy zp ZP_BYTE:3
  //SEG52 [27] call signed_multiply param-assignment [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::m#4 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::m#4 line_cursor#1 ] )
    jsr signed_multiply
  //SEG53 [28] (signed word) signed_multiply::return#2 ← (signed word)(word) signed_multiply::m#4 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] )
    // (signed word) signed_multiply::return#2 = (signed word)(word) signed_multiply::m#4  // register copy zp ZP_WORD:6
    jmp b9
  //SEG54 signed_multiply_results_compare::@9
  b9:
  //SEG55 [29] (signed word) signed_multiply_results_compare::ma#0 ← (signed word) signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] )
    // (signed word) signed_multiply_results_compare::ma#0 = (signed word) signed_multiply::return#2  // register copy zp ZP_WORD:6
  //SEG56 [30] if((signed word) signed_multiply_results_compare::ms#0==(signed word) signed_multiply_results_compare::ma#0) goto signed_multiply_results_compare::@3 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) -- vwsz1_eq_vwsz2_then_la1 
    lda ms
    cmp ma
    bne !+
    lda ms+1
    cmp ma+1
    beq b3
  !:
    jmp b4
  //SEG57 signed_multiply_results_compare::@4
  b4:
  //SEG58 [31] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL
  //SEG59 [32] (signed byte) signed_multiply_error::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 line_cursor#1 ] ) -- vbsxx=vbsz1 
    ldx a
  //SEG60 [33] (signed byte) signed_multiply_error::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 line_cursor#1 ] ) -- vbsz1=vbsz2 
    lda b
    sta signed_multiply_error.b
  //SEG61 [34] (signed word) signed_multiply_error::ms#0 ← (signed word) signed_multiply_results_compare::ms#0 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda ms
    sta signed_multiply_error.ms
    lda ms+1
    sta signed_multiply_error.ms+1
  //SEG62 [35] (signed word) signed_multiply_error::ma#0 ← (signed word) signed_multiply_results_compare::ma#0 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda ma
    sta signed_multiply_error.ma
    lda ma+1
    sta signed_multiply_error.ma+1
  //SEG63 [36] call signed_multiply_error param-assignment [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
    jsr signed_multiply_error
    jmp breturn
  //SEG64 signed_multiply_results_compare::@return
  breturn:
  //SEG65 [37] return  [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
    rts
  //SEG66 signed_multiply_results_compare::@3
  b3:
  //SEG67 [38] (signed byte) signed_multiply_results_compare::b#1 ← ++ (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ) -- vbsz1=_inc_vbsz1 
    inc b
  //SEG68 [39] if((signed byte) signed_multiply_results_compare::b#1!=-(byte/word/signed word/dword/signed dword) 128) goto signed_multiply_results_compare::@2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ) -- vbsz1_neq_vbsc1_then_la1 
    lda b
    cmp #-$80
    bne b2_from_b3
    jmp b6
  //SEG69 signed_multiply_results_compare::@6
  b6:
  //SEG70 [40] (signed byte) signed_multiply_results_compare::a#1 ← ++ (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ) -- vbsz1=_inc_vbsz1 
    inc a
  //SEG71 [41] if((signed byte) signed_multiply_results_compare::a#1!=-(byte/word/signed word/dword/signed dword) 128) goto signed_multiply_results_compare::@1 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ) -- vbsz1_neq_vbsc1_then_la1 
    lda a
    cmp #-$80
    bne b1_from_b6
    jmp b7
  //SEG72 signed_multiply_results_compare::@7
  b7:
  //SEG73 [42] (byte*~) char_cursor#176 ← (byte*) line_cursor#1 [ char_cursor#176 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ char_cursor#176 line_cursor#1 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG74 [43] call print_str param-assignment [ line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15 [ line_cursor#1 char_cursor#117 ] )
  //SEG75 [51] phi from signed_multiply_results_compare::@7 to print_str [phi:signed_multiply_results_compare::@7->print_str]
  print_str_from_b7:
  //SEG76 [51] phi (byte*) char_cursor#135 = (byte*~) char_cursor#176 [phi:signed_multiply_results_compare::@7->print_str#0] -- register_copy 
  //SEG77 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_results_compare::str [phi:signed_multiply_results_compare::@7->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
  //SEG78 [44] phi from signed_multiply_results_compare::@7 to signed_multiply_results_compare::@11 [phi:signed_multiply_results_compare::@7->signed_multiply_results_compare::@11]
  b11_from_b7:
    jmp b11
  //SEG79 signed_multiply_results_compare::@11
  b11:
  //SEG80 [45] call print_ln param-assignment [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
  //SEG81 [46] phi from signed_multiply_results_compare::@11 to print_ln [phi:signed_multiply_results_compare::@11->print_ln]
  print_ln_from_b11:
  //SEG82 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#117 [phi:signed_multiply_results_compare::@11->print_ln#0] -- register_copy 
  //SEG83 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#1 [phi:signed_multiply_results_compare::@11->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
    str: .text "signed multiply results match!@"
}
//SEG84 print_ln
print_ln: {
  //SEG85 [47] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  b1_from_print_ln:
  b1_from_b1:
  //SEG86 [47] phi (byte*) line_cursor#20 = (byte*) line_cursor#40 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp b1
  //SEG87 print_ln::@1
  b1:
  //SEG88 [48] (byte*) line_cursor#1 ← (byte*) line_cursor#20 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda line_cursor
    clc
    adc #$28
    sta line_cursor
    bcc !+
    inc line_cursor+1
  !:
  //SEG89 [49] if((byte*) line_cursor#1<(byte*) char_cursor#118) goto print_ln::@1 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) -- pbuz1_lt_pbuz2_then_la1 
    lda line_cursor+1
    cmp char_cursor+1
    bcc b1_from_b1
    bne !+
    lda line_cursor
    cmp char_cursor
    bcc b1_from_b1
  !:
    jmp breturn
  //SEG90 print_ln::@return
  breturn:
  //SEG91 [50] return  [ line_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 ] )
    rts
}
//SEG92 print_str
print_str: {
    .label str = 6
  //SEG93 [52] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  b1_from_print_str:
  b1_from_b2:
  //SEG94 [52] phi (byte*) char_cursor#117 = (byte*) char_cursor#135 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
  //SEG95 [52] phi (byte*) print_str::str#14 = (byte*) print_str::str#16 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    jmp b1
  //SEG96 print_str::@1
  b1:
  //SEG97 [53] if(*((byte*) print_str::str#14)!=(byte) '@') goto print_str::@2 [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (str),y
    cmp #'@'
    bne b2
    jmp breturn
  //SEG98 print_str::@return
  breturn:
  //SEG99 [54] return  [ char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 ] )
    rts
  //SEG100 print_str::@2
  b2:
  //SEG101 [55] *((byte*) char_cursor#117) ← *((byte*) print_str::str#14) [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    ldy #0
    sta (char_cursor),y
  //SEG102 [56] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#117 [ print_str::str#14 char_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#14 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
  //SEG103 [57] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#14 [ print_str::str#0 char_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#0 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc str
    bne !+
    inc str+1
  !:
    jmp b1_from_b2
}
//SEG104 signed_multiply_error
signed_multiply_error: {
    .label b = 2
    .label ms = $a
    .label ma = $c
  //SEG105 [58] (byte*~) char_cursor#172 ← (byte*) line_cursor#1 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG106 [59] call print_str param-assignment [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG107 [51] phi from signed_multiply_error to print_str [phi:signed_multiply_error->print_str]
  print_str_from_signed_multiply_error:
  //SEG108 [51] phi (byte*) char_cursor#135 = (byte*~) char_cursor#172 [phi:signed_multiply_error->print_str#0] -- register_copy 
  //SEG109 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str [phi:signed_multiply_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
    jmp b1
  //SEG110 signed_multiply_error::@1
  b1:
  //SEG111 [60] (signed byte) print_sbyte::b#1 ← (signed byte) signed_multiply_error::a#0 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#1 ] )
    // (signed byte) print_sbyte::b#1 = (signed byte) signed_multiply_error::a#0  // register copy reg byte x
  //SEG112 [61] call print_sbyte param-assignment [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG113 [104] phi from signed_multiply_error::@1 to print_sbyte [phi:signed_multiply_error::@1->print_sbyte]
  print_sbyte_from_b1:
  //SEG114 [104] phi (signed byte) print_sbyte::b#3 = (signed byte) print_sbyte::b#1 [phi:signed_multiply_error::@1->print_sbyte#0] -- register_copy 
    jsr print_sbyte
  //SEG115 [62] phi from signed_multiply_error::@1 to signed_multiply_error::@2 [phi:signed_multiply_error::@1->signed_multiply_error::@2]
  b2_from_b1:
    jmp b2
  //SEG116 signed_multiply_error::@2
  b2:
  //SEG117 [63] call print_str param-assignment [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG118 [51] phi from signed_multiply_error::@2 to print_str [phi:signed_multiply_error::@2->print_str]
  print_str_from_b2:
  //SEG119 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:signed_multiply_error::@2->print_str#0] -- register_copy 
  //SEG120 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str1 [phi:signed_multiply_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta print_str.str
    lda #>str1
    sta print_str.str+1
    jsr print_str
    jmp b3
  //SEG121 signed_multiply_error::@3
  b3:
  //SEG122 [64] (signed byte) print_sbyte::b#2 ← (signed byte) signed_multiply_error::b#0 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#2 ] ) -- vbsxx=vbsz1 
    ldx b
  //SEG123 [65] call print_sbyte param-assignment [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG124 [104] phi from signed_multiply_error::@3 to print_sbyte [phi:signed_multiply_error::@3->print_sbyte]
  print_sbyte_from_b3:
  //SEG125 [104] phi (signed byte) print_sbyte::b#3 = (signed byte) print_sbyte::b#2 [phi:signed_multiply_error::@3->print_sbyte#0] -- register_copy 
    jsr print_sbyte
  //SEG126 [66] phi from signed_multiply_error::@3 to signed_multiply_error::@4 [phi:signed_multiply_error::@3->signed_multiply_error::@4]
  b4_from_b3:
    jmp b4
  //SEG127 signed_multiply_error::@4
  b4:
  //SEG128 [67] call print_str param-assignment [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG129 [51] phi from signed_multiply_error::@4 to print_str [phi:signed_multiply_error::@4->print_str]
  print_str_from_b4:
  //SEG130 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:signed_multiply_error::@4->print_str#0] -- register_copy 
  //SEG131 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str2 [phi:signed_multiply_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta print_str.str
    lda #>str2
    sta print_str.str+1
    jsr print_str
    jmp b5
  //SEG132 signed_multiply_error::@5
  b5:
  //SEG133 [68] (signed word) print_sword::w#1 ← (signed word) signed_multiply_error::ms#0 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ) -- vwsz1=vwsz2 
    lda ms
    sta print_sword.w
    lda ms+1
    sta print_sword.w+1
  //SEG134 [69] call print_sword param-assignment [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG135 [77] phi from signed_multiply_error::@5 to print_sword [phi:signed_multiply_error::@5->print_sword]
  print_sword_from_b5:
  //SEG136 [77] phi (signed word) print_sword::w#3 = (signed word) print_sword::w#1 [phi:signed_multiply_error::@5->print_sword#0] -- register_copy 
    jsr print_sword
  //SEG137 [70] phi from signed_multiply_error::@5 to signed_multiply_error::@6 [phi:signed_multiply_error::@5->signed_multiply_error::@6]
  b6_from_b5:
    jmp b6
  //SEG138 signed_multiply_error::@6
  b6:
  //SEG139 [71] call print_str param-assignment [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG140 [51] phi from signed_multiply_error::@6 to print_str [phi:signed_multiply_error::@6->print_str]
  print_str_from_b6:
  //SEG141 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:signed_multiply_error::@6->print_str#0] -- register_copy 
  //SEG142 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str3 [phi:signed_multiply_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta print_str.str
    lda #>str3
    sta print_str.str+1
    jsr print_str
    jmp b7
  //SEG143 signed_multiply_error::@7
  b7:
  //SEG144 [72] (signed word) print_sword::w#2 ← (signed word) signed_multiply_error::ma#0 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ) -- vwsz1=vwsz2 
    lda ma
    sta print_sword.w
    lda ma+1
    sta print_sword.w+1
  //SEG145 [73] call print_sword param-assignment [ line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#17 ] )
  //SEG146 [77] phi from signed_multiply_error::@7 to print_sword [phi:signed_multiply_error::@7->print_sword]
  print_sword_from_b7:
  //SEG147 [77] phi (signed word) print_sword::w#3 = (signed word) print_sword::w#2 [phi:signed_multiply_error::@7->print_sword#0] -- register_copy 
    jsr print_sword
  //SEG148 [74] phi from signed_multiply_error::@7 to signed_multiply_error::@8 [phi:signed_multiply_error::@7->signed_multiply_error::@8]
  b8_from_b7:
    jmp b8
  //SEG149 signed_multiply_error::@8
  b8:
  //SEG150 [75] call print_ln param-assignment [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ ] )
  //SEG151 [46] phi from signed_multiply_error::@8 to print_ln [phi:signed_multiply_error::@8->print_ln]
  print_ln_from_b8:
  //SEG152 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#17 [phi:signed_multiply_error::@8->print_ln#0] -- register_copy 
  //SEG153 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#1 [phi:signed_multiply_error::@8->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
  //SEG154 signed_multiply_error::@return
  breturn:
  //SEG155 [76] return  [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ ] )
    rts
    str: .text "signed multiply mismatch @"
    str1: .text "*@"
    str2: .text " slow:@"
    str3: .text " / fast asm:@"
}
//SEG156 print_sword
print_sword: {
    .label w = 6
  //SEG157 [78] if((signed word) print_sword::w#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1 [ char_cursor#117 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#117 print_sword::w#3 ] ) -- vwsz1_ge_0_then_la1 
    lda w+1
    bpl b1_from_print_sword
  //SEG158 [79] phi from print_sword to print_sword::@2 [phi:print_sword->print_sword::@2]
  b2_from_print_sword:
    jmp b2
  //SEG159 print_sword::@2
  b2:
  //SEG160 [80] call print_char param-assignment [ char_cursor#17 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#3 ] )
  //SEG161 [100] phi from print_sword::@2 to print_char [phi:print_sword::@2->print_char]
  print_char_from_b2:
  //SEG162 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#117 [phi:print_sword::@2->print_char#0] -- register_copy 
  //SEG163 [100] phi (byte) print_char::ch#4 = (byte) '-' [phi:print_sword::@2->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    jmp b4
  //SEG164 print_sword::@4
  b4:
  //SEG165 [81] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#3 [ char_cursor#17 print_sword::w#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#0 ] ) -- vwsz1=_neg_vwsz1 
    sec
    lda w
    eor #$ff
    adc #0
    sta w
    lda w+1
    eor #$ff
    adc #0
    sta w+1
  //SEG166 [82] phi from print_sword print_sword::@4 to print_sword::@1 [phi:print_sword/print_sword::@4->print_sword::@1]
  b1_from_print_sword:
  b1_from_b4:
  //SEG167 [82] phi (byte*) char_cursor#119 = (byte*) char_cursor#117 [phi:print_sword/print_sword::@4->print_sword::@1#0] -- register_copy 
  //SEG168 [82] phi (signed word) print_sword::w#4 = (signed word) print_sword::w#3 [phi:print_sword/print_sword::@4->print_sword::@1#1] -- register_copy 
    jmp b1
  //SEG169 print_sword::@1
  b1:
  //SEG170 [83] (word~) print_word::w#11 ← (word)(signed word) print_sword::w#4 [ char_cursor#119 print_word::w#11 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#119 print_word::w#11 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#119 print_word::w#11 ] )
    // (word~) print_word::w#11 = (word)(signed word) print_sword::w#4  // register copy zp ZP_WORD:6
  //SEG171 [84] call print_word param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 ] )
  //SEG172 [86] phi from print_sword::@1 to print_word [phi:print_sword::@1->print_word]
  print_word_from_b1:
  //SEG173 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#119 [phi:print_sword::@1->print_word#0] -- register_copy 
  //SEG174 [86] phi (word) print_word::w#5 = (word~) print_word::w#11 [phi:print_sword::@1->print_word#1] -- register_copy 
    jsr print_word
    jmp breturn
  //SEG175 print_sword::@return
  breturn:
  //SEG176 [85] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 ] )
    rts
}
//SEG177 print_word
print_word: {
    .label w = 6
  //SEG178 [87] (byte) print_byte::b#1 ← > (word) print_word::w#5 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:212 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ) -- vbuxx=_hi_vwuz1 
    lda w+1
    tax
  //SEG179 [88] call print_byte param-assignment [ char_cursor#17 print_word::w#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_word::w#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_word::w#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_word::w#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_word::w#5 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_word::w#5 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_word::w#5 ] )
  //SEG180 [92] phi from print_word to print_byte [phi:print_word->print_byte]
  print_byte_from_print_word:
  //SEG181 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#123 [phi:print_word->print_byte#0] -- register_copy 
  //SEG182 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#1 [phi:print_word->print_byte#1] -- register_copy 
    jsr print_byte
    jmp b1
  //SEG183 print_word::@1
  b1:
  //SEG184 [89] (byte) print_byte::b#2 ← < (word) print_word::w#5 [ char_cursor#17 print_byte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_byte::b#2 ] ) -- vbuxx=_lo_vwuz1 
    lda w
    tax
  //SEG185 [90] call print_byte param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 ] )
  //SEG186 [92] phi from print_word::@1 to print_byte [phi:print_word::@1->print_byte]
  print_byte_from_b1:
  //SEG187 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#17 [phi:print_word::@1->print_byte#0] -- register_copy 
  //SEG188 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#2 [phi:print_word::@1->print_byte#1] -- register_copy 
    jsr print_byte
    jmp breturn
  //SEG189 print_word::@return
  breturn:
  //SEG190 [91] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 ] )
    rts
}
//SEG191 print_byte
print_byte: {
  //SEG192 [93] (byte~) print_byte::$0 ← (byte) print_byte::b#5 >> (byte/signed byte/word/signed word/dword/signed dword) 4 [ print_byte::b#5 char_cursor#124 print_byte::$0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] ) -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
  //SEG193 [94] (byte) print_char::ch#2 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_byte::b#5 char_cursor#124 print_char::ch#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] ) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda hextab,y
  //SEG194 [95] call print_char param-assignment [ char_cursor#17 print_byte::b#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] )
  //SEG195 [100] phi from print_byte to print_char [phi:print_byte->print_char]
  print_char_from_print_byte:
  //SEG196 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#124 [phi:print_byte->print_char#0] -- register_copy 
  //SEG197 [100] phi (byte) print_char::ch#4 = (byte) print_char::ch#2 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    jmp b1
  //SEG198 print_byte::@1
  b1:
  //SEG199 [96] (byte~) print_byte::$2 ← (byte) print_byte::b#5 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ char_cursor#17 print_byte::$2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG200 [97] (byte) print_char::ch#3 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#17 print_char::ch#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] ) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda hextab,y
  //SEG201 [98] call print_char param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] )
  //SEG202 [100] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  print_char_from_b1:
  //SEG203 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#17 [phi:print_byte::@1->print_char#0] -- register_copy 
  //SEG204 [100] phi (byte) print_char::ch#4 = (byte) print_char::ch#3 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp breturn
  //SEG205 print_byte::@return
  breturn:
  //SEG206 [99] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] )
    rts
    hextab: .text "0123456789abcdef"
}
//SEG207 print_char
print_char: {
  //SEG208 [101] *((byte*) char_cursor#75) ← (byte) print_char::ch#4 [ char_cursor#75 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (char_cursor),y
  //SEG209 [102] (byte*) char_cursor#17 ← ++ (byte*) char_cursor#75 [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
    jmp breturn
  //SEG210 print_char::@return
  breturn:
  //SEG211 [103] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] )
    rts
}
//SEG212 print_sbyte
print_sbyte: {
  //SEG213 [105] if((signed byte) print_sbyte::b#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sbyte::@1 [ char_cursor#117 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] ) -- vbsxx_ge_0_then_la1 
    cpx #0
    bpl b1_from_print_sbyte
  //SEG214 [106] phi from print_sbyte to print_sbyte::@2 [phi:print_sbyte->print_sbyte::@2]
  b2_from_print_sbyte:
    jmp b2
  //SEG215 print_sbyte::@2
  b2:
  //SEG216 [107] call print_char param-assignment [ char_cursor#17 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#3 ] )
  //SEG217 [100] phi from print_sbyte::@2 to print_char [phi:print_sbyte::@2->print_char]
  print_char_from_b2:
  //SEG218 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#117 [phi:print_sbyte::@2->print_char#0] -- register_copy 
  //SEG219 [100] phi (byte) print_char::ch#4 = (byte) '-' [phi:print_sbyte::@2->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    jmp b4
  //SEG220 print_sbyte::@4
  b4:
  //SEG221 [108] (signed byte) print_sbyte::b#0 ← - (signed byte) print_sbyte::b#3 [ char_cursor#17 print_sbyte::b#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] ) -- vbsxx=_neg_vbsxx 
    txa
    eor #$ff
    clc
    adc #1
    tax
  //SEG222 [109] phi from print_sbyte print_sbyte::@4 to print_sbyte::@1 [phi:print_sbyte/print_sbyte::@4->print_sbyte::@1]
  b1_from_print_sbyte:
  b1_from_b4:
  //SEG223 [109] phi (byte*) char_cursor#121 = (byte*) char_cursor#117 [phi:print_sbyte/print_sbyte::@4->print_sbyte::@1#0] -- register_copy 
  //SEG224 [109] phi (signed byte) print_sbyte::b#4 = (signed byte) print_sbyte::b#3 [phi:print_sbyte/print_sbyte::@4->print_sbyte::@1#1] -- register_copy 
    jmp b1
  //SEG225 print_sbyte::@1
  b1:
  //SEG226 [110] (byte~) print_byte::b#9 ← (byte)(signed byte) print_sbyte::b#4 [ print_byte::b#9 char_cursor#121 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#9 char_cursor#121 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#9 char_cursor#121 ] )
    // (byte~) print_byte::b#9 = (byte)(signed byte) print_sbyte::b#4  // register copy reg byte x
  //SEG227 [111] call print_byte param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG228 [92] phi from print_sbyte::@1 to print_byte [phi:print_sbyte::@1->print_byte]
  print_byte_from_b1:
  //SEG229 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#121 [phi:print_sbyte::@1->print_byte#0] -- register_copy 
  //SEG230 [92] phi (byte) print_byte::b#5 = (byte~) print_byte::b#9 [phi:print_sbyte::@1->print_byte#1] -- register_copy 
    jsr print_byte
    jmp breturn
  //SEG231 print_sbyte::@return
  breturn:
  //SEG232 [112] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
    rts
}
//SEG233 signed_multiply
signed_multiply: {
    .label m = 6
    .label b = 3
    .label return = 6
  //SEG234 [113] (byte~) multiply::a#4 ← (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 ] ) -- vbuaa=vbuyy 
    tya
  //SEG235 [114] (byte~) multiply::b#4 ← (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 multiply::b#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 multiply::b#4 ] ) -- vbuxx=vbuz1 
    ldx b
  //SEG236 [115] call multiply param-assignment [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] )
  //SEG237 [129] phi from signed_multiply to multiply [phi:signed_multiply->multiply]
  multiply_from_signed_multiply:
  //SEG238 [129] phi (byte) multiply::b#2 = (byte~) multiply::b#4 [phi:signed_multiply->multiply#0] -- register_copy 
  //SEG239 [129] phi (byte) multiply::a#2 = (byte~) multiply::a#4 [phi:signed_multiply->multiply#1] -- register_copy 
    jsr multiply
  //SEG240 [116] (word) multiply::return#2 ← (word) multiply::return#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] )
    // (word) multiply::return#2 = (word) multiply::return#0  // register copy zp ZP_WORD:6
    jmp b6
  //SEG241 signed_multiply::@6
  b6:
  //SEG242 [117] (word) signed_multiply::m#0 ← (word) multiply::return#2 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] )
    // (word) signed_multiply::m#0 = (word) multiply::return#2  // register copy zp ZP_WORD:6
  //SEG243 [118] if((signed byte) signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@1 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ) -- vbsyy_ge_0_then_la1 
    cpy #0
    bpl b1_from_b6
    jmp b3
  //SEG244 signed_multiply::@3
  b3:
  //SEG245 [119] (byte~) signed_multiply::$6 ← > (word) signed_multiply::m#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ) -- vbuaa=_hi_vwuz1 
    lda m+1
  //SEG246 [120] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 ← (byte~) signed_multiply::$6 - (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ) -- vbuaa=vbuaa_minus_vbuz1 
    sec
    sbc b
  //SEG247 [121] (word) signed_multiply::m#1 ← (word) signed_multiply::m#0 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#1 ] ) -- vwuz1=vwuz1_sethi_vbuaa 
    sta m+1
  //SEG248 [122] phi from signed_multiply::@3 signed_multiply::@6 to signed_multiply::@1 [phi:signed_multiply::@3/signed_multiply::@6->signed_multiply::@1]
  b1_from_b3:
  b1_from_b6:
  //SEG249 [122] phi (word) signed_multiply::m#5 = (word) signed_multiply::m#1 [phi:signed_multiply::@3/signed_multiply::@6->signed_multiply::@1#0] -- register_copy 
    jmp b1
  //SEG250 signed_multiply::@1
  b1:
  //SEG251 [123] if((signed byte) signed_multiply::b#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@2 [ signed_multiply::a#0 signed_multiply::m#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 ] ) -- vbsz1_ge_0_then_la1 
    lda b
    cmp #0
    bpl b2_from_b1
    jmp b4
  //SEG252 signed_multiply::@4
  b4:
  //SEG253 [124] (byte~) signed_multiply::$12 ← > (word) signed_multiply::m#5 [ signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ) -- vbuaa=_hi_vwuz1 
    lda m+1
  //SEG254 [125] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 ← (byte~) signed_multiply::$12 - (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::m#5 signed_multiply::$17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#5 signed_multiply::$17 ] ) -- vbuaa=vbuaa_minus_vbuyy 
    sty $ff
    sec
    sbc $ff
  //SEG255 [126] (word) signed_multiply::m#2 ← (word) signed_multiply::m#5 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 [ signed_multiply::m#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#2 ] ) -- vwuz1=vwuz1_sethi_vbuaa 
    sta m+1
  //SEG256 [127] phi from signed_multiply::@1 signed_multiply::@4 to signed_multiply::@2 [phi:signed_multiply::@1/signed_multiply::@4->signed_multiply::@2]
  b2_from_b1:
  b2_from_b4:
  //SEG257 [127] phi (word) signed_multiply::m#4 = (word) signed_multiply::m#5 [phi:signed_multiply::@1/signed_multiply::@4->signed_multiply::@2#0] -- register_copy 
    jmp b2
  //SEG258 signed_multiply::@2
  b2:
    jmp breturn
  //SEG259 signed_multiply::@return
  breturn:
  //SEG260 [128] return  [ signed_multiply::m#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#4 ] )
    rts
}
//SEG261 multiply
multiply: {
    .const memA = $fe
    .const memB = $ff
    .label return = 6
  //SEG262 [130] *((const byte*) multiply::memA#0) ← (byte) multiply::a#2 [ multiply::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::b#2 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::b#2 ] ) -- _deref_pbuc1=vbuaa 
    sta memA
  //SEG263 [131] *((const byte*) multiply::memB#0) ← (byte) multiply::b#2 [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- _deref_pbuc1=vbuxx 
    stx memB
  //SEG264 asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamul_sqr1_lo,x sm2: sbcmul_sqr2_lo,x stamemA sm3: ldamul_sqr1_hi,x sm4: sbcmul_sqr2_hi,x stamemB  }
    lda memA
    sta sm1+1
    sta sm3+1
    eor #$ff
    sta sm2+1
    sta sm4+1
    ldx memB
    sec
  sm1:
    lda mul_sqr1_lo,x
  sm2:
    sbc mul_sqr2_lo,x
    sta memA
  sm3:
    lda mul_sqr1_hi,x
  sm4:
    sbc mul_sqr2_hi,x
    sta memB
  //SEG265 [133] (word) multiply::return#0 ← *((const byte*) multiply::memB#0) w= *((const byte*) multiply::memA#0) [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] ) -- vwuz1=_deref_pbuc1_word__deref_pbuc2 
    lda memA
    sta return
    lda memB
    sta return+1
    jmp breturn
  //SEG266 multiply::@return
  breturn:
  //SEG267 [134] return  [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] )
    rts
}
//SEG268 slow_signed_multiply
slow_signed_multiply: {
    .label m = 6
    .label return = 6
    .label a = 2
  //SEG269 [135] if((signed byte) slow_signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@1 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ) -- vbsz1_ge_0_then_la1 
    lda a
    cmp #0
    bpl b1
  //SEG270 [136] phi from slow_signed_multiply to slow_signed_multiply::@2 [phi:slow_signed_multiply->slow_signed_multiply::@2]
  b2_from_slow_signed_multiply:
  //SEG271 [136] phi (signed byte) slow_signed_multiply::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply->slow_signed_multiply::@2#0] -- vbsyy=vbuc1 
    lda #0
    tay
  //SEG272 [136] phi (signed word) slow_signed_multiply::m#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply->slow_signed_multiply::@2#1] -- vwsz1=vbuc1 
    lda #0
    sta m
    lda #0
    sta m+1
    jmp b2
  //SEG273 [136] phi from slow_signed_multiply::@2 to slow_signed_multiply::@2 [phi:slow_signed_multiply::@2->slow_signed_multiply::@2]
  b2_from_b2:
  //SEG274 [136] phi (signed byte) slow_signed_multiply::i#2 = (signed byte) slow_signed_multiply::i#1 [phi:slow_signed_multiply::@2->slow_signed_multiply::@2#0] -- register_copy 
  //SEG275 [136] phi (signed word) slow_signed_multiply::m#3 = (signed word) slow_signed_multiply::m#1 [phi:slow_signed_multiply::@2->slow_signed_multiply::@2#1] -- register_copy 
    jmp b2
  //SEG276 slow_signed_multiply::@2
  b2:
  //SEG277 [137] (signed word) slow_signed_multiply::m#1 ← (signed word) slow_signed_multiply::m#3 - (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ) -- vwsz1=vwsz1_minus_vbsxx 
    txa
    sta $fe
    ora #$7f
    bmi !+
    lda #0
  !:
    sta $ff
    sec
    lda m
    sbc $fe
    sta m
    lda m+1
    sbc $ff
    sta m+1
  //SEG278 [138] (signed byte) slow_signed_multiply::i#1 ← -- (signed byte) slow_signed_multiply::i#2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ) -- vbsyy=_dec_vbsyy 
    dey
  //SEG279 [139] if((signed byte) slow_signed_multiply::i#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ) -- vbsyy_neq_vbsz1_then_la1 
    cpy a
    bne b2_from_b2
  //SEG280 [140] phi from slow_signed_multiply::@2 slow_signed_multiply::@5 to slow_signed_multiply::@3 [phi:slow_signed_multiply::@2/slow_signed_multiply::@5->slow_signed_multiply::@3]
  b3_from_b2:
  b3_from_b5:
  //SEG281 [140] phi (signed word) slow_signed_multiply::return#0 = (signed word) slow_signed_multiply::m#1 [phi:slow_signed_multiply::@2/slow_signed_multiply::@5->slow_signed_multiply::@3#0] -- register_copy 
    jmp b3
  //SEG282 [140] phi from slow_signed_multiply::@1 to slow_signed_multiply::@3 [phi:slow_signed_multiply::@1->slow_signed_multiply::@3]
  b3_from_b1:
  //SEG283 [140] phi (signed word) slow_signed_multiply::return#0 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply::@1->slow_signed_multiply::@3#0] -- vwsz1=vbuc1 
    lda #0
    sta return
    lda #0
    sta return+1
    jmp b3
  //SEG284 slow_signed_multiply::@3
  b3:
    jmp breturn
  //SEG285 slow_signed_multiply::@return
  breturn:
  //SEG286 [141] return  [ slow_signed_multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::return#0 ] )
    rts
  //SEG287 slow_signed_multiply::@1
  b1:
  //SEG288 [142] if((signed byte) slow_signed_multiply::a#0<=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@3 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ) -- vbsz1_le_0_then_la1 
    lda a
    cmp #1
    bmi b3_from_b1
  //SEG289 [143] phi from slow_signed_multiply::@1 to slow_signed_multiply::@5 [phi:slow_signed_multiply::@1->slow_signed_multiply::@5]
  b5_from_b1:
  //SEG290 [143] phi (signed byte) slow_signed_multiply::j#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply::@1->slow_signed_multiply::@5#0] -- vbsyy=vbuc1 
    lda #0
    tay
  //SEG291 [143] phi (signed word) slow_signed_multiply::m#5 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply::@1->slow_signed_multiply::@5#1] -- vwsz1=vbuc1 
    lda #0
    sta m
    lda #0
    sta m+1
    jmp b5
  //SEG292 [143] phi from slow_signed_multiply::@5 to slow_signed_multiply::@5 [phi:slow_signed_multiply::@5->slow_signed_multiply::@5]
  b5_from_b5:
  //SEG293 [143] phi (signed byte) slow_signed_multiply::j#2 = (signed byte) slow_signed_multiply::j#1 [phi:slow_signed_multiply::@5->slow_signed_multiply::@5#0] -- register_copy 
  //SEG294 [143] phi (signed word) slow_signed_multiply::m#5 = (signed word) slow_signed_multiply::m#2 [phi:slow_signed_multiply::@5->slow_signed_multiply::@5#1] -- register_copy 
    jmp b5
  //SEG295 slow_signed_multiply::@5
  b5:
  //SEG296 [144] (signed word) slow_signed_multiply::m#2 ← (signed word) slow_signed_multiply::m#5 + (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ) -- vwsz1=vwsz1_plus_vbsxx 
    txa
    sta $fe
    ora #$7f
    bmi !+
    lda #0
  !:
    sta $ff
    clc
    lda m
    adc $fe
    sta m
    lda m+1
    adc $ff
    sta m+1
  //SEG297 [145] (signed byte) slow_signed_multiply::j#1 ← ++ (signed byte) slow_signed_multiply::j#2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ) -- vbsyy=_inc_vbsyy 
    iny
  //SEG298 [146] if((signed byte) slow_signed_multiply::j#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@5 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ) -- vbsyy_neq_vbsz1_then_la1 
    cpy a
    bne b5_from_b5
    jmp b3_from_b5
}
//SEG299 multiply_results_compare
multiply_results_compare: {
    .label ms = $a
    .label ma = 6
    .label b = 3
    .label a = 2
  //SEG300 [148] phi from multiply_results_compare to multiply_results_compare::@1 [phi:multiply_results_compare->multiply_results_compare::@1]
  b1_from_multiply_results_compare:
  //SEG301 [148] phi (byte) multiply_results_compare::a#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:multiply_results_compare->multiply_results_compare::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta a
    jmp b1
  //SEG302 [148] phi from multiply_results_compare::@6 to multiply_results_compare::@1 [phi:multiply_results_compare::@6->multiply_results_compare::@1]
  b1_from_b6:
  //SEG303 [148] phi (byte) multiply_results_compare::a#6 = (byte) multiply_results_compare::a#1 [phi:multiply_results_compare::@6->multiply_results_compare::@1#0] -- register_copy 
    jmp b1
  //SEG304 multiply_results_compare::@1
  b1:
  //SEG305 [149] phi from multiply_results_compare::@1 to multiply_results_compare::@2 [phi:multiply_results_compare::@1->multiply_results_compare::@2]
  b2_from_b1:
  //SEG306 [149] phi (byte) multiply_results_compare::b#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:multiply_results_compare::@1->multiply_results_compare::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta b
    jmp b2
  //SEG307 [149] phi from multiply_results_compare::@3 to multiply_results_compare::@2 [phi:multiply_results_compare::@3->multiply_results_compare::@2]
  b2_from_b3:
  //SEG308 [149] phi (byte) multiply_results_compare::b#2 = (byte) multiply_results_compare::b#1 [phi:multiply_results_compare::@3->multiply_results_compare::@2#0] -- register_copy 
    jmp b2
  //SEG309 multiply_results_compare::@2
  b2:
  //SEG310 [150] (byte) slow_multiply::a#0 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 ] )
    // (byte) slow_multiply::a#0 = (byte) multiply_results_compare::a#6  // register copy zp ZP_BYTE:2
  //SEG311 [151] (byte) slow_multiply::b#0 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ) -- vbuxx=vbuz1 
    ldx b
  //SEG312 [152] call slow_multiply param-assignment [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] )
    jsr slow_multiply
  //SEG313 [153] (word) slow_multiply::return#2 ← (word) slow_multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] )
    // (word) slow_multiply::return#2 = (word) slow_multiply::return#0  // register copy zp ZP_WORD:6
    jmp b8
  //SEG314 multiply_results_compare::@8
  b8:
  //SEG315 [154] (word) multiply_results_compare::ms#0 ← (word) slow_multiply::return#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- vwuz1=vwuz2 
    lda slow_multiply.return
    sta ms
    lda slow_multiply.return+1
    sta ms+1
  //SEG316 [155] (byte) multiply::a#1 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- vbuaa=vbuz1 
    lda a
  //SEG317 [156] (byte) multiply::b#1 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply::b#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply::b#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- vbuxx=vbuz1 
    ldx b
  //SEG318 [157] call multiply param-assignment [ line_cursor#27 char_cursor#27 multiply::return#0 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::return#0 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] )
  //SEG319 [129] phi from multiply_results_compare::@8 to multiply [phi:multiply_results_compare::@8->multiply]
  multiply_from_b8:
  //SEG320 [129] phi (byte) multiply::b#2 = (byte) multiply::b#1 [phi:multiply_results_compare::@8->multiply#0] -- register_copy 
  //SEG321 [129] phi (byte) multiply::a#2 = (byte) multiply::a#1 [phi:multiply_results_compare::@8->multiply#1] -- register_copy 
    jsr multiply
  //SEG322 [158] (word) multiply::return#3 ← (word) multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] )
    // (word) multiply::return#3 = (word) multiply::return#0  // register copy zp ZP_WORD:6
    jmp b9
  //SEG323 multiply_results_compare::@9
  b9:
  //SEG324 [159] (word) multiply_results_compare::ma#0 ← (word) multiply::return#3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] )
    // (word) multiply_results_compare::ma#0 = (word) multiply::return#3  // register copy zp ZP_WORD:6
  //SEG325 [160] if((word) multiply_results_compare::ms#0==(word) multiply_results_compare::ma#0) goto multiply_results_compare::@3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) -- vwuz1_eq_vwuz2_then_la1 
    lda ms
    cmp ma
    bne !+
    lda ms+1
    cmp ma+1
    beq b3
  !:
    jmp b4
  //SEG326 multiply_results_compare::@4
  b4:
  //SEG327 [161] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL
  //SEG328 [162] (byte) multiply_error::a#0 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 ] ) -- vbuxx=vbuz1 
    ldx a
  //SEG329 [163] (byte) multiply_error::b#0 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 ] ) -- vbuz1=vbuz2 
    lda b
    sta multiply_error.b
  //SEG330 [164] (word) multiply_error::ms#0 ← (word) multiply_results_compare::ms#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] )
    // (word) multiply_error::ms#0 = (word) multiply_results_compare::ms#0  // register copy zp ZP_WORD:10
  //SEG331 [165] (word) multiply_error::ma#0 ← (word) multiply_results_compare::ma#0 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ) -- vwuz1=vwuz2 
    lda ma
    sta multiply_error.ma
    lda ma+1
    sta multiply_error.ma+1
  //SEG332 [166] call multiply_error param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
  //SEG333 [176] phi from multiply_results_compare::@4 to multiply_error [phi:multiply_results_compare::@4->multiply_error]
  multiply_error_from_b4:
    jsr multiply_error
    jmp breturn
  //SEG334 multiply_results_compare::@return
  breturn:
  //SEG335 [167] return  [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
    rts
  //SEG336 multiply_results_compare::@3
  b3:
  //SEG337 [168] (byte) multiply_results_compare::b#1 ← ++ (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ) -- vbuz1=_inc_vbuz1 
    inc b
  //SEG338 [169] if((byte) multiply_results_compare::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ) -- vbuz1_neq_0_then_la1 
    lda b
    bne b2_from_b3
    jmp b6
  //SEG339 multiply_results_compare::@6
  b6:
  //SEG340 [170] (byte) multiply_results_compare::a#1 ← ++ (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ) -- vbuz1=_inc_vbuz1 
    inc a
  //SEG341 [171] if((byte) multiply_results_compare::a#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@1 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ) -- vbuz1_neq_0_then_la1 
    lda a
    bne b1_from_b6
  //SEG342 [172] phi from multiply_results_compare::@6 to multiply_results_compare::@7 [phi:multiply_results_compare::@6->multiply_results_compare::@7]
  b7_from_b6:
    jmp b7
  //SEG343 multiply_results_compare::@7
  b7:
  //SEG344 [173] call print_str param-assignment [ char_cursor#117 line_cursor#27 ] ( main:2::multiply_results_compare:13 [ char_cursor#117 line_cursor#27 ] )
  //SEG345 [51] phi from multiply_results_compare::@7 to print_str [phi:multiply_results_compare::@7->print_str]
  print_str_from_b7:
  //SEG346 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#27 [phi:multiply_results_compare::@7->print_str#0] -- register_copy 
  //SEG347 [51] phi (byte*) print_str::str#16 = (const string) multiply_results_compare::str [phi:multiply_results_compare::@7->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
  //SEG348 [174] phi from multiply_results_compare::@7 to multiply_results_compare::@11 [phi:multiply_results_compare::@7->multiply_results_compare::@11]
  b11_from_b7:
    jmp b11
  //SEG349 multiply_results_compare::@11
  b11:
  //SEG350 [175] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
  //SEG351 [46] phi from multiply_results_compare::@11 to print_ln [phi:multiply_results_compare::@11->print_ln]
  print_ln_from_b11:
  //SEG352 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#117 [phi:multiply_results_compare::@11->print_ln#0] -- register_copy 
  //SEG353 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#27 [phi:multiply_results_compare::@11->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
    str: .text "multiply results match!@"
}
//SEG354 multiply_error
multiply_error: {
    .label b = 2
    .label ms = $a
    .label ma = $c
  //SEG355 [177] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG356 [51] phi from multiply_error to print_str [phi:multiply_error->print_str]
  print_str_from_multiply_error:
  //SEG357 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#27 [phi:multiply_error->print_str#0] -- register_copy 
  //SEG358 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str [phi:multiply_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
    jmp b1
  //SEG359 multiply_error::@1
  b1:
  //SEG360 [178] (byte) print_byte::b#3 ← (byte) multiply_error::a#0 [ char_cursor#117 line_cursor#27 print_byte::b#3 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_byte::b#3 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
    // (byte) print_byte::b#3 = (byte) multiply_error::a#0  // register copy reg byte x
  //SEG361 [179] call print_byte param-assignment [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG362 [92] phi from multiply_error::@1 to print_byte [phi:multiply_error::@1->print_byte]
  print_byte_from_b1:
  //SEG363 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#117 [phi:multiply_error::@1->print_byte#0] -- register_copy 
  //SEG364 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#3 [phi:multiply_error::@1->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG365 [180] phi from multiply_error::@1 to multiply_error::@2 [phi:multiply_error::@1->multiply_error::@2]
  b2_from_b1:
    jmp b2
  //SEG366 multiply_error::@2
  b2:
  //SEG367 [181] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG368 [51] phi from multiply_error::@2 to print_str [phi:multiply_error::@2->print_str]
  print_str_from_b2:
  //SEG369 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_error::@2->print_str#0] -- register_copy 
  //SEG370 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str1 [phi:multiply_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta print_str.str
    lda #>str1
    sta print_str.str+1
    jsr print_str
    jmp b3
  //SEG371 multiply_error::@3
  b3:
  //SEG372 [182] (byte) print_byte::b#4 ← (byte) multiply_error::b#0 [ char_cursor#117 line_cursor#27 print_byte::b#4 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_byte::b#4 multiply_error::ms#0 multiply_error::ma#0 ] ) -- vbuxx=vbuz1 
    ldx b
  //SEG373 [183] call print_byte param-assignment [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG374 [92] phi from multiply_error::@3 to print_byte [phi:multiply_error::@3->print_byte]
  print_byte_from_b3:
  //SEG375 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#117 [phi:multiply_error::@3->print_byte#0] -- register_copy 
  //SEG376 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#4 [phi:multiply_error::@3->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG377 [184] phi from multiply_error::@3 to multiply_error::@4 [phi:multiply_error::@3->multiply_error::@4]
  b4_from_b3:
    jmp b4
  //SEG378 multiply_error::@4
  b4:
  //SEG379 [185] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG380 [51] phi from multiply_error::@4 to print_str [phi:multiply_error::@4->print_str]
  print_str_from_b4:
  //SEG381 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_error::@4->print_str#0] -- register_copy 
  //SEG382 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str2 [phi:multiply_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta print_str.str
    lda #>str2
    sta print_str.str+1
    jsr print_str
    jmp b5
  //SEG383 multiply_error::@5
  b5:
  //SEG384 [186] (word) print_word::w#3 ← (word) multiply_error::ms#0 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ) -- vwuz1=vwuz2 
    lda ms
    sta print_word.w
    lda ms+1
    sta print_word.w+1
  //SEG385 [187] call print_word param-assignment [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] )
  //SEG386 [86] phi from multiply_error::@5 to print_word [phi:multiply_error::@5->print_word]
  print_word_from_b5:
  //SEG387 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_error::@5->print_word#0] -- register_copy 
  //SEG388 [86] phi (word) print_word::w#5 = (word) print_word::w#3 [phi:multiply_error::@5->print_word#1] -- register_copy 
    jsr print_word
  //SEG389 [188] phi from multiply_error::@5 to multiply_error::@6 [phi:multiply_error::@5->multiply_error::@6]
  b6_from_b5:
    jmp b6
  //SEG390 multiply_error::@6
  b6:
  //SEG391 [189] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::ma#0 ] )
  //SEG392 [51] phi from multiply_error::@6 to print_str [phi:multiply_error::@6->print_str]
  print_str_from_b6:
  //SEG393 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_error::@6->print_str#0] -- register_copy 
  //SEG394 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str3 [phi:multiply_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta print_str.str
    lda #>str3
    sta print_str.str+1
    jsr print_str
    jmp b7
  //SEG395 multiply_error::@7
  b7:
  //SEG396 [190] (word) print_word::w#4 ← (word) multiply_error::ma#0 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ) -- vwuz1=vwuz2 
    lda ma
    sta print_word.w
    lda ma+1
    sta print_word.w+1
  //SEG397 [191] call print_word param-assignment [ char_cursor#17 line_cursor#27 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 ] )
  //SEG398 [86] phi from multiply_error::@7 to print_word [phi:multiply_error::@7->print_word]
  print_word_from_b7:
  //SEG399 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_error::@7->print_word#0] -- register_copy 
  //SEG400 [86] phi (word) print_word::w#5 = (word) print_word::w#4 [phi:multiply_error::@7->print_word#1] -- register_copy 
    jsr print_word
  //SEG401 [192] phi from multiply_error::@7 to multiply_error::@8 [phi:multiply_error::@7->multiply_error::@8]
  b8_from_b7:
    jmp b8
  //SEG402 multiply_error::@8
  b8:
  //SEG403 [193] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ line_cursor#1 ] )
  //SEG404 [46] phi from multiply_error::@8 to print_ln [phi:multiply_error::@8->print_ln]
  print_ln_from_b8:
  //SEG405 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#17 [phi:multiply_error::@8->print_ln#0] -- register_copy 
  //SEG406 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#27 [phi:multiply_error::@8->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
  //SEG407 multiply_error::@return
  breturn:
  //SEG408 [194] return  [ line_cursor#1 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ line_cursor#1 ] )
    rts
    str: .text "multiply mismatch @"
    str1: .text "*@"
    str2: .text " slow:@"
    str3: .text " / fast asm:@"
}
//SEG409 slow_multiply
slow_multiply: {
    .label return = 6
    .label m = 6
    .label a = 2
  //SEG410 [195] if((byte) slow_multiply::a#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_multiply::@1 [ slow_multiply::a#0 slow_multiply::b#0 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ) -- vbuz1_eq_0_then_la1 
    lda a
    beq b1_from_slow_multiply
  //SEG411 [196] phi from slow_multiply to slow_multiply::@2 [phi:slow_multiply->slow_multiply::@2]
  b2_from_slow_multiply:
  //SEG412 [196] phi (byte) slow_multiply::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_multiply->slow_multiply::@2#0] -- vbuyy=vbuc1 
    ldy #0
  //SEG413 [196] phi (word) slow_multiply::m#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_multiply->slow_multiply::@2#1] -- vwuz1=vbuc1 
    lda #0
    sta m
    lda #0
    sta m+1
    jmp b2
  //SEG414 [196] phi from slow_multiply::@2 to slow_multiply::@2 [phi:slow_multiply::@2->slow_multiply::@2]
  b2_from_b2:
  //SEG415 [196] phi (byte) slow_multiply::i#2 = (byte) slow_multiply::i#1 [phi:slow_multiply::@2->slow_multiply::@2#0] -- register_copy 
  //SEG416 [196] phi (word) slow_multiply::m#3 = (word) slow_multiply::m#1 [phi:slow_multiply::@2->slow_multiply::@2#1] -- register_copy 
    jmp b2
  //SEG417 slow_multiply::@2
  b2:
  //SEG418 [197] (word) slow_multiply::m#1 ← (word) slow_multiply::m#3 + (byte) slow_multiply::b#0 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ) -- vwuz1=vwuz1_plus_vbuxx 
    txa
    clc
    adc m
    sta m
    lda #0
    adc m+1
    sta m+1
  //SEG419 [198] (byte) slow_multiply::i#1 ← ++ (byte) slow_multiply::i#2 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ) -- vbuyy=_inc_vbuyy 
    iny
  //SEG420 [199] if((byte) slow_multiply::i#1!=(byte) slow_multiply::a#0) goto slow_multiply::@2 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ) -- vbuyy_neq_vbuz1_then_la1 
    cpy a
    bne b2_from_b2
  //SEG421 [200] phi from slow_multiply::@2 to slow_multiply::@1 [phi:slow_multiply::@2->slow_multiply::@1]
  b1_from_b2:
  //SEG422 [200] phi (word) slow_multiply::return#0 = (word) slow_multiply::m#1 [phi:slow_multiply::@2->slow_multiply::@1#0] -- register_copy 
    jmp b1
  //SEG423 [200] phi from slow_multiply to slow_multiply::@1 [phi:slow_multiply->slow_multiply::@1]
  b1_from_slow_multiply:
  //SEG424 [200] phi (word) slow_multiply::return#0 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_multiply->slow_multiply::@1#0] -- vwuz1=vbuc1 
    lda #0
    sta return
    lda #0
    sta return+1
    jmp b1
  //SEG425 slow_multiply::@1
  b1:
    jmp breturn
  //SEG426 slow_multiply::@return
  breturn:
  //SEG427 [201] return  [ slow_multiply::return#0 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] )
    rts
}
//SEG428 multiply_tables_compare
multiply_tables_compare: {
    .label asm_sqr = $a
    .label kc_sqr = 4
  //SEG429 [203] phi from multiply_tables_compare to multiply_tables_compare::@1 [phi:multiply_tables_compare->multiply_tables_compare::@1]
  b1_from_multiply_tables_compare:
  //SEG430 [203] phi (byte*) multiply_tables_compare::asm_sqr#2 = (const byte[512]) asm_mul_sqr1_lo#0 [phi:multiply_tables_compare->multiply_tables_compare::@1#0] -- pbuz1=pbuc1 
    lda #<asm_mul_sqr1_lo
    sta asm_sqr
    lda #>asm_mul_sqr1_lo
    sta asm_sqr+1
  //SEG431 [203] phi (byte*) multiply_tables_compare::kc_sqr#2 = (const byte[512]) mul_sqr1_lo#0 [phi:multiply_tables_compare->multiply_tables_compare::@1#1] -- pbuz1=pbuc1 
    lda #<mul_sqr1_lo
    sta kc_sqr
    lda #>mul_sqr1_lo
    sta kc_sqr+1
    jmp b1
  //SEG432 [203] phi from multiply_tables_compare::@2 to multiply_tables_compare::@1 [phi:multiply_tables_compare::@2->multiply_tables_compare::@1]
  b1_from_b2:
  //SEG433 [203] phi (byte*) multiply_tables_compare::asm_sqr#2 = (byte*) multiply_tables_compare::asm_sqr#1 [phi:multiply_tables_compare::@2->multiply_tables_compare::@1#0] -- register_copy 
  //SEG434 [203] phi (byte*) multiply_tables_compare::kc_sqr#2 = (byte*) multiply_tables_compare::kc_sqr#1 [phi:multiply_tables_compare::@2->multiply_tables_compare::@1#1] -- register_copy 
    jmp b1
  //SEG435 multiply_tables_compare::@1
  b1:
  //SEG436 [204] if(*((byte*) multiply_tables_compare::kc_sqr#2)==*((byte*) multiply_tables_compare::asm_sqr#2)) goto multiply_tables_compare::@2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) -- _deref_pbuz1_eq__deref_pbuz2_then_la1 
    ldy #0
    lda (kc_sqr),y
    ldy #0
    cmp (asm_sqr),y
    beq b2
    jmp b3
  //SEG437 multiply_tables_compare::@3
  b3:
  //SEG438 [205] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL
  //SEG439 [206] call print_str param-assignment [ char_cursor#117 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] )
  //SEG440 [51] phi from multiply_tables_compare::@3 to print_str [phi:multiply_tables_compare::@3->print_str]
  print_str_from_b3:
  //SEG441 [51] phi (byte*) char_cursor#135 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@3->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta char_cursor
    lda #>$400
    sta char_cursor+1
  //SEG442 [51] phi (byte*) print_str::str#16 = (const string) multiply_tables_compare::str [phi:multiply_tables_compare::@3->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
    jmp b6
  //SEG443 multiply_tables_compare::@6
  b6:
  //SEG444 [207] (word~) print_word::w#9 ← (word)(byte*) multiply_tables_compare::asm_sqr#2 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ) -- vwuz1=vwuz2 
    lda asm_sqr
    sta print_word.w
    lda asm_sqr+1
    sta print_word.w+1
  //SEG445 [208] call print_word param-assignment [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] )
  //SEG446 [86] phi from multiply_tables_compare::@6 to print_word [phi:multiply_tables_compare::@6->print_word]
  print_word_from_b6:
  //SEG447 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_tables_compare::@6->print_word#0] -- register_copy 
  //SEG448 [86] phi (word) print_word::w#5 = (word~) print_word::w#9 [phi:multiply_tables_compare::@6->print_word#1] -- register_copy 
    jsr print_word
  //SEG449 [209] phi from multiply_tables_compare::@6 to multiply_tables_compare::@7 [phi:multiply_tables_compare::@6->multiply_tables_compare::@7]
  b7_from_b6:
    jmp b7
  //SEG450 multiply_tables_compare::@7
  b7:
  //SEG451 [210] call print_str param-assignment [ char_cursor#117 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 multiply_tables_compare::kc_sqr#2 ] )
  //SEG452 [51] phi from multiply_tables_compare::@7 to print_str [phi:multiply_tables_compare::@7->print_str]
  print_str_from_b7:
  //SEG453 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_tables_compare::@7->print_str#0] -- register_copy 
  //SEG454 [51] phi (byte*) print_str::str#16 = (const string) multiply_tables_compare::str1 [phi:multiply_tables_compare::@7->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta print_str.str
    lda #>str1
    sta print_str.str+1
    jsr print_str
    jmp b8
  //SEG455 multiply_tables_compare::@8
  b8:
  //SEG456 [211] (word~) print_word::w#10 ← (word)(byte*) multiply_tables_compare::kc_sqr#2 [ char_cursor#117 print_word::w#10 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#10 ] ) -- vwuz1=vwuz2 
    lda kc_sqr
    sta print_word.w
    lda kc_sqr+1
    sta print_word.w+1
  //SEG457 [212] call print_word param-assignment [ char_cursor#17 ] ( main:2::multiply_tables_compare:11 [ char_cursor#17 ] )
  //SEG458 [86] phi from multiply_tables_compare::@8 to print_word [phi:multiply_tables_compare::@8->print_word]
  print_word_from_b8:
  //SEG459 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_tables_compare::@8->print_word#0] -- register_copy 
  //SEG460 [86] phi (word) print_word::w#5 = (word~) print_word::w#10 [phi:multiply_tables_compare::@8->print_word#1] -- register_copy 
    jsr print_word
  //SEG461 [213] phi from multiply_tables_compare::@8 to multiply_tables_compare::@return [phi:multiply_tables_compare::@8->multiply_tables_compare::@return]
  breturn_from_b8:
  //SEG462 [213] phi (byte*) line_cursor#27 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@8->multiply_tables_compare::@return#0] -- pbuz1=pbuc1 
    lda #<$400
    sta line_cursor
    lda #>$400
    sta line_cursor+1
  //SEG463 [213] phi (byte*) char_cursor#27 = (byte*) char_cursor#17 [phi:multiply_tables_compare::@8->multiply_tables_compare::@return#1] -- register_copy 
    jmp breturn
  //SEG464 multiply_tables_compare::@return
  breturn:
  //SEG465 [214] return  [ line_cursor#27 char_cursor#27 ] ( main:2::multiply_tables_compare:11 [ line_cursor#27 char_cursor#27 ] )
    rts
  //SEG466 multiply_tables_compare::@2
  b2:
  //SEG467 [215] (byte*) multiply_tables_compare::asm_sqr#1 ← ++ (byte*) multiply_tables_compare::asm_sqr#2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#1 ] ) -- pbuz1=_inc_pbuz1 
    inc asm_sqr
    bne !+
    inc asm_sqr+1
  !:
  //SEG468 [216] (byte*) multiply_tables_compare::kc_sqr#1 ← ++ (byte*) multiply_tables_compare::kc_sqr#2 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ) -- pbuz1=_inc_pbuz1 
    inc kc_sqr
    bne !+
    inc kc_sqr+1
  !:
  //SEG469 [217] if((byte*) multiply_tables_compare::kc_sqr#1<(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512*(byte/signed byte/word/signed word/dword/signed dword) 4) goto multiply_tables_compare::@1 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ) -- pbuz1_lt_pbuc1_then_la1 
    lda kc_sqr+1
    cmp #>mul_sqr1_lo+$200*4
    bcc b1_from_b2
    bne !+
    lda kc_sqr
    cmp #<mul_sqr1_lo+$200*4
    bcc b1_from_b2
  !:
  //SEG470 [218] phi from multiply_tables_compare::@2 to multiply_tables_compare::@5 [phi:multiply_tables_compare::@2->multiply_tables_compare::@5]
  b5_from_b2:
    jmp b5
  //SEG471 multiply_tables_compare::@5
  b5:
  //SEG472 [219] call print_str param-assignment [ char_cursor#117 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 ] )
  //SEG473 [51] phi from multiply_tables_compare::@5 to print_str [phi:multiply_tables_compare::@5->print_str]
  print_str_from_b5:
  //SEG474 [51] phi (byte*) char_cursor#135 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@5->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta char_cursor
    lda #>$400
    sta char_cursor+1
  //SEG475 [51] phi (byte*) print_str::str#16 = (const string) multiply_tables_compare::str2 [phi:multiply_tables_compare::@5->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta print_str.str
    lda #>str2
    sta print_str.str+1
    jsr print_str
  //SEG476 [220] phi from multiply_tables_compare::@5 to multiply_tables_compare::@10 [phi:multiply_tables_compare::@5->multiply_tables_compare::@10]
  b10_from_b5:
    jmp b10
  //SEG477 multiply_tables_compare::@10
  b10:
  //SEG478 [221] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 ] )
  //SEG479 [46] phi from multiply_tables_compare::@10 to print_ln [phi:multiply_tables_compare::@10->print_ln]
  print_ln_from_b10:
  //SEG480 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#117 [phi:multiply_tables_compare::@10->print_ln#0] -- register_copy 
  //SEG481 [46] phi (byte*) line_cursor#40 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@10->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta line_cursor
    lda #>$400
    sta line_cursor+1
    jsr print_ln
  //SEG482 [222] (byte*~) char_cursor#197 ← (byte*) line_cursor#1 [ line_cursor#1 char_cursor#197 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 char_cursor#197 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG483 [213] phi from multiply_tables_compare::@10 to multiply_tables_compare::@return [phi:multiply_tables_compare::@10->multiply_tables_compare::@return]
  breturn_from_b10:
  //SEG484 [213] phi (byte*) line_cursor#27 = (byte*) line_cursor#1 [phi:multiply_tables_compare::@10->multiply_tables_compare::@return#0] -- register_copy 
  //SEG485 [213] phi (byte*) char_cursor#27 = (byte*~) char_cursor#197 [phi:multiply_tables_compare::@10->multiply_tables_compare::@return#1] -- register_copy 
    jmp breturn
    str: .text "multiply table mismatch at @"
    str1: .text " / @"
    str2: .text "multiply tables match!@"
}
//SEG486 init_multiply_asm
init_multiply_asm: {
    .const mem = $ff
  //SEG487 asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: staasm_mul_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: staasm_mul_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldaasm_mul_sqr1_hi+1,x staasm_mul_sqr2_hi+$100,x ldaasm_mul_sqr1_hi,x staasm_mul_sqr2_hi,y ldaasm_mul_sqr1_lo+1,x staasm_mul_sqr2_lo+$100,x ldaasm_mul_sqr1_lo,x staasm_mul_sqr2_lo,y dey inx bne!-  }
    ldx #0
    txa
    .byte $c9
  lb1:
    tya
    adc #0
  ml1:
    sta asm_mul_sqr1_hi,x
    tay
    cmp #$40
    txa
    ror
  ml9:
    adc #0
    sta ml9+1
    inx
  ml0:
    sta asm_mul_sqr1_lo,x
    bne lb1
    inc ml0+2
    inc ml1+2
    clc
    iny
    bne lb1
    ldx #0
    ldy #$ff
  !:
    lda asm_mul_sqr1_hi+1,x
    sta asm_mul_sqr2_hi+$100,x
    lda asm_mul_sqr1_hi,x
    sta asm_mul_sqr2_hi,y
    lda asm_mul_sqr1_lo+1,x
    sta asm_mul_sqr2_lo+$100,x
    lda asm_mul_sqr1_lo,x
    sta asm_mul_sqr2_lo,y
    dey
    inx
    bne !-
  //SEG488 [224] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr1_lo
    sta mem
  //SEG489 [225] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr1_hi
    sta mem
  //SEG490 [226] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr2_lo
    sta mem
  //SEG491 [227] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr2_hi
    sta mem
    jmp breturn
  //SEG492 init_multiply_asm::@return
  breturn:
  //SEG493 [228] return  [ ] ( main:2::init_multiply_asm:9 [ ] )
    rts
}
//SEG494 init_multiply
init_multiply: {
    .label sqr1_hi = 6
    .label sqr = 8
    .label sqr1_lo = 4
    .label x_2 = 2
    .label sqr2_hi = 6
    .label sqr2_lo = 4
    .label dir = 2
  //SEG495 [230] phi from init_multiply to init_multiply::@1 [phi:init_multiply->init_multiply::@1]
  b1_from_init_multiply:
  //SEG496 [230] phi (byte) init_multiply::x_2#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init_multiply->init_multiply::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta x_2
  //SEG497 [230] phi (byte*) init_multiply::sqr1_hi#2 = (const byte[512]) mul_sqr1_hi#0+(byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply->init_multiply::@1#1] -- pbuz1=pbuc1 
    lda #<mul_sqr1_hi+1
    sta sqr1_hi
    lda #>mul_sqr1_hi+1
    sta sqr1_hi+1
  //SEG498 [230] phi (byte*) init_multiply::sqr1_lo#2 = (const byte[512]) mul_sqr1_lo#0+(byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply->init_multiply::@1#2] -- pbuz1=pbuc1 
    lda #<mul_sqr1_lo+1
    sta sqr1_lo
    lda #>mul_sqr1_lo+1
    sta sqr1_lo+1
  //SEG499 [230] phi (word) init_multiply::sqr#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init_multiply->init_multiply::@1#3] -- vwuz1=vbuc1 
    lda #0
    sta sqr
    lda #0
    sta sqr+1
  //SEG500 [230] phi (byte) init_multiply::c#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init_multiply->init_multiply::@1#4] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG501 [230] phi from init_multiply::@2 to init_multiply::@1 [phi:init_multiply::@2->init_multiply::@1]
  b1_from_b2:
  //SEG502 [230] phi (byte) init_multiply::x_2#3 = (byte) init_multiply::x_2#2 [phi:init_multiply::@2->init_multiply::@1#0] -- register_copy 
  //SEG503 [230] phi (byte*) init_multiply::sqr1_hi#2 = (byte*) init_multiply::sqr1_hi#1 [phi:init_multiply::@2->init_multiply::@1#1] -- register_copy 
  //SEG504 [230] phi (byte*) init_multiply::sqr1_lo#2 = (byte*) init_multiply::sqr1_lo#1 [phi:init_multiply::@2->init_multiply::@1#2] -- register_copy 
  //SEG505 [230] phi (word) init_multiply::sqr#4 = (word) init_multiply::sqr#1 [phi:init_multiply::@2->init_multiply::@1#3] -- register_copy 
  //SEG506 [230] phi (byte) init_multiply::c#2 = (byte) init_multiply::c#1 [phi:init_multiply::@2->init_multiply::@1#4] -- register_copy 
    jmp b1
  //SEG507 init_multiply::@1
  b1:
  //SEG508 [231] (byte) init_multiply::c#1 ← ++ (byte) init_multiply::c#2 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG509 [232] (byte~) init_multiply::$2 ← (byte) init_multiply::c#1 & (byte/signed byte/word/signed word/dword/signed dword) 1 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #1
  //SEG510 [233] if((byte~) init_multiply::$2!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@2 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ) -- vbuaa_neq_0_then_la1 
    cmp #0
    bne b2_from_b1
    jmp b5
  //SEG511 init_multiply::@5
  b5:
  //SEG512 [234] (byte) init_multiply::x_2#1 ← ++ (byte) init_multiply::x_2#3 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 ] ) -- vbuz1=_inc_vbuz1 
    inc x_2
  //SEG513 [235] (word) init_multiply::sqr#2 ← ++ (word) init_multiply::sqr#4 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 init_multiply::sqr#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 init_multiply::sqr#2 ] ) -- vwuz1=_inc_vwuz1 
    inc sqr
    bne !+
    inc sqr+1
  !:
  //SEG514 [236] phi from init_multiply::@1 init_multiply::@5 to init_multiply::@2 [phi:init_multiply::@1/init_multiply::@5->init_multiply::@2]
  b2_from_b1:
  b2_from_b5:
  //SEG515 [236] phi (byte) init_multiply::x_2#2 = (byte) init_multiply::x_2#3 [phi:init_multiply::@1/init_multiply::@5->init_multiply::@2#0] -- register_copy 
  //SEG516 [236] phi (word) init_multiply::sqr#3 = (word) init_multiply::sqr#4 [phi:init_multiply::@1/init_multiply::@5->init_multiply::@2#1] -- register_copy 
    jmp b2
  //SEG517 init_multiply::@2
  b2:
  //SEG518 [237] (byte~) init_multiply::$5 ← < (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ) -- vbuaa=_lo_vwuz1 
    lda sqr
  //SEG519 [238] *((byte*) init_multiply::sqr1_lo#2) ← (byte~) init_multiply::$5 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (sqr1_lo),y
  //SEG520 [239] (byte~) init_multiply::$6 ← > (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ) -- vbuaa=_hi_vwuz1 
    lda sqr+1
  //SEG521 [240] *((byte*) init_multiply::sqr1_hi#2) ← (byte~) init_multiply::$6 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (sqr1_hi),y
  //SEG522 [241] (byte*) init_multiply::sqr1_hi#1 ← ++ (byte*) init_multiply::sqr1_hi#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr1_hi
    bne !+
    inc sqr1_hi+1
  !:
  //SEG523 [242] (word) init_multiply::sqr#1 ← (word) init_multiply::sqr#3 + (byte) init_multiply::x_2#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) -- vwuz1=vwuz1_plus_vbuz2 
    lda x_2
    clc
    adc sqr
    sta sqr
    lda #0
    adc sqr+1
    sta sqr+1
  //SEG524 [243] (byte*) init_multiply::sqr1_lo#1 ← ++ (byte*) init_multiply::sqr1_lo#2 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr1_lo
    bne !+
    inc sqr1_lo+1
  !:
  //SEG525 [244] if((byte*) init_multiply::sqr1_lo#1!=(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512) goto init_multiply::@1 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda sqr1_lo+1
    cmp #>mul_sqr1_lo+$200
    bne b1_from_b2
    lda sqr1_lo
    cmp #<mul_sqr1_lo+$200
    bne b1_from_b2
  //SEG526 [245] phi from init_multiply::@2 to init_multiply::@3 [phi:init_multiply::@2->init_multiply::@3]
  b3_from_b2:
  //SEG527 [245] phi (byte) init_multiply::dir#2 = (byte/word/signed word/dword/signed dword) 255 [phi:init_multiply::@2->init_multiply::@3#0] -- vbuz1=vbuc1 
    lda #$ff
    sta dir
  //SEG528 [245] phi (byte*) init_multiply::sqr2_hi#2 = (const byte[512]) mul_sqr2_hi#0 [phi:init_multiply::@2->init_multiply::@3#1] -- pbuz1=pbuc1 
    lda #<mul_sqr2_hi
    sta sqr2_hi
    lda #>mul_sqr2_hi
    sta sqr2_hi+1
  //SEG529 [245] phi (byte*) init_multiply::sqr2_lo#2 = (const byte[512]) mul_sqr2_lo#0 [phi:init_multiply::@2->init_multiply::@3#2] -- pbuz1=pbuc1 
    lda #<mul_sqr2_lo
    sta sqr2_lo
    lda #>mul_sqr2_lo
    sta sqr2_lo+1
  //SEG530 [245] phi (byte) init_multiply::x_255#2 = ((byte))-(byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply::@2->init_multiply::@3#3] -- vbuxx=vbuc1 
    ldx #-1
    jmp b3
  //SEG531 [245] phi from init_multiply::@4 to init_multiply::@3 [phi:init_multiply::@4->init_multiply::@3]
  b3_from_b4:
  //SEG532 [245] phi (byte) init_multiply::dir#2 = (byte) init_multiply::dir#3 [phi:init_multiply::@4->init_multiply::@3#0] -- register_copy 
  //SEG533 [245] phi (byte*) init_multiply::sqr2_hi#2 = (byte*) init_multiply::sqr2_hi#1 [phi:init_multiply::@4->init_multiply::@3#1] -- register_copy 
  //SEG534 [245] phi (byte*) init_multiply::sqr2_lo#2 = (byte*) init_multiply::sqr2_lo#1 [phi:init_multiply::@4->init_multiply::@3#2] -- register_copy 
  //SEG535 [245] phi (byte) init_multiply::x_255#2 = (byte) init_multiply::x_255#1 [phi:init_multiply::@4->init_multiply::@3#3] -- register_copy 
    jmp b3
  //SEG536 init_multiply::@3
  b3:
  //SEG537 [246] *((byte*) init_multiply::sqr2_lo#2) ← *((const byte[512]) mul_sqr1_lo#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda mul_sqr1_lo,x
    ldy #0
    sta (sqr2_lo),y
  //SEG538 [247] *((byte*) init_multiply::sqr2_hi#2) ← *((const byte[512]) mul_sqr1_hi#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda mul_sqr1_hi,x
    ldy #0
    sta (sqr2_hi),y
  //SEG539 [248] (byte*) init_multiply::sqr2_hi#1 ← ++ (byte*) init_multiply::sqr2_hi#2 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::sqr2_hi#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr2_hi
    bne !+
    inc sqr2_hi+1
  !:
  //SEG540 [249] (byte) init_multiply::x_255#1 ← (byte) init_multiply::x_255#2 + (byte) init_multiply::dir#2 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ) -- vbuxx=vbuxx_plus_vbuz1 
    txa
    clc
    adc dir
    tax
  //SEG541 [250] if((byte) init_multiply::x_255#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@12 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ) -- vbuxx_neq_0_then_la1 
    cpx #0
    bne b12_from_b3
  //SEG542 [251] phi from init_multiply::@3 to init_multiply::@4 [phi:init_multiply::@3->init_multiply::@4]
  b4_from_b3:
  //SEG543 [251] phi (byte) init_multiply::dir#3 = (byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply::@3->init_multiply::@4#0] -- vbuz1=vbuc1 
    lda #1
    sta dir
    jmp b4
  //SEG544 init_multiply::@4
  b4:
  //SEG545 [252] (byte*) init_multiply::sqr2_lo#1 ← ++ (byte*) init_multiply::sqr2_lo#2 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr2_lo
    bne !+
    inc sqr2_lo+1
  !:
  //SEG546 [253] if((byte*) init_multiply::sqr2_lo#1!=(const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) goto init_multiply::@3 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda sqr2_lo+1
    cmp #>mul_sqr2_lo+$1ff
    bne b3_from_b4
    lda sqr2_lo
    cmp #<mul_sqr2_lo+$1ff
    bne b3_from_b4
    jmp b8
  //SEG547 init_multiply::@8
  b8:
  //SEG548 [254] *((const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda mul_sqr1_lo+$100
    sta mul_sqr2_lo+$1ff
  //SEG549 [255] *((const byte[512]) mul_sqr2_hi#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_hi#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda mul_sqr1_hi+$100
    sta mul_sqr2_hi+$1ff
    jmp breturn
  //SEG550 init_multiply::@return
  breturn:
  //SEG551 [256] return  [ ] ( main:2::init_multiply:7 [ ] )
    rts
  //SEG552 [257] phi from init_multiply::@3 to init_multiply::@12 [phi:init_multiply::@3->init_multiply::@12]
  b12_from_b3:
    jmp b12
  //SEG553 init_multiply::@12
  b12:
  //SEG554 [251] phi from init_multiply::@12 to init_multiply::@4 [phi:init_multiply::@12->init_multiply::@4]
  b4_from_b12:
  //SEG555 [251] phi (byte) init_multiply::dir#3 = (byte) init_multiply::dir#2 [phi:init_multiply::@12->init_multiply::@4#0] -- register_copy 
    jmp b4
}
//SEG556 print_cls
print_cls: {
    .label sc = 4
  //SEG557 [259] phi from print_cls to print_cls::@1 [phi:print_cls->print_cls::@1]
  b1_from_print_cls:
  //SEG558 [259] phi (byte*) print_cls::sc#2 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:print_cls->print_cls::@1#0] -- pbuz1=pbuc1 
    lda #<$400
    sta sc
    lda #>$400
    sta sc+1
    jmp b1
  //SEG559 [259] phi from print_cls::@1 to print_cls::@1 [phi:print_cls::@1->print_cls::@1]
  b1_from_b1:
  //SEG560 [259] phi (byte*) print_cls::sc#2 = (byte*) print_cls::sc#1 [phi:print_cls::@1->print_cls::@1#0] -- register_copy 
    jmp b1
  //SEG561 print_cls::@1
  b1:
  //SEG562 [260] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG563 [261] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG564 [262] if((byte*) print_cls::sc#1!=(word/signed word/dword/signed dword) 1024+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1_neq_vwuc1_then_la1 
    lda sc+1
    cmp #>$400+$3e8
    bne b1_from_b1
    lda sc
    cmp #<$400+$3e8
    bne b1_from_b1
    jmp breturn
  //SEG565 print_cls::@return
  breturn:
  //SEG566 [263] return  [ ] ( main:2::print_cls:5 [ ] )
    rts
}
  .align $100
  mul_sqr1_lo: .fill $200, 0
  .align $100
  mul_sqr1_hi: .fill $200, 0
  .align $100
  mul_sqr2_lo: .fill $200, 0
  .align $100
  mul_sqr2_hi: .fill $200, 0
  .align $100
  asm_mul_sqr1_lo: .fill $200, 0
  .align $100
  asm_mul_sqr1_hi: .fill $200, 0
  .align $100
  asm_mul_sqr2_lo: .fill $200, 0
  .align $100
  asm_mul_sqr2_hi: .fill $200, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp b20
Removing instruction jmp bend
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b8
Removing instruction jmp b9
Removing instruction jmp b4
Removing instruction jmp breturn
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b11
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b8
Removing instruction jmp breturn
Removing instruction jmp b2
Removing instruction jmp b4
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b2
Removing instruction jmp b4
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b6
Removing instruction jmp b3
Removing instruction jmp b1
Removing instruction jmp b4
Removing instruction jmp b2
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp breturn
Removing instruction jmp b5
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b8
Removing instruction jmp b9
Removing instruction jmp b4
Removing instruction jmp breturn
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b11
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b8
Removing instruction jmp breturn
Removing instruction jmp b2
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b3
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b8
Removing instruction jmp breturn
Removing instruction jmp b5
Removing instruction jmp b10
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b5
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b8
Removing instruction jmp breturn
Removing instruction jmp b12
Removing instruction jmp b1
Removing instruction jmp breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction ldy #0
Removing instruction lda memA
Removing instruction ldx memB
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Replacing instruction lda #0 with TYA
Removing instruction lda #0
Removing instruction lda #0
Removing instruction ldy #0
Removing instruction lda #0
Replacing instruction ldx #0 with TAX
Removing instruction ldy #0
Removing instruction ldy #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label b2_from_b3 with b2
Replacing label b1_from_b6 with b1
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Replacing label b1_from_b2 with b1
Replacing label b1_from_print_sword with b1
Replacing label b1_from_print_sbyte with b1
Replacing label b1_from_b6 with b1
Replacing label b2_from_b1 with b2
Replacing label b2_from_b2 with b2
Replacing label b5_from_b5 with b5
Replacing label b2_from_b3 with b2
Replacing label b1_from_b6 with b1
Replacing label b2_from_b2 with b2
Replacing label b1_from_b2 with b1
Replacing label b1_from_b2 with b1
Replacing label b2_from_b1 with b2
Replacing label b1_from_b2 with b1
Replacing label b1_from_b2 with b1
Replacing label b12_from_b3 with b12
Replacing label b3_from_b4 with b3
Replacing label b3_from_b4 with b3
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Removing instruction bbegin:
Removing instruction b20_from_bbegin:
Removing instruction bend_from_b20:
Removing instruction b1_from_main:
Removing instruction init_multiply_from_b1:
Removing instruction b2_from_b1:
Removing instruction b3_from_b2:
Removing instruction multiply_tables_compare_from_b3:
Removing instruction b4_from_b3:
Removing instruction multiply_results_compare_from_b4:
Removing instruction b5_from_b4:
Removing instruction signed_multiply_results_compare_from_b5:
Removing instruction b1_from_b6:
Removing instruction b2_from_b1:
Removing instruction b2_from_b3:
Removing instruction b11_from_b7:
Removing instruction print_ln_from_b11:
Removing instruction b1_from_print_ln:
Removing instruction b1_from_b1:
Removing instruction b1_from_print_str:
Removing instruction b1_from_b2:
Removing instruction b2_from_b1:
Removing instruction print_str_from_b2:
Removing instruction b4_from_b3:
Removing instruction print_str_from_b4:
Removing instruction b6_from_b5:
Removing instruction print_str_from_b6:
Removing instruction b8_from_b7:
Removing instruction print_ln_from_b8:
Removing instruction b2_from_print_sword:
Removing instruction print_char_from_b2:
Removing instruction b1_from_print_sword:
Removing instruction b1_from_b4:
Removing instruction b2_from_print_sbyte:
Removing instruction print_char_from_b2:
Removing instruction b1_from_print_sbyte:
Removing instruction b1_from_b4:
Removing instruction b1_from_b3:
Removing instruction b1_from_b6:
Removing instruction b2_from_b1:
Removing instruction b2_from_b4:
Removing instruction breturn:
Removing instruction b2_from_b2:
Removing instruction b3_from_b2:
Removing instruction breturn:
Removing instruction b5_from_b5:
Removing instruction b1_from_b6:
Removing instruction b2_from_b1:
Removing instruction b2_from_b3:
Removing instruction b7_from_b6:
Removing instruction print_str_from_b7:
Removing instruction b11_from_b7:
Removing instruction print_ln_from_b11:
Removing instruction b2_from_b1:
Removing instruction print_str_from_b2:
Removing instruction b4_from_b3:
Removing instruction print_str_from_b4:
Removing instruction b6_from_b5:
Removing instruction print_str_from_b6:
Removing instruction b8_from_b7:
Removing instruction print_ln_from_b8:
Removing instruction b2_from_b2:
Removing instruction breturn:
Removing instruction b1_from_b2:
Removing instruction b7_from_b6:
Removing instruction print_str_from_b7:
Removing instruction b5_from_b2:
Removing instruction print_str_from_b5:
Removing instruction b10_from_b5:
Removing instruction print_ln_from_b10:
Removing instruction b1_from_b2:
Removing instruction b2_from_b1:
Removing instruction b2_from_b5:
Removing instruction b3_from_b4:
Removing instruction b12_from_b3:
Removing instruction b4_from_b12:
Removing instruction b1_from_b1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction b20:
Removing instruction bend:
Removing instruction print_cls_from_main:
Removing instruction b1:
Removing instruction b2:
Removing instruction b3:
Removing instruction b4:
Removing instruction b5:
Removing instruction breturn:
Removing instruction b1_from_signed_multiply_results_compare:
Removing instruction b8:
Removing instruction b9:
Removing instruction b4:
Removing instruction b6:
Removing instruction b7:
Removing instruction print_str_from_b7:
Removing instruction b11:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction print_str_from_signed_multiply_error:
Removing instruction b1:
Removing instruction print_sbyte_from_b1:
Removing instruction b2:
Removing instruction b3:
Removing instruction print_sbyte_from_b3:
Removing instruction b4:
Removing instruction b5:
Removing instruction print_sword_from_b5:
Removing instruction b6:
Removing instruction b7:
Removing instruction print_sword_from_b7:
Removing instruction b8:
Removing instruction breturn:
Removing instruction b2:
Removing instruction b4:
Removing instruction print_word_from_b1:
Removing instruction breturn:
Removing instruction print_byte_from_print_word:
Removing instruction b1:
Removing instruction print_byte_from_b1:
Removing instruction breturn:
Removing instruction print_char_from_print_byte:
Removing instruction b1:
Removing instruction print_char_from_b1:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction b2:
Removing instruction b4:
Removing instruction print_byte_from_b1:
Removing instruction breturn:
Removing instruction multiply_from_signed_multiply:
Removing instruction b6:
Removing instruction b3:
Removing instruction b4:
Removing instruction breturn:
Removing instruction b2_from_slow_signed_multiply:
Removing instruction b5_from_b1:
Removing instruction b1_from_multiply_results_compare:
Removing instruction b8:
Removing instruction multiply_from_b8:
Removing instruction b9:
Removing instruction b4:
Removing instruction multiply_error_from_b4:
Removing instruction b6:
Removing instruction b7:
Removing instruction b11:
Removing instruction print_str_from_multiply_error:
Removing instruction b1:
Removing instruction print_byte_from_b1:
Removing instruction b2:
Removing instruction b3:
Removing instruction print_byte_from_b3:
Removing instruction b4:
Removing instruction b5:
Removing instruction print_word_from_b5:
Removing instruction b6:
Removing instruction b7:
Removing instruction print_word_from_b7:
Removing instruction b8:
Removing instruction breturn:
Removing instruction b2_from_slow_multiply:
Removing instruction b1_from_b2:
Removing instruction b1_from_multiply_tables_compare:
Removing instruction b3:
Removing instruction print_str_from_b3:
Removing instruction b6:
Removing instruction print_word_from_b6:
Removing instruction b7:
Removing instruction b8:
Removing instruction print_word_from_b8:
Removing instruction breturn_from_b8:
Removing instruction b5:
Removing instruction b10:
Removing instruction breturn_from_b10:
Removing instruction breturn:
Removing instruction b1_from_init_multiply:
Removing instruction b5:
Removing instruction b3_from_b2:
Removing instruction b4_from_b3:
Removing instruction b8:
Removing instruction breturn:
Removing instruction b1_from_print_cls:
Removing instruction breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Skipping double jump to b3 in jmp b3_from_b5
Skipping double jump to b4 in bne b12
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label b3_from_b5 to b4
Relabelling long label b3_from_b1 to b6
Relabelling long label b1_from_slow_multiply to b3
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b2
Removing instruction jmp b5
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b2
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b3
Removing instruction jmp b1
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction b4:
Removing instruction b12:
Succesful ASM optimization Pass5UnusedLabelElimination
Removing unreachable instruction jmp b4
Succesful ASM optimization Pass5UnreachableCodeElimination

FINAL SYMBOL TABLE
(label) @20
(label) @begin
(label) @end
(byte*) BGCOL
(const byte*) BGCOL#0 BGCOL = ((byte*))(word/dword/signed dword) 53281
(byte[512]) asm_mul_sqr1_hi
(const byte[512]) asm_mul_sqr1_hi#0 asm_mul_sqr1_hi = { fill( 512, 0) }
(byte[512]) asm_mul_sqr1_lo
(const byte[512]) asm_mul_sqr1_lo#0 asm_mul_sqr1_lo = { fill( 512, 0) }
(byte[512]) asm_mul_sqr2_hi
(const byte[512]) asm_mul_sqr2_hi#0 asm_mul_sqr2_hi = { fill( 512, 0) }
(byte[512]) asm_mul_sqr2_lo
(const byte[512]) asm_mul_sqr2_lo#0 asm_mul_sqr2_lo = { fill( 512, 0) }
(byte*) char_cursor
(byte*) char_cursor#1 char_cursor zp ZP_WORD:8 11.0
(byte*) char_cursor#117 char_cursor zp ZP_WORD:8 1.6944444444444446
(byte*) char_cursor#118 char_cursor zp ZP_WORD:8 5.25
(byte*) char_cursor#119 char_cursor zp ZP_WORD:8 3.0
(byte*) char_cursor#121 char_cursor zp ZP_WORD:8 3.0
(byte*) char_cursor#123 char_cursor zp ZP_WORD:8 6.0
(byte*) char_cursor#124 char_cursor zp ZP_WORD:8 3.9999999999999996
(byte*) char_cursor#135 char_cursor zp ZP_WORD:8 24.0
(byte*) char_cursor#17 char_cursor zp ZP_WORD:8 0.7894736842105261
(byte*~) char_cursor#172 char_cursor zp ZP_WORD:8 4.0
(byte*~) char_cursor#176 char_cursor zp ZP_WORD:8 4.0
(byte*~) char_cursor#197 char_cursor zp ZP_WORD:8 4.0
(byte*) char_cursor#27 char_cursor zp ZP_WORD:8 0.27586206896551724
(byte*) char_cursor#75 char_cursor zp ZP_WORD:8 6.0
(void()) init_multiply()
(byte~) init_multiply::$2 reg byte a 22.0
(byte~) init_multiply::$5 reg byte a 22.0
(byte~) init_multiply::$6 reg byte a 22.0
(label) init_multiply::@1
(label) init_multiply::@12
(label) init_multiply::@2
(label) init_multiply::@3
(label) init_multiply::@4
(label) init_multiply::@5
(label) init_multiply::@8
(label) init_multiply::@return
(byte) init_multiply::c
(byte) init_multiply::c#1 reg byte x 2.357142857142857
(byte) init_multiply::c#2 reg byte x 22.0
(byte) init_multiply::dir
(byte) init_multiply::dir#2 dir zp ZP_BYTE:2 4.714285714285714
(byte) init_multiply::dir#3 dir zp ZP_BYTE:2 7.333333333333333
(word) init_multiply::sqr
(word) init_multiply::sqr#1 sqr zp ZP_WORD:8 7.333333333333333
(word) init_multiply::sqr#2 sqr zp ZP_WORD:8 22.0
(word) init_multiply::sqr#3 sqr zp ZP_WORD:8 9.166666666666666
(word) init_multiply::sqr#4 sqr zp ZP_WORD:8 6.6000000000000005
(byte*) init_multiply::sqr1_hi
(byte*) init_multiply::sqr1_hi#1 sqr1_hi zp ZP_WORD:6 5.5
(byte*) init_multiply::sqr1_hi#2 sqr1_hi zp ZP_WORD:6 3.0
(byte*) init_multiply::sqr1_lo
(byte*) init_multiply::sqr1_lo#1 sqr1_lo zp ZP_WORD:4 16.5
(byte*) init_multiply::sqr1_lo#2 sqr1_lo zp ZP_WORD:4 2.5384615384615383
(byte*) init_multiply::sqr2_hi
(byte*) init_multiply::sqr2_hi#1 sqr2_hi zp ZP_WORD:6 3.142857142857143
(byte*) init_multiply::sqr2_hi#2 sqr2_hi zp ZP_WORD:6 11.0
(byte*) init_multiply::sqr2_lo
(byte*) init_multiply::sqr2_lo#1 sqr2_lo zp ZP_WORD:4 16.5
(byte*) init_multiply::sqr2_lo#2 sqr2_lo zp ZP_WORD:4 4.125
(byte) init_multiply::x_2
(byte) init_multiply::x_2#1 x_2 zp ZP_BYTE:2 11.0
(byte) init_multiply::x_2#2 x_2 zp ZP_BYTE:2 4.888888888888889
(byte) init_multiply::x_2#3 x_2 zp ZP_BYTE:2 8.25
(byte) init_multiply::x_255
(byte) init_multiply::x_255#1 reg byte x 5.5
(byte) init_multiply::x_255#2 reg byte x 11.0
(void()) init_multiply_asm()
(label) init_multiply_asm::@return
(byte*) init_multiply_asm::mem
(const byte*) init_multiply_asm::mem#0 mem = ((byte*))(byte/word/signed word/dword/signed dword) 255
(byte*) line_cursor
(byte*) line_cursor#1 line_cursor zp ZP_WORD:4 0.8181818181818181
(byte*) line_cursor#20 line_cursor zp ZP_WORD:4 24.0
(byte*) line_cursor#27 line_cursor zp ZP_WORD:4 0.1276595744680851
(byte*) line_cursor#40 line_cursor zp ZP_WORD:4 10.0
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@return
(byte[512]) mul_sqr1_hi
(const byte[512]) mul_sqr1_hi#0 mul_sqr1_hi = { fill( 512, 0) }
(byte[512]) mul_sqr1_lo
(const byte[512]) mul_sqr1_lo#0 mul_sqr1_lo = { fill( 512, 0) }
(byte[512]) mul_sqr2_hi
(const byte[512]) mul_sqr2_hi#0 mul_sqr2_hi = { fill( 512, 0) }
(byte[512]) mul_sqr2_lo
(const byte[512]) mul_sqr2_lo#0 mul_sqr2_lo = { fill( 512, 0) }
(word()) multiply((byte) multiply::a , (byte) multiply::b)
(label) multiply::@return
(byte) multiply::a
(byte) multiply::a#1 reg byte a 101.0
(byte) multiply::a#2 reg byte a 105.0
(byte~) multiply::a#4 reg byte a 2.0
(byte) multiply::b
(byte) multiply::b#1 reg byte x 202.0
(byte) multiply::b#2 reg byte x 52.5
(byte~) multiply::b#4 reg byte x 4.0
(byte*) multiply::memA
(const byte*) multiply::memA#0 memA = ((byte*))(byte/word/signed word/dword/signed dword) 254
(byte*) multiply::memB
(const byte*) multiply::memB#0 memB = ((byte*))(byte/word/signed word/dword/signed dword) 255
(word) multiply::return
(word) multiply::return#0 return zp ZP_WORD:6 26.25
(word) multiply::return#2 return zp ZP_WORD:6 4.0
(word) multiply::return#3 return zp ZP_WORD:6 202.0
(void()) multiply_error((byte) multiply_error::a , (byte) multiply_error::b , (word) multiply_error::ms , (word) multiply_error::ma)
(label) multiply_error::@1
(label) multiply_error::@2
(label) multiply_error::@3
(label) multiply_error::@4
(label) multiply_error::@5
(label) multiply_error::@6
(label) multiply_error::@7
(label) multiply_error::@8
(label) multiply_error::@return
(byte) multiply_error::a
(byte) multiply_error::a#0 reg byte x 0.6666666666666666
(byte) multiply_error::b
(byte) multiply_error::b#0 b zp ZP_BYTE:2 0.4444444444444444
(word) multiply_error::ma
(word) multiply_error::ma#0 ma zp ZP_WORD:12 0.26666666666666666
(word) multiply_error::ms
(word) multiply_error::ms#0 ms zp ZP_WORD:10 0.3333333333333333
(const string) multiply_error::str str = (string) "multiply mismatch @"
(const string) multiply_error::str1 str1 = (string) "*@"
(const string) multiply_error::str2 str2 = (string) " slow:@"
(const string) multiply_error::str3 str3 = (string) " / fast asm:@"
(void()) multiply_results_compare()
(label) multiply_results_compare::@1
(label) multiply_results_compare::@11
(label) multiply_results_compare::@2
(label) multiply_results_compare::@3
(label) multiply_results_compare::@4
(label) multiply_results_compare::@6
(label) multiply_results_compare::@7
(label) multiply_results_compare::@8
(label) multiply_results_compare::@9
(label) multiply_results_compare::@return
(byte) multiply_results_compare::a
(byte) multiply_results_compare::a#1 a zp ZP_BYTE:2 16.5
(byte) multiply_results_compare::a#6 a zp ZP_BYTE:2 14.125
(byte) multiply_results_compare::b
(byte) multiply_results_compare::b#1 b zp ZP_BYTE:3 151.5
(byte) multiply_results_compare::b#2 b zp ZP_BYTE:3 29.0
(word) multiply_results_compare::ma
(word) multiply_results_compare::ma#0 ma zp ZP_WORD:6 34.0
(word) multiply_results_compare::ms
(word) multiply_results_compare::ms#0 ms zp ZP_WORD:10 20.4
(const string) multiply_results_compare::str str = (string) "multiply results match!@"
(void()) multiply_tables_compare()
(label) multiply_tables_compare::@1
(label) multiply_tables_compare::@10
(label) multiply_tables_compare::@2
(label) multiply_tables_compare::@3
(label) multiply_tables_compare::@5
(label) multiply_tables_compare::@6
(label) multiply_tables_compare::@7
(label) multiply_tables_compare::@8
(label) multiply_tables_compare::@return
(byte*) multiply_tables_compare::asm_sqr
(byte*) multiply_tables_compare::asm_sqr#1 asm_sqr zp ZP_WORD:10 7.333333333333333
(byte*) multiply_tables_compare::asm_sqr#2 asm_sqr zp ZP_WORD:10 8.25
(byte*) multiply_tables_compare::kc_sqr
(byte*) multiply_tables_compare::kc_sqr#1 kc_sqr zp ZP_WORD:4 16.5
(byte*) multiply_tables_compare::kc_sqr#2 kc_sqr zp ZP_WORD:4 3.666666666666667
(const string) multiply_tables_compare::str str = (string) "multiply table mismatch at @"
(const string) multiply_tables_compare::str1 str1 = (string) " / @"
(const string) multiply_tables_compare::str2 str2 = (string) "multiply tables match!@"
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte a 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#1 reg byte x 4.0
(byte) print_byte::b#2 reg byte x 4.0
(byte) print_byte::b#3 reg byte x 4.0
(byte) print_byte::b#4 reg byte x 4.0
(byte) print_byte::b#5 reg byte x 3.5
(byte~) print_byte::b#9 reg byte x 4.0
(byte[]) print_byte::hextab
(const string) print_byte::hextab#0 hextab = (string) "0123456789abcdef"
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#2 reg byte a 4.0
(byte) print_char::ch#3 reg byte a 4.0
(byte) print_char::ch#4 reg byte a 6.0
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:4 16.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:4 16.5
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(void()) print_sbyte((signed byte) print_sbyte::b)
(label) print_sbyte::@1
(label) print_sbyte::@2
(label) print_sbyte::@4
(label) print_sbyte::@return
(signed byte) print_sbyte::b
(signed byte) print_sbyte::b#0 reg byte x 4.0
(signed byte) print_sbyte::b#1 reg byte x 4.0
(signed byte) print_sbyte::b#2 reg byte x 4.0
(signed byte) print_sbyte::b#3 reg byte x 2.5
(signed byte) print_sbyte::b#4 reg byte x 4.0
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp ZP_WORD:6 22.0
(byte*) print_str::str#14 str zp ZP_WORD:6 11.5
(byte*) print_str::str#16 str zp ZP_WORD:6 2.0
(void()) print_sword((signed word) print_sword::w)
(label) print_sword::@1
(label) print_sword::@2
(label) print_sword::@4
(label) print_sword::@return
(signed word) print_sword::w
(signed word) print_sword::w#0 w zp ZP_WORD:6 4.0
(signed word) print_sword::w#1 w zp ZP_WORD:6 4.0
(signed word) print_sword::w#2 w zp ZP_WORD:6 4.0
(signed word) print_sword::w#3 w zp ZP_WORD:6 2.5
(signed word) print_sword::w#4 w zp ZP_WORD:6 4.0
(void()) print_word((word) print_word::w)
(label) print_word::@1
(label) print_word::@return
(word) print_word::w
(word~) print_word::w#10 w zp ZP_WORD:6 4.0
(word~) print_word::w#11 w zp ZP_WORD:6 4.0
(word) print_word::w#3 w zp ZP_WORD:6 4.0
(word) print_word::w#4 w zp ZP_WORD:6 4.0
(word) print_word::w#5 w zp ZP_WORD:6 4.666666666666666
(word~) print_word::w#9 w zp ZP_WORD:6 4.0
(signed word()) signed_multiply((signed byte) signed_multiply::a , (signed byte) signed_multiply::b)
(byte~) signed_multiply::$12 reg byte a 4.0
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 reg byte a 4.0
(byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 reg byte a 4.0
(byte~) signed_multiply::$6 reg byte a 4.0
(label) signed_multiply::@1
(label) signed_multiply::@2
(label) signed_multiply::@3
(label) signed_multiply::@4
(label) signed_multiply::@6
(label) signed_multiply::@return
(signed byte) signed_multiply::a
(signed byte) signed_multiply::a#0 reg byte y 7.357142857142858
(signed byte) signed_multiply::b
(signed byte) signed_multiply::b#0 b zp ZP_BYTE:3 9.363636363636363
(word) signed_multiply::m
(word) signed_multiply::m#0 m zp ZP_WORD:6 2.0
(word) signed_multiply::m#1 m zp ZP_WORD:6 4.0
(word) signed_multiply::m#2 m zp ZP_WORD:6 4.0
(word) signed_multiply::m#4 m zp ZP_WORD:6 1.3333333333333333
(word) signed_multiply::m#5 m zp ZP_WORD:6 2.5
(signed word) signed_multiply::return
(signed word) signed_multiply::return#2 return zp ZP_WORD:6 202.0
(void()) signed_multiply_error((signed byte) signed_multiply_error::a , (signed byte) signed_multiply_error::b , (signed word) signed_multiply_error::ms , (signed word) signed_multiply_error::ma)
(label) signed_multiply_error::@1
(label) signed_multiply_error::@2
(label) signed_multiply_error::@3
(label) signed_multiply_error::@4
(label) signed_multiply_error::@5
(label) signed_multiply_error::@6
(label) signed_multiply_error::@7
(label) signed_multiply_error::@8
(label) signed_multiply_error::@return
(signed byte) signed_multiply_error::a
(signed byte) signed_multiply_error::a#0 reg byte x 0.6666666666666666
(signed byte) signed_multiply_error::b
(signed byte) signed_multiply_error::b#0 b zp ZP_BYTE:2 0.4444444444444444
(signed word) signed_multiply_error::ma
(signed word) signed_multiply_error::ma#0 ma zp ZP_WORD:12 0.26666666666666666
(signed word) signed_multiply_error::ms
(signed word) signed_multiply_error::ms#0 ms zp ZP_WORD:10 0.3333333333333333
(const string) signed_multiply_error::str str = (string) "signed multiply mismatch @"
(const string) signed_multiply_error::str1 str1 = (string) "*@"
(const string) signed_multiply_error::str2 str2 = (string) " slow:@"
(const string) signed_multiply_error::str3 str3 = (string) " / fast asm:@"
(void()) signed_multiply_results_compare()
(label) signed_multiply_results_compare::@1
(label) signed_multiply_results_compare::@11
(label) signed_multiply_results_compare::@2
(label) signed_multiply_results_compare::@3
(label) signed_multiply_results_compare::@4
(label) signed_multiply_results_compare::@6
(label) signed_multiply_results_compare::@7
(label) signed_multiply_results_compare::@8
(label) signed_multiply_results_compare::@9
(label) signed_multiply_results_compare::@return
(signed byte) signed_multiply_results_compare::a
(signed byte) signed_multiply_results_compare::a#1 a zp ZP_BYTE:2 16.5
(signed byte) signed_multiply_results_compare::a#6 a zp ZP_BYTE:2 14.125
(signed byte) signed_multiply_results_compare::b
(signed byte) signed_multiply_results_compare::b#1 b zp ZP_BYTE:3 151.5
(signed byte) signed_multiply_results_compare::b#2 b zp ZP_BYTE:3 29.0
(signed word) signed_multiply_results_compare::ma
(signed word) signed_multiply_results_compare::ma#0 ma zp ZP_WORD:6 34.0
(signed word) signed_multiply_results_compare::ms
(signed word) signed_multiply_results_compare::ms#0 ms zp ZP_WORD:8 20.4
(const string) signed_multiply_results_compare::str str = (string) "signed multiply results match!@"
(word()) slow_multiply((byte) slow_multiply::a , (byte) slow_multiply::b)
(label) slow_multiply::@1
(label) slow_multiply::@2
(label) slow_multiply::@return
(byte) slow_multiply::a
(byte) slow_multiply::a#0 a zp ZP_BYTE:2 157.71428571428572
(byte) slow_multiply::b
(byte) slow_multiply::b#0 reg byte x 183.66666666666669
(byte) slow_multiply::i
(byte) slow_multiply::i#1 reg byte y 1501.5
(byte) slow_multiply::i#2 reg byte y 1001.0
(word) slow_multiply::m
(word) slow_multiply::m#1 m zp ZP_WORD:6 1001.0
(word) slow_multiply::m#3 m zp ZP_WORD:6 2002.0
(word) slow_multiply::return
(word) slow_multiply::return#0 return zp ZP_WORD:6 367.33333333333337
(word) slow_multiply::return#2 return zp ZP_WORD:6 202.0
(signed word()) slow_signed_multiply((signed byte) slow_signed_multiply::a , (signed byte) slow_signed_multiply::b)
(label) slow_signed_multiply::@1
(label) slow_signed_multiply::@2
(label) slow_signed_multiply::@3
(label) slow_signed_multiply::@5
(label) slow_signed_multiply::@return
(signed byte) slow_signed_multiply::a
(signed byte) slow_signed_multiply::a#0 a zp ZP_BYTE:2 175.58333333333334
(signed byte) slow_signed_multiply::b
(signed byte) slow_signed_multiply::b#0 reg byte x 191.1818181818182
(signed byte) slow_signed_multiply::i
(signed byte) slow_signed_multiply::i#1 reg byte y 1501.5
(signed byte) slow_signed_multiply::i#2 reg byte y 1001.0
(signed byte) slow_signed_multiply::j
(signed byte) slow_signed_multiply::j#1 reg byte y 1501.5
(signed byte) slow_signed_multiply::j#2 reg byte y 1001.0
(signed word) slow_signed_multiply::m
(signed word) slow_signed_multiply::m#1 m zp ZP_WORD:6 1001.0
(signed word) slow_signed_multiply::m#2 m zp ZP_WORD:6 1001.0
(signed word) slow_signed_multiply::m#3 m zp ZP_WORD:6 2002.0
(signed word) slow_signed_multiply::m#5 m zp ZP_WORD:6 2002.0
(signed word) slow_signed_multiply::return
(signed word) slow_signed_multiply::return#0 return zp ZP_WORD:6 701.0
(signed word) slow_signed_multiply::return#2 return zp ZP_WORD:6 202.0

zp ZP_BYTE:2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::a#1 multiply_results_compare::a#6 multiply_results_compare::a#1 init_multiply::x_2#3 init_multiply::x_2#2 init_multiply::x_2#1 init_multiply::dir#2 init_multiply::dir#3 slow_signed_multiply::a#0 signed_multiply_error::b#0 slow_multiply::a#0 multiply_error::b#0 ]
zp ZP_BYTE:3 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::b#1 multiply_results_compare::b#2 multiply_results_compare::b#1 signed_multiply::b#0 ]
zp ZP_WORD:4 [ line_cursor#20 line_cursor#40 line_cursor#27 line_cursor#1 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::kc_sqr#1 init_multiply::sqr1_lo#2 init_multiply::sqr1_lo#1 init_multiply::sqr2_lo#2 init_multiply::sqr2_lo#1 print_cls::sc#2 print_cls::sc#1 ]
zp ZP_WORD:6 [ print_str::str#14 print_str::str#16 print_str::str#0 print_sword::w#4 print_sword::w#3 print_sword::w#1 print_sword::w#2 print_sword::w#0 print_word::w#5 print_word::w#3 print_word::w#4 print_word::w#9 print_word::w#10 print_word::w#11 signed_multiply::m#4 signed_multiply::m#5 signed_multiply::m#1 signed_multiply::m#0 signed_multiply::m#2 slow_signed_multiply::m#5 slow_signed_multiply::return#0 slow_signed_multiply::m#3 slow_signed_multiply::m#1 slow_signed_multiply::m#2 slow_multiply::return#0 slow_multiply::m#3 slow_multiply::m#1 init_multiply::sqr1_hi#2 init_multiply::sqr1_hi#1 init_multiply::sqr2_hi#2 init_multiply::sqr2_hi#1 slow_signed_multiply::return#2 signed_multiply::return#2 signed_multiply_results_compare::ma#0 multiply::return#2 multiply::return#0 slow_multiply::return#2 multiply::return#3 multiply_results_compare::ma#0 ]
reg byte x [ print_byte::b#5 print_byte::b#3 print_byte::b#4 print_byte::b#9 print_byte::b#1 print_byte::b#2 ]
reg byte a [ print_char::ch#4 print_char::ch#2 print_char::ch#3 ]
zp ZP_WORD:8 [ char_cursor#75 char_cursor#124 char_cursor#123 char_cursor#119 char_cursor#135 char_cursor#27 char_cursor#118 char_cursor#17 char_cursor#117 char_cursor#172 char_cursor#176 char_cursor#1 char_cursor#121 char_cursor#197 init_multiply::sqr#3 init_multiply::sqr#4 init_multiply::sqr#1 init_multiply::sqr#2 signed_multiply_results_compare::ms#0 ]
reg byte x [ print_sbyte::b#4 print_sbyte::b#3 print_sbyte::b#1 print_sbyte::b#2 print_sbyte::b#0 ]
reg byte a [ multiply::a#2 multiply::a#1 multiply::a#4 ]
reg byte x [ multiply::b#2 multiply::b#1 multiply::b#4 ]
reg byte y [ slow_signed_multiply::i#2 slow_signed_multiply::i#1 ]
reg byte y [ slow_signed_multiply::j#2 slow_signed_multiply::j#1 ]
reg byte y [ slow_multiply::i#2 slow_multiply::i#1 ]
zp ZP_WORD:10 [ multiply_tables_compare::asm_sqr#2 multiply_tables_compare::asm_sqr#1 signed_multiply_error::ms#0 multiply_results_compare::ms#0 multiply_error::ms#0 ]
reg byte x [ init_multiply::c#2 init_multiply::c#1 ]
reg byte x [ init_multiply::x_255#2 init_multiply::x_255#1 ]
reg byte x [ slow_signed_multiply::b#0 ]
reg byte y [ signed_multiply::a#0 ]
reg byte x [ signed_multiply_error::a#0 ]
zp ZP_WORD:12 [ signed_multiply_error::ma#0 multiply_error::ma#0 ]
reg byte a [ print_byte::$0 ]
reg byte a [ print_byte::$2 ]
reg byte a [ signed_multiply::$6 ]
reg byte a [ signed_multiply::$16 ]
reg byte a [ signed_multiply::$12 ]
reg byte a [ signed_multiply::$17 ]
reg byte x [ slow_multiply::b#0 ]
reg byte x [ multiply_error::a#0 ]
reg byte a [ init_multiply::$2 ]
reg byte a [ init_multiply::$5 ]
reg byte a [ init_multiply::$6 ]


FINAL ASSEMBLER
Score: 161070

//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d021
  .label char_cursor = 8
  .label line_cursor = 4
//SEG2 @begin
//SEG3 [1] phi from @begin to @20 [phi:@begin->@20]
//SEG4 @20
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @20 to @end [phi:@20->@end]
//SEG7 @end
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #5
    sta BGCOL
  //SEG10 [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  //SEG11 [258] phi from main to print_cls [phi:main->print_cls]
    jsr print_cls
  //SEG12 [6] phi from main to main::@1 [phi:main->main::@1]
  //SEG13 main::@1
  //SEG14 [7] call init_multiply param-assignment [ ] ( main:2 [ ] )
  //SEG15 [229] phi from main::@1 to init_multiply [phi:main::@1->init_multiply]
    jsr init_multiply
  //SEG16 [8] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  //SEG17 main::@2
  //SEG18 [9] call init_multiply_asm param-assignment [ ] ( main:2 [ ] )
    jsr init_multiply_asm
  //SEG19 [10] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG20 main::@3
  //SEG21 [11] call multiply_tables_compare param-assignment [ line_cursor#27 char_cursor#27 ] ( main:2 [ line_cursor#27 char_cursor#27 ] )
  //SEG22 [202] phi from main::@3 to multiply_tables_compare [phi:main::@3->multiply_tables_compare]
    jsr multiply_tables_compare
  //SEG23 [12] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  //SEG24 main::@4
  //SEG25 [13] call multiply_results_compare param-assignment [ line_cursor#1 ] ( main:2 [ line_cursor#1 ] )
  //SEG26 [147] phi from main::@4 to multiply_results_compare [phi:main::@4->multiply_results_compare]
    jsr multiply_results_compare
  //SEG27 [14] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  //SEG28 main::@5
  //SEG29 [15] call signed_multiply_results_compare param-assignment [ ] ( main:2 [ ] )
  //SEG30 [17] phi from main::@5 to signed_multiply_results_compare [phi:main::@5->signed_multiply_results_compare]
    jsr signed_multiply_results_compare
  //SEG31 main::@return
  //SEG32 [16] return  [ ] ( main:2 [ ] )
    rts
}
//SEG33 signed_multiply_results_compare
signed_multiply_results_compare: {
    .label ms = 8
    .label ma = 6
    .label b = 3
    .label a = 2
  //SEG34 [18] phi from signed_multiply_results_compare to signed_multiply_results_compare::@1 [phi:signed_multiply_results_compare->signed_multiply_results_compare::@1]
  //SEG35 [18] phi (signed byte) signed_multiply_results_compare::a#6 = -(byte/word/signed word/dword/signed dword) 128 [phi:signed_multiply_results_compare->signed_multiply_results_compare::@1#0] -- vbsz1=vbsc1 
    lda #-$80
    sta a
  //SEG36 [18] phi from signed_multiply_results_compare::@6 to signed_multiply_results_compare::@1 [phi:signed_multiply_results_compare::@6->signed_multiply_results_compare::@1]
  //SEG37 [18] phi (signed byte) signed_multiply_results_compare::a#6 = (signed byte) signed_multiply_results_compare::a#1 [phi:signed_multiply_results_compare::@6->signed_multiply_results_compare::@1#0] -- register_copy 
  //SEG38 signed_multiply_results_compare::@1
  b1:
  //SEG39 [19] phi from signed_multiply_results_compare::@1 to signed_multiply_results_compare::@2 [phi:signed_multiply_results_compare::@1->signed_multiply_results_compare::@2]
  //SEG40 [19] phi (signed byte) signed_multiply_results_compare::b#2 = -(byte/word/signed word/dword/signed dword) 128 [phi:signed_multiply_results_compare::@1->signed_multiply_results_compare::@2#0] -- vbsz1=vbsc1 
    lda #-$80
    sta b
  //SEG41 [19] phi from signed_multiply_results_compare::@3 to signed_multiply_results_compare::@2 [phi:signed_multiply_results_compare::@3->signed_multiply_results_compare::@2]
  //SEG42 [19] phi (signed byte) signed_multiply_results_compare::b#2 = (signed byte) signed_multiply_results_compare::b#1 [phi:signed_multiply_results_compare::@3->signed_multiply_results_compare::@2#0] -- register_copy 
  //SEG43 signed_multiply_results_compare::@2
  b2:
  //SEG44 [20] (signed byte) slow_signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 line_cursor#1 ] )
    // (signed byte) slow_signed_multiply::a#0 = (signed byte) signed_multiply_results_compare::a#6  // register copy zp ZP_BYTE:2
  //SEG45 [21] (signed byte) slow_signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 slow_signed_multiply::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::a#0 slow_signed_multiply::b#0 line_cursor#1 ] ) -- vbsxx=vbsz1 
    ldx b
  //SEG46 [22] call slow_signed_multiply param-assignment [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#0 line_cursor#1 ] )
    jsr slow_signed_multiply
  //SEG47 [23] (signed word) slow_signed_multiply::return#2 ← (signed word) slow_signed_multiply::return#0 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 slow_signed_multiply::return#2 line_cursor#1 ] )
    // (signed word) slow_signed_multiply::return#2 = (signed word) slow_signed_multiply::return#0  // register copy zp ZP_WORD:6
  //SEG48 signed_multiply_results_compare::@8
  //SEG49 [24] (signed word) signed_multiply_results_compare::ms#0 ← (signed word) slow_signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda slow_signed_multiply.return
    sta ms
    lda slow_signed_multiply.return+1
    sta ms+1
  //SEG50 [25] (signed byte) signed_multiply::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 line_cursor#1 ] ) -- vbsyy=vbsz1 
    ldy a
  //SEG51 [26] (signed byte) signed_multiply::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 signed_multiply::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::a#0 signed_multiply::b#0 line_cursor#1 ] )
    // (signed byte) signed_multiply::b#0 = (signed byte) signed_multiply_results_compare::b#2  // register copy zp ZP_BYTE:3
  //SEG52 [27] call signed_multiply param-assignment [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::m#4 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::m#4 line_cursor#1 ] )
    jsr signed_multiply
  //SEG53 [28] (signed word) signed_multiply::return#2 ← (signed word)(word) signed_multiply::m#4 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply::return#2 line_cursor#1 ] )
    // (signed word) signed_multiply::return#2 = (signed word)(word) signed_multiply::m#4  // register copy zp ZP_WORD:6
  //SEG54 signed_multiply_results_compare::@9
  //SEG55 [29] (signed word) signed_multiply_results_compare::ma#0 ← (signed word) signed_multiply::return#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] )
    // (signed word) signed_multiply_results_compare::ma#0 = (signed word) signed_multiply::return#2  // register copy zp ZP_WORD:6
  //SEG56 [30] if((signed word) signed_multiply_results_compare::ms#0==(signed word) signed_multiply_results_compare::ma#0) goto signed_multiply_results_compare::@3 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) -- vwsz1_eq_vwsz2_then_la1 
    lda ms
    cmp ma
    bne !+
    lda ms+1
    cmp ma+1
    beq b3
  !:
  //SEG57 signed_multiply_results_compare::@4
  //SEG58 [31] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 line_cursor#1 ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL
  //SEG59 [32] (signed byte) signed_multiply_error::a#0 ← (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 line_cursor#1 ] ) -- vbsxx=vbsz1 
    ldx a
  //SEG60 [33] (signed byte) signed_multiply_error::b#0 ← (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ms#0 signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 line_cursor#1 ] ) -- vbsz1=vbsz2 
    lda b
    sta signed_multiply_error.b
  //SEG61 [34] (signed word) signed_multiply_error::ms#0 ← (signed word) signed_multiply_results_compare::ms#0 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::ma#0 signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda ms
    sta signed_multiply_error.ms
    lda ms+1
    sta signed_multiply_error.ms+1
  //SEG62 [35] (signed word) signed_multiply_error::ma#0 ← (signed word) signed_multiply_results_compare::ma#0 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 ] ) -- vwsz1=vwsz2 
    lda ma
    sta signed_multiply_error.ma
    lda ma+1
    sta signed_multiply_error.ma+1
  //SEG63 [36] call signed_multiply_error param-assignment [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
    jsr signed_multiply_error
  //SEG64 signed_multiply_results_compare::@return
  breturn:
  //SEG65 [37] return  [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
    rts
  //SEG66 signed_multiply_results_compare::@3
  b3:
  //SEG67 [38] (signed byte) signed_multiply_results_compare::b#1 ← ++ (signed byte) signed_multiply_results_compare::b#2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ) -- vbsz1=_inc_vbsz1 
    inc b
  //SEG68 [39] if((signed byte) signed_multiply_results_compare::b#1!=-(byte/word/signed word/dword/signed dword) 128) goto signed_multiply_results_compare::@2 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#1 line_cursor#1 ] ) -- vbsz1_neq_vbsc1_then_la1 
    lda b
    cmp #-$80
    bne b2
  //SEG69 signed_multiply_results_compare::@6
  //SEG70 [40] (signed byte) signed_multiply_results_compare::a#1 ← ++ (signed byte) signed_multiply_results_compare::a#6 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ) -- vbsz1=_inc_vbsz1 
    inc a
  //SEG71 [41] if((signed byte) signed_multiply_results_compare::a#1!=-(byte/word/signed word/dword/signed dword) 128) goto signed_multiply_results_compare::@1 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ signed_multiply_results_compare::a#1 line_cursor#1 ] ) -- vbsz1_neq_vbsc1_then_la1 
    lda a
    cmp #-$80
    bne b1
  //SEG72 signed_multiply_results_compare::@7
  //SEG73 [42] (byte*~) char_cursor#176 ← (byte*) line_cursor#1 [ char_cursor#176 line_cursor#1 ] ( main:2::signed_multiply_results_compare:15 [ char_cursor#176 line_cursor#1 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG74 [43] call print_str param-assignment [ line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15 [ line_cursor#1 char_cursor#117 ] )
  //SEG75 [51] phi from signed_multiply_results_compare::@7 to print_str [phi:signed_multiply_results_compare::@7->print_str]
  //SEG76 [51] phi (byte*) char_cursor#135 = (byte*~) char_cursor#176 [phi:signed_multiply_results_compare::@7->print_str#0] -- register_copy 
  //SEG77 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_results_compare::str [phi:signed_multiply_results_compare::@7->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
  //SEG78 [44] phi from signed_multiply_results_compare::@7 to signed_multiply_results_compare::@11 [phi:signed_multiply_results_compare::@7->signed_multiply_results_compare::@11]
  //SEG79 signed_multiply_results_compare::@11
  //SEG80 [45] call print_ln param-assignment [ ] ( main:2::signed_multiply_results_compare:15 [ ] )
  //SEG81 [46] phi from signed_multiply_results_compare::@11 to print_ln [phi:signed_multiply_results_compare::@11->print_ln]
  //SEG82 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#117 [phi:signed_multiply_results_compare::@11->print_ln#0] -- register_copy 
  //SEG83 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#1 [phi:signed_multiply_results_compare::@11->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
    str: .text "signed multiply results match!@"
}
//SEG84 print_ln
print_ln: {
  //SEG85 [47] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  //SEG86 [47] phi (byte*) line_cursor#20 = (byte*) line_cursor#40 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
  //SEG87 print_ln::@1
  b1:
  //SEG88 [48] (byte*) line_cursor#1 ← (byte*) line_cursor#20 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda line_cursor
    clc
    adc #$28
    sta line_cursor
    bcc !+
    inc line_cursor+1
  !:
  //SEG89 [49] if((byte*) line_cursor#1<(byte*) char_cursor#118) goto print_ln::@1 [ line_cursor#1 char_cursor#118 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 char_cursor#118 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 char_cursor#118 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 char_cursor#118 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 char_cursor#118 ] ) -- pbuz1_lt_pbuz2_then_la1 
    lda line_cursor+1
    cmp char_cursor+1
    bcc b1
    bne !+
    lda line_cursor
    cmp char_cursor
    bcc b1
  !:
  //SEG90 print_ln::@return
  //SEG91 [50] return  [ line_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_ln:45 [ line_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_ln:75 [ line_cursor#1 ] main:2::multiply_results_compare:13::print_ln:175 [ line_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_ln:193 [ line_cursor#1 ] main:2::multiply_tables_compare:11::print_ln:221 [ line_cursor#1 ] )
    rts
}
//SEG92 print_str
print_str: {
    .label str = 6
  //SEG93 [52] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  //SEG94 [52] phi (byte*) char_cursor#117 = (byte*) char_cursor#135 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
  //SEG95 [52] phi (byte*) print_str::str#14 = (byte*) print_str::str#16 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
  //SEG96 print_str::@1
  b1:
  //SEG97 [53] if(*((byte*) print_str::str#14)!=(byte) '@') goto print_str::@2 [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (str),y
    cmp #'@'
    bne b2
  //SEG98 print_str::@return
  //SEG99 [54] return  [ char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 ] )
    rts
  //SEG100 print_str::@2
  b2:
  //SEG101 [55] *((byte*) char_cursor#117) ← *((byte*) print_str::str#14) [ char_cursor#117 print_str::str#14 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 char_cursor#117 print_str::str#14 ] main:2::multiply_tables_compare:11::print_str:219 [ char_cursor#117 print_str::str#14 ] ) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    sta (char_cursor),y
  //SEG102 [56] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#117 [ print_str::str#14 char_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#14 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#14 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
  //SEG103 [57] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#14 [ print_str::str#0 char_cursor#1 ] ( main:2::signed_multiply_results_compare:15::print_str:43 [ line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:59 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:63 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:67 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_str:71 [ signed_multiply_error::ma#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::print_str:173 [ line_cursor#27 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:177 [ line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:181 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:185 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_str:189 [ line_cursor#27 multiply_error::ma#0 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:206 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:210 [ multiply_tables_compare::kc_sqr#2 print_str::str#0 char_cursor#1 ] main:2::multiply_tables_compare:11::print_str:219 [ print_str::str#0 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc str
    bne !+
    inc str+1
  !:
    jmp b1
}
//SEG104 signed_multiply_error
signed_multiply_error: {
    .label b = 2
    .label ms = $a
    .label ma = $c
  //SEG105 [58] (byte*~) char_cursor#172 ← (byte*) line_cursor#1 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#172 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG106 [59] call print_str param-assignment [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::a#0 signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG107 [51] phi from signed_multiply_error to print_str [phi:signed_multiply_error->print_str]
  //SEG108 [51] phi (byte*) char_cursor#135 = (byte*~) char_cursor#172 [phi:signed_multiply_error->print_str#0] -- register_copy 
  //SEG109 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str [phi:signed_multiply_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
  //SEG110 signed_multiply_error::@1
  //SEG111 [60] (signed byte) print_sbyte::b#1 ← (signed byte) signed_multiply_error::a#0 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#1 ] )
    // (signed byte) print_sbyte::b#1 = (signed byte) signed_multiply_error::a#0  // register copy reg byte x
  //SEG112 [61] call print_sbyte param-assignment [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG113 [104] phi from signed_multiply_error::@1 to print_sbyte [phi:signed_multiply_error::@1->print_sbyte]
  //SEG114 [104] phi (signed byte) print_sbyte::b#3 = (signed byte) print_sbyte::b#1 [phi:signed_multiply_error::@1->print_sbyte#0] -- register_copy 
    jsr print_sbyte
  //SEG115 [62] phi from signed_multiply_error::@1 to signed_multiply_error::@2 [phi:signed_multiply_error::@1->signed_multiply_error::@2]
  //SEG116 signed_multiply_error::@2
  //SEG117 [63] call print_str param-assignment [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG118 [51] phi from signed_multiply_error::@2 to print_str [phi:signed_multiply_error::@2->print_str]
  //SEG119 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:signed_multiply_error::@2->print_str#0] -- register_copy 
  //SEG120 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str1 [phi:signed_multiply_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta print_str.str
    lda #>str1
    sta print_str.str+1
    jsr print_str
  //SEG121 signed_multiply_error::@3
  //SEG122 [64] (signed byte) print_sbyte::b#2 ← (signed byte) signed_multiply_error::b#0 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#2 ] ) -- vbsxx=vbsz1 
    ldx b
  //SEG123 [65] call print_sbyte param-assignment [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG124 [104] phi from signed_multiply_error::@3 to print_sbyte [phi:signed_multiply_error::@3->print_sbyte]
  //SEG125 [104] phi (signed byte) print_sbyte::b#3 = (signed byte) print_sbyte::b#2 [phi:signed_multiply_error::@3->print_sbyte#0] -- register_copy 
    jsr print_sbyte
  //SEG126 [66] phi from signed_multiply_error::@3 to signed_multiply_error::@4 [phi:signed_multiply_error::@3->signed_multiply_error::@4]
  //SEG127 signed_multiply_error::@4
  //SEG128 [67] call print_str param-assignment [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG129 [51] phi from signed_multiply_error::@4 to print_str [phi:signed_multiply_error::@4->print_str]
  //SEG130 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:signed_multiply_error::@4->print_str#0] -- register_copy 
  //SEG131 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str2 [phi:signed_multiply_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta print_str.str
    lda #>str2
    sta print_str.str+1
    jsr print_str
  //SEG132 signed_multiply_error::@5
  //SEG133 [68] (signed word) print_sword::w#1 ← (signed word) signed_multiply_error::ms#0 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#1 ] ) -- vwsz1=vwsz2 
    lda ms
    sta print_sword.w
    lda ms+1
    sta print_sword.w+1
  //SEG134 [69] call print_sword param-assignment [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG135 [77] phi from signed_multiply_error::@5 to print_sword [phi:signed_multiply_error::@5->print_sword]
  //SEG136 [77] phi (signed word) print_sword::w#3 = (signed word) print_sword::w#1 [phi:signed_multiply_error::@5->print_sword#0] -- register_copy 
    jsr print_sword
  //SEG137 [70] phi from signed_multiply_error::@5 to signed_multiply_error::@6 [phi:signed_multiply_error::@5->signed_multiply_error::@6]
  //SEG138 signed_multiply_error::@6
  //SEG139 [71] call print_str param-assignment [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 ] )
  //SEG140 [51] phi from signed_multiply_error::@6 to print_str [phi:signed_multiply_error::@6->print_str]
  //SEG141 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:signed_multiply_error::@6->print_str#0] -- register_copy 
  //SEG142 [51] phi (byte*) print_str::str#16 = (const string) signed_multiply_error::str3 [phi:signed_multiply_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta print_str.str
    lda #>str3
    sta print_str.str+1
    jsr print_str
  //SEG143 signed_multiply_error::@7
  //SEG144 [72] (signed word) print_sword::w#2 ← (signed word) signed_multiply_error::ma#0 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#117 print_sword::w#2 ] ) -- vwsz1=vwsz2 
    lda ma
    sta print_sword.w
    lda ma+1
    sta print_sword.w+1
  //SEG145 [73] call print_sword param-assignment [ line_cursor#1 char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ line_cursor#1 char_cursor#17 ] )
  //SEG146 [77] phi from signed_multiply_error::@7 to print_sword [phi:signed_multiply_error::@7->print_sword]
  //SEG147 [77] phi (signed word) print_sword::w#3 = (signed word) print_sword::w#2 [phi:signed_multiply_error::@7->print_sword#0] -- register_copy 
    jsr print_sword
  //SEG148 [74] phi from signed_multiply_error::@7 to signed_multiply_error::@8 [phi:signed_multiply_error::@7->signed_multiply_error::@8]
  //SEG149 signed_multiply_error::@8
  //SEG150 [75] call print_ln param-assignment [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ ] )
  //SEG151 [46] phi from signed_multiply_error::@8 to print_ln [phi:signed_multiply_error::@8->print_ln]
  //SEG152 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#17 [phi:signed_multiply_error::@8->print_ln#0] -- register_copy 
  //SEG153 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#1 [phi:signed_multiply_error::@8->print_ln#1] -- register_copy 
    jsr print_ln
  //SEG154 signed_multiply_error::@return
  //SEG155 [76] return  [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36 [ ] )
    rts
    str: .text "signed multiply mismatch @"
    str1: .text "*@"
    str2: .text " slow:@"
    str3: .text " / fast asm:@"
}
//SEG156 print_sword
print_sword: {
    .label w = 6
  //SEG157 [78] if((signed word) print_sword::w#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1 [ char_cursor#117 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#117 print_sword::w#3 ] ) -- vwsz1_ge_0_then_la1 
    lda w+1
    bpl b1
  //SEG158 [79] phi from print_sword to print_sword::@2 [phi:print_sword->print_sword::@2]
  //SEG159 print_sword::@2
  //SEG160 [80] call print_char param-assignment [ char_cursor#17 print_sword::w#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#3 ] )
  //SEG161 [100] phi from print_sword::@2 to print_char [phi:print_sword::@2->print_char]
  //SEG162 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#117 [phi:print_sword::@2->print_char#0] -- register_copy 
  //SEG163 [100] phi (byte) print_char::ch#4 = (byte) '-' [phi:print_sword::@2->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
  //SEG164 print_sword::@4
  //SEG165 [81] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#3 [ char_cursor#17 print_sword::w#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sword::w#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 print_sword::w#0 ] ) -- vwsz1=_neg_vwsz1 
    sec
    lda w
    eor #$ff
    adc #0
    sta w
    lda w+1
    eor #$ff
    adc #0
    sta w+1
  //SEG166 [82] phi from print_sword print_sword::@4 to print_sword::@1 [phi:print_sword/print_sword::@4->print_sword::@1]
  //SEG167 [82] phi (byte*) char_cursor#119 = (byte*) char_cursor#117 [phi:print_sword/print_sword::@4->print_sword::@1#0] -- register_copy 
  //SEG168 [82] phi (signed word) print_sword::w#4 = (signed word) print_sword::w#3 [phi:print_sword/print_sword::@4->print_sword::@1#1] -- register_copy 
  //SEG169 print_sword::@1
  b1:
  //SEG170 [83] (word~) print_word::w#11 ← (word)(signed word) print_sword::w#4 [ char_cursor#119 print_word::w#11 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#119 print_word::w#11 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#119 print_word::w#11 ] )
    // (word~) print_word::w#11 = (word)(signed word) print_sword::w#4  // register copy zp ZP_WORD:6
  //SEG171 [84] call print_word param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 ] )
  //SEG172 [86] phi from print_sword::@1 to print_word [phi:print_sword::@1->print_word]
  //SEG173 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#119 [phi:print_sword::@1->print_word#0] -- register_copy 
  //SEG174 [86] phi (word) print_word::w#5 = (word~) print_word::w#11 [phi:print_sword::@1->print_word#1] -- register_copy 
    jsr print_word
  //SEG175 print_sword::@return
  //SEG176 [85] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73 [ line_cursor#1 char_cursor#17 ] )
    rts
}
//SEG177 print_word
print_word: {
    .label w = 6
  //SEG178 [87] (byte) print_byte::b#1 ← > (word) print_word::w#5 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#123 print_byte::b#1 ] main:2::multiply_tables_compare:11::print_word:212 [ print_word::w#5 char_cursor#123 print_byte::b#1 ] ) -- vbuxx=_hi_vwuz1 
    lda w+1
    tax
  //SEG179 [88] call print_byte param-assignment [ char_cursor#17 print_word::w#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_word::w#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_word::w#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_word::w#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_word::w#5 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_word::w#5 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_word::w#5 ] )
  //SEG180 [92] phi from print_word to print_byte [phi:print_word->print_byte]
  //SEG181 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#123 [phi:print_word->print_byte#0] -- register_copy 
  //SEG182 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#1 [phi:print_word->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG183 print_word::@1
  //SEG184 [89] (byte) print_byte::b#2 ← < (word) print_word::w#5 [ char_cursor#17 print_byte::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#2 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 print_byte::b#2 ] ) -- vbuxx=_lo_vwuz1 
    lda w
    tax
  //SEG185 [90] call print_byte param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 ] )
  //SEG186 [92] phi from print_word::@1 to print_byte [phi:print_word::@1->print_byte]
  //SEG187 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#17 [phi:print_word::@1->print_byte#0] -- register_copy 
  //SEG188 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#2 [phi:print_word::@1->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG189 print_word::@return
  //SEG190 [91] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212 [ char_cursor#17 ] )
    rts
}
//SEG191 print_byte
print_byte: {
  //SEG192 [93] (byte~) print_byte::$0 ← (byte) print_byte::b#5 >> (byte/signed byte/word/signed word/dword/signed dword) 4 [ print_byte::b#5 char_cursor#124 print_byte::$0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_byte::$0 ] ) -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
  //SEG193 [94] (byte) print_char::ch#2 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_byte::b#5 char_cursor#124 print_char::ch#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#124 print_char::ch#2 ] ) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda hextab,y
  //SEG194 [95] call print_char param-assignment [ char_cursor#17 print_byte::b#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::b#5 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::b#5 ] )
  //SEG195 [100] phi from print_byte to print_char [phi:print_byte->print_char]
  //SEG196 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#124 [phi:print_byte->print_char#0] -- register_copy 
  //SEG197 [100] phi (byte) print_char::ch#4 = (byte) print_char::ch#2 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
  //SEG198 print_byte::@1
  //SEG199 [96] (byte~) print_byte::$2 ← (byte) print_byte::b#5 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ char_cursor#17 print_byte::$2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_byte::$2 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_byte::$2 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG200 [97] (byte) print_char::ch#3 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#17 print_char::ch#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 print_char::ch#3 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 print_char::ch#3 ] ) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda hextab,y
  //SEG201 [98] call print_char param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] )
  //SEG202 [100] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  //SEG203 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#17 [phi:print_byte::@1->print_char#0] -- register_copy 
  //SEG204 [100] phi (byte) print_char::ch#4 = (byte) print_char::ch#3 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
  //SEG205 print_byte::@return
  //SEG206 [99] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] )
    rts
    hextab: .text "0123456789abcdef"
}
//SEG207 print_char
print_char: {
  //SEG208 [101] *((byte*) char_cursor#75) ← (byte) print_char::ch#4 [ char_cursor#75 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#75 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#75 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (char_cursor),y
  //SEG209 [102] (byte*) char_cursor#17 ← ++ (byte*) char_cursor#75 [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
  //SEG210 print_char::@return
  //SEG211 [103] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_char:80 [ signed_multiply_error::ma#0 line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_char:80 [ line_cursor#1 print_sword::w#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:95 [ line_cursor#1 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:95 [ line_cursor#27 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:95 [ print_word::w#5 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:95 [ signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:95 [ line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:95 [ line_cursor#27 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:95 [ line_cursor#27 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:95 [ multiply_tables_compare::kc_sqr#2 print_byte::b#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:95 [ print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:95 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:95 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:95 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:95 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 print_byte::b#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:88::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:88::print_char:98 [ line_cursor#1 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:88::print_char:98 [ line_cursor#27 multiply_error::ma#0 print_word::w#5 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:88::print_char:98 [ line_cursor#27 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:88::print_char:98 [ multiply_tables_compare::kc_sqr#2 print_word::w#5 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:88::print_char:98 [ print_word::w#5 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:69::print_word:84::print_byte:90::print_char:98 [ signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sword:73::print_word:84::print_byte:90::print_char:98 [ line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:187::print_byte:90::print_char:98 [ line_cursor#27 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_word:191::print_byte:90::print_char:98 [ line_cursor#27 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:208::print_byte:90::print_char:98 [ multiply_tables_compare::kc_sqr#2 char_cursor#17 ] main:2::multiply_tables_compare:11::print_word:212::print_byte:90::print_char:98 [ char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_byte:111::print_char:98 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_byte:111::print_char:98 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:179::print_char:98 [ line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::multiply_results_compare:13::multiply_error:166::print_byte:183::print_char:98 [ line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61::print_char:107 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65::print_char:107 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_sbyte::b#3 char_cursor#17 ] )
    rts
}
//SEG212 print_sbyte
print_sbyte: {
  //SEG213 [105] if((signed byte) print_sbyte::b#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sbyte::@1 [ char_cursor#117 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#117 print_sbyte::b#3 ] ) -- vbsxx_ge_0_then_la1 
    cpx #0
    bpl b1
  //SEG214 [106] phi from print_sbyte to print_sbyte::@2 [phi:print_sbyte->print_sbyte::@2]
  //SEG215 print_sbyte::@2
  //SEG216 [107] call print_char param-assignment [ char_cursor#17 print_sbyte::b#3 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#3 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#3 ] )
  //SEG217 [100] phi from print_sbyte::@2 to print_char [phi:print_sbyte::@2->print_char]
  //SEG218 [100] phi (byte*) char_cursor#75 = (byte*) char_cursor#117 [phi:print_sbyte::@2->print_char#0] -- register_copy 
  //SEG219 [100] phi (byte) print_char::ch#4 = (byte) '-' [phi:print_sbyte::@2->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
  //SEG220 print_sbyte::@4
  //SEG221 [108] (signed byte) print_sbyte::b#0 ← - (signed byte) print_sbyte::b#3 [ char_cursor#17 print_sbyte::b#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 print_sbyte::b#0 ] ) -- vbsxx=_neg_vbsxx 
    txa
    eor #$ff
    clc
    adc #1
    tax
  //SEG222 [109] phi from print_sbyte print_sbyte::@4 to print_sbyte::@1 [phi:print_sbyte/print_sbyte::@4->print_sbyte::@1]
  //SEG223 [109] phi (byte*) char_cursor#121 = (byte*) char_cursor#117 [phi:print_sbyte/print_sbyte::@4->print_sbyte::@1#0] -- register_copy 
  //SEG224 [109] phi (signed byte) print_sbyte::b#4 = (signed byte) print_sbyte::b#3 [phi:print_sbyte/print_sbyte::@4->print_sbyte::@1#1] -- register_copy 
  //SEG225 print_sbyte::@1
  b1:
  //SEG226 [110] (byte~) print_byte::b#9 ← (byte)(signed byte) print_sbyte::b#4 [ print_byte::b#9 char_cursor#121 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#9 char_cursor#121 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 print_byte::b#9 char_cursor#121 ] )
    // (byte~) print_byte::b#9 = (byte)(signed byte) print_sbyte::b#4  // register copy reg byte x
  //SEG227 [111] call print_byte param-assignment [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
  //SEG228 [92] phi from print_sbyte::@1 to print_byte [phi:print_sbyte::@1->print_byte]
  //SEG229 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#121 [phi:print_sbyte::@1->print_byte#0] -- register_copy 
  //SEG230 [92] phi (byte) print_byte::b#5 = (byte~) print_byte::b#9 [phi:print_sbyte::@1->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG231 print_sbyte::@return
  //SEG232 [112] return  [ char_cursor#17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:61 [ signed_multiply_error::b#0 signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] main:2::signed_multiply_results_compare:15::signed_multiply_error:36::print_sbyte:65 [ signed_multiply_error::ms#0 signed_multiply_error::ma#0 line_cursor#1 char_cursor#17 ] )
    rts
}
//SEG233 signed_multiply
signed_multiply: {
    .label m = 6
    .label b = 3
    .label return = 6
  //SEG234 [113] (byte~) multiply::a#4 ← (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 ] ) -- vbuaa=vbuyy 
    tya
  //SEG235 [114] (byte~) multiply::b#4 ← (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 multiply::b#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::a#4 multiply::b#4 ] ) -- vbuxx=vbuz1 
    ldx b
  //SEG236 [115] call multiply param-assignment [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] )
  //SEG237 [129] phi from signed_multiply to multiply [phi:signed_multiply->multiply]
  //SEG238 [129] phi (byte) multiply::b#2 = (byte~) multiply::b#4 [phi:signed_multiply->multiply#0] -- register_copy 
  //SEG239 [129] phi (byte) multiply::a#2 = (byte~) multiply::a#4 [phi:signed_multiply->multiply#1] -- register_copy 
    jsr multiply
  //SEG240 [116] (word) multiply::return#2 ← (word) multiply::return#0 [ signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#2 ] )
    // (word) multiply::return#2 = (word) multiply::return#0  // register copy zp ZP_WORD:6
  //SEG241 signed_multiply::@6
  //SEG242 [117] (word) signed_multiply::m#0 ← (word) multiply::return#2 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] )
    // (word) signed_multiply::m#0 = (word) multiply::return#2  // register copy zp ZP_WORD:6
  //SEG243 [118] if((signed byte) signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@1 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 ] ) -- vbsyy_ge_0_then_la1 
    cpy #0
    bpl b1
  //SEG244 signed_multiply::@3
  //SEG245 [119] (byte~) signed_multiply::$6 ← > (word) signed_multiply::m#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$6 ] ) -- vbuaa=_hi_vwuz1 
    lda m+1
  //SEG246 [120] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 ← (byte~) signed_multiply::$6 - (byte)(signed byte) signed_multiply::b#0 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#0 signed_multiply::$16 ] ) -- vbuaa=vbuaa_minus_vbuz1 
    sec
    sbc b
  //SEG247 [121] (word) signed_multiply::m#1 ← (word) signed_multiply::m#0 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$16 [ signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 signed_multiply::m#1 ] ) -- vwuz1=vwuz1_sethi_vbuaa 
    sta m+1
  //SEG248 [122] phi from signed_multiply::@3 signed_multiply::@6 to signed_multiply::@1 [phi:signed_multiply::@3/signed_multiply::@6->signed_multiply::@1]
  //SEG249 [122] phi (word) signed_multiply::m#5 = (word) signed_multiply::m#1 [phi:signed_multiply::@3/signed_multiply::@6->signed_multiply::@1#0] -- register_copy 
  //SEG250 signed_multiply::@1
  b1:
  //SEG251 [123] if((signed byte) signed_multiply::b#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto signed_multiply::@2 [ signed_multiply::a#0 signed_multiply::m#5 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 ] ) -- vbsz1_ge_0_then_la1 
    lda b
    cmp #0
    bpl b2
  //SEG252 signed_multiply::@4
  //SEG253 [124] (byte~) signed_multiply::$12 ← > (word) signed_multiply::m#5 [ signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::m#5 signed_multiply::$12 ] ) -- vbuaa=_hi_vwuz1 
    lda m+1
  //SEG254 [125] (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 ← (byte~) signed_multiply::$12 - (byte)(signed byte) signed_multiply::a#0 [ signed_multiply::m#5 signed_multiply::$17 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#5 signed_multiply::$17 ] ) -- vbuaa=vbuaa_minus_vbuyy 
    sty $ff
    sec
    sbc $ff
  //SEG255 [126] (word) signed_multiply::m#2 ← (word) signed_multiply::m#5 hi= (byte/signed byte/word/signed word/dword/signed dword~) signed_multiply::$17 [ signed_multiply::m#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#2 ] ) -- vwuz1=vwuz1_sethi_vbuaa 
    sta m+1
  //SEG256 [127] phi from signed_multiply::@1 signed_multiply::@4 to signed_multiply::@2 [phi:signed_multiply::@1/signed_multiply::@4->signed_multiply::@2]
  //SEG257 [127] phi (word) signed_multiply::m#4 = (word) signed_multiply::m#5 [phi:signed_multiply::@1/signed_multiply::@4->signed_multiply::@2#0] -- register_copy 
  //SEG258 signed_multiply::@2
  b2:
  //SEG259 signed_multiply::@return
  //SEG260 [128] return  [ signed_multiply::m#4 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::m#4 ] )
    rts
}
//SEG261 multiply
multiply: {
    .const memA = $fe
    .const memB = $ff
    .label return = 6
  //SEG262 [130] *((const byte*) multiply::memA#0) ← (byte) multiply::a#2 [ multiply::b#2 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::b#2 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::b#2 ] ) -- _deref_pbuc1=vbuaa 
    sta memA
  //SEG263 [131] *((const byte*) multiply::memB#0) ← (byte) multiply::b#2 [ ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- _deref_pbuc1=vbuxx 
    stx memB
  //SEG264 asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamul_sqr1_lo,x sm2: sbcmul_sqr2_lo,x stamemA sm3: ldamul_sqr1_hi,x sm4: sbcmul_sqr2_hi,x stamemB  }
    sta sm1+1
    sta sm3+1
    eor #$ff
    sta sm2+1
    sta sm4+1
    sec
  sm1:
    lda mul_sqr1_lo,x
  sm2:
    sbc mul_sqr2_lo,x
    sta memA
  sm3:
    lda mul_sqr1_hi,x
  sm4:
    sbc mul_sqr2_hi,x
    sta memB
  //SEG265 [133] (word) multiply::return#0 ← *((const byte*) multiply::memB#0) w= *((const byte*) multiply::memA#0) [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] ) -- vwuz1=_deref_pbuc1_word__deref_pbuc2 
    lda memA
    sta return
    lda memB
    sta return+1
  //SEG266 multiply::@return
  //SEG267 [134] return  [ multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::signed_multiply:27::multiply:115 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 signed_multiply_results_compare::ms#0 line_cursor#1 signed_multiply::a#0 signed_multiply::b#0 multiply::return#0 ] main:2::multiply_results_compare:13::multiply:157 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#0 ] )
    rts
}
//SEG268 slow_signed_multiply
slow_signed_multiply: {
    .label m = 6
    .label return = 6
    .label a = 2
  //SEG269 [135] if((signed byte) slow_signed_multiply::a#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@1 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ) -- vbsz1_ge_0_then_la1 
    lda a
    cmp #0
    bpl b1
  //SEG270 [136] phi from slow_signed_multiply to slow_signed_multiply::@2 [phi:slow_signed_multiply->slow_signed_multiply::@2]
  //SEG271 [136] phi (signed byte) slow_signed_multiply::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply->slow_signed_multiply::@2#0] -- vbsyy=vbuc1 
    lda #0
    tay
  //SEG272 [136] phi (signed word) slow_signed_multiply::m#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply->slow_signed_multiply::@2#1] -- vwsz1=vbuc1 
    sta m
    sta m+1
  //SEG273 [136] phi from slow_signed_multiply::@2 to slow_signed_multiply::@2 [phi:slow_signed_multiply::@2->slow_signed_multiply::@2]
  //SEG274 [136] phi (signed byte) slow_signed_multiply::i#2 = (signed byte) slow_signed_multiply::i#1 [phi:slow_signed_multiply::@2->slow_signed_multiply::@2#0] -- register_copy 
  //SEG275 [136] phi (signed word) slow_signed_multiply::m#3 = (signed word) slow_signed_multiply::m#1 [phi:slow_signed_multiply::@2->slow_signed_multiply::@2#1] -- register_copy 
  //SEG276 slow_signed_multiply::@2
  b2:
  //SEG277 [137] (signed word) slow_signed_multiply::m#1 ← (signed word) slow_signed_multiply::m#3 - (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::i#2 slow_signed_multiply::m#1 ] ) -- vwsz1=vwsz1_minus_vbsxx 
    txa
    sta $fe
    ora #$7f
    bmi !+
    lda #0
  !:
    sta $ff
    sec
    lda m
    sbc $fe
    sta m
    lda m+1
    sbc $ff
    sta m+1
  //SEG278 [138] (signed byte) slow_signed_multiply::i#1 ← -- (signed byte) slow_signed_multiply::i#2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ) -- vbsyy=_dec_vbsyy 
    dey
  //SEG279 [139] if((signed byte) slow_signed_multiply::i#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#1 slow_signed_multiply::i#1 ] ) -- vbsyy_neq_vbsz1_then_la1 
    cpy a
    bne b2
  //SEG280 [140] phi from slow_signed_multiply::@2 slow_signed_multiply::@5 to slow_signed_multiply::@3 [phi:slow_signed_multiply::@2/slow_signed_multiply::@5->slow_signed_multiply::@3]
  //SEG281 [140] phi (signed word) slow_signed_multiply::return#0 = (signed word) slow_signed_multiply::m#1 [phi:slow_signed_multiply::@2/slow_signed_multiply::@5->slow_signed_multiply::@3#0] -- register_copy 
    jmp b3
  //SEG282 [140] phi from slow_signed_multiply::@1 to slow_signed_multiply::@3 [phi:slow_signed_multiply::@1->slow_signed_multiply::@3]
  b6:
  //SEG283 [140] phi (signed word) slow_signed_multiply::return#0 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply::@1->slow_signed_multiply::@3#0] -- vwsz1=vbuc1 
    lda #0
    sta return
    sta return+1
  //SEG284 slow_signed_multiply::@3
  b3:
  //SEG285 slow_signed_multiply::@return
  //SEG286 [141] return  [ slow_signed_multiply::return#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::return#0 ] )
    rts
  //SEG287 slow_signed_multiply::@1
  b1:
  //SEG288 [142] if((signed byte) slow_signed_multiply::a#0<=(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_signed_multiply::@3 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 ] ) -- vbsz1_le_0_then_la1 
    lda a
    cmp #1
    bmi b6
  //SEG289 [143] phi from slow_signed_multiply::@1 to slow_signed_multiply::@5 [phi:slow_signed_multiply::@1->slow_signed_multiply::@5]
  //SEG290 [143] phi (signed byte) slow_signed_multiply::j#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply::@1->slow_signed_multiply::@5#0] -- vbsyy=vbuc1 
    lda #0
    tay
  //SEG291 [143] phi (signed word) slow_signed_multiply::m#5 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_signed_multiply::@1->slow_signed_multiply::@5#1] -- vwsz1=vbuc1 
    sta m
    sta m+1
  //SEG292 [143] phi from slow_signed_multiply::@5 to slow_signed_multiply::@5 [phi:slow_signed_multiply::@5->slow_signed_multiply::@5]
  //SEG293 [143] phi (signed byte) slow_signed_multiply::j#2 = (signed byte) slow_signed_multiply::j#1 [phi:slow_signed_multiply::@5->slow_signed_multiply::@5#0] -- register_copy 
  //SEG294 [143] phi (signed word) slow_signed_multiply::m#5 = (signed word) slow_signed_multiply::m#2 [phi:slow_signed_multiply::@5->slow_signed_multiply::@5#1] -- register_copy 
  //SEG295 slow_signed_multiply::@5
  b5:
  //SEG296 [144] (signed word) slow_signed_multiply::m#2 ← (signed word) slow_signed_multiply::m#5 + (signed byte) slow_signed_multiply::b#0 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#2 ] ) -- vwsz1=vwsz1_plus_vbsxx 
    txa
    sta $fe
    ora #$7f
    bmi !+
    lda #0
  !:
    sta $ff
    clc
    lda m
    adc $fe
    sta m
    lda m+1
    adc $ff
    sta m+1
  //SEG297 [145] (signed byte) slow_signed_multiply::j#1 ← ++ (signed byte) slow_signed_multiply::j#2 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ) -- vbsyy=_inc_vbsyy 
    iny
  //SEG298 [146] if((signed byte) slow_signed_multiply::j#1!=(signed byte) slow_signed_multiply::a#0) goto slow_signed_multiply::@5 [ slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ( main:2::signed_multiply_results_compare:15::slow_signed_multiply:22 [ signed_multiply_results_compare::a#6 signed_multiply_results_compare::b#2 line_cursor#1 slow_signed_multiply::a#0 slow_signed_multiply::b#0 slow_signed_multiply::m#2 slow_signed_multiply::j#1 ] ) -- vbsyy_neq_vbsz1_then_la1 
    cpy a
    bne b5
    jmp b3
}
//SEG299 multiply_results_compare
multiply_results_compare: {
    .label ms = $a
    .label ma = 6
    .label b = 3
    .label a = 2
  //SEG300 [148] phi from multiply_results_compare to multiply_results_compare::@1 [phi:multiply_results_compare->multiply_results_compare::@1]
  //SEG301 [148] phi (byte) multiply_results_compare::a#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:multiply_results_compare->multiply_results_compare::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta a
  //SEG302 [148] phi from multiply_results_compare::@6 to multiply_results_compare::@1 [phi:multiply_results_compare::@6->multiply_results_compare::@1]
  //SEG303 [148] phi (byte) multiply_results_compare::a#6 = (byte) multiply_results_compare::a#1 [phi:multiply_results_compare::@6->multiply_results_compare::@1#0] -- register_copy 
  //SEG304 multiply_results_compare::@1
  b1:
  //SEG305 [149] phi from multiply_results_compare::@1 to multiply_results_compare::@2 [phi:multiply_results_compare::@1->multiply_results_compare::@2]
  //SEG306 [149] phi (byte) multiply_results_compare::b#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:multiply_results_compare::@1->multiply_results_compare::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta b
  //SEG307 [149] phi from multiply_results_compare::@3 to multiply_results_compare::@2 [phi:multiply_results_compare::@3->multiply_results_compare::@2]
  //SEG308 [149] phi (byte) multiply_results_compare::b#2 = (byte) multiply_results_compare::b#1 [phi:multiply_results_compare::@3->multiply_results_compare::@2#0] -- register_copy 
  //SEG309 multiply_results_compare::@2
  b2:
  //SEG310 [150] (byte) slow_multiply::a#0 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 ] )
    // (byte) slow_multiply::a#0 = (byte) multiply_results_compare::a#6  // register copy zp ZP_BYTE:2
  //SEG311 [151] (byte) slow_multiply::b#0 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ) -- vbuxx=vbuz1 
    ldx b
  //SEG312 [152] call slow_multiply param-assignment [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] )
    jsr slow_multiply
  //SEG313 [153] (word) slow_multiply::return#2 ← (word) slow_multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#2 ] )
    // (word) slow_multiply::return#2 = (word) slow_multiply::return#0  // register copy zp ZP_WORD:6
  //SEG314 multiply_results_compare::@8
  //SEG315 [154] (word) multiply_results_compare::ms#0 ← (word) slow_multiply::return#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- vwuz1=vwuz2 
    lda slow_multiply.return
    sta ms
    lda slow_multiply.return+1
    sta ms+1
  //SEG316 [155] (byte) multiply::a#1 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- vbuaa=vbuz1 
    lda a
  //SEG317 [156] (byte) multiply::b#1 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply::b#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::a#1 multiply::b#1 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ) -- vbuxx=vbuz1 
    ldx b
  //SEG318 [157] call multiply param-assignment [ line_cursor#27 char_cursor#27 multiply::return#0 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply::return#0 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 ] )
  //SEG319 [129] phi from multiply_results_compare::@8 to multiply [phi:multiply_results_compare::@8->multiply]
  //SEG320 [129] phi (byte) multiply::b#2 = (byte) multiply::b#1 [phi:multiply_results_compare::@8->multiply#0] -- register_copy 
  //SEG321 [129] phi (byte) multiply::a#2 = (byte) multiply::a#1 [phi:multiply_results_compare::@8->multiply#1] -- register_copy 
    jsr multiply
  //SEG322 [158] (word) multiply::return#3 ← (word) multiply::return#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply::return#3 ] )
    // (word) multiply::return#3 = (word) multiply::return#0  // register copy zp ZP_WORD:6
  //SEG323 multiply_results_compare::@9
  //SEG324 [159] (word) multiply_results_compare::ma#0 ← (word) multiply::return#3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] )
    // (word) multiply_results_compare::ma#0 = (word) multiply::return#3  // register copy zp ZP_WORD:6
  //SEG325 [160] if((word) multiply_results_compare::ms#0==(word) multiply_results_compare::ma#0) goto multiply_results_compare::@3 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) -- vwuz1_eq_vwuz2_then_la1 
    lda ms
    cmp ma
    bne !+
    lda ms+1
    cmp ma+1
    beq b3
  !:
  //SEG326 multiply_results_compare::@4
  //SEG327 [161] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL
  //SEG328 [162] (byte) multiply_error::a#0 ← (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::b#2 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 ] ) -- vbuxx=vbuz1 
    ldx a
  //SEG329 [163] (byte) multiply_error::b#0 ← (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ms#0 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 ] ) -- vbuz1=vbuz2 
    lda b
    sta multiply_error.b
  //SEG330 [164] (word) multiply_error::ms#0 ← (word) multiply_results_compare::ms#0 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::ma#0 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 ] )
    // (word) multiply_error::ms#0 = (word) multiply_results_compare::ms#0  // register copy zp ZP_WORD:10
  //SEG331 [165] (word) multiply_error::ma#0 ← (word) multiply_results_compare::ma#0 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ) -- vwuz1=vwuz2 
    lda ma
    sta multiply_error.ma
    lda ma+1
    sta multiply_error.ma+1
  //SEG332 [166] call multiply_error param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
  //SEG333 [176] phi from multiply_results_compare::@4 to multiply_error [phi:multiply_results_compare::@4->multiply_error]
    jsr multiply_error
  //SEG334 multiply_results_compare::@return
  breturn:
  //SEG335 [167] return  [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
    rts
  //SEG336 multiply_results_compare::@3
  b3:
  //SEG337 [168] (byte) multiply_results_compare::b#1 ← ++ (byte) multiply_results_compare::b#2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ) -- vbuz1=_inc_vbuz1 
    inc b
  //SEG338 [169] if((byte) multiply_results_compare::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@2 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#1 ] ) -- vbuz1_neq_0_then_la1 
    lda b
    bne b2
  //SEG339 multiply_results_compare::@6
  //SEG340 [170] (byte) multiply_results_compare::a#1 ← ++ (byte) multiply_results_compare::a#6 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ) -- vbuz1=_inc_vbuz1 
    inc a
  //SEG341 [171] if((byte) multiply_results_compare::a#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto multiply_results_compare::@1 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#1 ] ) -- vbuz1_neq_0_then_la1 
    lda a
    bne b1
  //SEG342 [172] phi from multiply_results_compare::@6 to multiply_results_compare::@7 [phi:multiply_results_compare::@6->multiply_results_compare::@7]
  //SEG343 multiply_results_compare::@7
  //SEG344 [173] call print_str param-assignment [ char_cursor#117 line_cursor#27 ] ( main:2::multiply_results_compare:13 [ char_cursor#117 line_cursor#27 ] )
  //SEG345 [51] phi from multiply_results_compare::@7 to print_str [phi:multiply_results_compare::@7->print_str]
  //SEG346 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#27 [phi:multiply_results_compare::@7->print_str#0] -- register_copy 
  //SEG347 [51] phi (byte*) print_str::str#16 = (const string) multiply_results_compare::str [phi:multiply_results_compare::@7->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
  //SEG348 [174] phi from multiply_results_compare::@7 to multiply_results_compare::@11 [phi:multiply_results_compare::@7->multiply_results_compare::@11]
  //SEG349 multiply_results_compare::@11
  //SEG350 [175] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13 [ line_cursor#1 ] )
  //SEG351 [46] phi from multiply_results_compare::@11 to print_ln [phi:multiply_results_compare::@11->print_ln]
  //SEG352 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#117 [phi:multiply_results_compare::@11->print_ln#0] -- register_copy 
  //SEG353 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#27 [phi:multiply_results_compare::@11->print_ln#1] -- register_copy 
    jsr print_ln
    jmp breturn
    str: .text "multiply results match!@"
}
//SEG354 multiply_error
multiply_error: {
    .label b = 2
    .label ms = $a
    .label ma = $c
  //SEG355 [177] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::a#0 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG356 [51] phi from multiply_error to print_str [phi:multiply_error->print_str]
  //SEG357 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#27 [phi:multiply_error->print_str#0] -- register_copy 
  //SEG358 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str [phi:multiply_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
  //SEG359 multiply_error::@1
  //SEG360 [178] (byte) print_byte::b#3 ← (byte) multiply_error::a#0 [ char_cursor#117 line_cursor#27 print_byte::b#3 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_byte::b#3 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
    // (byte) print_byte::b#3 = (byte) multiply_error::a#0  // register copy reg byte x
  //SEG361 [179] call print_byte param-assignment [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG362 [92] phi from multiply_error::@1 to print_byte [phi:multiply_error::@1->print_byte]
  //SEG363 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#117 [phi:multiply_error::@1->print_byte#0] -- register_copy 
  //SEG364 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#3 [phi:multiply_error::@1->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG365 [180] phi from multiply_error::@1 to multiply_error::@2 [phi:multiply_error::@1->multiply_error::@2]
  //SEG366 multiply_error::@2
  //SEG367 [181] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::b#0 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG368 [51] phi from multiply_error::@2 to print_str [phi:multiply_error::@2->print_str]
  //SEG369 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_error::@2->print_str#0] -- register_copy 
  //SEG370 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str1 [phi:multiply_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta print_str.str
    lda #>str1
    sta print_str.str+1
    jsr print_str
  //SEG371 multiply_error::@3
  //SEG372 [182] (byte) print_byte::b#4 ← (byte) multiply_error::b#0 [ char_cursor#117 line_cursor#27 print_byte::b#4 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_byte::b#4 multiply_error::ms#0 multiply_error::ma#0 ] ) -- vbuxx=vbuz1 
    ldx b
  //SEG373 [183] call print_byte param-assignment [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG374 [92] phi from multiply_error::@3 to print_byte [phi:multiply_error::@3->print_byte]
  //SEG375 [92] phi (byte*) char_cursor#124 = (byte*) char_cursor#117 [phi:multiply_error::@3->print_byte#0] -- register_copy 
  //SEG376 [92] phi (byte) print_byte::b#5 = (byte) print_byte::b#4 [phi:multiply_error::@3->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG377 [184] phi from multiply_error::@3 to multiply_error::@4 [phi:multiply_error::@3->multiply_error::@4]
  //SEG378 multiply_error::@4
  //SEG379 [185] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::ms#0 multiply_error::ma#0 ] )
  //SEG380 [51] phi from multiply_error::@4 to print_str [phi:multiply_error::@4->print_str]
  //SEG381 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_error::@4->print_str#0] -- register_copy 
  //SEG382 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str2 [phi:multiply_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta print_str.str
    lda #>str2
    sta print_str.str+1
    jsr print_str
  //SEG383 multiply_error::@5
  //SEG384 [186] (word) print_word::w#3 ← (word) multiply_error::ms#0 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#3 multiply_error::ma#0 ] ) -- vwuz1=vwuz2 
    lda ms
    sta print_word.w
    lda ms+1
    sta print_word.w+1
  //SEG385 [187] call print_word param-assignment [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 multiply_error::ma#0 ] )
  //SEG386 [86] phi from multiply_error::@5 to print_word [phi:multiply_error::@5->print_word]
  //SEG387 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_error::@5->print_word#0] -- register_copy 
  //SEG388 [86] phi (word) print_word::w#5 = (word) print_word::w#3 [phi:multiply_error::@5->print_word#1] -- register_copy 
    jsr print_word
  //SEG389 [188] phi from multiply_error::@5 to multiply_error::@6 [phi:multiply_error::@5->multiply_error::@6]
  //SEG390 multiply_error::@6
  //SEG391 [189] call print_str param-assignment [ char_cursor#117 line_cursor#27 multiply_error::ma#0 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 multiply_error::ma#0 ] )
  //SEG392 [51] phi from multiply_error::@6 to print_str [phi:multiply_error::@6->print_str]
  //SEG393 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_error::@6->print_str#0] -- register_copy 
  //SEG394 [51] phi (byte*) print_str::str#16 = (const string) multiply_error::str3 [phi:multiply_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta print_str.str
    lda #>str3
    sta print_str.str+1
    jsr print_str
  //SEG395 multiply_error::@7
  //SEG396 [190] (word) print_word::w#4 ← (word) multiply_error::ma#0 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#117 line_cursor#27 print_word::w#4 ] ) -- vwuz1=vwuz2 
    lda ma
    sta print_word.w
    lda ma+1
    sta print_word.w+1
  //SEG397 [191] call print_word param-assignment [ char_cursor#17 line_cursor#27 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ char_cursor#17 line_cursor#27 ] )
  //SEG398 [86] phi from multiply_error::@7 to print_word [phi:multiply_error::@7->print_word]
  //SEG399 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_error::@7->print_word#0] -- register_copy 
  //SEG400 [86] phi (word) print_word::w#5 = (word) print_word::w#4 [phi:multiply_error::@7->print_word#1] -- register_copy 
    jsr print_word
  //SEG401 [192] phi from multiply_error::@7 to multiply_error::@8 [phi:multiply_error::@7->multiply_error::@8]
  //SEG402 multiply_error::@8
  //SEG403 [193] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ line_cursor#1 ] )
  //SEG404 [46] phi from multiply_error::@8 to print_ln [phi:multiply_error::@8->print_ln]
  //SEG405 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#17 [phi:multiply_error::@8->print_ln#0] -- register_copy 
  //SEG406 [46] phi (byte*) line_cursor#40 = (byte*) line_cursor#27 [phi:multiply_error::@8->print_ln#1] -- register_copy 
    jsr print_ln
  //SEG407 multiply_error::@return
  //SEG408 [194] return  [ line_cursor#1 ] ( main:2::multiply_results_compare:13::multiply_error:166 [ line_cursor#1 ] )
    rts
    str: .text "multiply mismatch @"
    str1: .text "*@"
    str2: .text " slow:@"
    str3: .text " / fast asm:@"
}
//SEG409 slow_multiply
slow_multiply: {
    .label return = 6
    .label m = 6
    .label a = 2
  //SEG410 [195] if((byte) slow_multiply::a#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto slow_multiply::@1 [ slow_multiply::a#0 slow_multiply::b#0 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 ] ) -- vbuz1_eq_0_then_la1 
    lda a
    beq b3
  //SEG411 [196] phi from slow_multiply to slow_multiply::@2 [phi:slow_multiply->slow_multiply::@2]
  //SEG412 [196] phi (byte) slow_multiply::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_multiply->slow_multiply::@2#0] -- vbuyy=vbuc1 
    ldy #0
  //SEG413 [196] phi (word) slow_multiply::m#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_multiply->slow_multiply::@2#1] -- vwuz1=vbuc1 
    tya
    sta m
    sta m+1
  //SEG414 [196] phi from slow_multiply::@2 to slow_multiply::@2 [phi:slow_multiply::@2->slow_multiply::@2]
  //SEG415 [196] phi (byte) slow_multiply::i#2 = (byte) slow_multiply::i#1 [phi:slow_multiply::@2->slow_multiply::@2#0] -- register_copy 
  //SEG416 [196] phi (word) slow_multiply::m#3 = (word) slow_multiply::m#1 [phi:slow_multiply::@2->slow_multiply::@2#1] -- register_copy 
  //SEG417 slow_multiply::@2
  b2:
  //SEG418 [197] (word) slow_multiply::m#1 ← (word) slow_multiply::m#3 + (byte) slow_multiply::b#0 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::i#2 slow_multiply::m#1 ] ) -- vwuz1=vwuz1_plus_vbuxx 
    txa
    clc
    adc m
    sta m
    lda #0
    adc m+1
    sta m+1
  //SEG419 [198] (byte) slow_multiply::i#1 ← ++ (byte) slow_multiply::i#2 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ) -- vbuyy=_inc_vbuyy 
    iny
  //SEG420 [199] if((byte) slow_multiply::i#1!=(byte) slow_multiply::a#0) goto slow_multiply::@2 [ slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::a#0 slow_multiply::b#0 slow_multiply::m#1 slow_multiply::i#1 ] ) -- vbuyy_neq_vbuz1_then_la1 
    cpy a
    bne b2
  //SEG421 [200] phi from slow_multiply::@2 to slow_multiply::@1 [phi:slow_multiply::@2->slow_multiply::@1]
  //SEG422 [200] phi (word) slow_multiply::return#0 = (word) slow_multiply::m#1 [phi:slow_multiply::@2->slow_multiply::@1#0] -- register_copy 
    jmp b1
  //SEG423 [200] phi from slow_multiply to slow_multiply::@1 [phi:slow_multiply->slow_multiply::@1]
  b3:
  //SEG424 [200] phi (word) slow_multiply::return#0 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:slow_multiply->slow_multiply::@1#0] -- vwuz1=vbuc1 
    lda #0
    sta return
    sta return+1
  //SEG425 slow_multiply::@1
  b1:
  //SEG426 slow_multiply::@return
  //SEG427 [201] return  [ slow_multiply::return#0 ] ( main:2::multiply_results_compare:13::slow_multiply:152 [ line_cursor#27 char_cursor#27 multiply_results_compare::a#6 multiply_results_compare::b#2 slow_multiply::return#0 ] )
    rts
}
//SEG428 multiply_tables_compare
multiply_tables_compare: {
    .label asm_sqr = $a
    .label kc_sqr = 4
  //SEG429 [203] phi from multiply_tables_compare to multiply_tables_compare::@1 [phi:multiply_tables_compare->multiply_tables_compare::@1]
  //SEG430 [203] phi (byte*) multiply_tables_compare::asm_sqr#2 = (const byte[512]) asm_mul_sqr1_lo#0 [phi:multiply_tables_compare->multiply_tables_compare::@1#0] -- pbuz1=pbuc1 
    lda #<asm_mul_sqr1_lo
    sta asm_sqr
    lda #>asm_mul_sqr1_lo
    sta asm_sqr+1
  //SEG431 [203] phi (byte*) multiply_tables_compare::kc_sqr#2 = (const byte[512]) mul_sqr1_lo#0 [phi:multiply_tables_compare->multiply_tables_compare::@1#1] -- pbuz1=pbuc1 
    lda #<mul_sqr1_lo
    sta kc_sqr
    lda #>mul_sqr1_lo
    sta kc_sqr+1
  //SEG432 [203] phi from multiply_tables_compare::@2 to multiply_tables_compare::@1 [phi:multiply_tables_compare::@2->multiply_tables_compare::@1]
  //SEG433 [203] phi (byte*) multiply_tables_compare::asm_sqr#2 = (byte*) multiply_tables_compare::asm_sqr#1 [phi:multiply_tables_compare::@2->multiply_tables_compare::@1#0] -- register_copy 
  //SEG434 [203] phi (byte*) multiply_tables_compare::kc_sqr#2 = (byte*) multiply_tables_compare::kc_sqr#1 [phi:multiply_tables_compare::@2->multiply_tables_compare::@1#1] -- register_copy 
  //SEG435 multiply_tables_compare::@1
  b1:
  //SEG436 [204] if(*((byte*) multiply_tables_compare::kc_sqr#2)==*((byte*) multiply_tables_compare::asm_sqr#2)) goto multiply_tables_compare::@2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) -- _deref_pbuz1_eq__deref_pbuz2_then_la1 
    ldy #0
    lda (kc_sqr),y
    cmp (asm_sqr),y
    beq b2
  //SEG437 multiply_tables_compare::@3
  //SEG438 [205] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL
  //SEG439 [206] call print_str param-assignment [ char_cursor#117 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#2 ] )
  //SEG440 [51] phi from multiply_tables_compare::@3 to print_str [phi:multiply_tables_compare::@3->print_str]
  //SEG441 [51] phi (byte*) char_cursor#135 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@3->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta char_cursor
    lda #>$400
    sta char_cursor+1
  //SEG442 [51] phi (byte*) print_str::str#16 = (const string) multiply_tables_compare::str [phi:multiply_tables_compare::@3->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta print_str.str
    lda #>str
    sta print_str.str+1
    jsr print_str
  //SEG443 multiply_tables_compare::@6
  //SEG444 [207] (word~) print_word::w#9 ← (word)(byte*) multiply_tables_compare::asm_sqr#2 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#9 multiply_tables_compare::kc_sqr#2 ] ) -- vwuz1=vwuz2 
    lda asm_sqr
    sta print_word.w
    lda asm_sqr+1
    sta print_word.w+1
  //SEG445 [208] call print_word param-assignment [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#17 multiply_tables_compare::kc_sqr#2 ] )
  //SEG446 [86] phi from multiply_tables_compare::@6 to print_word [phi:multiply_tables_compare::@6->print_word]
  //SEG447 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_tables_compare::@6->print_word#0] -- register_copy 
  //SEG448 [86] phi (word) print_word::w#5 = (word~) print_word::w#9 [phi:multiply_tables_compare::@6->print_word#1] -- register_copy 
    jsr print_word
  //SEG449 [209] phi from multiply_tables_compare::@6 to multiply_tables_compare::@7 [phi:multiply_tables_compare::@6->multiply_tables_compare::@7]
  //SEG450 multiply_tables_compare::@7
  //SEG451 [210] call print_str param-assignment [ char_cursor#117 multiply_tables_compare::kc_sqr#2 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 multiply_tables_compare::kc_sqr#2 ] )
  //SEG452 [51] phi from multiply_tables_compare::@7 to print_str [phi:multiply_tables_compare::@7->print_str]
  //SEG453 [51] phi (byte*) char_cursor#135 = (byte*) char_cursor#17 [phi:multiply_tables_compare::@7->print_str#0] -- register_copy 
  //SEG454 [51] phi (byte*) print_str::str#16 = (const string) multiply_tables_compare::str1 [phi:multiply_tables_compare::@7->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta print_str.str
    lda #>str1
    sta print_str.str+1
    jsr print_str
  //SEG455 multiply_tables_compare::@8
  //SEG456 [211] (word~) print_word::w#10 ← (word)(byte*) multiply_tables_compare::kc_sqr#2 [ char_cursor#117 print_word::w#10 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 print_word::w#10 ] ) -- vwuz1=vwuz2 
    lda kc_sqr
    sta print_word.w
    lda kc_sqr+1
    sta print_word.w+1
  //SEG457 [212] call print_word param-assignment [ char_cursor#17 ] ( main:2::multiply_tables_compare:11 [ char_cursor#17 ] )
  //SEG458 [86] phi from multiply_tables_compare::@8 to print_word [phi:multiply_tables_compare::@8->print_word]
  //SEG459 [86] phi (byte*) char_cursor#123 = (byte*) char_cursor#117 [phi:multiply_tables_compare::@8->print_word#0] -- register_copy 
  //SEG460 [86] phi (word) print_word::w#5 = (word~) print_word::w#10 [phi:multiply_tables_compare::@8->print_word#1] -- register_copy 
    jsr print_word
  //SEG461 [213] phi from multiply_tables_compare::@8 to multiply_tables_compare::@return [phi:multiply_tables_compare::@8->multiply_tables_compare::@return]
  //SEG462 [213] phi (byte*) line_cursor#27 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@8->multiply_tables_compare::@return#0] -- pbuz1=pbuc1 
    lda #<$400
    sta line_cursor
    lda #>$400
    sta line_cursor+1
  //SEG463 [213] phi (byte*) char_cursor#27 = (byte*) char_cursor#17 [phi:multiply_tables_compare::@8->multiply_tables_compare::@return#1] -- register_copy 
  //SEG464 multiply_tables_compare::@return
  breturn:
  //SEG465 [214] return  [ line_cursor#27 char_cursor#27 ] ( main:2::multiply_tables_compare:11 [ line_cursor#27 char_cursor#27 ] )
    rts
  //SEG466 multiply_tables_compare::@2
  b2:
  //SEG467 [215] (byte*) multiply_tables_compare::asm_sqr#1 ← ++ (byte*) multiply_tables_compare::asm_sqr#2 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#2 multiply_tables_compare::asm_sqr#1 ] ) -- pbuz1=_inc_pbuz1 
    inc asm_sqr
    bne !+
    inc asm_sqr+1
  !:
  //SEG468 [216] (byte*) multiply_tables_compare::kc_sqr#1 ← ++ (byte*) multiply_tables_compare::kc_sqr#2 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ) -- pbuz1=_inc_pbuz1 
    inc kc_sqr
    bne !+
    inc kc_sqr+1
  !:
  //SEG469 [217] if((byte*) multiply_tables_compare::kc_sqr#1<(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512*(byte/signed byte/word/signed word/dword/signed dword) 4) goto multiply_tables_compare::@1 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ( main:2::multiply_tables_compare:11 [ multiply_tables_compare::kc_sqr#1 multiply_tables_compare::asm_sqr#1 ] ) -- pbuz1_lt_pbuc1_then_la1 
    lda kc_sqr+1
    cmp #>mul_sqr1_lo+$200*4
    bcc b1
    bne !+
    lda kc_sqr
    cmp #<mul_sqr1_lo+$200*4
    bcc b1
  !:
  //SEG470 [218] phi from multiply_tables_compare::@2 to multiply_tables_compare::@5 [phi:multiply_tables_compare::@2->multiply_tables_compare::@5]
  //SEG471 multiply_tables_compare::@5
  //SEG472 [219] call print_str param-assignment [ char_cursor#117 ] ( main:2::multiply_tables_compare:11 [ char_cursor#117 ] )
  //SEG473 [51] phi from multiply_tables_compare::@5 to print_str [phi:multiply_tables_compare::@5->print_str]
  //SEG474 [51] phi (byte*) char_cursor#135 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@5->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta char_cursor
    lda #>$400
    sta char_cursor+1
  //SEG475 [51] phi (byte*) print_str::str#16 = (const string) multiply_tables_compare::str2 [phi:multiply_tables_compare::@5->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta print_str.str
    lda #>str2
    sta print_str.str+1
    jsr print_str
  //SEG476 [220] phi from multiply_tables_compare::@5 to multiply_tables_compare::@10 [phi:multiply_tables_compare::@5->multiply_tables_compare::@10]
  //SEG477 multiply_tables_compare::@10
  //SEG478 [221] call print_ln param-assignment [ line_cursor#1 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 ] )
  //SEG479 [46] phi from multiply_tables_compare::@10 to print_ln [phi:multiply_tables_compare::@10->print_ln]
  //SEG480 [46] phi (byte*) char_cursor#118 = (byte*) char_cursor#117 [phi:multiply_tables_compare::@10->print_ln#0] -- register_copy 
  //SEG481 [46] phi (byte*) line_cursor#40 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:multiply_tables_compare::@10->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta line_cursor
    lda #>$400
    sta line_cursor+1
    jsr print_ln
  //SEG482 [222] (byte*~) char_cursor#197 ← (byte*) line_cursor#1 [ line_cursor#1 char_cursor#197 ] ( main:2::multiply_tables_compare:11 [ line_cursor#1 char_cursor#197 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG483 [213] phi from multiply_tables_compare::@10 to multiply_tables_compare::@return [phi:multiply_tables_compare::@10->multiply_tables_compare::@return]
  //SEG484 [213] phi (byte*) line_cursor#27 = (byte*) line_cursor#1 [phi:multiply_tables_compare::@10->multiply_tables_compare::@return#0] -- register_copy 
  //SEG485 [213] phi (byte*) char_cursor#27 = (byte*~) char_cursor#197 [phi:multiply_tables_compare::@10->multiply_tables_compare::@return#1] -- register_copy 
    jmp breturn
    str: .text "multiply table mismatch at @"
    str1: .text " / @"
    str2: .text "multiply tables match!@"
}
//SEG486 init_multiply_asm
init_multiply_asm: {
    .const mem = $ff
  //SEG487 asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: staasm_mul_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: staasm_mul_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldaasm_mul_sqr1_hi+1,x staasm_mul_sqr2_hi+$100,x ldaasm_mul_sqr1_hi,x staasm_mul_sqr2_hi,y ldaasm_mul_sqr1_lo+1,x staasm_mul_sqr2_lo+$100,x ldaasm_mul_sqr1_lo,x staasm_mul_sqr2_lo,y dey inx bne!-  }
    ldx #0
    txa
    .byte $c9
  lb1:
    tya
    adc #0
  ml1:
    sta asm_mul_sqr1_hi,x
    tay
    cmp #$40
    txa
    ror
  ml9:
    adc #0
    sta ml9+1
    inx
  ml0:
    sta asm_mul_sqr1_lo,x
    bne lb1
    inc ml0+2
    inc ml1+2
    clc
    iny
    bne lb1
    ldx #0
    ldy #$ff
  !:
    lda asm_mul_sqr1_hi+1,x
    sta asm_mul_sqr2_hi+$100,x
    lda asm_mul_sqr1_hi,x
    sta asm_mul_sqr2_hi,y
    lda asm_mul_sqr1_lo+1,x
    sta asm_mul_sqr2_lo+$100,x
    lda asm_mul_sqr1_lo,x
    sta asm_mul_sqr2_lo,y
    dey
    inx
    bne !-
  //SEG488 [224] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr1_lo
    sta mem
  //SEG489 [225] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr1_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr1_hi
    sta mem
  //SEG490 [226] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_lo#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr2_lo
    sta mem
  //SEG491 [227] *((const byte*) init_multiply_asm::mem#0) ← *((const byte[512]) asm_mul_sqr2_hi#0) [ ] ( main:2::init_multiply_asm:9 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda asm_mul_sqr2_hi
    sta mem
  //SEG492 init_multiply_asm::@return
  //SEG493 [228] return  [ ] ( main:2::init_multiply_asm:9 [ ] )
    rts
}
//SEG494 init_multiply
init_multiply: {
    .label sqr1_hi = 6
    .label sqr = 8
    .label sqr1_lo = 4
    .label x_2 = 2
    .label sqr2_hi = 6
    .label sqr2_lo = 4
    .label dir = 2
  //SEG495 [230] phi from init_multiply to init_multiply::@1 [phi:init_multiply->init_multiply::@1]
  //SEG496 [230] phi (byte) init_multiply::x_2#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init_multiply->init_multiply::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta x_2
  //SEG497 [230] phi (byte*) init_multiply::sqr1_hi#2 = (const byte[512]) mul_sqr1_hi#0+(byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply->init_multiply::@1#1] -- pbuz1=pbuc1 
    lda #<mul_sqr1_hi+1
    sta sqr1_hi
    lda #>mul_sqr1_hi+1
    sta sqr1_hi+1
  //SEG498 [230] phi (byte*) init_multiply::sqr1_lo#2 = (const byte[512]) mul_sqr1_lo#0+(byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply->init_multiply::@1#2] -- pbuz1=pbuc1 
    lda #<mul_sqr1_lo+1
    sta sqr1_lo
    lda #>mul_sqr1_lo+1
    sta sqr1_lo+1
  //SEG499 [230] phi (word) init_multiply::sqr#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init_multiply->init_multiply::@1#3] -- vwuz1=vbuc1 
    lda #0
    sta sqr
    sta sqr+1
  //SEG500 [230] phi (byte) init_multiply::c#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init_multiply->init_multiply::@1#4] -- vbuxx=vbuc1 
    tax
  //SEG501 [230] phi from init_multiply::@2 to init_multiply::@1 [phi:init_multiply::@2->init_multiply::@1]
  //SEG502 [230] phi (byte) init_multiply::x_2#3 = (byte) init_multiply::x_2#2 [phi:init_multiply::@2->init_multiply::@1#0] -- register_copy 
  //SEG503 [230] phi (byte*) init_multiply::sqr1_hi#2 = (byte*) init_multiply::sqr1_hi#1 [phi:init_multiply::@2->init_multiply::@1#1] -- register_copy 
  //SEG504 [230] phi (byte*) init_multiply::sqr1_lo#2 = (byte*) init_multiply::sqr1_lo#1 [phi:init_multiply::@2->init_multiply::@1#2] -- register_copy 
  //SEG505 [230] phi (word) init_multiply::sqr#4 = (word) init_multiply::sqr#1 [phi:init_multiply::@2->init_multiply::@1#3] -- register_copy 
  //SEG506 [230] phi (byte) init_multiply::c#2 = (byte) init_multiply::c#1 [phi:init_multiply::@2->init_multiply::@1#4] -- register_copy 
  //SEG507 init_multiply::@1
  b1:
  //SEG508 [231] (byte) init_multiply::c#1 ← ++ (byte) init_multiply::c#2 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG509 [232] (byte~) init_multiply::$2 ← (byte) init_multiply::c#1 & (byte/signed byte/word/signed word/dword/signed dword) 1 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 init_multiply::$2 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #1
  //SEG510 [233] if((byte~) init_multiply::$2!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@2 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::x_2#3 init_multiply::c#1 ] ) -- vbuaa_neq_0_then_la1 
    cmp #0
    bne b2
  //SEG511 init_multiply::@5
  //SEG512 [234] (byte) init_multiply::x_2#1 ← ++ (byte) init_multiply::x_2#3 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr#4 init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 ] ) -- vbuz1=_inc_vbuz1 
    inc x_2
  //SEG513 [235] (word) init_multiply::sqr#2 ← ++ (word) init_multiply::sqr#4 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 init_multiply::sqr#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#1 init_multiply::sqr#2 ] ) -- vwuz1=_inc_vwuz1 
    inc sqr
    bne !+
    inc sqr+1
  !:
  //SEG514 [236] phi from init_multiply::@1 init_multiply::@5 to init_multiply::@2 [phi:init_multiply::@1/init_multiply::@5->init_multiply::@2]
  //SEG515 [236] phi (byte) init_multiply::x_2#2 = (byte) init_multiply::x_2#3 [phi:init_multiply::@1/init_multiply::@5->init_multiply::@2#0] -- register_copy 
  //SEG516 [236] phi (word) init_multiply::sqr#3 = (word) init_multiply::sqr#4 [phi:init_multiply::@1/init_multiply::@5->init_multiply::@2#1] -- register_copy 
  //SEG517 init_multiply::@2
  b2:
  //SEG518 [237] (byte~) init_multiply::$5 ← < (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$5 ] ) -- vbuaa=_lo_vwuz1 
    lda sqr
  //SEG519 [238] *((byte*) init_multiply::sqr1_lo#2) ← (byte~) init_multiply::$5 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (sqr1_lo),y
  //SEG520 [239] (byte~) init_multiply::$6 ← > (word) init_multiply::sqr#3 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 init_multiply::$6 ] ) -- vbuaa=_hi_vwuz1 
    lda sqr+1
  //SEG521 [240] *((byte*) init_multiply::sqr1_hi#2) ← (byte~) init_multiply::$6 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::sqr1_hi#2 init_multiply::c#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) -- _deref_pbuz1=vbuaa 
    sta (sqr1_hi),y
  //SEG522 [241] (byte*) init_multiply::sqr1_hi#1 ← ++ (byte*) init_multiply::sqr1_hi#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 init_multiply::sqr#3 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr1_hi
    bne !+
    inc sqr1_hi+1
  !:
  //SEG523 [242] (word) init_multiply::sqr#1 ← (word) init_multiply::sqr#3 + (byte) init_multiply::x_2#2 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::sqr1_lo#2 init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) -- vwuz1=vwuz1_plus_vbuz2 
    lda x_2
    clc
    adc sqr
    sta sqr
    lda #0
    adc sqr+1
    sta sqr+1
  //SEG524 [243] (byte*) init_multiply::sqr1_lo#1 ← ++ (byte*) init_multiply::sqr1_lo#2 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr1_lo
    bne !+
    inc sqr1_lo+1
  !:
  //SEG525 [244] if((byte*) init_multiply::sqr1_lo#1!=(const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 512) goto init_multiply::@1 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ( main:2::init_multiply:7 [ init_multiply::c#1 init_multiply::sqr#1 init_multiply::sqr1_lo#1 init_multiply::sqr1_hi#1 init_multiply::x_2#2 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda sqr1_lo+1
    cmp #>mul_sqr1_lo+$200
    bne b1
    lda sqr1_lo
    cmp #<mul_sqr1_lo+$200
    bne b1
  //SEG526 [245] phi from init_multiply::@2 to init_multiply::@3 [phi:init_multiply::@2->init_multiply::@3]
  //SEG527 [245] phi (byte) init_multiply::dir#2 = (byte/word/signed word/dword/signed dword) 255 [phi:init_multiply::@2->init_multiply::@3#0] -- vbuz1=vbuc1 
    lda #$ff
    sta dir
  //SEG528 [245] phi (byte*) init_multiply::sqr2_hi#2 = (const byte[512]) mul_sqr2_hi#0 [phi:init_multiply::@2->init_multiply::@3#1] -- pbuz1=pbuc1 
    lda #<mul_sqr2_hi
    sta sqr2_hi
    lda #>mul_sqr2_hi
    sta sqr2_hi+1
  //SEG529 [245] phi (byte*) init_multiply::sqr2_lo#2 = (const byte[512]) mul_sqr2_lo#0 [phi:init_multiply::@2->init_multiply::@3#2] -- pbuz1=pbuc1 
    lda #<mul_sqr2_lo
    sta sqr2_lo
    lda #>mul_sqr2_lo
    sta sqr2_lo+1
  //SEG530 [245] phi (byte) init_multiply::x_255#2 = ((byte))-(byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply::@2->init_multiply::@3#3] -- vbuxx=vbuc1 
    ldx #-1
  //SEG531 [245] phi from init_multiply::@4 to init_multiply::@3 [phi:init_multiply::@4->init_multiply::@3]
  //SEG532 [245] phi (byte) init_multiply::dir#2 = (byte) init_multiply::dir#3 [phi:init_multiply::@4->init_multiply::@3#0] -- register_copy 
  //SEG533 [245] phi (byte*) init_multiply::sqr2_hi#2 = (byte*) init_multiply::sqr2_hi#1 [phi:init_multiply::@4->init_multiply::@3#1] -- register_copy 
  //SEG534 [245] phi (byte*) init_multiply::sqr2_lo#2 = (byte*) init_multiply::sqr2_lo#1 [phi:init_multiply::@4->init_multiply::@3#2] -- register_copy 
  //SEG535 [245] phi (byte) init_multiply::x_255#2 = (byte) init_multiply::x_255#1 [phi:init_multiply::@4->init_multiply::@3#3] -- register_copy 
  //SEG536 init_multiply::@3
  b3:
  //SEG537 [246] *((byte*) init_multiply::sqr2_lo#2) ← *((const byte[512]) mul_sqr1_lo#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda mul_sqr1_lo,x
    ldy #0
    sta (sqr2_lo),y
  //SEG538 [247] *((byte*) init_multiply::sqr2_hi#2) ← *((const byte[512]) mul_sqr1_hi#0 + (byte) init_multiply::x_255#2) [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::sqr2_hi#2 init_multiply::dir#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda mul_sqr1_hi,x
    sta (sqr2_hi),y
  //SEG539 [248] (byte*) init_multiply::sqr2_hi#1 ← ++ (byte*) init_multiply::sqr2_hi#2 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::x_255#2 init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::sqr2_hi#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr2_hi
    bne !+
    inc sqr2_hi+1
  !:
  //SEG540 [249] (byte) init_multiply::x_255#1 ← (byte) init_multiply::x_255#2 + (byte) init_multiply::dir#2 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ) -- vbuxx=vbuxx_plus_vbuz1 
    txa
    clc
    adc dir
    tax
  //SEG541 [250] if((byte) init_multiply::x_255#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto init_multiply::@12 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ( main:2::init_multiply:7 [ init_multiply::sqr2_lo#2 init_multiply::dir#2 init_multiply::x_255#1 init_multiply::sqr2_hi#1 ] ) -- vbuxx_neq_0_then_la1 
    cpx #0
    bne b4
  //SEG542 [251] phi from init_multiply::@3 to init_multiply::@4 [phi:init_multiply::@3->init_multiply::@4]
  //SEG543 [251] phi (byte) init_multiply::dir#3 = (byte/signed byte/word/signed word/dword/signed dword) 1 [phi:init_multiply::@3->init_multiply::@4#0] -- vbuz1=vbuc1 
    lda #1
    sta dir
  //SEG544 init_multiply::@4
  b4:
  //SEG545 [252] (byte*) init_multiply::sqr2_lo#1 ← ++ (byte*) init_multiply::sqr2_lo#2 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ) -- pbuz1=_inc_pbuz1 
    inc sqr2_lo
    bne !+
    inc sqr2_lo+1
  !:
  //SEG546 [253] if((byte*) init_multiply::sqr2_lo#1!=(const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) goto init_multiply::@3 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ( main:2::init_multiply:7 [ init_multiply::x_255#1 init_multiply::sqr2_lo#1 init_multiply::sqr2_hi#1 init_multiply::dir#3 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda sqr2_lo+1
    cmp #>mul_sqr2_lo+$1ff
    bne b3
    lda sqr2_lo
    cmp #<mul_sqr2_lo+$1ff
    bne b3
  //SEG547 init_multiply::@8
  //SEG548 [254] *((const byte[512]) mul_sqr2_lo#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_lo#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda mul_sqr1_lo+$100
    sta mul_sqr2_lo+$1ff
  //SEG549 [255] *((const byte[512]) mul_sqr2_hi#0+(word/signed word/dword/signed dword) 511) ← *((const byte[512]) mul_sqr1_hi#0+(word/signed word/dword/signed dword) 256) [ ] ( main:2::init_multiply:7 [ ] ) -- _deref_pbuc1=_deref_pbuc2 
    lda mul_sqr1_hi+$100
    sta mul_sqr2_hi+$1ff
  //SEG550 init_multiply::@return
  //SEG551 [256] return  [ ] ( main:2::init_multiply:7 [ ] )
    rts
  //SEG552 [257] phi from init_multiply::@3 to init_multiply::@12 [phi:init_multiply::@3->init_multiply::@12]
  //SEG553 init_multiply::@12
  //SEG554 [251] phi from init_multiply::@12 to init_multiply::@4 [phi:init_multiply::@12->init_multiply::@4]
  //SEG555 [251] phi (byte) init_multiply::dir#3 = (byte) init_multiply::dir#2 [phi:init_multiply::@12->init_multiply::@4#0] -- register_copy 
}
//SEG556 print_cls
print_cls: {
    .label sc = 4
  //SEG557 [259] phi from print_cls to print_cls::@1 [phi:print_cls->print_cls::@1]
  //SEG558 [259] phi (byte*) print_cls::sc#2 = ((byte*))(word/signed word/dword/signed dword) 1024 [phi:print_cls->print_cls::@1#0] -- pbuz1=pbuc1 
    lda #<$400
    sta sc
    lda #>$400
    sta sc+1
  //SEG559 [259] phi from print_cls::@1 to print_cls::@1 [phi:print_cls::@1->print_cls::@1]
  //SEG560 [259] phi (byte*) print_cls::sc#2 = (byte*) print_cls::sc#1 [phi:print_cls::@1->print_cls::@1#0] -- register_copy 
  //SEG561 print_cls::@1
  b1:
  //SEG562 [260] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG563 [261] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG564 [262] if((byte*) print_cls::sc#1!=(word/signed word/dword/signed dword) 1024+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1_neq_vwuc1_then_la1 
    lda sc+1
    cmp #>$400+$3e8
    bne b1
    lda sc
    cmp #<$400+$3e8
    bne b1
  //SEG565 print_cls::@return
  //SEG566 [263] return  [ ] ( main:2::print_cls:5 [ ] )
    rts
}
  .align $100
  mul_sqr1_lo: .fill $200, 0
  .align $100
  mul_sqr1_hi: .fill $200, 0
  .align $100
  mul_sqr2_lo: .fill $200, 0
  .align $100
  mul_sqr2_hi: .fill $200, 0
  .align $100
  asm_mul_sqr1_lo: .fill $200, 0
  .align $100
  asm_mul_sqr1_hi: .fill $200, 0
  .align $100
  asm_mul_sqr2_lo: .fill $200, 0
  .align $100
  asm_mul_sqr2_hi: .fill $200, 0

