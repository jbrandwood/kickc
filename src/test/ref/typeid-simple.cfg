@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] *((const byte*) main::SCREEN#0) ← (const byte) TYPEID_VOID
  [5] *((const byte*) main::SCREEN#0+(byte) 1) ← (const byte) TYPEID_BYTE
  [6] *((const byte*) main::SCREEN#0+(byte) 2) ← (const byte) TYPEID_SIGNED_BYTE
  [7] *((const byte*) main::SCREEN#0+(byte) 3) ← (const byte) TYPEID_WORD
  [8] *((const byte*) main::SCREEN#0+(byte) 4) ← (const byte) TYPEID_SIGNED_WORD
  [9] *((const byte*) main::SCREEN#0+(byte) 5) ← (const byte) TYPEID_DWORD
  [10] *((const byte*) main::SCREEN#0+(byte) 6) ← (const byte) TYPEID_SIGNED_DWORD
  [11] *((const byte*) main::SCREEN#0+(byte) 7) ← (const byte) TYPEID_BOOL
  [12] *((const byte*) main::SCREEN#0+(byte) 8) ← (const byte) TYPEID_POINTER_BYTE
  [13] *((const byte*) main::SCREEN#0+(byte) 9) ← (const byte) TYPEID_POINTER_SIGNED_BYTE
  [14] *((const byte*) main::SCREEN#0+(byte) $a) ← (const byte) TYPEID_POINTER_WORD
  [15] *((const byte*) main::SCREEN#0+(byte) $b) ← (const byte) TYPEID_POINTER_SIGNED_WORD
  [16] *((const byte*) main::SCREEN#0+(byte) $c) ← (const byte) TYPEID_POINTER_DWORD
  [17] *((const byte*) main::SCREEN#0+(byte) $d) ← (const byte) TYPEID_POINTER_SIGNED_DWORD
  [18] *((const byte*) main::SCREEN#0+(byte) $e) ← (const byte) TYPEID_POINTER_BOOL
  [19] *((const byte*) main::SCREEN#0+(byte) $f) ← (const byte) TYPEID_POINTER_PROCEDURE
  [20] *((const byte*) main::SCREEN#0+(byte) $10) ← (const byte) TYPEID_POINTER_POINTER_BYTE
  to:main::@return
main::@return: scope:[main]  from main
  [21] return 
  to:@return
