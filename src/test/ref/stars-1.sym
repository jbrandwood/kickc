constant byte* const COLORRAM = (byte*) 55296
constant byte* const DEFAULT_SCREEN = (byte*) 1024
constant byte* DIGITS[]  = "0123456789abcdef"z
constant const byte LIGHT_BLUE = $e
constant byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
constant byte* RADIX_DECIMAL_VALUES_CHAR[]  = { $64, $a }
constant word* RADIX_HEXADECIMAL_VALUES[]  = { $1000, $100, $10 }
constant byte SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
void __start()
void clrscr()
byte clrscr::c
byte clrscr::c#1 reg byte y 20002.0
byte clrscr::c#2 reg byte y 12501.25
byte clrscr::l
byte clrscr::l#1 reg byte x 2002.0
byte clrscr::l#2 reg byte x 333.6666666666667
byte* clrscr::line_cols
byte* clrscr::line_cols#1 line_cols zp[2]:5 1001.0
byte* clrscr::line_cols#5 line_cols zp[2]:5 1500.375
byte* clrscr::line_text
byte* clrscr::line_text#1 line_text zp[2]:11 667.3333333333334
byte* clrscr::line_text#5 line_text zp[2]:11 1714.7142857142858
void conio_c64_init()
constant byte* const conio_c64_init::BASIC_CURSOR_LINE = (byte*) 214
byte conio_c64_init::line
byte conio_c64_init::line#0 reg byte x 11.0
byte conio_c64_init::line#2 reg byte x 22.0
byte conio_cursor_x loadstore zp[1]:18 1.4851487227722771E7
byte conio_cursor_y loadstore zp[1]:19 2.735042752905983E8
byte* conio_line_color loadstore zp[2]:22 1.9217391486086956E8
byte* conio_line_text loadstore zp[2]:20 1.905172431810345E8
void cputc(byte cputc::c)
byte cputc::c
byte cputc::c#0 reg byte a 2.0000002E7
byte cputc::c#1 reg byte a 2.0000002E7
byte cputc::c#2 reg byte a 20002.0
byte cputc::c#3 reg byte a 1.100050025E8
void cputln()
void cputs(const byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 1.0000001E7
const byte* cputs::s
const byte* cputs::s#0 s zp[2]:11 5000000.5
const byte* cputs::s#5 s zp[2]:11 1.5050002E7
const byte* cputs::s#6 s zp[2]:11 100001.0
void cscroll()
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte*~ gotoxy::$5 zp[2]:28 202.0
byte*~ gotoxy::$6 zp[2]:24 202.0
word~ gotoxy::$7 zp[2]:24 151.5
word~ gotoxy::$8 zp[2]:26 202.0
word~ gotoxy::$9 zp[2]:24 202.0
word gotoxy::line_offset
word gotoxy::line_offset#0 line_offset zp[2]:24 101.0
byte gotoxy::x
constant byte gotoxy::x#2 x = 0
byte gotoxy::y
byte gotoxy::y#2 reg byte x 71.0
byte gotoxy::y#4 reg byte x 67.33333333333333
void main()
byte main::i
byte main::i#1 i zp[1]:2 202.0
byte main::i#2 i zp[1]:2 20.2
struct $0* main::pStar
struct $0* main::pStar#1 pStar zp[2]:3 101.0
struct $0* main::pStar#2 pStar zp[2]:3 14.428571428571429
constant byte* main::s[2]  = " "
constant byte* main::s2[2]  = "
"
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#2 destination zp[2]:35
byte* memcpy::dst
byte* memcpy::dst#1 dst zp[2]:35 1.00000000000001E14
byte* memcpy::dst#2 dst zp[2]:35 1.0003333333333467E14
byte* memcpy::dst#4 dst zp[2]:35 2.00000000002E11
word memcpy::num
void* memcpy::return
void* memcpy::source
void* memcpy::source#2 source zp[2]:16
byte* memcpy::src
byte* memcpy::src#1 src zp[2]:16 2.00000000000002E14
byte* memcpy::src#2 src zp[2]:16 1.0002500000000125E14
byte* memcpy::src#4 src zp[2]:16 1.00000000001E11
byte* memcpy::src_end
byte* memcpy::src_end#0 src_end zp[2]:33 1.251250000000025E13
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#4 reg byte x 1.4285714285714428E13
byte* memset::dst
byte* memset::dst#1 dst zp[2]:16 2.00000000000002E14
byte* memset::dst#2 dst zp[2]:16 1.3336666666666834E14
byte* memset::dst#4 dst zp[2]:16 2.00000000002E11
byte* memset::end
byte* memset::end#0 end zp[2]:35 1.6683333333333668E13
word memset::num
void* memset::return
void* memset::str
void* memset::str#3 str zp[2]:16
struct printf_buffer_number printf_buffer loadstore mem[12] = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
word~ printf_number_buffer::$19 zp[2]:30 10001.0
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0 buffer_sign zp[1]:10 2002.0
byte printf_number_buffer::buffer_sign#1 buffer_sign zp[1]:10 2002.0
byte printf_number_buffer::buffer_sign#10 buffer_sign zp[1]:10 1600.25
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_justify_left#10 format_justify_left zp[1]:7 645.2258064516129
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_min_length#2 reg byte x 1000.1
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_upper_case#10 format_upper_case zp[1]:32 384.65384615384613
byte printf_number_buffer::format_zero_padding
byte printf_number_buffer::format_zero_padding#10 format_zero_padding zp[1]:9 937.59375
signed byte printf_number_buffer::len
signed byte printf_number_buffer::len#0 reg byte y 15001.5
signed byte printf_number_buffer::len#1 reg byte y 20002.0
signed byte printf_number_buffer::len#2 reg byte y 30003.0
signed byte printf_number_buffer::padding
signed byte printf_number_buffer::padding#1 padding zp[1]:8 10001.0
signed byte printf_number_buffer::padding#10 padding zp[1]:8 1904.952380952381
void printf_padding(byte printf_padding::pad , byte printf_padding::length)
byte printf_padding::i
byte printf_padding::i#1 i zp[1]:15 2.0000002E7
byte printf_padding::i#2 i zp[1]:15 7500000.75
byte printf_padding::length
byte printf_padding::length#0 length zp[1]:13 20002.0
byte printf_padding::length#1 length zp[1]:13 20002.0
byte printf_padding::length#2 length zp[1]:13 20002.0
byte printf_padding::length#4 length zp[1]:13 1671667.3333333333
byte printf_padding::pad
byte printf_padding::pad#5 pad zp[1]:14 1666666.8333333333
void printf_uchar(byte printf_uchar::uvalue , byte printf_uchar::format_min_length , byte printf_uchar::format_justify_left , byte printf_uchar::format_sign_always , byte printf_uchar::format_zero_padding , byte printf_uchar::format_upper_case , byte printf_uchar::format_radix)
struct printf_format_number printf_uchar::format
byte printf_uchar::format_justify_left
byte printf_uchar::format_min_length
byte printf_uchar::format_radix
byte printf_uchar::format_sign_always
byte printf_uchar::format_upper_case
byte printf_uchar::format_zero_padding
byte printf_uchar::uvalue
byte printf_uchar::uvalue#0 reg byte x 202.0
byte printf_uchar::uvalue#1 reg byte x 202.0
byte printf_uchar::uvalue#2 reg byte x 601.5
void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
struct printf_format_number printf_uint::format
byte printf_uint::format_justify_left
constant byte printf_uint::format_justify_left#0 format_justify_left = 0
byte printf_uint::format_min_length
constant byte printf_uint::format_min_length#0 format_min_length = 0
byte printf_uint::format_radix
byte printf_uint::format_sign_always
byte printf_uint::format_upper_case
constant byte printf_uint::format_upper_case#0 format_upper_case = 0
byte printf_uint::format_zero_padding
constant byte printf_uint::format_zero_padding#0 format_zero_padding = 0
word printf_uint::uvalue
word printf_uint::uvalue#0 uvalue zp[2]:5 367.33333333333337
constant struct $0* stars[5]  = { { star_x: $32, star_y: $32, speed_x: 2, speed_y: 7 }, { star_x: $28, star_y: $46, speed_x: 2, speed_y: 7 }, { star_x: $1e, star_y: $14, speed_x: 2, speed_y: 7 }, { star_x: $46, star_y: $a, speed_x: 2, speed_y: 7 }, { star_x: $28, star_y: $50, speed_x: 2, speed_y: 7 } }
word strlen(byte* strlen::str)
word strlen::len
word strlen::len#1 len zp[2]:30 1.0000001E7
word strlen::len#2 len zp[2]:30 5002500.75
word strlen::return
word strlen::return#2 return zp[2]:30 20002.0
byte* strlen::str
byte* strlen::str#0 str zp[2]:16 2.0000002E7
byte* strlen::str#2 str zp[2]:16 1.0000001E7
byte* strupr(byte* strupr::str)
byte~ strupr::$0 reg byte a 2.0000002E7
byte* strupr::return
byte* strupr::src
byte* strupr::src#1 src zp[2]:16 2.0000002E7
byte* strupr::src#2 src zp[2]:16 7142857.857142856
byte* strupr::str
constant byte* strupr::str#0 str = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
byte toupper(byte toupper::ch)
byte toupper::ch
byte toupper::ch#0 reg byte a 1.70000002E8
byte toupper::return
byte toupper::return#0 reg byte a 2.00000002E8
byte toupper::return#2 reg byte a 1.0333333466666667E8
byte toupper::return#3 reg byte a 2.0000002E7
void uctoa(byte uctoa::value , byte* uctoa::buffer , byte uctoa::radix)
byte* uctoa::buffer
byte* uctoa::buffer#11 buffer zp[2]:11 335000.50000000006
byte* uctoa::buffer#14 buffer zp[2]:11 1500001.5
byte* uctoa::buffer#3 buffer zp[2]:11 20002.0
byte* uctoa::buffer#4 buffer zp[2]:11 2000002.0
byte uctoa::digit
byte uctoa::digit#1 digit zp[1]:9 2000002.0
byte uctoa::digit#2 digit zp[1]:9 307692.6153846154
byte uctoa::digit_value
byte uctoa::digit_value#0 digit_value zp[1]:32 600000.6000000001
byte* uctoa::digit_values
byte uctoa::max_digits
byte uctoa::radix
byte uctoa::started
byte uctoa::started#2 started zp[1]:10 600000.6000000001
byte uctoa::started#4 started zp[1]:10 1000001.0
byte uctoa::value
byte uctoa::value#0 reg byte x 1000001.0
byte uctoa::value#1 reg byte x 5501.0
byte uctoa::value#2 reg byte x 670001.0000000001
byte uctoa::value#6 reg byte x 1500001.5
byte uctoa_append(byte* uctoa_append::buffer , byte uctoa_append::value , byte uctoa_append::sub)
byte* uctoa_append::buffer
byte* uctoa_append::buffer#0 buffer zp[2]:11 1375000.25
byte uctoa_append::digit
byte uctoa_append::digit#1 reg byte y 1.0000000001E10
byte uctoa_append::digit#2 reg byte y 1.00050000015E10
byte uctoa_append::return
byte uctoa_append::return#0 reg byte x 2000002.0
byte uctoa_append::sub
byte uctoa_append::sub#0 sub zp[1]:32 3.3335000005E9
byte uctoa_append::value
byte uctoa_append::value#0 reg byte x 3666667.333333333
byte uctoa_append::value#1 reg byte x 2.0000000002E10
byte uctoa_append::value#2 reg byte x 5.001833334166666E9
void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
byte~ utoa::$10 reg byte a 2000002.0
byte~ utoa::$11 reg byte a 20002.0
byte* utoa::buffer
byte* utoa::buffer#11 buffer zp[2]:11 287143.2857142857
byte* utoa::buffer#14 buffer zp[2]:11 1500001.5
byte* utoa::buffer#3 buffer zp[2]:11 20002.0
byte* utoa::buffer#4 buffer zp[2]:11 2000002.0
byte utoa::digit
byte utoa::digit#1 digit zp[1]:7 2000002.0
byte utoa::digit#2 digit zp[1]:7 285714.5714285714
word utoa::digit_value
word utoa::digit_value#0 digit_value zp[2]:30 600000.6000000001
word* utoa::digit_values
byte utoa::max_digits
constant byte utoa::max_digits#2 max_digits = 4
byte utoa::radix
byte utoa::started
byte utoa::started#2 reg byte x 500000.5
byte utoa::started#4 reg byte x 1000001.0
word utoa::value
word utoa::value#0 value zp[2]:5 1000001.0
word utoa::value#1 value zp[2]:5 5501.0
word utoa::value#2 value zp[2]:5 572857.857142857
word utoa::value#6 value zp[2]:5 1500001.5
word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
byte* utoa_append::buffer
byte* utoa_append::buffer#0 buffer zp[2]:11 1375000.25
byte utoa_append::digit
byte utoa_append::digit#1 reg byte x 1.0000000001E10
byte utoa_append::digit#2 reg byte x 1.00050000015E10
word utoa_append::return
word utoa_append::return#0 return zp[2]:5 2000002.0
word utoa_append::sub
word utoa_append::sub#0 sub zp[2]:30 3.3335000005E9
word utoa_append::value
word utoa_append::value#0 value zp[2]:5 3666667.333333333
word utoa_append::value#1 value zp[2]:5 2.0000000002E10
word utoa_append::value#2 value zp[2]:5 5.001833334166666E9

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
zp[1]:2 [ main::i#2 main::i#1 ]
zp[2]:3 [ main::pStar#2 main::pStar#1 ]
reg byte x [ gotoxy::y#4 gotoxy::y#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte x [ printf_uchar::uvalue#2 printf_uchar::uvalue#0 printf_uchar::uvalue#1 ]
zp[2]:5 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 printf_uint::uvalue#0 utoa_append::return#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte x [ printf_number_buffer::format_min_length#2 ]
zp[1]:7 [ printf_number_buffer::format_justify_left#10 utoa::digit#2 utoa::digit#1 ]
reg byte y [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
zp[1]:8 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
reg byte a [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
zp[1]:9 [ uctoa::digit#2 uctoa::digit#1 printf_number_buffer::format_zero_padding#10 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
zp[1]:10 [ uctoa::started#2 uctoa::started#4 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
zp[2]:11 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 cputs::s#5 cputs::s#6 cputs::s#0 clrscr::line_text#5 clrscr::line_text#1 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[1]:13 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
zp[1]:14 [ printf_padding::pad#5 ]
zp[1]:15 [ printf_padding::i#2 printf_padding::i#1 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
reg byte a [ toupper::return#2 toupper::return#0 toupper::ch#0 ]
zp[2]:16 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 strupr::src#2 strupr::src#1 strlen::str#2 strlen::str#0 ]
reg byte x [ memset::c#4 ]
zp[1]:18 [ conio_cursor_x ]
zp[1]:19 [ conio_cursor_y ]
zp[2]:20 [ conio_line_text ]
zp[2]:22 [ conio_line_color ]
zp[2]:24 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:26 [ gotoxy::$8 ]
zp[2]:28 [ gotoxy::$5 ]
reg byte a [ cputs::c#1 ]
reg byte a [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:30 [ utoa::digit_value#0 utoa_append::sub#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 ]
zp[1]:32 [ uctoa::digit_value#0 uctoa_append::sub#0 printf_number_buffer::format_upper_case#10 ]
reg byte x [ uctoa_append::return#0 ]
reg byte a [ toupper::return#3 ]
reg byte a [ strupr::$0 ]
zp[2]:33 [ memcpy::src_end#0 ]
zp[2]:35 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
mem[12] [ printf_buffer ]
