
void main()
main: scope:[main]  from
  [0] phi()
  to:main::toD0181
main::toD0181: scope:[main]  from main
  [1] phi()
  to:main::@1
main::@1: scope:[main]  from main::toD0181
  [2] *D018 = main::toD0181_return#0
  [3] call memcpy
  to:main::@2
main::@2: scope:[main]  from main::@1
  asm { sei  }
  [5] *PROCPORT = PROCPORT_RAM_CHARROM
  [6] call memcpy
  to:main::@3
main::@3: scope:[main]  from main::@2
  [7] *PROCPORT = PROCPORT_BASIC_KERNEL_IO
  asm { cli  }
  to:main::@return
main::@return: scope:[main]  from main::@3
  [9] return 
  to:@return

void * memcpy(void *destination , void *source , unsigned int num)
memcpy: scope:[memcpy]  from main::@1 main::@2
  [10] memcpy::num#2 = phi( main::@1/$400, main::@2/$800 )
  [10] memcpy::destination#2 = phi( main::@1/(void *)SCREEN_COPY, main::@2/(void *)CHARSET )
  [10] memcpy::source#2 = phi( main::@1/(void *)SCREEN, main::@2/(void *)CHARGEN )
  [11] memcpy::src_end#0 = (char *)memcpy::source#2 + memcpy::num#2
  [12] memcpy::src#4 = (char *)memcpy::source#2
  [13] memcpy::dst#4 = (char *)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [14] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [14] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [15] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [16] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [17] *memcpy::dst#2 = *memcpy::src#2
  [18] memcpy::dst#1 = ++ memcpy::dst#2
  [19] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1
