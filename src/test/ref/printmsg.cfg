@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  [5] call print_str 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call print_ln 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] (byte*) print_char_cursor#35 ← (byte*) print_line_cursor#1
  [9] call print_str 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] phi()
  [11] call print_ln 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [12] (byte*) print_char_cursor#36 ← (byte*) print_line_cursor#1
  [13] call print_str 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [14] phi()
  [15] call print_ln 
  to:main::@return
main::@return: scope:[main]  from main::@5
  [16] return 
  to:@return

(void()) print_ln()
print_ln: scope:[print_ln]  from main::@1 main::@3 main::@5
  [17] (byte*) print_line_cursor#16 ← phi( main::@1/(byte*) 1024 main::@3/(byte*) print_line_cursor#1 main::@5/(byte*) print_line_cursor#1 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [18] (byte*) print_line_cursor#8 ← phi( print_ln/(byte*) print_line_cursor#16 print_ln::@1/(byte*) print_line_cursor#1 )
  [19] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#8 + (byte) $28
  [20] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#16) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [21] return 
  to:@return

(void()) print_str((byte*) print_str::str)
print_str: scope:[print_str]  from main main::@2 main::@4
  [22] (byte*) print_char_cursor#34 ← phi( main/(byte*) 1024 main::@2/(byte*) print_char_cursor#35 main::@4/(byte*) print_char_cursor#36 )
  [22] (byte*) print_str::str#7 ← phi( main/(const byte*) msg main::@2/(const byte*) msg2 main::@4/(const byte*) msg3 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  [23] (byte*) print_char_cursor#16 ← phi( print_str/(byte*) print_char_cursor#34 print_str::@3/(byte*) print_char_cursor#20 )
  [23] (byte*) print_str::str#4 ← phi( print_str/(byte*) print_str::str#7 print_str::@3/(byte*) print_str::str#0 )
  [24] if((byte) 0!=*((byte*) print_str::str#4)) goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [25] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [26] (byte) print_char::ch#0 ← *((byte*) print_str::str#4)
  [27] call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  [28] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#4
  to:print_str::@1

(void()) print_char((byte) print_char::ch)
print_char: scope:[print_char]  from print_str::@2
  [29] *((byte*) print_char_cursor#16) ← (byte) print_char::ch#0
  [30] (byte*) print_char_cursor#20 ← ++ (byte*) print_char_cursor#16
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [31] return 
  to:@return
