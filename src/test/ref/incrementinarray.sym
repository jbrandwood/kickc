const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
void main()
byte main::i
byte main::i#1 reg byte x 11.0
byte main::i#2 reg byte x 4.4
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
const byte memset::c#0 c = ' '
byte* memset::dst
byte* memset::dst#1 dst zp[2]:6 2002.0
byte* memset::dst#2 dst zp[2]:6 1334.6666666666667
byte* memset::end
const byte* memset::end#0 end = (byte*)memset::str#0+memset::num#0
word memset::num
const word memset::num#0 num = $3e8
void* memset::return
void* memset::str
const void* memset::str#0 str = (void*)print_screen#0
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 reg byte a 110002.0
byte* print_char_cursor
byte* print_char_cursor#1 print_char_cursor zp[2]:2 20009.545454545456
byte* print_char_cursor#20 print_char_cursor zp[2]:2 27500.5
byte* print_char_cursor#32 print_char_cursor zp[2]:2 56.0
byte* print_char_cursor#37 print_char_cursor zp[2]:2 22.0
void print_cls()
byte* print_line_cursor
byte* print_line_cursor#0 print_line_cursor zp[2]:4 3753.125
byte* print_line_cursor#10 print_line_cursor zp[2]:4 20103.0
byte* print_line_cursor#21 print_line_cursor zp[2]:4 28.0
void print_ln()
byte* print_screen
const byte* print_screen#0 print_screen = (byte*) 1024
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 str zp[2]:6 20002.0
byte* print_str::str#2 str zp[2]:6 10001.0
const byte* txt[]  = "camelot"

reg byte x [ main::i#2 main::i#1 ]
zp[2]:2 [ print_char_cursor#1 print_char_cursor#32 print_char_cursor#37 print_char_cursor#20 ]
zp[2]:4 [ print_line_cursor#10 print_line_cursor#21 print_line_cursor#0 ]
zp[2]:6 [ memset::dst#2 memset::dst#1 print_str::str#2 print_str::str#0 ]
reg byte a [ print_char::ch#0 ]
