
(void()) main()
main: scope:[main]  from
  asm { sei  }
  [1] *((const nomodify byte*) PROCPORT_DDR) ← (const nomodify byte) PROCPORT_DDR_MEMORY_MASK
  [2] *((const nomodify byte*) PROCPORT) ← (const nomodify byte) PROCPORT_RAM_IO
  [3] *((const nomodify byte*) DTV_FEATURE) ← (const nomodify byte) DTV_FEATURE_ENABLE
  [4] call keyboard_init 
  to:main::@3
main::@3: scope:[main]  from main
  [5] phi()
  [6] call gfx_init 
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@4
  [7] (byte) form_field_idx#1 ← phi( main::@3/(byte) 0 main::@4/(byte) form_field_idx#19 )
  [7] (byte) keyboard_events_size#28 ← phi( main::@3/(byte) 0 main::@4/(byte) keyboard_events_size#25 )
  [7] (signed byte) form_cursor_count#1 ← phi( main::@3/(const nomodify signed byte) FORM_CURSOR_BLINK/(signed byte) 2 main::@4/(signed byte) form_cursor_count#17 )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi()
  [9] call form_mode 
  to:main::@4
main::@4: scope:[main]  from main::@2
  [10] phi()
  [11] call gfx_mode 
  to:main::@1

(void()) keyboard_init()
keyboard_init: scope:[keyboard_init]  from main
  [12] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) ← (byte) $ff
  [13] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR) ← (byte) 0
  to:keyboard_init::@return
keyboard_init::@return: scope:[keyboard_init]  from keyboard_init
  [14] return 
  to:@return

(void()) gfx_init()
gfx_init: scope:[gfx_init]  from main::@3
  [15] phi()
  [16] call gfx_init_screen0 
  to:gfx_init::@1
gfx_init::@1: scope:[gfx_init]  from gfx_init
  [17] phi()
  [18] call gfx_init_screen1 
  to:gfx_init::@2
gfx_init::@2: scope:[gfx_init]  from gfx_init::@1
  [19] phi()
  [20] call gfx_init_screen2 
  to:gfx_init::@3
gfx_init::@3: scope:[gfx_init]  from gfx_init::@2
  [21] phi()
  [22] call gfx_init_screen3 
  to:gfx_init::@4
gfx_init::@4: scope:[gfx_init]  from gfx_init::@3
  [23] phi()
  [24] call gfx_init_screen4 
  to:gfx_init::@5
gfx_init::@5: scope:[gfx_init]  from gfx_init::@4
  [25] phi()
  [26] call gfx_init_charset 
  to:gfx_init::@6
gfx_init::@6: scope:[gfx_init]  from gfx_init::@5
  [27] phi()
  [28] call gfx_init_vic_bitmap 
  to:gfx_init::@7
gfx_init::@7: scope:[gfx_init]  from gfx_init::@6
  [29] phi()
  [30] call gfx_init_plane_8bppchunky 
  to:gfx_init::@8
gfx_init::@8: scope:[gfx_init]  from gfx_init::@7
  [31] phi()
  [32] call gfx_init_plane_charset8 
  to:gfx_init::@9
gfx_init::@9: scope:[gfx_init]  from gfx_init::@8
  [33] phi()
  [34] call gfx_init_plane_horisontal 
  to:gfx_init::@10
gfx_init::@10: scope:[gfx_init]  from gfx_init::@9
  [35] phi()
  [36] call gfx_init_plane_vertical 
  to:gfx_init::@11
gfx_init::@11: scope:[gfx_init]  from gfx_init::@10
  [37] phi()
  [38] call gfx_init_plane_horisontal2 
  to:gfx_init::@12
gfx_init::@12: scope:[gfx_init]  from gfx_init::@11
  [39] phi()
  [40] call gfx_init_plane_vertical2 
  to:gfx_init::@13
gfx_init::@13: scope:[gfx_init]  from gfx_init::@12
  [41] phi()
  [42] call gfx_init_plane_blank 
  to:gfx_init::@14
gfx_init::@14: scope:[gfx_init]  from gfx_init::@13
  [43] phi()
  [44] call gfx_init_plane_full 
  to:gfx_init::@return
gfx_init::@return: scope:[gfx_init]  from gfx_init::@14
  [45] return 
  to:@return

(void()) form_mode()
form_mode: scope:[form_mode]  from main::@2
  [46] phi()
  [47] call print_set_screen 
  to:form_mode::@8
form_mode::@8: scope:[form_mode]  from form_mode
  [48] phi()
  [49] call print_cls 
  to:form_mode::@9
form_mode::@9: scope:[form_mode]  from form_mode::@8
  [50] phi()
  [51] call print_str_lines 
  to:form_mode::@10
form_mode::@10: scope:[form_mode]  from form_mode::@9
  [52] phi()
  [53] call print_set_screen 
  to:form_mode::@11
form_mode::@11: scope:[form_mode]  from form_mode::@10
  [54] phi()
  [55] call print_cls 
  to:form_mode::@12
form_mode::@12: scope:[form_mode]  from form_mode::@11
  [56] phi()
  [57] call print_str_lines 
  to:form_mode::@13
form_mode::@13: scope:[form_mode]  from form_mode::@12
  [58] phi()
  [59] call form_set_screen 
  to:form_mode::@14
form_mode::@14: scope:[form_mode]  from form_mode::@13
  [60] phi()
  [61] call form_render_values 
  to:form_mode::@15
form_mode::@15: scope:[form_mode]  from form_mode::@14
  [62] (byte) render_preset_name::idx#0 ← *((const byte*) form_fields_val)
  [63] call render_preset_name 
  to:form_mode::@16
form_mode::@16: scope:[form_mode]  from form_mode::@15
  [64] *((const nomodify byte*) DTV_GRAPHICS_VIC_BANK) ← (byte) 0
  [65] *((const nomodify byte*) DTV_COLOR_BANK_LO) ← <(word)(const nomodify dword) DTV_COLOR_BANK_DEFAULT/(word) $400
  [66] *((const nomodify byte*) DTV_COLOR_BANK_HI) ← (byte) 0
  [67] *((byte*)(const nomodify struct MOS6526_CIA*) CIA2+(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) ← (byte) 3
  [68] *((byte*)(const nomodify struct MOS6526_CIA*) CIA2) ← (byte) 3
  [69] *((const nomodify byte*) DTV_CONTROL) ← (byte) 0
  [70] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL1) ← (const nomodify byte) VIC_DEN|(const nomodify byte) VIC_RSEL|(byte) 3
  [71] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL2) ← (const nomodify byte) VIC_CSEL
  [72] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_MEMORY) ← (byte)(word)(const nomodify byte*) FORM_SCREEN&(word) $3fff/(byte) $40|(word)(const nomodify byte*) FORM_CHARSET&(word) $3fff/(word) $400
  [73] *((const nomodify byte*) DTV_PLANEA_START_LO) ← (byte) 0
  [74] *((const nomodify byte*) DTV_PLANEA_START_MI) ← >(const nomodify byte*) FORM_SCREEN
  [75] *((const nomodify byte*) DTV_PLANEA_START_HI) ← (byte) 0
  to:form_mode::@1
form_mode::@1: scope:[form_mode]  from form_mode::@1 form_mode::@16
  [76] (byte) form_mode::i#2 ← phi( form_mode::@1/(byte) form_mode::i#1 form_mode::@16/(byte) 0 )
  [77] *((const nomodify byte*) DTV_PALETTE + (byte) form_mode::i#2) ← *((const byte*) DTV_PALETTE_DEFAULT + (byte) form_mode::i#2)
  [78] (byte) form_mode::i#1 ← ++ (byte) form_mode::i#2
  [79] if((byte) form_mode::i#1!=(byte) $10) goto form_mode::@1
  to:form_mode::@2
form_mode::@2: scope:[form_mode]  from form_mode::@1
  [80] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR) ← (byte) 0
  [81] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR) ← (byte) 0
  [82] (byte) form_mode::preset_current#0 ← *((const byte*) form_fields_val)
  to:form_mode::@3
form_mode::@3: scope:[form_mode]  from form_mode::@19 form_mode::@2 form_mode::@6
  [83] (byte) form_mode::preset_current#6 ← phi( form_mode::@2/(byte) form_mode::preset_current#0 form_mode::@19/(byte) form_mode::preset_current#1 form_mode::@6/(byte) form_mode::preset_current#6 )
  [83] (byte) form_field_idx#30 ← phi( form_mode::@2/(byte) form_field_idx#1 form_mode::@19/(byte) form_field_idx#19 form_mode::@6/(byte) form_field_idx#19 )
  [83] (byte) keyboard_events_size#49 ← phi( form_mode::@2/(byte) keyboard_events_size#28 form_mode::@19/(byte) keyboard_events_size#25 form_mode::@6/(byte) keyboard_events_size#25 )
  [83] (signed byte) form_cursor_count#23 ← phi( form_mode::@2/(signed byte) form_cursor_count#1 form_mode::@19/(signed byte) form_cursor_count#17 form_mode::@6/(signed byte) form_cursor_count#17 )
  to:form_mode::@4
form_mode::@4: scope:[form_mode]  from form_mode::@3 form_mode::@4
  [84] if(*((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER)!=(byte) $ff) goto form_mode::@4
  to:form_mode::@5
form_mode::@5: scope:[form_mode]  from form_mode::@4
  [85] phi()
  [86] call form_control 
  [87] (byte) form_control::return#0 ← (byte) form_control::return#2
  to:form_mode::@17
form_mode::@17: scope:[form_mode]  from form_mode::@5
  [88] (byte~) form_mode::$11 ← (byte) form_control::return#0
  [89] if((byte~) form_mode::$11==(byte) 0) goto form_mode::@6
  to:form_mode::@return
form_mode::@return: scope:[form_mode]  from form_mode::@17
  [90] return 
  to:@return
form_mode::@6: scope:[form_mode]  from form_mode::@17
  [91] if((byte) form_mode::preset_current#6==*((const byte*) form_fields_val)) goto form_mode::@3
  to:form_mode::@7
form_mode::@7: scope:[form_mode]  from form_mode::@6
  [92] (byte) apply_preset::idx#0 ← *((const byte*) form_fields_val)
  [93] call apply_preset 
  to:form_mode::@18
form_mode::@18: scope:[form_mode]  from form_mode::@7
  [94] (byte) form_mode::preset_current#1 ← *((const byte*) form_fields_val)
  [95] call form_render_values 
  to:form_mode::@19
form_mode::@19: scope:[form_mode]  from form_mode::@18
  [96] (byte) render_preset_name::idx#1 ← *((const byte*) form_fields_val)
  [97] call render_preset_name 
  to:form_mode::@3

(void()) gfx_mode()
gfx_mode: scope:[gfx_mode]  from main::@4
  [98] if(*((const nomodify byte*) form_ctrl_line)==(byte) 0) goto gfx_mode::@1
  to:gfx_mode::@10
gfx_mode::@10: scope:[gfx_mode]  from gfx_mode
  [99] phi()
  to:gfx_mode::@1
gfx_mode::@1: scope:[gfx_mode]  from gfx_mode gfx_mode::@10
  [100] (byte) gfx_mode::dtv_control#14 ← phi( gfx_mode/(byte) 0 gfx_mode::@10/(const nomodify byte) DTV_LINEAR )
  [101] if(*((const nomodify byte*) form_ctrl_borof)==(byte) 0) goto gfx_mode::@2
  to:gfx_mode::@11
gfx_mode::@11: scope:[gfx_mode]  from gfx_mode::@1
  [102] (byte) gfx_mode::dtv_control#2 ← (byte) gfx_mode::dtv_control#14 | (const nomodify byte) DTV_BORDER_OFF
  to:gfx_mode::@2
gfx_mode::@2: scope:[gfx_mode]  from gfx_mode::@1 gfx_mode::@11
  [103] (byte) gfx_mode::dtv_control#15 ← phi( gfx_mode::@1/(byte) gfx_mode::dtv_control#14 gfx_mode::@11/(byte) gfx_mode::dtv_control#2 )
  [104] if(*((const nomodify byte*) form_ctrl_hicol)==(byte) 0) goto gfx_mode::@3
  to:gfx_mode::@12
gfx_mode::@12: scope:[gfx_mode]  from gfx_mode::@2
  [105] (byte) gfx_mode::dtv_control#3 ← (byte) gfx_mode::dtv_control#15 | (const nomodify byte) DTV_HIGHCOLOR
  to:gfx_mode::@3
gfx_mode::@3: scope:[gfx_mode]  from gfx_mode::@12 gfx_mode::@2
  [106] (byte) gfx_mode::dtv_control#10 ← phi( gfx_mode::@12/(byte) gfx_mode::dtv_control#3 gfx_mode::@2/(byte) gfx_mode::dtv_control#15 )
  [107] if(*((const nomodify byte*) form_ctrl_overs)==(byte) 0) goto gfx_mode::@4
  to:gfx_mode::@13
gfx_mode::@13: scope:[gfx_mode]  from gfx_mode::@3
  [108] (byte) gfx_mode::dtv_control#4 ← (byte) gfx_mode::dtv_control#10 | (const nomodify byte) DTV_OVERSCAN
  to:gfx_mode::@4
gfx_mode::@4: scope:[gfx_mode]  from gfx_mode::@13 gfx_mode::@3
  [109] (byte) gfx_mode::dtv_control#11 ← phi( gfx_mode::@13/(byte) gfx_mode::dtv_control#4 gfx_mode::@3/(byte) gfx_mode::dtv_control#10 )
  [110] if(*((const nomodify byte*) form_ctrl_colof)==(byte) 0) goto gfx_mode::@5
  to:gfx_mode::@14
gfx_mode::@14: scope:[gfx_mode]  from gfx_mode::@4
  [111] (byte) gfx_mode::dtv_control#5 ← (byte) gfx_mode::dtv_control#11 | (const nomodify byte) DTV_COLORRAM_OFF
  to:gfx_mode::@5
gfx_mode::@5: scope:[gfx_mode]  from gfx_mode::@14 gfx_mode::@4
  [112] (byte) gfx_mode::dtv_control#13 ← phi( gfx_mode::@14/(byte) gfx_mode::dtv_control#5 gfx_mode::@4/(byte) gfx_mode::dtv_control#11 )
  [113] if(*((const nomodify byte*) form_ctrl_chunk)==(byte) 0) goto gfx_mode::@6
  to:gfx_mode::@15
gfx_mode::@15: scope:[gfx_mode]  from gfx_mode::@5
  [114] (byte) gfx_mode::dtv_control#6 ← (byte) gfx_mode::dtv_control#13 | (const nomodify byte) DTV_CHUNKY
  to:gfx_mode::@6
gfx_mode::@6: scope:[gfx_mode]  from gfx_mode::@15 gfx_mode::@5
  [115] (byte) gfx_mode::dtv_control#12 ← phi( gfx_mode::@15/(byte) gfx_mode::dtv_control#6 gfx_mode::@5/(byte) gfx_mode::dtv_control#13 )
  [116] *((const nomodify byte*) DTV_CONTROL) ← (byte) gfx_mode::dtv_control#12
  [117] if(*((const nomodify byte*) form_ctrl_ecm)==(byte) 0) goto gfx_mode::@7
  to:gfx_mode::@16
gfx_mode::@16: scope:[gfx_mode]  from gfx_mode::@6
  [118] phi()
  to:gfx_mode::@7
gfx_mode::@7: scope:[gfx_mode]  from gfx_mode::@16 gfx_mode::@6
  [119] (byte) gfx_mode::vic_control#5 ← phi( gfx_mode::@16/(const nomodify byte) VIC_DEN|(const nomodify byte) VIC_RSEL|(byte) 3|(const nomodify byte) VIC_ECM gfx_mode::@6/(const nomodify byte) VIC_DEN|(const nomodify byte) VIC_RSEL|(byte) 3 )
  [120] if(*((const nomodify byte*) form_ctrl_bmm)==(byte) 0) goto gfx_mode::@8
  to:gfx_mode::@17
gfx_mode::@17: scope:[gfx_mode]  from gfx_mode::@7
  [121] (byte) gfx_mode::vic_control#2 ← (byte) gfx_mode::vic_control#5 | (const nomodify byte) VIC_BMM
  to:gfx_mode::@8
gfx_mode::@8: scope:[gfx_mode]  from gfx_mode::@17 gfx_mode::@7
  [122] (byte) gfx_mode::vic_control#4 ← phi( gfx_mode::@17/(byte) gfx_mode::vic_control#2 gfx_mode::@7/(byte) gfx_mode::vic_control#5 )
  [123] *((const nomodify byte*) VIC_CONTROL) ← (byte) gfx_mode::vic_control#4
  [124] if(*((const nomodify byte*) form_ctrl_mcm)==(byte) 0) goto gfx_mode::@9
  to:gfx_mode::@18
gfx_mode::@18: scope:[gfx_mode]  from gfx_mode::@8
  [125] phi()
  to:gfx_mode::@9
gfx_mode::@9: scope:[gfx_mode]  from gfx_mode::@18 gfx_mode::@8
  [126] (byte) gfx_mode::vic_control2#2 ← phi( gfx_mode::@18/(const nomodify byte) VIC_CSEL|(const nomodify byte) VIC_MCM gfx_mode::@8/(const nomodify byte) VIC_CSEL )
  [127] *((const nomodify byte*) VIC_CONTROL2) ← (byte) gfx_mode::vic_control2#2
  [128] (byte~) gfx_mode::$18 ← *((const nomodify byte*) form_a_start_hi) << (byte) 4
  [129] (byte) gfx_mode::plane_a_offs#0 ← (byte~) gfx_mode::$18 | *((const nomodify byte*) form_a_start_lo)
  [130] (byte) get_plane::idx#0 ← *((const nomodify byte*) form_a_pattern)
  [131] call get_plane 
  [132] (dword) get_plane::return#16 ← (dword) get_plane::return#14
  to:gfx_mode::@27
gfx_mode::@27: scope:[gfx_mode]  from gfx_mode::@9
  [133] (dword~) gfx_mode::$20 ← (dword) get_plane::return#16
  [134] (dword) gfx_mode::plane_a#0 ← (dword~) gfx_mode::$20 + (byte) gfx_mode::plane_a_offs#0
  [135] (word~) gfx_mode::$22 ← < (dword) gfx_mode::plane_a#0
  [136] (byte~) gfx_mode::$23 ← < (word~) gfx_mode::$22
  [137] *((const nomodify byte*) DTV_PLANEA_START_LO) ← (byte~) gfx_mode::$23
  [138] (word~) gfx_mode::$24 ← < (dword) gfx_mode::plane_a#0
  [139] (byte~) gfx_mode::$25 ← > (word~) gfx_mode::$24
  [140] *((const nomodify byte*) DTV_PLANEA_START_MI) ← (byte~) gfx_mode::$25
  [141] (word~) gfx_mode::$26 ← > (dword) gfx_mode::plane_a#0
  [142] (byte~) gfx_mode::$27 ← < (word~) gfx_mode::$26
  [143] *((const nomodify byte*) DTV_PLANEA_START_HI) ← (byte~) gfx_mode::$27
  [144] (byte~) gfx_mode::$28 ← *((const nomodify byte*) form_a_step_hi) << (byte) 4
  [145] (byte~) gfx_mode::$29 ← (byte~) gfx_mode::$28 | *((const nomodify byte*) form_a_step_lo)
  [146] *((const nomodify byte*) DTV_PLANEA_STEP) ← (byte~) gfx_mode::$29
  [147] (byte~) gfx_mode::$30 ← *((const nomodify byte*) form_a_mod_hi) << (byte) 4
  [148] (byte~) gfx_mode::$31 ← (byte~) gfx_mode::$30 | *((const nomodify byte*) form_a_mod_lo)
  [149] *((const nomodify byte*) DTV_PLANEA_MODULO_LO) ← (byte~) gfx_mode::$31
  [150] *((const nomodify byte*) DTV_PLANEA_MODULO_HI) ← (byte) 0
  [151] (byte~) gfx_mode::$32 ← *((const nomodify byte*) form_b_start_hi) << (byte) 4
  [152] (byte) gfx_mode::plane_b_offs#0 ← (byte~) gfx_mode::$32 | *((const nomodify byte*) form_b_start_lo)
  [153] (byte) get_plane::idx#1 ← *((const nomodify byte*) form_b_pattern)
  [154] call get_plane 
  [155] (dword) get_plane::return#17 ← (dword) get_plane::return#14
  to:gfx_mode::@28
gfx_mode::@28: scope:[gfx_mode]  from gfx_mode::@27
  [156] (dword~) gfx_mode::$34 ← (dword) get_plane::return#17
  [157] (dword) gfx_mode::plane_b#0 ← (dword~) gfx_mode::$34 + (byte) gfx_mode::plane_b_offs#0
  [158] (word~) gfx_mode::$36 ← < (dword) gfx_mode::plane_b#0
  [159] (byte~) gfx_mode::$37 ← < (word~) gfx_mode::$36
  [160] *((const nomodify byte*) DTV_PLANEB_START_LO) ← (byte~) gfx_mode::$37
  [161] (word~) gfx_mode::$38 ← < (dword) gfx_mode::plane_b#0
  [162] (byte~) gfx_mode::$39 ← > (word~) gfx_mode::$38
  [163] *((const nomodify byte*) DTV_PLANEB_START_MI) ← (byte~) gfx_mode::$39
  [164] (word~) gfx_mode::$40 ← > (dword) gfx_mode::plane_b#0
  [165] (byte~) gfx_mode::$41 ← < (word~) gfx_mode::$40
  [166] *((const nomodify byte*) DTV_PLANEB_START_HI) ← (byte~) gfx_mode::$41
  [167] (byte~) gfx_mode::$42 ← *((const nomodify byte*) form_b_step_hi) << (byte) 4
  [168] (byte~) gfx_mode::$43 ← (byte~) gfx_mode::$42 | *((const nomodify byte*) form_b_step_lo)
  [169] *((const nomodify byte*) DTV_PLANEB_STEP) ← (byte~) gfx_mode::$43
  [170] (byte~) gfx_mode::$44 ← *((const nomodify byte*) form_b_mod_hi) << (byte) 4
  [171] (byte~) gfx_mode::$45 ← (byte~) gfx_mode::$44 | *((const nomodify byte*) form_b_mod_lo)
  [172] *((const nomodify byte*) DTV_PLANEB_MODULO_LO) ← (byte~) gfx_mode::$45
  [173] *((const nomodify byte*) DTV_PLANEB_MODULO_HI) ← (byte) 0
  [174] *((byte*)(const nomodify struct MOS6526_CIA*) CIA2+(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) ← (byte) 3
  [175] *((byte*)(const nomodify struct MOS6526_CIA*) CIA2) ← (byte) 3^(byte)(word)(const nomodify byte*) VIC_SCREEN0/(word) $4000
  [176] (byte) get_vic_screen::idx#0 ← *((const nomodify byte*) form_vic_screen)
  [177] call get_vic_screen 
  [178] (byte*) get_vic_screen::return#10 ← (byte*) get_vic_screen::return#5
  to:gfx_mode::@29
gfx_mode::@29: scope:[gfx_mode]  from gfx_mode::@28
  [179] (byte*~) gfx_mode::$82 ← (byte*) get_vic_screen::return#10
  [180] (word~) gfx_mode::$47 ← (word)(byte*~) gfx_mode::$82 & (word) $3fff
  [181] (word~) gfx_mode::$48 ← (word~) gfx_mode::$47 >> (byte) 6
  [182] (byte) get_vic_charset::idx#0 ← *((const nomodify byte*) form_vic_gfx)
  [183] call get_vic_charset 
  [184] (byte*) get_vic_charset::return#4 ← (byte*) get_vic_charset::return#2
  to:gfx_mode::@30
gfx_mode::@30: scope:[gfx_mode]  from gfx_mode::@29
  [185] (byte*~) gfx_mode::$83 ← (byte*) get_vic_charset::return#4
  [186] (word~) gfx_mode::$50 ← (word)(byte*~) gfx_mode::$83 & (word) $3fff
  [187] (byte~) gfx_mode::$51 ← > (word~) gfx_mode::$50
  [188] (byte~) gfx_mode::$52 ← (byte~) gfx_mode::$51 >> (byte) 2
  [189] (byte~) gfx_mode::$84 ← (byte)(word~) gfx_mode::$48
  [190] (byte~) gfx_mode::$53 ← (byte~) gfx_mode::$84 | (byte~) gfx_mode::$52
  [191] *((const nomodify byte*) VIC_MEMORY) ← (byte~) gfx_mode::$53
  [192] (byte) get_vic_screen::idx#1 ← *((const nomodify byte*) form_vic_cols)
  [193] call get_vic_screen 
  [194] (byte*) get_vic_screen::return#11 ← (byte*) get_vic_screen::return#5
  to:gfx_mode::@31
gfx_mode::@31: scope:[gfx_mode]  from gfx_mode::@30
  [195] (byte*) gfx_mode::vic_colors#0 ← (byte*) get_vic_screen::return#11
  to:gfx_mode::@19
gfx_mode::@19: scope:[gfx_mode]  from gfx_mode::@21 gfx_mode::@31
  [196] (byte) gfx_mode::cy#4 ← phi( gfx_mode::@21/(byte) gfx_mode::cy#1 gfx_mode::@31/(byte) 0 )
  [196] (byte*) gfx_mode::col#3 ← phi( gfx_mode::@21/(byte*) gfx_mode::col#1 gfx_mode::@31/(const nomodify byte*) COLS )
  [196] (byte*) gfx_mode::vic_colors#3 ← phi( gfx_mode::@21/(byte*) gfx_mode::vic_colors#1 gfx_mode::@31/(byte*) gfx_mode::vic_colors#0 )
  to:gfx_mode::@20
gfx_mode::@20: scope:[gfx_mode]  from gfx_mode::@19 gfx_mode::@20
  [197] (byte) gfx_mode::cx#2 ← phi( gfx_mode::@19/(byte) 0 gfx_mode::@20/(byte) gfx_mode::cx#1 )
  [197] (byte*) gfx_mode::col#2 ← phi( gfx_mode::@19/(byte*) gfx_mode::col#3 gfx_mode::@20/(byte*) gfx_mode::col#1 )
  [197] (byte*) gfx_mode::vic_colors#2 ← phi( gfx_mode::@19/(byte*) gfx_mode::vic_colors#3 gfx_mode::@20/(byte*) gfx_mode::vic_colors#1 )
  [198] *((byte*) gfx_mode::col#2) ← *((byte*) gfx_mode::vic_colors#2)
  [199] (byte*) gfx_mode::col#1 ← ++ (byte*) gfx_mode::col#2
  [200] (byte*) gfx_mode::vic_colors#1 ← ++ (byte*) gfx_mode::vic_colors#2
  [201] (byte) gfx_mode::cx#1 ← ++ (byte) gfx_mode::cx#2
  [202] if((byte) gfx_mode::cx#1!=(byte) $28) goto gfx_mode::@20
  to:gfx_mode::@21
gfx_mode::@21: scope:[gfx_mode]  from gfx_mode::@20
  [203] (byte) gfx_mode::cy#1 ← ++ (byte) gfx_mode::cy#4
  [204] if((byte) gfx_mode::cy#1!=(byte) $19) goto gfx_mode::@19
  to:gfx_mode::@22
gfx_mode::@22: scope:[gfx_mode]  from gfx_mode::@21
  [205] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR) ← (byte) 0
  [206] (byte~) gfx_mode::$55 ← *((const nomodify byte*) form_vic_bg0_hi) << (byte) 4
  [207] (byte~) gfx_mode::$56 ← (byte~) gfx_mode::$55 | *((const nomodify byte*) form_vic_bg0_lo)
  [208] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR) ← (byte~) gfx_mode::$56
  [209] (byte~) gfx_mode::$57 ← *((const nomodify byte*) form_vic_bg1_hi) << (byte) 4
  [210] (byte~) gfx_mode::$58 ← (byte~) gfx_mode::$57 | *((const nomodify byte*) form_vic_bg1_lo)
  [211] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR1) ← (byte~) gfx_mode::$58
  [212] (byte~) gfx_mode::$59 ← *((const nomodify byte*) form_vic_bg2_hi) << (byte) 4
  [213] (byte~) gfx_mode::$60 ← (byte~) gfx_mode::$59 | *((const nomodify byte*) form_vic_bg2_lo)
  [214] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR2) ← (byte~) gfx_mode::$60
  [215] (byte~) gfx_mode::$61 ← *((const nomodify byte*) form_vic_bg3_hi) << (byte) 4
  [216] (byte~) gfx_mode::$62 ← (byte~) gfx_mode::$61 | *((const nomodify byte*) form_vic_bg3_lo)
  [217] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR3) ← (byte~) gfx_mode::$62
  [218] if(*((const nomodify byte*) form_dtv_palet)==(byte) 0) goto gfx_mode::@24
  to:gfx_mode::@23
gfx_mode::@23: scope:[gfx_mode]  from gfx_mode::@22 gfx_mode::@23
  [219] (byte) gfx_mode::j#2 ← phi( gfx_mode::@22/(byte) 0 gfx_mode::@23/(byte) gfx_mode::j#1 )
  [220] *((const nomodify byte*) DTV_PALETTE + (byte) gfx_mode::j#2) ← (byte) gfx_mode::j#2
  [221] (byte) gfx_mode::j#1 ← ++ (byte) gfx_mode::j#2
  [222] if((byte) gfx_mode::j#1!=(byte) $10) goto gfx_mode::@23
  to:gfx_mode::@25
gfx_mode::@25: scope:[gfx_mode]  from gfx_mode::@23 gfx_mode::@24 gfx_mode::@25 gfx_mode::@33
  [223] if(*((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER)!=(byte) $ff) goto gfx_mode::@25
  to:gfx_mode::@26
gfx_mode::@26: scope:[gfx_mode]  from gfx_mode::@25
  [224] phi()
  [225] call keyboard_event_scan 
  to:gfx_mode::@32
gfx_mode::@32: scope:[gfx_mode]  from gfx_mode::@26
  [226] phi()
  [227] call keyboard_event_get 
  [228] (byte) keyboard_event_get::return#3 ← (byte) keyboard_event_get::return#2
  to:gfx_mode::@33
gfx_mode::@33: scope:[gfx_mode]  from gfx_mode::@32
  [229] (byte) gfx_mode::keyboard_event#0 ← (byte) keyboard_event_get::return#3
  [230] if((byte) gfx_mode::keyboard_event#0==(const nomodify byte) KEY_SPACE) goto gfx_mode::@return
  to:gfx_mode::@25
gfx_mode::@return: scope:[gfx_mode]  from gfx_mode::@33
  [231] return 
  to:@return
gfx_mode::@24: scope:[gfx_mode]  from gfx_mode::@22 gfx_mode::@24
  [232] (byte) gfx_mode::i#2 ← phi( gfx_mode::@22/(byte) 0 gfx_mode::@24/(byte) gfx_mode::i#1 )
  [233] *((const nomodify byte*) DTV_PALETTE + (byte) gfx_mode::i#2) ← *((const byte*) DTV_PALETTE_DEFAULT + (byte) gfx_mode::i#2)
  [234] (byte) gfx_mode::i#1 ← ++ (byte) gfx_mode::i#2
  [235] if((byte) gfx_mode::i#1!=(byte) $10) goto gfx_mode::@24
  to:gfx_mode::@25

(void()) gfx_init_screen0()
gfx_init_screen0: scope:[gfx_init_screen0]  from gfx_init
  [236] phi()
  to:gfx_init_screen0::@1
gfx_init_screen0::@1: scope:[gfx_init_screen0]  from gfx_init_screen0 gfx_init_screen0::@3
  [237] (byte*) gfx_init_screen0::ch#3 ← phi( gfx_init_screen0/(const nomodify byte*) VIC_SCREEN0 gfx_init_screen0::@3/(byte*) gfx_init_screen0::ch#1 )
  [237] (byte) gfx_init_screen0::cy#4 ← phi( gfx_init_screen0/(byte) 0 gfx_init_screen0::@3/(byte) gfx_init_screen0::cy#1 )
  to:gfx_init_screen0::@2
gfx_init_screen0::@2: scope:[gfx_init_screen0]  from gfx_init_screen0::@1 gfx_init_screen0::@2
  [238] (byte*) gfx_init_screen0::ch#2 ← phi( gfx_init_screen0::@1/(byte*) gfx_init_screen0::ch#3 gfx_init_screen0::@2/(byte*) gfx_init_screen0::ch#1 )
  [238] (byte) gfx_init_screen0::cx#2 ← phi( gfx_init_screen0::@1/(byte) 0 gfx_init_screen0::@2/(byte) gfx_init_screen0::cx#1 )
  [239] (byte~) gfx_init_screen0::$0 ← (byte) gfx_init_screen0::cy#4 & (byte) $f
  [240] (byte~) gfx_init_screen0::$1 ← (byte~) gfx_init_screen0::$0 << (byte) 4
  [241] (byte~) gfx_init_screen0::$2 ← (byte) gfx_init_screen0::cx#2 & (byte) $f
  [242] (byte~) gfx_init_screen0::$3 ← (byte~) gfx_init_screen0::$1 | (byte~) gfx_init_screen0::$2
  [243] *((byte*) gfx_init_screen0::ch#2) ← (byte~) gfx_init_screen0::$3
  [244] (byte*) gfx_init_screen0::ch#1 ← ++ (byte*) gfx_init_screen0::ch#2
  [245] (byte) gfx_init_screen0::cx#1 ← ++ (byte) gfx_init_screen0::cx#2
  [246] if((byte) gfx_init_screen0::cx#1!=(byte) $28) goto gfx_init_screen0::@2
  to:gfx_init_screen0::@3
gfx_init_screen0::@3: scope:[gfx_init_screen0]  from gfx_init_screen0::@2
  [247] (byte) gfx_init_screen0::cy#1 ← ++ (byte) gfx_init_screen0::cy#4
  [248] if((byte) gfx_init_screen0::cy#1!=(byte) $19) goto gfx_init_screen0::@1
  to:gfx_init_screen0::@return
gfx_init_screen0::@return: scope:[gfx_init_screen0]  from gfx_init_screen0::@3
  [249] return 
  to:@return

(void()) gfx_init_screen1()
gfx_init_screen1: scope:[gfx_init_screen1]  from gfx_init::@1
  [250] phi()
  to:gfx_init_screen1::@1
gfx_init_screen1::@1: scope:[gfx_init_screen1]  from gfx_init_screen1 gfx_init_screen1::@3
  [251] (byte*) gfx_init_screen1::ch#3 ← phi( gfx_init_screen1/(const nomodify byte*) VIC_SCREEN1 gfx_init_screen1::@3/(byte*) gfx_init_screen1::ch#1 )
  [251] (byte) gfx_init_screen1::cy#4 ← phi( gfx_init_screen1/(byte) 0 gfx_init_screen1::@3/(byte) gfx_init_screen1::cy#1 )
  to:gfx_init_screen1::@2
gfx_init_screen1::@2: scope:[gfx_init_screen1]  from gfx_init_screen1::@1 gfx_init_screen1::@2
  [252] (byte*) gfx_init_screen1::ch#2 ← phi( gfx_init_screen1::@1/(byte*) gfx_init_screen1::ch#3 gfx_init_screen1::@2/(byte*) gfx_init_screen1::ch#1 )
  [252] (byte) gfx_init_screen1::cx#2 ← phi( gfx_init_screen1::@1/(byte) 0 gfx_init_screen1::@2/(byte) gfx_init_screen1::cx#1 )
  [253] (byte~) gfx_init_screen1::$0 ← (byte) gfx_init_screen1::cx#2 + (byte) gfx_init_screen1::cy#4
  [254] (byte~) gfx_init_screen1::$1 ← (byte~) gfx_init_screen1::$0 & (byte) $f
  [255] *((byte*) gfx_init_screen1::ch#2) ← (byte~) gfx_init_screen1::$1
  [256] (byte*) gfx_init_screen1::ch#1 ← ++ (byte*) gfx_init_screen1::ch#2
  [257] (byte) gfx_init_screen1::cx#1 ← ++ (byte) gfx_init_screen1::cx#2
  [258] if((byte) gfx_init_screen1::cx#1!=(byte) $28) goto gfx_init_screen1::@2
  to:gfx_init_screen1::@3
gfx_init_screen1::@3: scope:[gfx_init_screen1]  from gfx_init_screen1::@2
  [259] (byte) gfx_init_screen1::cy#1 ← ++ (byte) gfx_init_screen1::cy#4
  [260] if((byte) gfx_init_screen1::cy#1!=(byte) $19) goto gfx_init_screen1::@1
  to:gfx_init_screen1::@return
gfx_init_screen1::@return: scope:[gfx_init_screen1]  from gfx_init_screen1::@3
  [261] return 
  to:@return

(void()) gfx_init_screen2()
gfx_init_screen2: scope:[gfx_init_screen2]  from gfx_init::@2
  [262] phi()
  to:gfx_init_screen2::@1
gfx_init_screen2::@1: scope:[gfx_init_screen2]  from gfx_init_screen2 gfx_init_screen2::@3
  [263] (byte*) gfx_init_screen2::ch#3 ← phi( gfx_init_screen2/(const nomodify byte*) VIC_SCREEN2 gfx_init_screen2::@3/(byte*) gfx_init_screen2::ch#1 )
  [263] (byte) gfx_init_screen2::cy#4 ← phi( gfx_init_screen2/(byte) 0 gfx_init_screen2::@3/(byte) gfx_init_screen2::cy#1 )
  to:gfx_init_screen2::@2
gfx_init_screen2::@2: scope:[gfx_init_screen2]  from gfx_init_screen2::@1 gfx_init_screen2::@2
  [264] (byte*) gfx_init_screen2::ch#2 ← phi( gfx_init_screen2::@1/(byte*) gfx_init_screen2::ch#3 gfx_init_screen2::@2/(byte*) gfx_init_screen2::ch#1 )
  [264] (byte) gfx_init_screen2::cx#2 ← phi( gfx_init_screen2::@1/(byte) 0 gfx_init_screen2::@2/(byte) gfx_init_screen2::cx#1 )
  [265] (byte~) gfx_init_screen2::$0 ← (byte) gfx_init_screen2::cx#2 + (byte) gfx_init_screen2::cy#4
  [266] (byte) gfx_init_screen2::col#0 ← (byte~) gfx_init_screen2::$0 & (byte) $f
  [267] (byte) gfx_init_screen2::col2#0 ← (byte) $f - (byte) gfx_init_screen2::col#0
  [268] (byte~) gfx_init_screen2::$3 ← (byte) gfx_init_screen2::col#0 << (byte) 4
  [269] (byte~) gfx_init_screen2::$4 ← (byte~) gfx_init_screen2::$3 | (byte) gfx_init_screen2::col2#0
  [270] *((byte*) gfx_init_screen2::ch#2) ← (byte~) gfx_init_screen2::$4
  [271] (byte*) gfx_init_screen2::ch#1 ← ++ (byte*) gfx_init_screen2::ch#2
  [272] (byte) gfx_init_screen2::cx#1 ← ++ (byte) gfx_init_screen2::cx#2
  [273] if((byte) gfx_init_screen2::cx#1!=(byte) $28) goto gfx_init_screen2::@2
  to:gfx_init_screen2::@3
gfx_init_screen2::@3: scope:[gfx_init_screen2]  from gfx_init_screen2::@2
  [274] (byte) gfx_init_screen2::cy#1 ← ++ (byte) gfx_init_screen2::cy#4
  [275] if((byte) gfx_init_screen2::cy#1!=(byte) $19) goto gfx_init_screen2::@1
  to:gfx_init_screen2::@return
gfx_init_screen2::@return: scope:[gfx_init_screen2]  from gfx_init_screen2::@3
  [276] return 
  to:@return

(void()) gfx_init_screen3()
gfx_init_screen3: scope:[gfx_init_screen3]  from gfx_init::@3
  [277] phi()
  to:gfx_init_screen3::@1
gfx_init_screen3::@1: scope:[gfx_init_screen3]  from gfx_init_screen3 gfx_init_screen3::@3
  [278] (byte*) gfx_init_screen3::ch#3 ← phi( gfx_init_screen3/(const nomodify byte*) VIC_SCREEN3 gfx_init_screen3::@3/(byte*) gfx_init_screen3::ch#1 )
  [278] (byte) gfx_init_screen3::cy#4 ← phi( gfx_init_screen3/(byte) 0 gfx_init_screen3::@3/(byte) gfx_init_screen3::cy#1 )
  to:gfx_init_screen3::@2
gfx_init_screen3::@2: scope:[gfx_init_screen3]  from gfx_init_screen3::@1 gfx_init_screen3::@2
  [279] (byte*) gfx_init_screen3::ch#2 ← phi( gfx_init_screen3::@1/(byte*) gfx_init_screen3::ch#3 gfx_init_screen3::@2/(byte*) gfx_init_screen3::ch#1 )
  [279] (byte) gfx_init_screen3::cx#2 ← phi( gfx_init_screen3::@1/(byte) 0 gfx_init_screen3::@2/(byte) gfx_init_screen3::cx#1 )
  [280] (byte~) gfx_init_screen3::$0 ← (byte) gfx_init_screen3::cx#2 & (byte) 3
  [281] (byte~) gfx_init_screen3::$1 ← (byte~) gfx_init_screen3::$0 << (byte) 4
  [282] (byte~) gfx_init_screen3::$2 ← (byte) gfx_init_screen3::cy#4 & (byte) 3
  [283] (byte~) gfx_init_screen3::$3 ← (byte~) gfx_init_screen3::$1 | (byte~) gfx_init_screen3::$2
  [284] *((byte*) gfx_init_screen3::ch#2) ← (byte~) gfx_init_screen3::$3
  [285] (byte*) gfx_init_screen3::ch#1 ← ++ (byte*) gfx_init_screen3::ch#2
  [286] (byte) gfx_init_screen3::cx#1 ← ++ (byte) gfx_init_screen3::cx#2
  [287] if((byte) gfx_init_screen3::cx#1!=(byte) $28) goto gfx_init_screen3::@2
  to:gfx_init_screen3::@3
gfx_init_screen3::@3: scope:[gfx_init_screen3]  from gfx_init_screen3::@2
  [288] (byte) gfx_init_screen3::cy#1 ← ++ (byte) gfx_init_screen3::cy#4
  [289] if((byte) gfx_init_screen3::cy#1!=(byte) $19) goto gfx_init_screen3::@1
  to:gfx_init_screen3::@return
gfx_init_screen3::@return: scope:[gfx_init_screen3]  from gfx_init_screen3::@3
  [290] return 
  to:@return

(void()) gfx_init_screen4()
gfx_init_screen4: scope:[gfx_init_screen4]  from gfx_init::@4
  [291] phi()
  to:gfx_init_screen4::@1
gfx_init_screen4::@1: scope:[gfx_init_screen4]  from gfx_init_screen4 gfx_init_screen4::@3
  [292] (byte) gfx_init_screen4::cy#4 ← phi( gfx_init_screen4/(byte) 0 gfx_init_screen4::@3/(byte) gfx_init_screen4::cy#1 )
  [292] (byte*) gfx_init_screen4::ch#3 ← phi( gfx_init_screen4/(const nomodify byte*) VIC_SCREEN4 gfx_init_screen4::@3/(byte*) gfx_init_screen4::ch#1 )
  to:gfx_init_screen4::@2
gfx_init_screen4::@2: scope:[gfx_init_screen4]  from gfx_init_screen4::@1 gfx_init_screen4::@2
  [293] (byte) gfx_init_screen4::cx#2 ← phi( gfx_init_screen4::@1/(byte) 0 gfx_init_screen4::@2/(byte) gfx_init_screen4::cx#1 )
  [293] (byte*) gfx_init_screen4::ch#2 ← phi( gfx_init_screen4::@1/(byte*) gfx_init_screen4::ch#3 gfx_init_screen4::@2/(byte*) gfx_init_screen4::ch#1 )
  [294] *((byte*) gfx_init_screen4::ch#2) ← (byte) 0
  [295] (byte*) gfx_init_screen4::ch#1 ← ++ (byte*) gfx_init_screen4::ch#2
  [296] (byte) gfx_init_screen4::cx#1 ← ++ (byte) gfx_init_screen4::cx#2
  [297] if((byte) gfx_init_screen4::cx#1!=(byte) $28) goto gfx_init_screen4::@2
  to:gfx_init_screen4::@3
gfx_init_screen4::@3: scope:[gfx_init_screen4]  from gfx_init_screen4::@2
  [298] (byte) gfx_init_screen4::cy#1 ← ++ (byte) gfx_init_screen4::cy#4
  [299] if((byte) gfx_init_screen4::cy#1!=(byte) $19) goto gfx_init_screen4::@1
  to:gfx_init_screen4::@return
gfx_init_screen4::@return: scope:[gfx_init_screen4]  from gfx_init_screen4::@3
  [300] return 
  to:@return

(void()) gfx_init_charset()
gfx_init_charset: scope:[gfx_init_charset]  from gfx_init::@5
  [301] *((const nomodify byte*) PROCPORT) ← (byte) $32
  to:gfx_init_charset::@1
gfx_init_charset::@1: scope:[gfx_init_charset]  from gfx_init_charset gfx_init_charset::@3
  [302] (byte) gfx_init_charset::c#4 ← phi( gfx_init_charset/(byte) 0 gfx_init_charset::@3/(byte) gfx_init_charset::c#1 )
  [302] (byte*) gfx_init_charset::charset#3 ← phi( gfx_init_charset/(const nomodify byte*) VIC_CHARSET_ROM gfx_init_charset::@3/(byte*) gfx_init_charset::charset#1 )
  [302] (byte*) gfx_init_charset::chargen#3 ← phi( gfx_init_charset/(const nomodify byte*) CHARGEN gfx_init_charset::@3/(byte*) gfx_init_charset::chargen#1 )
  to:gfx_init_charset::@2
gfx_init_charset::@2: scope:[gfx_init_charset]  from gfx_init_charset::@1 gfx_init_charset::@2
  [303] (byte) gfx_init_charset::l#2 ← phi( gfx_init_charset::@1/(byte) 0 gfx_init_charset::@2/(byte) gfx_init_charset::l#1 )
  [303] (byte*) gfx_init_charset::charset#2 ← phi( gfx_init_charset::@1/(byte*) gfx_init_charset::charset#3 gfx_init_charset::@2/(byte*) gfx_init_charset::charset#1 )
  [303] (byte*) gfx_init_charset::chargen#2 ← phi( gfx_init_charset::@1/(byte*) gfx_init_charset::chargen#3 gfx_init_charset::@2/(byte*) gfx_init_charset::chargen#1 )
  [304] *((byte*) gfx_init_charset::charset#2) ← *((byte*) gfx_init_charset::chargen#2)
  [305] (byte*) gfx_init_charset::charset#1 ← ++ (byte*) gfx_init_charset::charset#2
  [306] (byte*) gfx_init_charset::chargen#1 ← ++ (byte*) gfx_init_charset::chargen#2
  [307] (byte) gfx_init_charset::l#1 ← ++ (byte) gfx_init_charset::l#2
  [308] if((byte) gfx_init_charset::l#1!=(byte) 8) goto gfx_init_charset::@2
  to:gfx_init_charset::@3
gfx_init_charset::@3: scope:[gfx_init_charset]  from gfx_init_charset::@2
  [309] (byte) gfx_init_charset::c#1 ← ++ (byte) gfx_init_charset::c#4
  [310] if((byte) gfx_init_charset::c#1!=(byte) 0) goto gfx_init_charset::@1
  to:gfx_init_charset::@4
gfx_init_charset::@4: scope:[gfx_init_charset]  from gfx_init_charset::@3
  [311] *((const nomodify byte*) PROCPORT) ← (byte) $37
  to:gfx_init_charset::@return
gfx_init_charset::@return: scope:[gfx_init_charset]  from gfx_init_charset::@4
  [312] return 
  to:@return

(void()) gfx_init_vic_bitmap()
gfx_init_vic_bitmap: scope:[gfx_init_vic_bitmap]  from gfx_init::@6
  [313] phi()
  [314] call bitmap_init 
  to:gfx_init_vic_bitmap::@3
gfx_init_vic_bitmap::@3: scope:[gfx_init_vic_bitmap]  from gfx_init_vic_bitmap
  [315] phi()
  [316] call bitmap_clear 
  to:gfx_init_vic_bitmap::@1
gfx_init_vic_bitmap::@1: scope:[gfx_init_vic_bitmap]  from gfx_init_vic_bitmap::@3 gfx_init_vic_bitmap::@4
  [317] (byte) gfx_init_vic_bitmap::l#2 ← phi( gfx_init_vic_bitmap::@3/(byte) 0 gfx_init_vic_bitmap::@4/(byte) gfx_init_vic_bitmap::l#1 )
  [318] if((byte) gfx_init_vic_bitmap::l#2<(const byte) gfx_init_vic_bitmap::lines_cnt) goto gfx_init_vic_bitmap::@2
  to:gfx_init_vic_bitmap::@return
gfx_init_vic_bitmap::@return: scope:[gfx_init_vic_bitmap]  from gfx_init_vic_bitmap::@1
  [319] return 
  to:@return
gfx_init_vic_bitmap::@2: scope:[gfx_init_vic_bitmap]  from gfx_init_vic_bitmap::@1
  [320] (byte) bitmap_line::x0#0 ← *((const byte*) gfx_init_vic_bitmap::lines_x + (byte) gfx_init_vic_bitmap::l#2)
  [321] (byte) bitmap_line::x1#0 ← *((const byte*) gfx_init_vic_bitmap::lines_x+(byte) 1 + (byte) gfx_init_vic_bitmap::l#2)
  [322] (byte) bitmap_line::y0#0 ← *((const byte*) gfx_init_vic_bitmap::lines_y + (byte) gfx_init_vic_bitmap::l#2)
  [323] (byte) bitmap_line::y1#0 ← *((const byte*) gfx_init_vic_bitmap::lines_y+(byte) 1 + (byte) gfx_init_vic_bitmap::l#2)
  [324] call bitmap_line 
  to:gfx_init_vic_bitmap::@4
gfx_init_vic_bitmap::@4: scope:[gfx_init_vic_bitmap]  from gfx_init_vic_bitmap::@2
  [325] (byte) gfx_init_vic_bitmap::l#1 ← ++ (byte) gfx_init_vic_bitmap::l#2
  to:gfx_init_vic_bitmap::@1

(void()) gfx_init_plane_8bppchunky()
gfx_init_plane_8bppchunky: scope:[gfx_init_plane_8bppchunky]  from gfx_init::@7
  [326] phi()
  [327] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_8bppchunky::@1
gfx_init_plane_8bppchunky::@1: scope:[gfx_init_plane_8bppchunky]  from gfx_init_plane_8bppchunky gfx_init_plane_8bppchunky::@5
  [328] (byte) gfx_init_plane_8bppchunky::gfxbCpuBank#7 ← phi( gfx_init_plane_8bppchunky::@5/(byte) gfx_init_plane_8bppchunky::gfxbCpuBank#8 gfx_init_plane_8bppchunky/++(byte)(const nomodify dword) PLANE_8BPP_CHUNKY/(word) $4000 )
  [328] (byte) gfx_init_plane_8bppchunky::y#6 ← phi( gfx_init_plane_8bppchunky::@5/(byte) gfx_init_plane_8bppchunky::y#1 gfx_init_plane_8bppchunky/(byte) 0 )
  [328] (byte*) gfx_init_plane_8bppchunky::gfxb#5 ← phi( gfx_init_plane_8bppchunky::@5/(byte*) gfx_init_plane_8bppchunky::gfxb#1 gfx_init_plane_8bppchunky/(byte*) 16384 )
  to:gfx_init_plane_8bppchunky::@2
gfx_init_plane_8bppchunky::@2: scope:[gfx_init_plane_8bppchunky]  from gfx_init_plane_8bppchunky::@1 gfx_init_plane_8bppchunky::@3
  [329] (byte) gfx_init_plane_8bppchunky::gfxbCpuBank#4 ← phi( gfx_init_plane_8bppchunky::@1/(byte) gfx_init_plane_8bppchunky::gfxbCpuBank#7 gfx_init_plane_8bppchunky::@3/(byte) gfx_init_plane_8bppchunky::gfxbCpuBank#8 )
  [329] (word) gfx_init_plane_8bppchunky::x#2 ← phi( gfx_init_plane_8bppchunky::@1/(word) 0 gfx_init_plane_8bppchunky::@3/(word) gfx_init_plane_8bppchunky::x#1 )
  [329] (byte*) gfx_init_plane_8bppchunky::gfxb#3 ← phi( gfx_init_plane_8bppchunky::@1/(byte*) gfx_init_plane_8bppchunky::gfxb#5 gfx_init_plane_8bppchunky::@3/(byte*) gfx_init_plane_8bppchunky::gfxb#1 )
  [330] if((byte*) gfx_init_plane_8bppchunky::gfxb#3!=(word) $8000) goto gfx_init_plane_8bppchunky::@3
  to:gfx_init_plane_8bppchunky::@4
gfx_init_plane_8bppchunky::@4: scope:[gfx_init_plane_8bppchunky]  from gfx_init_plane_8bppchunky::@2
  [331] (byte) dtvSetCpuBankSegment1::cpuBankIdx#1 ← (byte) gfx_init_plane_8bppchunky::gfxbCpuBank#4
  [332] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_8bppchunky::@7
gfx_init_plane_8bppchunky::@7: scope:[gfx_init_plane_8bppchunky]  from gfx_init_plane_8bppchunky::@4
  [333] (byte) gfx_init_plane_8bppchunky::gfxbCpuBank#2 ← ++ (byte) gfx_init_plane_8bppchunky::gfxbCpuBank#4
  to:gfx_init_plane_8bppchunky::@3
gfx_init_plane_8bppchunky::@3: scope:[gfx_init_plane_8bppchunky]  from gfx_init_plane_8bppchunky::@2 gfx_init_plane_8bppchunky::@7
  [334] (byte) gfx_init_plane_8bppchunky::gfxbCpuBank#8 ← phi( gfx_init_plane_8bppchunky::@2/(byte) gfx_init_plane_8bppchunky::gfxbCpuBank#4 gfx_init_plane_8bppchunky::@7/(byte) gfx_init_plane_8bppchunky::gfxbCpuBank#2 )
  [334] (byte*) gfx_init_plane_8bppchunky::gfxb#4 ← phi( gfx_init_plane_8bppchunky::@2/(byte*) gfx_init_plane_8bppchunky::gfxb#3 gfx_init_plane_8bppchunky::@7/(byte*) 16384 )
  [335] (word~) gfx_init_plane_8bppchunky::$5 ← (word) gfx_init_plane_8bppchunky::x#2 + (byte) gfx_init_plane_8bppchunky::y#6
  [336] (byte) gfx_init_plane_8bppchunky::c#0 ← (byte)(word~) gfx_init_plane_8bppchunky::$5
  [337] *((byte*) gfx_init_plane_8bppchunky::gfxb#4) ← (byte) gfx_init_plane_8bppchunky::c#0
  [338] (byte*) gfx_init_plane_8bppchunky::gfxb#1 ← ++ (byte*) gfx_init_plane_8bppchunky::gfxb#4
  [339] (word) gfx_init_plane_8bppchunky::x#1 ← ++ (word) gfx_init_plane_8bppchunky::x#2
  [340] if((word) gfx_init_plane_8bppchunky::x#1!=(word) $140) goto gfx_init_plane_8bppchunky::@2
  to:gfx_init_plane_8bppchunky::@5
gfx_init_plane_8bppchunky::@5: scope:[gfx_init_plane_8bppchunky]  from gfx_init_plane_8bppchunky::@3
  [341] (byte) gfx_init_plane_8bppchunky::y#1 ← ++ (byte) gfx_init_plane_8bppchunky::y#6
  [342] if((byte) gfx_init_plane_8bppchunky::y#1!=(byte) $c8) goto gfx_init_plane_8bppchunky::@1
  to:gfx_init_plane_8bppchunky::@6
gfx_init_plane_8bppchunky::@6: scope:[gfx_init_plane_8bppchunky]  from gfx_init_plane_8bppchunky::@5
  [343] phi()
  [344] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_8bppchunky::@return
gfx_init_plane_8bppchunky::@return: scope:[gfx_init_plane_8bppchunky]  from gfx_init_plane_8bppchunky::@6
  [345] return 
  to:@return

(void()) gfx_init_plane_charset8()
gfx_init_plane_charset8: scope:[gfx_init_plane_charset8]  from gfx_init::@8
  [346] phi()
  [347] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_charset8::@9
gfx_init_plane_charset8::@9: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8
  [348] *((const nomodify byte*) PROCPORT) ← (const nomodify byte) PROCPORT_RAM_CHARROM
  to:gfx_init_plane_charset8::@1
gfx_init_plane_charset8::@1: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8::@7 gfx_init_plane_charset8::@9
  [349] (byte) gfx_init_plane_charset8::ch#8 ← phi( gfx_init_plane_charset8::@7/(byte) gfx_init_plane_charset8::ch#1 gfx_init_plane_charset8::@9/(byte) 0 )
  [349] (byte) gfx_init_plane_charset8::col#6 ← phi( gfx_init_plane_charset8::@7/(byte) gfx_init_plane_charset8::col#1 gfx_init_plane_charset8::@9/(byte) 0 )
  [349] (byte*) gfx_init_plane_charset8::gfxa#6 ← phi( gfx_init_plane_charset8::@7/(byte*) gfx_init_plane_charset8::gfxa#1 gfx_init_plane_charset8::@9/(byte*)(word) $4000 )
  [349] (byte*) gfx_init_plane_charset8::chargen#3 ← phi( gfx_init_plane_charset8::@7/(byte*) gfx_init_plane_charset8::chargen#1 gfx_init_plane_charset8::@9/(const nomodify byte*) CHARGEN )
  to:gfx_init_plane_charset8::@2
gfx_init_plane_charset8::@2: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8::@1 gfx_init_plane_charset8::@6
  [350] (byte) gfx_init_plane_charset8::cr#6 ← phi( gfx_init_plane_charset8::@1/(byte) 0 gfx_init_plane_charset8::@6/(byte) gfx_init_plane_charset8::cr#1 )
  [350] (byte) gfx_init_plane_charset8::col#5 ← phi( gfx_init_plane_charset8::@1/(byte) gfx_init_plane_charset8::col#6 gfx_init_plane_charset8::@6/(byte) gfx_init_plane_charset8::col#1 )
  [350] (byte*) gfx_init_plane_charset8::gfxa#5 ← phi( gfx_init_plane_charset8::@1/(byte*) gfx_init_plane_charset8::gfxa#6 gfx_init_plane_charset8::@6/(byte*) gfx_init_plane_charset8::gfxa#1 )
  [350] (byte*) gfx_init_plane_charset8::chargen#2 ← phi( gfx_init_plane_charset8::@1/(byte*) gfx_init_plane_charset8::chargen#3 gfx_init_plane_charset8::@6/(byte*) gfx_init_plane_charset8::chargen#1 )
  [351] (byte) gfx_init_plane_charset8::bits#0 ← *((byte*) gfx_init_plane_charset8::chargen#2)
  [352] (byte*) gfx_init_plane_charset8::chargen#1 ← ++ (byte*) gfx_init_plane_charset8::chargen#2
  to:gfx_init_plane_charset8::@3
gfx_init_plane_charset8::@3: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8::@2 gfx_init_plane_charset8::@4
  [353] (byte) gfx_init_plane_charset8::cp#2 ← phi( gfx_init_plane_charset8::@2/(byte) 0 gfx_init_plane_charset8::@4/(byte) gfx_init_plane_charset8::cp#1 )
  [353] (byte) gfx_init_plane_charset8::col#2 ← phi( gfx_init_plane_charset8::@2/(byte) gfx_init_plane_charset8::col#5 gfx_init_plane_charset8::@4/(byte) gfx_init_plane_charset8::col#1 )
  [353] (byte*) gfx_init_plane_charset8::gfxa#2 ← phi( gfx_init_plane_charset8::@2/(byte*) gfx_init_plane_charset8::gfxa#5 gfx_init_plane_charset8::@4/(byte*) gfx_init_plane_charset8::gfxa#1 )
  [353] (byte) gfx_init_plane_charset8::bits#2 ← phi( gfx_init_plane_charset8::@2/(byte) gfx_init_plane_charset8::bits#0 gfx_init_plane_charset8::@4/(byte) gfx_init_plane_charset8::bits#1 )
  [354] (byte~) gfx_init_plane_charset8::$2 ← (byte) gfx_init_plane_charset8::bits#2 & (byte) $80
  [355] if((byte~) gfx_init_plane_charset8::$2==(byte) 0) goto gfx_init_plane_charset8::@4
  to:gfx_init_plane_charset8::@5
gfx_init_plane_charset8::@5: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8::@3
  [356] (byte) gfx_init_plane_charset8::c#3 ← (byte) gfx_init_plane_charset8::col#2
  to:gfx_init_plane_charset8::@4
gfx_init_plane_charset8::@4: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8::@3 gfx_init_plane_charset8::@5
  [357] (byte) gfx_init_plane_charset8::c#2 ← phi( gfx_init_plane_charset8::@3/(byte) 0 gfx_init_plane_charset8::@5/(byte) gfx_init_plane_charset8::c#3 )
  [358] *((byte*) gfx_init_plane_charset8::gfxa#2) ← (byte) gfx_init_plane_charset8::c#2
  [359] (byte*) gfx_init_plane_charset8::gfxa#1 ← ++ (byte*) gfx_init_plane_charset8::gfxa#2
  [360] (byte) gfx_init_plane_charset8::bits#1 ← (byte) gfx_init_plane_charset8::bits#2 << (byte) 1
  [361] (byte) gfx_init_plane_charset8::col#1 ← ++ (byte) gfx_init_plane_charset8::col#2
  [362] (byte) gfx_init_plane_charset8::cp#1 ← ++ (byte) gfx_init_plane_charset8::cp#2
  [363] if((byte) gfx_init_plane_charset8::cp#1!=(byte) 8) goto gfx_init_plane_charset8::@3
  to:gfx_init_plane_charset8::@6
gfx_init_plane_charset8::@6: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8::@4
  [364] (byte) gfx_init_plane_charset8::cr#1 ← ++ (byte) gfx_init_plane_charset8::cr#6
  [365] if((byte) gfx_init_plane_charset8::cr#1!=(byte) 8) goto gfx_init_plane_charset8::@2
  to:gfx_init_plane_charset8::@7
gfx_init_plane_charset8::@7: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8::@6
  [366] (byte) gfx_init_plane_charset8::ch#1 ← ++ (byte) gfx_init_plane_charset8::ch#8
  [367] if((byte) gfx_init_plane_charset8::ch#1!=(byte) 0) goto gfx_init_plane_charset8::@1
  to:gfx_init_plane_charset8::@8
gfx_init_plane_charset8::@8: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8::@7
  [368] *((const nomodify byte*) PROCPORT) ← (const nomodify byte) PROCPORT_RAM_IO
  [369] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_charset8::@return
gfx_init_plane_charset8::@return: scope:[gfx_init_plane_charset8]  from gfx_init_plane_charset8::@8
  [370] return 
  to:@return

(void()) gfx_init_plane_horisontal()
gfx_init_plane_horisontal: scope:[gfx_init_plane_horisontal]  from gfx_init::@9
  [371] phi()
  [372] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_horisontal::@1
gfx_init_plane_horisontal::@1: scope:[gfx_init_plane_horisontal]  from gfx_init_plane_horisontal gfx_init_plane_horisontal::@6
  [373] (byte*) gfx_init_plane_horisontal::gfxa#6 ← phi( gfx_init_plane_horisontal::@6/(byte*) gfx_init_plane_horisontal::gfxa#7 gfx_init_plane_horisontal/(byte*)(word) $4000 )
  [373] (byte) gfx_init_plane_horisontal::ay#4 ← phi( gfx_init_plane_horisontal::@6/(byte) gfx_init_plane_horisontal::ay#1 gfx_init_plane_horisontal/(byte) 0 )
  to:gfx_init_plane_horisontal::@2
gfx_init_plane_horisontal::@2: scope:[gfx_init_plane_horisontal]  from gfx_init_plane_horisontal::@1 gfx_init_plane_horisontal::@4
  [374] (byte) gfx_init_plane_horisontal::ax#2 ← phi( gfx_init_plane_horisontal::@1/(byte) 0 gfx_init_plane_horisontal::@4/(byte) gfx_init_plane_horisontal::ax#1 )
  [374] (byte*) gfx_init_plane_horisontal::gfxa#3 ← phi( gfx_init_plane_horisontal::@1/(byte*) gfx_init_plane_horisontal::gfxa#6 gfx_init_plane_horisontal::@4/(byte*) gfx_init_plane_horisontal::gfxa#7 )
  [375] (byte~) gfx_init_plane_horisontal::$2 ← (byte) gfx_init_plane_horisontal::ay#4 & (byte) 4
  [376] if((byte~) gfx_init_plane_horisontal::$2==(byte) 0) goto gfx_init_plane_horisontal::@3
  to:gfx_init_plane_horisontal::@5
gfx_init_plane_horisontal::@5: scope:[gfx_init_plane_horisontal]  from gfx_init_plane_horisontal::@2
  [377] *((byte*) gfx_init_plane_horisontal::gfxa#3) ← (byte) $ff
  [378] (byte*) gfx_init_plane_horisontal::gfxa#2 ← ++ (byte*) gfx_init_plane_horisontal::gfxa#3
  to:gfx_init_plane_horisontal::@4
gfx_init_plane_horisontal::@4: scope:[gfx_init_plane_horisontal]  from gfx_init_plane_horisontal::@3 gfx_init_plane_horisontal::@5
  [379] (byte*) gfx_init_plane_horisontal::gfxa#7 ← phi( gfx_init_plane_horisontal::@3/(byte*) gfx_init_plane_horisontal::gfxa#1 gfx_init_plane_horisontal::@5/(byte*) gfx_init_plane_horisontal::gfxa#2 )
  [380] (byte) gfx_init_plane_horisontal::ax#1 ← ++ (byte) gfx_init_plane_horisontal::ax#2
  [381] if((byte) gfx_init_plane_horisontal::ax#1!=(byte) $28) goto gfx_init_plane_horisontal::@2
  to:gfx_init_plane_horisontal::@6
gfx_init_plane_horisontal::@6: scope:[gfx_init_plane_horisontal]  from gfx_init_plane_horisontal::@4
  [382] (byte) gfx_init_plane_horisontal::ay#1 ← ++ (byte) gfx_init_plane_horisontal::ay#4
  [383] if((byte) gfx_init_plane_horisontal::ay#1!=(byte) $c8) goto gfx_init_plane_horisontal::@1
  to:gfx_init_plane_horisontal::@7
gfx_init_plane_horisontal::@7: scope:[gfx_init_plane_horisontal]  from gfx_init_plane_horisontal::@6
  [384] phi()
  [385] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_horisontal::@return
gfx_init_plane_horisontal::@return: scope:[gfx_init_plane_horisontal]  from gfx_init_plane_horisontal::@7
  [386] return 
  to:@return
gfx_init_plane_horisontal::@3: scope:[gfx_init_plane_horisontal]  from gfx_init_plane_horisontal::@2
  [387] *((byte*) gfx_init_plane_horisontal::gfxa#3) ← (byte) 0
  [388] (byte*) gfx_init_plane_horisontal::gfxa#1 ← ++ (byte*) gfx_init_plane_horisontal::gfxa#3
  to:gfx_init_plane_horisontal::@4

(void()) gfx_init_plane_vertical()
gfx_init_plane_vertical: scope:[gfx_init_plane_vertical]  from gfx_init::@10
  [389] phi()
  [390] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_vertical::@1
gfx_init_plane_vertical::@1: scope:[gfx_init_plane_vertical]  from gfx_init_plane_vertical gfx_init_plane_vertical::@3
  [391] (byte) gfx_init_plane_vertical::by#4 ← phi( gfx_init_plane_vertical::@3/(byte) gfx_init_plane_vertical::by#1 gfx_init_plane_vertical/(byte) 0 )
  [391] (byte*) gfx_init_plane_vertical::gfxb#3 ← phi( gfx_init_plane_vertical::@3/(byte*) gfx_init_plane_vertical::gfxb#1 gfx_init_plane_vertical/(byte*)(word) $4000+(const nomodify dword) PLANE_VERTICAL&(word) $3fff )
  to:gfx_init_plane_vertical::@2
gfx_init_plane_vertical::@2: scope:[gfx_init_plane_vertical]  from gfx_init_plane_vertical::@1 gfx_init_plane_vertical::@2
  [392] (byte) gfx_init_plane_vertical::bx#2 ← phi( gfx_init_plane_vertical::@1/(byte) 0 gfx_init_plane_vertical::@2/(byte) gfx_init_plane_vertical::bx#1 )
  [392] (byte*) gfx_init_plane_vertical::gfxb#2 ← phi( gfx_init_plane_vertical::@1/(byte*) gfx_init_plane_vertical::gfxb#3 gfx_init_plane_vertical::@2/(byte*) gfx_init_plane_vertical::gfxb#1 )
  [393] *((byte*) gfx_init_plane_vertical::gfxb#2) ← (byte) $f
  [394] (byte*) gfx_init_plane_vertical::gfxb#1 ← ++ (byte*) gfx_init_plane_vertical::gfxb#2
  [395] (byte) gfx_init_plane_vertical::bx#1 ← ++ (byte) gfx_init_plane_vertical::bx#2
  [396] if((byte) gfx_init_plane_vertical::bx#1!=(byte) $28) goto gfx_init_plane_vertical::@2
  to:gfx_init_plane_vertical::@3
gfx_init_plane_vertical::@3: scope:[gfx_init_plane_vertical]  from gfx_init_plane_vertical::@2
  [397] (byte) gfx_init_plane_vertical::by#1 ← ++ (byte) gfx_init_plane_vertical::by#4
  [398] if((byte) gfx_init_plane_vertical::by#1!=(byte) $c8) goto gfx_init_plane_vertical::@1
  to:gfx_init_plane_vertical::@4
gfx_init_plane_vertical::@4: scope:[gfx_init_plane_vertical]  from gfx_init_plane_vertical::@3
  [399] phi()
  [400] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_vertical::@return
gfx_init_plane_vertical::@return: scope:[gfx_init_plane_vertical]  from gfx_init_plane_vertical::@4
  [401] return 
  to:@return

(void()) gfx_init_plane_horisontal2()
gfx_init_plane_horisontal2: scope:[gfx_init_plane_horisontal2]  from gfx_init::@11
  [402] phi()
  [403] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_horisontal2::@1
gfx_init_plane_horisontal2::@1: scope:[gfx_init_plane_horisontal2]  from gfx_init_plane_horisontal2 gfx_init_plane_horisontal2::@3
  [404] (byte*) gfx_init_plane_horisontal2::gfxa#3 ← phi( gfx_init_plane_horisontal2::@3/(byte*) gfx_init_plane_horisontal2::gfxa#1 gfx_init_plane_horisontal2/(byte*)(word) $4000 )
  [404] (byte) gfx_init_plane_horisontal2::ay#4 ← phi( gfx_init_plane_horisontal2::@3/(byte) gfx_init_plane_horisontal2::ay#1 gfx_init_plane_horisontal2/(byte) 0 )
  to:gfx_init_plane_horisontal2::@2
gfx_init_plane_horisontal2::@2: scope:[gfx_init_plane_horisontal2]  from gfx_init_plane_horisontal2::@1 gfx_init_plane_horisontal2::@2
  [405] (byte) gfx_init_plane_horisontal2::ax#2 ← phi( gfx_init_plane_horisontal2::@1/(byte) 0 gfx_init_plane_horisontal2::@2/(byte) gfx_init_plane_horisontal2::ax#1 )
  [405] (byte*) gfx_init_plane_horisontal2::gfxa#2 ← phi( gfx_init_plane_horisontal2::@1/(byte*) gfx_init_plane_horisontal2::gfxa#3 gfx_init_plane_horisontal2::@2/(byte*) gfx_init_plane_horisontal2::gfxa#1 )
  [406] (byte~) gfx_init_plane_horisontal2::$2 ← (byte) gfx_init_plane_horisontal2::ay#4 >> (byte) 1
  [407] (byte) gfx_init_plane_horisontal2::row#0 ← (byte~) gfx_init_plane_horisontal2::$2 & (byte) 3
  [408] *((byte*) gfx_init_plane_horisontal2::gfxa#2) ← *((const byte*) gfx_init_plane_horisontal2::row_bitmask + (byte) gfx_init_plane_horisontal2::row#0)
  [409] (byte*) gfx_init_plane_horisontal2::gfxa#1 ← ++ (byte*) gfx_init_plane_horisontal2::gfxa#2
  [410] (byte) gfx_init_plane_horisontal2::ax#1 ← ++ (byte) gfx_init_plane_horisontal2::ax#2
  [411] if((byte) gfx_init_plane_horisontal2::ax#1!=(byte) $28) goto gfx_init_plane_horisontal2::@2
  to:gfx_init_plane_horisontal2::@3
gfx_init_plane_horisontal2::@3: scope:[gfx_init_plane_horisontal2]  from gfx_init_plane_horisontal2::@2
  [412] (byte) gfx_init_plane_horisontal2::ay#1 ← ++ (byte) gfx_init_plane_horisontal2::ay#4
  [413] if((byte) gfx_init_plane_horisontal2::ay#1!=(byte) $c8) goto gfx_init_plane_horisontal2::@1
  to:gfx_init_plane_horisontal2::@4
gfx_init_plane_horisontal2::@4: scope:[gfx_init_plane_horisontal2]  from gfx_init_plane_horisontal2::@3
  [414] phi()
  [415] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_horisontal2::@return
gfx_init_plane_horisontal2::@return: scope:[gfx_init_plane_horisontal2]  from gfx_init_plane_horisontal2::@4
  [416] return 
  to:@return

(void()) gfx_init_plane_vertical2()
gfx_init_plane_vertical2: scope:[gfx_init_plane_vertical2]  from gfx_init::@12
  [417] phi()
  [418] call gfx_init_plane_fill 
  to:gfx_init_plane_vertical2::@return
gfx_init_plane_vertical2::@return: scope:[gfx_init_plane_vertical2]  from gfx_init_plane_vertical2
  [419] return 
  to:@return

(void()) gfx_init_plane_blank()
gfx_init_plane_blank: scope:[gfx_init_plane_blank]  from gfx_init::@13
  [420] phi()
  [421] call gfx_init_plane_fill 
  to:gfx_init_plane_blank::@return
gfx_init_plane_blank::@return: scope:[gfx_init_plane_blank]  from gfx_init_plane_blank
  [422] return 
  to:@return

(void()) gfx_init_plane_full()
gfx_init_plane_full: scope:[gfx_init_plane_full]  from gfx_init::@14
  [423] phi()
  [424] call gfx_init_plane_fill 
  to:gfx_init_plane_full::@return
gfx_init_plane_full::@return: scope:[gfx_init_plane_full]  from gfx_init_plane_full
  [425] return 
  to:@return

(void()) print_set_screen((byte*) print_set_screen::screen)
print_set_screen: scope:[print_set_screen]  from form_mode form_mode::@10
  [426] (byte*) print_set_screen::screen#2 ← phi( form_mode/(const nomodify byte*) COLS form_mode::@10/(const nomodify byte*) FORM_SCREEN )
  [427] (byte*) print_screen#0 ← (byte*) print_set_screen::screen#2
  to:print_set_screen::@return
print_set_screen::@return: scope:[print_set_screen]  from print_set_screen
  [428] return 
  to:@return

(void()) print_cls()
print_cls: scope:[print_cls]  from form_mode::@11 form_mode::@8
  [429] (void*) memset::str#0 ← (void*)(byte*) print_screen#0
  [430] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [431] return 
  to:@return

(void()) print_str_lines((byte*) print_str_lines::str)
print_str_lines: scope:[print_str_lines]  from form_mode::@12 form_mode::@9
  [432] (byte*) print_str_lines::str#5 ← phi( form_mode::@12/(const byte*) FORM_TEXT form_mode::@9/(const byte*) FORM_COLS )
  [433] (byte*) print_char_cursor#72 ← (byte*) print_screen#0
  to:print_str_lines::@1
print_str_lines::@1: scope:[print_str_lines]  from print_str_lines print_str_lines::@6
  [434] (byte*) print_line_cursor#1 ← phi( print_str_lines/(byte*) print_screen#0 print_str_lines::@6/(byte*) print_line_cursor#2 )
  [434] (byte*) print_char_cursor#2 ← phi( print_str_lines/(byte*) print_char_cursor#72 print_str_lines::@6/(byte*) print_char_cursor#73 )
  [434] (byte*) print_str_lines::str#3 ← phi( print_str_lines/(byte*) print_str_lines::str#5 print_str_lines::@6/(byte*) print_str_lines::str#0 )
  [435] if((byte) 0!=*((byte*) print_str_lines::str#3)) goto print_str_lines::@2
  to:print_str_lines::@return
print_str_lines::@return: scope:[print_str_lines]  from print_str_lines::@1
  [436] return 
  to:@return
print_str_lines::@2: scope:[print_str_lines]  from print_str_lines::@1 print_str_lines::@3
  [437] (byte*) print_char_cursor#43 ← phi( print_str_lines::@1/(byte*) print_char_cursor#2 print_str_lines::@3/(byte*) print_char_cursor#44 )
  [437] (byte*) print_str_lines::str#4 ← phi( print_str_lines::@1/(byte*) print_str_lines::str#3 print_str_lines::@3/(byte*) print_str_lines::str#0 )
  [438] (byte) print_str_lines::ch#0 ← *((byte*) print_str_lines::str#4)
  [439] (byte*) print_str_lines::str#0 ← ++ (byte*) print_str_lines::str#4
  [440] if((byte) 0==(byte) print_str_lines::ch#0) goto print_str_lines::@3
  to:print_str_lines::@4
print_str_lines::@4: scope:[print_str_lines]  from print_str_lines::@2
  [441] (byte) print_char::ch#0 ← (byte) print_str_lines::ch#0
  [442] call print_char 
  to:print_str_lines::@3
print_str_lines::@3: scope:[print_str_lines]  from print_str_lines::@2 print_str_lines::@4
  [443] (byte*) print_char_cursor#44 ← phi( print_str_lines::@2/(byte*) print_char_cursor#43 print_str_lines::@4/(byte*) print_char_cursor#29 )
  [444] if((byte) 0!=(byte) print_str_lines::ch#0) goto print_str_lines::@2
  to:print_str_lines::@5
print_str_lines::@5: scope:[print_str_lines]  from print_str_lines::@3
  [445] phi()
  [446] call print_ln 
  to:print_str_lines::@6
print_str_lines::@6: scope:[print_str_lines]  from print_str_lines::@5
  [447] (byte*) print_char_cursor#73 ← (byte*) print_line_cursor#2
  to:print_str_lines::@1

(void()) form_set_screen((byte*) form_set_screen::screen)
form_set_screen: scope:[form_set_screen]  from form_mode::@13
  [448] phi()
  to:form_set_screen::@1
form_set_screen::@1: scope:[form_set_screen]  from form_set_screen form_set_screen::@1
  [449] (byte) form_set_screen::y#2 ← phi( form_set_screen/(byte) 0 form_set_screen::@1/(byte) form_set_screen::y#1 )
  [449] (byte*) form_set_screen::line#2 ← phi( form_set_screen/(const nomodify byte*) FORM_SCREEN form_set_screen::@1/(byte*) form_set_screen::line#1 )
  [450] (byte~) form_set_screen::$0 ← < (byte*) form_set_screen::line#2
  [451] *((const byte*) form_line_lo + (byte) form_set_screen::y#2) ← (byte~) form_set_screen::$0
  [452] (byte~) form_set_screen::$1 ← > (byte*) form_set_screen::line#2
  [453] *((const byte*) form_line_hi + (byte) form_set_screen::y#2) ← (byte~) form_set_screen::$1
  [454] (byte*) form_set_screen::line#1 ← (byte*) form_set_screen::line#2 + (byte) $28
  [455] (byte) form_set_screen::y#1 ← ++ (byte) form_set_screen::y#2
  [456] if((byte) form_set_screen::y#1!=(byte) $19) goto form_set_screen::@1
  to:form_set_screen::@return
form_set_screen::@return: scope:[form_set_screen]  from form_set_screen::@1
  [457] return 
  to:@return

(void()) form_render_values()
form_render_values: scope:[form_render_values]  from form_mode::@14 form_mode::@18
  [458] phi()
  to:form_render_values::@1
form_render_values::@1: scope:[form_render_values]  from form_render_values form_render_values::@3
  [459] (byte) form_render_values::idx#2 ← phi( form_render_values/(byte) 0 form_render_values::@3/(byte) form_render_values::idx#1 )
  [460] if((byte) form_render_values::idx#2<(const byte) form_fields_cnt) goto form_render_values::@2
  to:form_render_values::@return
form_render_values::@return: scope:[form_render_values]  from form_render_values::@1
  [461] return 
  to:@return
form_render_values::@2: scope:[form_render_values]  from form_render_values::@1
  [462] (byte) form_field_ptr::field_idx#0 ← (byte) form_render_values::idx#2
  [463] call form_field_ptr 
  to:form_render_values::@3
form_render_values::@3: scope:[form_render_values]  from form_render_values::@2
  [464] *((byte*)(word) form_field_ptr::line#0 + (byte) form_field_ptr::x#0) ← *((const to_nomodify byte*) print_hextab + *((const byte*) form_fields_val + (byte) form_render_values::idx#2))
  [465] (byte) form_render_values::idx#1 ← ++ (byte) form_render_values::idx#2
  to:form_render_values::@1

(void()) render_preset_name((byte) render_preset_name::idx)
render_preset_name: scope:[render_preset_name]  from form_mode::@15 form_mode::@19
  [466] (byte) render_preset_name::idx#10 ← phi( form_mode::@15/(byte) render_preset_name::idx#0 form_mode::@19/(byte) render_preset_name::idx#1 )
  [467] if((byte) render_preset_name::idx#10==(byte) 0) goto render_preset_name::@2
  to:render_preset_name::@3
render_preset_name::@3: scope:[render_preset_name]  from render_preset_name
  [468] if((byte) render_preset_name::idx#10==(byte) 1) goto render_preset_name::@2
  to:render_preset_name::@4
render_preset_name::@4: scope:[render_preset_name]  from render_preset_name::@3
  [469] if((byte) render_preset_name::idx#10==(byte) 2) goto render_preset_name::@2
  to:render_preset_name::@5
render_preset_name::@5: scope:[render_preset_name]  from render_preset_name::@4
  [470] if((byte) render_preset_name::idx#10==(byte) 3) goto render_preset_name::@2
  to:render_preset_name::@6
render_preset_name::@6: scope:[render_preset_name]  from render_preset_name::@5
  [471] if((byte) render_preset_name::idx#10==(byte) 4) goto render_preset_name::@2
  to:render_preset_name::@7
render_preset_name::@7: scope:[render_preset_name]  from render_preset_name::@6
  [472] if((byte) render_preset_name::idx#10==(byte) 5) goto render_preset_name::@2
  to:render_preset_name::@8
render_preset_name::@8: scope:[render_preset_name]  from render_preset_name::@7
  [473] if((byte) render_preset_name::idx#10==(byte) 6) goto render_preset_name::@2
  to:render_preset_name::@9
render_preset_name::@9: scope:[render_preset_name]  from render_preset_name::@8
  [474] if((byte) render_preset_name::idx#10==(byte) 7) goto render_preset_name::@2
  to:render_preset_name::@10
render_preset_name::@10: scope:[render_preset_name]  from render_preset_name::@9
  [475] if((byte) render_preset_name::idx#10==(byte) 8) goto render_preset_name::@2
  to:render_preset_name::@11
render_preset_name::@11: scope:[render_preset_name]  from render_preset_name::@10
  [476] if((byte) render_preset_name::idx#10==(byte) 9) goto render_preset_name::@2
  to:render_preset_name::@12
render_preset_name::@12: scope:[render_preset_name]  from render_preset_name::@11
  [477] if((byte) render_preset_name::idx#10==(byte) $a) goto render_preset_name::@1
  to:render_preset_name::@2
render_preset_name::@1: scope:[render_preset_name]  from render_preset_name::@12
  [478] phi()
  to:render_preset_name::@2
render_preset_name::@2: scope:[render_preset_name]  from render_preset_name render_preset_name::@1 render_preset_name::@10 render_preset_name::@11 render_preset_name::@12 render_preset_name::@3 render_preset_name::@4 render_preset_name::@5 render_preset_name::@6 render_preset_name::@7 render_preset_name::@8 render_preset_name::@9
  [479] (byte*) render_preset_name::name#13 ← phi( render_preset_name/(const byte*) render_preset_name::name#1 render_preset_name::@11/(const byte*) render_preset_name::name#10 render_preset_name::@1/(const byte*) render_preset_name::name#11 render_preset_name::@3/(const byte*) render_preset_name::name#2 render_preset_name::@12/(const byte*) render_preset_name::name#1 render_preset_name::@4/(const byte*) render_preset_name::name#3 render_preset_name::@5/(const byte*) render_preset_name::name#4 render_preset_name::@6/(const byte*) render_preset_name::name#5 render_preset_name::@7/(const byte*) render_preset_name::name#6 render_preset_name::@8/(const byte*) render_preset_name::name#7 render_preset_name::@9/(const byte*) render_preset_name::name#8 render_preset_name::@10/(const byte*) render_preset_name::name#9 )
  [480] (byte*) print_str_at::str#1 ← (byte*) render_preset_name::name#13
  [481] call print_str_at 
  to:render_preset_name::@return
render_preset_name::@return: scope:[render_preset_name]  from render_preset_name::@2
  [482] return 
  to:@return

(byte()) form_control()
form_control: scope:[form_control]  from form_mode::@5
  [483] (byte) form_field_ptr::field_idx#1 ← (byte) form_field_idx#30
  [484] call form_field_ptr 
  [485] (byte*) form_field_ptr::return#3 ← (byte*) form_field_ptr::return#0
  to:form_control::@18
form_control::@18: scope:[form_control]  from form_control
  [486] (byte*) form_control::field#0 ← (byte*) form_field_ptr::return#3
  [487] (signed byte) form_cursor_count#4 ← -- (signed byte) form_cursor_count#23
  [488] if((signed byte) form_cursor_count#4>=(signed byte) 0) goto form_control::@21
  to:form_control::@1
form_control::@21: scope:[form_control]  from form_control::@18
  [489] phi()
  to:form_control::@1
form_control::@1: scope:[form_control]  from form_control::@18 form_control::@21
  [490] (signed byte) form_cursor_count#16 ← phi( form_control::@21/(signed byte) form_cursor_count#4 form_control::@18/(const nomodify signed byte) FORM_CURSOR_BLINK )
  [491] if((signed byte) form_cursor_count#16<(const nomodify signed byte) FORM_CURSOR_BLINK/(signed byte) 2) goto form_control::@2
  to:form_control::@7
form_control::@7: scope:[form_control]  from form_control::@1
  [492] (byte~) form_control::$12 ← *((byte*) form_control::field#0) & (byte) $7f
  [493] *((byte*) form_control::field#0) ← (byte~) form_control::$12
  to:form_control::@3
form_control::@3: scope:[form_control]  from form_control::@2 form_control::@7
  [494] phi()
  [495] call keyboard_event_scan 
  to:form_control::@19
form_control::@19: scope:[form_control]  from form_control::@3
  [496] phi()
  [497] call keyboard_event_get 
  [498] (byte) keyboard_event_get::return#4 ← (byte) keyboard_event_get::return#2
  to:form_control::@20
form_control::@20: scope:[form_control]  from form_control::@19
  [499] (byte) form_control::key_event#0 ← (byte) keyboard_event_get::return#4
  [500] if((byte) form_control::key_event#0!=(const nomodify byte) KEY_CRSR_DOWN) goto form_control::@4
  to:form_control::@8
form_control::@8: scope:[form_control]  from form_control::@20
  [501] (byte~) form_control::$14 ← *((byte*) form_control::field#0) & (byte) $7f
  [502] *((byte*) form_control::field#0) ← (byte~) form_control::$14
  [503] (byte~) form_control::$15 ← (byte) keyboard_modifiers#22 & (const nomodify byte) KEY_MODIFIER_SHIFT
  [504] if((byte~) form_control::$15==(byte) 0) goto form_control::@13
  to:form_control::@9
form_control::@9: scope:[form_control]  from form_control::@8
  [505] (byte) form_field_idx#5 ← -- (byte) form_field_idx#30
  [506] if((byte) form_field_idx#5!=(byte) $ff) goto form_control::@22
  to:form_control::@14
form_control::@22: scope:[form_control]  from form_control::@9
  [507] phi()
  to:form_control::@14
form_control::@14: scope:[form_control]  from form_control::@13 form_control::@22 form_control::@23 form_control::@9
  [508] (byte) form_field_idx#33 ← phi( form_control::@22/(byte) form_field_idx#5 form_control::@9/(const byte) form_fields_cnt-(byte) 1 form_control::@23/(byte) form_field_idx#4 form_control::@13/(byte) 0 )
  to:form_control::@return
form_control::@return: scope:[form_control]  from form_control::@14 form_control::@16 form_control::@5 form_control::@6
  [509] (byte) form_field_idx#19 ← phi( form_control::@5/(byte) form_field_idx#30 form_control::@14/(byte) form_field_idx#33 form_control::@16/(byte) form_field_idx#30 form_control::@6/(byte) form_field_idx#30 )
  [509] (signed byte) form_cursor_count#17 ← phi( form_control::@5/(signed byte) form_cursor_count#16 form_control::@14/(const nomodify signed byte) FORM_CURSOR_BLINK/(signed byte) 2 form_control::@16/(signed byte) form_cursor_count#16 form_control::@6/(signed byte) form_cursor_count#16 )
  [509] (byte) form_control::return#2 ← phi( form_control::@5/(byte) $ff form_control::@14/(byte) 0 form_control::@16/(byte) 0 form_control::@6/(byte) 0 )
  [510] return 
  to:@return
form_control::@13: scope:[form_control]  from form_control::@8
  [511] (byte) form_field_idx#4 ← ++ (byte) form_field_idx#30
  [512] if((byte) form_field_idx#4!=(const byte) form_fields_cnt) goto form_control::@23
  to:form_control::@14
form_control::@23: scope:[form_control]  from form_control::@13
  [513] phi()
  to:form_control::@14
form_control::@4: scope:[form_control]  from form_control::@20
  [514] if((byte) form_control::key_event#0!=(const nomodify byte) KEY_CRSR_RIGHT) goto form_control::@5
  to:form_control::@10
form_control::@10: scope:[form_control]  from form_control::@4
  [515] (byte~) form_control::$22 ← (byte) keyboard_modifiers#22 & (const nomodify byte) KEY_MODIFIER_SHIFT
  [516] if((byte~) form_control::$22==(byte) 0) goto form_control::@15
  to:form_control::@11
form_control::@11: scope:[form_control]  from form_control::@10
  [517] *((const byte*) form_fields_val + (byte) form_field_idx#30) ← -- *((const byte*) form_fields_val + (byte) form_field_idx#30)
  [518] if(*((const byte*) form_fields_val + (byte) form_field_idx#30)!=(byte) $ff) goto form_control::@16
  to:form_control::@12
form_control::@12: scope:[form_control]  from form_control::@11
  [519] *((const byte*) form_fields_val + (byte) form_field_idx#30) ← *((const byte*) form_fields_max + (byte) form_field_idx#30)
  to:form_control::@16
form_control::@16: scope:[form_control]  from form_control::@11 form_control::@12 form_control::@15 form_control::@17
  [520] *((byte*) form_control::field#0) ← *((const to_nomodify byte*) print_hextab + *((const byte*) form_fields_val + (byte) form_field_idx#30))
  to:form_control::@return
form_control::@15: scope:[form_control]  from form_control::@10
  [521] *((const byte*) form_fields_val + (byte) form_field_idx#30) ← ++ *((const byte*) form_fields_val + (byte) form_field_idx#30)
  [522] if(*((const byte*) form_fields_val + (byte) form_field_idx#30)<=*((const byte*) form_fields_max + (byte) form_field_idx#30)) goto form_control::@16
  to:form_control::@17
form_control::@17: scope:[form_control]  from form_control::@15
  [523] *((const byte*) form_fields_val + (byte) form_field_idx#30) ← (byte) 0
  to:form_control::@16
form_control::@5: scope:[form_control]  from form_control::@4
  [524] if((byte) form_control::key_event#0!=(const nomodify byte) KEY_SPACE) goto form_control::@6
  to:form_control::@return
form_control::@6: scope:[form_control]  from form_control::@5
  [525] phi()
  to:form_control::@return
form_control::@2: scope:[form_control]  from form_control::@1
  [526] (byte~) form_control::$13 ← *((byte*) form_control::field#0) | (byte) $80
  [527] *((byte*) form_control::field#0) ← (byte~) form_control::$13
  to:form_control::@3

(void()) apply_preset((byte) apply_preset::idx)
apply_preset: scope:[apply_preset]  from form_mode::@7
  [528] if((byte) apply_preset::idx#0==(byte) 0) goto apply_preset::@2
  to:apply_preset::@3
apply_preset::@3: scope:[apply_preset]  from apply_preset
  [529] if((byte) apply_preset::idx#0==(byte) 1) goto apply_preset::@2
  to:apply_preset::@4
apply_preset::@4: scope:[apply_preset]  from apply_preset::@3
  [530] if((byte) apply_preset::idx#0==(byte) 2) goto apply_preset::@2
  to:apply_preset::@5
apply_preset::@5: scope:[apply_preset]  from apply_preset::@4
  [531] if((byte) apply_preset::idx#0==(byte) 3) goto apply_preset::@2
  to:apply_preset::@6
apply_preset::@6: scope:[apply_preset]  from apply_preset::@5
  [532] if((byte) apply_preset::idx#0==(byte) 4) goto apply_preset::@2
  to:apply_preset::@7
apply_preset::@7: scope:[apply_preset]  from apply_preset::@6
  [533] if((byte) apply_preset::idx#0==(byte) 5) goto apply_preset::@2
  to:apply_preset::@8
apply_preset::@8: scope:[apply_preset]  from apply_preset::@7
  [534] if((byte) apply_preset::idx#0==(byte) 6) goto apply_preset::@2
  to:apply_preset::@9
apply_preset::@9: scope:[apply_preset]  from apply_preset::@8
  [535] if((byte) apply_preset::idx#0==(byte) 7) goto apply_preset::@2
  to:apply_preset::@10
apply_preset::@10: scope:[apply_preset]  from apply_preset::@9
  [536] if((byte) apply_preset::idx#0==(byte) 8) goto apply_preset::@2
  to:apply_preset::@11
apply_preset::@11: scope:[apply_preset]  from apply_preset::@10
  [537] if((byte) apply_preset::idx#0==(byte) 9) goto apply_preset::@2
  to:apply_preset::@12
apply_preset::@12: scope:[apply_preset]  from apply_preset::@11
  [538] if((byte) apply_preset::idx#0==(byte) $a) goto apply_preset::@1
  to:apply_preset::@2
apply_preset::@1: scope:[apply_preset]  from apply_preset::@12
  [539] phi()
  to:apply_preset::@2
apply_preset::@2: scope:[apply_preset]  from apply_preset apply_preset::@1 apply_preset::@10 apply_preset::@11 apply_preset::@12 apply_preset::@3 apply_preset::@4 apply_preset::@5 apply_preset::@6 apply_preset::@7 apply_preset::@8 apply_preset::@9
  [540] (byte*) apply_preset::preset#15 ← phi( apply_preset/(const byte*) preset_stdchar apply_preset::@11/(const byte*) preset_sixsfred2 apply_preset::@1/(const byte*) preset_8bpppixelcell apply_preset::@3/(const byte*) preset_ecmchar apply_preset::@12/(const byte*) preset_stdchar apply_preset::@4/(const byte*) preset_stdbm apply_preset::@5/(const byte*) preset_mcbm apply_preset::@6/(const byte*) preset_hi_stdchar apply_preset::@7/(const byte*) preset_hi_ecmchar apply_preset::@8/(const byte*) preset_twoplane apply_preset::@9/(const byte*) preset_chunky apply_preset::@10/(const byte*) preset_sixsfred )
  to:apply_preset::@13
apply_preset::@13: scope:[apply_preset]  from apply_preset::@14 apply_preset::@2
  [541] (byte) apply_preset::i#2 ← phi( apply_preset::@2/(byte) 0 apply_preset::@14/(byte) apply_preset::i#1 )
  [542] if((byte) apply_preset::i#2!=(const byte) form_fields_cnt) goto apply_preset::@14
  to:apply_preset::@return
apply_preset::@return: scope:[apply_preset]  from apply_preset::@13
  [543] return 
  to:@return
apply_preset::@14: scope:[apply_preset]  from apply_preset::@13
  [544] *((const byte*) form_fields_val + (byte) apply_preset::i#2) ← *((byte*) apply_preset::preset#15 + (byte) apply_preset::i#2)
  [545] (byte) apply_preset::i#1 ← ++ (byte) apply_preset::i#2
  to:apply_preset::@13

(dword()) get_plane((byte) get_plane::idx)
get_plane: scope:[get_plane]  from gfx_mode::@27 gfx_mode::@9
  [546] (byte) get_plane::idx#10 ← phi( gfx_mode::@27/(byte) get_plane::idx#1 gfx_mode::@9/(byte) get_plane::idx#0 )
  [547] if((byte) get_plane::idx#10==(byte) 0) goto get_plane::@return
  to:get_plane::@2
get_plane::@2: scope:[get_plane]  from get_plane
  [548] if((byte) get_plane::idx#10==(byte) 1) goto get_plane::@return
  to:get_plane::@3
get_plane::@3: scope:[get_plane]  from get_plane::@2
  [549] if((byte) get_plane::idx#10==(byte) 2) goto get_plane::@return
  to:get_plane::@4
get_plane::@4: scope:[get_plane]  from get_plane::@3
  [550] if((byte) get_plane::idx#10==(byte) 3) goto get_plane::@return
  to:get_plane::@5
get_plane::@5: scope:[get_plane]  from get_plane::@4
  [551] if((byte) get_plane::idx#10==(byte) 4) goto get_plane::@return
  to:get_plane::@6
get_plane::@6: scope:[get_plane]  from get_plane::@5
  [552] if((byte) get_plane::idx#10==(byte) 5) goto get_plane::@return
  to:get_plane::@7
get_plane::@7: scope:[get_plane]  from get_plane::@6
  [553] if((byte) get_plane::idx#10==(byte) 6) goto get_plane::@return
  to:get_plane::@8
get_plane::@8: scope:[get_plane]  from get_plane::@7
  [554] if((byte) get_plane::idx#10==(byte) 7) goto get_plane::@return
  to:get_plane::@9
get_plane::@9: scope:[get_plane]  from get_plane::@8
  [555] if((byte) get_plane::idx#10==(byte) 8) goto get_plane::@return
  to:get_plane::@10
get_plane::@10: scope:[get_plane]  from get_plane::@9
  [556] if((byte) get_plane::idx#10==(byte) 9) goto get_plane::@return
  to:get_plane::@11
get_plane::@11: scope:[get_plane]  from get_plane::@10
  [557] if((byte) get_plane::idx#10==(byte) $a) goto get_plane::@return
  to:get_plane::@12
get_plane::@12: scope:[get_plane]  from get_plane::@11
  [558] if((byte) get_plane::idx#10==(byte) $b) goto get_plane::@return
  to:get_plane::@13
get_plane::@13: scope:[get_plane]  from get_plane::@12
  [559] if((byte) get_plane::idx#10==(byte) $c) goto get_plane::@return
  to:get_plane::@14
get_plane::@14: scope:[get_plane]  from get_plane::@13
  [560] if((byte) get_plane::idx#10!=(byte) $d) goto get_plane::@1
  to:get_plane::@return
get_plane::@1: scope:[get_plane]  from get_plane::@14
  [561] phi()
  to:get_plane::@return
get_plane::@return: scope:[get_plane]  from get_plane get_plane::@1 get_plane::@10 get_plane::@11 get_plane::@12 get_plane::@13 get_plane::@14 get_plane::@2 get_plane::@3 get_plane::@4 get_plane::@5 get_plane::@6 get_plane::@7 get_plane::@8 get_plane::@9
  [562] (dword) get_plane::return#14 ← phi( get_plane/(dword)(const nomodify byte*) VIC_SCREEN0 get_plane::@10/(const nomodify dword) PLANE_HORISONTAL2 get_plane::@11/(const nomodify dword) PLANE_VERTICAL2 get_plane::@12/(const nomodify dword) PLANE_CHARSET8 get_plane::@13/(const nomodify dword) PLANE_BLANK get_plane::@1/(dword)(const nomodify byte*) VIC_SCREEN0 get_plane::@2/(dword)(const nomodify byte*) VIC_SCREEN1 get_plane::@14/(const nomodify dword) PLANE_FULL get_plane::@3/(dword)(const nomodify byte*) VIC_SCREEN2 get_plane::@4/(dword)(const nomodify byte*) VIC_SCREEN3 get_plane::@5/(dword)(const nomodify byte*) VIC_BITMAP get_plane::@6/(dword)(const nomodify byte*) VIC_CHARSET_ROM get_plane::@7/(const nomodify dword) PLANE_8BPP_CHUNKY get_plane::@8/(const nomodify dword) PLANE_HORISONTAL get_plane::@9/(const nomodify dword) PLANE_VERTICAL )
  [563] return 
  to:@return

(byte*()) get_vic_screen((byte) get_vic_screen::idx)
get_vic_screen: scope:[get_vic_screen]  from gfx_mode::@28 gfx_mode::@30
  [564] (byte) get_vic_screen::idx#2 ← phi( gfx_mode::@28/(byte) get_vic_screen::idx#0 gfx_mode::@30/(byte) get_vic_screen::idx#1 )
  [565] if((byte) get_vic_screen::idx#2==(byte) 0) goto get_vic_screen::@return
  to:get_vic_screen::@2
get_vic_screen::@2: scope:[get_vic_screen]  from get_vic_screen
  [566] if((byte) get_vic_screen::idx#2==(byte) 1) goto get_vic_screen::@return
  to:get_vic_screen::@3
get_vic_screen::@3: scope:[get_vic_screen]  from get_vic_screen::@2
  [567] if((byte) get_vic_screen::idx#2==(byte) 2) goto get_vic_screen::@return
  to:get_vic_screen::@4
get_vic_screen::@4: scope:[get_vic_screen]  from get_vic_screen::@3
  [568] if((byte) get_vic_screen::idx#2==(byte) 3) goto get_vic_screen::@return
  to:get_vic_screen::@5
get_vic_screen::@5: scope:[get_vic_screen]  from get_vic_screen::@4
  [569] if((byte) get_vic_screen::idx#2!=(byte) 4) goto get_vic_screen::@1
  to:get_vic_screen::@return
get_vic_screen::@1: scope:[get_vic_screen]  from get_vic_screen::@5
  [570] phi()
  to:get_vic_screen::@return
get_vic_screen::@return: scope:[get_vic_screen]  from get_vic_screen get_vic_screen::@1 get_vic_screen::@2 get_vic_screen::@3 get_vic_screen::@4 get_vic_screen::@5
  [571] (byte*) get_vic_screen::return#5 ← phi( get_vic_screen/(const nomodify byte*) VIC_SCREEN0 get_vic_screen::@5/(const nomodify byte*) VIC_SCREEN4 get_vic_screen::@2/(const nomodify byte*) VIC_SCREEN1 get_vic_screen::@3/(const nomodify byte*) VIC_SCREEN2 get_vic_screen::@4/(const nomodify byte*) VIC_SCREEN3 get_vic_screen::@1/(const nomodify byte*) VIC_SCREEN0 )
  [572] return 
  to:@return

(byte*()) get_vic_charset((byte) get_vic_charset::idx)
get_vic_charset: scope:[get_vic_charset]  from gfx_mode::@29
  [573] if((byte) get_vic_charset::idx#0==(byte) 0) goto get_vic_charset::@return
  to:get_vic_charset::@2
get_vic_charset::@2: scope:[get_vic_charset]  from get_vic_charset
  [574] if((byte) get_vic_charset::idx#0!=(byte) 1) goto get_vic_charset::@1
  to:get_vic_charset::@return
get_vic_charset::@1: scope:[get_vic_charset]  from get_vic_charset::@2
  [575] phi()
  to:get_vic_charset::@return
get_vic_charset::@return: scope:[get_vic_charset]  from get_vic_charset get_vic_charset::@1 get_vic_charset::@2
  [576] (byte*) get_vic_charset::return#2 ← phi( get_vic_charset/(const nomodify byte*) VIC_CHARSET_ROM get_vic_charset::@1/(const nomodify byte*) VIC_CHARSET_ROM get_vic_charset::@2/(const nomodify byte*) VIC_BITMAP )
  [577] return 
  to:@return

(void()) keyboard_event_scan()
keyboard_event_scan: scope:[keyboard_event_scan]  from form_control::@3 gfx_mode::@26
  [578] (byte) keyboard_events_size#98 ← phi( form_control::@3/(byte) keyboard_events_size#49 gfx_mode::@26/(byte) keyboard_events_size#25 )
  to:keyboard_event_scan::@7
keyboard_event_scan::@7: scope:[keyboard_event_scan]  from keyboard_event_scan keyboard_event_scan::@8
  [579] (byte) keyboard_events_size#107 ← phi( keyboard_event_scan/(byte) keyboard_events_size#98 keyboard_event_scan::@8/(byte) keyboard_events_size#100 )
  [579] (byte) keyboard_event_scan::keycode#11 ← phi( keyboard_event_scan/(byte) 0 keyboard_event_scan::@8/(byte) keyboard_event_scan::keycode#13 )
  [579] (byte) keyboard_event_scan::row#2 ← phi( keyboard_event_scan/(byte) 0 keyboard_event_scan::@8/(byte) keyboard_event_scan::row#1 )
  [580] (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_event_scan::row#2
  [581] call keyboard_matrix_read 
  [582] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0
  to:keyboard_event_scan::@19
keyboard_event_scan::@19: scope:[keyboard_event_scan]  from keyboard_event_scan::@7
  [583] (byte) keyboard_event_scan::row_scan#0 ← (byte) keyboard_matrix_read::return#2
  [584] if((byte) keyboard_event_scan::row_scan#0!=*((const byte*) keyboard_scan_values + (byte) keyboard_event_scan::row#2)) goto keyboard_event_scan::@9
  to:keyboard_event_scan::@16
keyboard_event_scan::@16: scope:[keyboard_event_scan]  from keyboard_event_scan::@19
  [585] (byte) keyboard_event_scan::keycode#1 ← (byte) keyboard_event_scan::keycode#11 + (byte) 8
  to:keyboard_event_scan::@8
keyboard_event_scan::@8: scope:[keyboard_event_scan]  from keyboard_event_scan::@15 keyboard_event_scan::@16
  [586] (byte) keyboard_events_size#100 ← phi( keyboard_event_scan::@15/(byte) keyboard_events_size#106 keyboard_event_scan::@16/(byte) keyboard_events_size#107 )
  [586] (byte) keyboard_event_scan::keycode#13 ← phi( keyboard_event_scan::@15/(byte) keyboard_event_scan::keycode#14 keyboard_event_scan::@16/(byte) keyboard_event_scan::keycode#1 )
  [587] (byte) keyboard_event_scan::row#1 ← ++ (byte) keyboard_event_scan::row#2
  [588] if((byte) keyboard_event_scan::row#1!=(byte) 8) goto keyboard_event_scan::@7
  to:keyboard_event_scan::@17
keyboard_event_scan::@17: scope:[keyboard_event_scan]  from keyboard_event_scan::@8
  [589] phi()
  [590] call keyboard_event_pressed 
  [591] (byte) keyboard_event_pressed::return#0 ← (byte) keyboard_event_pressed::return#10
  to:keyboard_event_scan::@20
keyboard_event_scan::@20: scope:[keyboard_event_scan]  from keyboard_event_scan::@17
  [592] (byte~) keyboard_event_scan::$0 ← (byte) keyboard_event_pressed::return#0
  [593] if((byte~) keyboard_event_scan::$0==(byte) 0) goto keyboard_event_scan::@1
  to:keyboard_event_scan::@18
keyboard_event_scan::@18: scope:[keyboard_event_scan]  from keyboard_event_scan::@20
  [594] phi()
  to:keyboard_event_scan::@1
keyboard_event_scan::@1: scope:[keyboard_event_scan]  from keyboard_event_scan::@18 keyboard_event_scan::@20
  [595] (byte) keyboard_modifiers#19 ← phi( keyboard_event_scan::@18/(const nomodify byte) KEY_MODIFIER_LSHIFT keyboard_event_scan::@20/(byte) 0 )
  [596] call keyboard_event_pressed 
  [597] (byte) keyboard_event_pressed::return#1 ← (byte) keyboard_event_pressed::return#10
  to:keyboard_event_scan::@21
keyboard_event_scan::@21: scope:[keyboard_event_scan]  from keyboard_event_scan::@1
  [598] (byte~) keyboard_event_scan::$3 ← (byte) keyboard_event_pressed::return#1
  [599] if((byte~) keyboard_event_scan::$3==(byte) 0) goto keyboard_event_scan::@2
  to:keyboard_event_scan::@4
keyboard_event_scan::@4: scope:[keyboard_event_scan]  from keyboard_event_scan::@21
  [600] (byte) keyboard_modifiers#2 ← (byte) keyboard_modifiers#19 | (const nomodify byte) KEY_MODIFIER_RSHIFT
  to:keyboard_event_scan::@2
keyboard_event_scan::@2: scope:[keyboard_event_scan]  from keyboard_event_scan::@21 keyboard_event_scan::@4
  [601] (byte) keyboard_modifiers#20 ← phi( keyboard_event_scan::@21/(byte) keyboard_modifiers#19 keyboard_event_scan::@4/(byte) keyboard_modifiers#2 )
  [602] call keyboard_event_pressed 
  [603] (byte) keyboard_event_pressed::return#2 ← (byte) keyboard_event_pressed::return#10
  to:keyboard_event_scan::@22
keyboard_event_scan::@22: scope:[keyboard_event_scan]  from keyboard_event_scan::@2
  [604] (byte~) keyboard_event_scan::$6 ← (byte) keyboard_event_pressed::return#2
  [605] if((byte~) keyboard_event_scan::$6==(byte) 0) goto keyboard_event_scan::@3
  to:keyboard_event_scan::@5
keyboard_event_scan::@5: scope:[keyboard_event_scan]  from keyboard_event_scan::@22
  [606] (byte) keyboard_modifiers#3 ← (byte) keyboard_modifiers#20 | (const nomodify byte) KEY_MODIFIER_CTRL
  to:keyboard_event_scan::@3
keyboard_event_scan::@3: scope:[keyboard_event_scan]  from keyboard_event_scan::@22 keyboard_event_scan::@5
  [607] (byte) keyboard_modifiers#21 ← phi( keyboard_event_scan::@22/(byte) keyboard_modifiers#20 keyboard_event_scan::@5/(byte) keyboard_modifiers#3 )
  [608] call keyboard_event_pressed 
  [609] (byte) keyboard_event_pressed::return#3 ← (byte) keyboard_event_pressed::return#10
  to:keyboard_event_scan::@23
keyboard_event_scan::@23: scope:[keyboard_event_scan]  from keyboard_event_scan::@3
  [610] (byte~) keyboard_event_scan::$9 ← (byte) keyboard_event_pressed::return#3
  [611] if((byte~) keyboard_event_scan::$9==(byte) 0) goto keyboard_event_scan::@return
  to:keyboard_event_scan::@6
keyboard_event_scan::@6: scope:[keyboard_event_scan]  from keyboard_event_scan::@23
  [612] (byte) keyboard_modifiers#4 ← (byte) keyboard_modifiers#21 | (const nomodify byte) KEY_MODIFIER_COMMODORE
  to:keyboard_event_scan::@return
keyboard_event_scan::@return: scope:[keyboard_event_scan]  from keyboard_event_scan::@23 keyboard_event_scan::@6
  [613] (byte) keyboard_modifiers#22 ← phi( keyboard_event_scan::@23/(byte) keyboard_modifiers#21 keyboard_event_scan::@6/(byte) keyboard_modifiers#4 )
  [614] return 
  to:@return
keyboard_event_scan::@9: scope:[keyboard_event_scan]  from keyboard_event_scan::@10 keyboard_event_scan::@19
  [615] (byte) keyboard_events_size#19 ← phi( keyboard_event_scan::@10/(byte) keyboard_events_size#106 keyboard_event_scan::@19/(byte) keyboard_events_size#107 )
  [615] (byte) keyboard_event_scan::keycode#10 ← phi( keyboard_event_scan::@10/(byte) keyboard_event_scan::keycode#14 keyboard_event_scan::@19/(byte) keyboard_event_scan::keycode#11 )
  [615] (byte) keyboard_event_scan::col#2 ← phi( keyboard_event_scan::@10/(byte) keyboard_event_scan::col#1 keyboard_event_scan::@19/(byte) 0 )
  [616] (byte~) keyboard_event_scan::$15 ← (byte) keyboard_event_scan::row_scan#0 ^ *((const byte*) keyboard_scan_values + (byte) keyboard_event_scan::row#2)
  [617] (byte~) keyboard_event_scan::$16 ← (byte~) keyboard_event_scan::$15 & *((const byte*) keyboard_matrix_col_bitmask + (byte) keyboard_event_scan::col#2)
  [618] if((byte~) keyboard_event_scan::$16==(byte) 0) goto keyboard_event_scan::@10
  to:keyboard_event_scan::@12
keyboard_event_scan::@12: scope:[keyboard_event_scan]  from keyboard_event_scan::@9
  [619] if((byte) keyboard_events_size#19==(byte) 8) goto keyboard_event_scan::@10
  to:keyboard_event_scan::@13
keyboard_event_scan::@13: scope:[keyboard_event_scan]  from keyboard_event_scan::@12
  [620] (byte) keyboard_event_scan::event_type#0 ← (byte) keyboard_event_scan::row_scan#0 & *((const byte*) keyboard_matrix_col_bitmask + (byte) keyboard_event_scan::col#2)
  [621] if((byte) keyboard_event_scan::event_type#0==(byte) 0) goto keyboard_event_scan::@11
  to:keyboard_event_scan::@14
keyboard_event_scan::@14: scope:[keyboard_event_scan]  from keyboard_event_scan::@13
  [622] *((const byte*) keyboard_events + (byte) keyboard_events_size#19) ← (byte) keyboard_event_scan::keycode#10
  [623] (byte) keyboard_events_size#1 ← ++ (byte) keyboard_events_size#19
  to:keyboard_event_scan::@10
keyboard_event_scan::@10: scope:[keyboard_event_scan]  from keyboard_event_scan::@11 keyboard_event_scan::@12 keyboard_event_scan::@14 keyboard_event_scan::@9
  [624] (byte) keyboard_events_size#106 ← phi( keyboard_event_scan::@9/(byte) keyboard_events_size#19 keyboard_event_scan::@11/(byte) keyboard_events_size#0 keyboard_event_scan::@12/(byte) keyboard_events_size#19 keyboard_event_scan::@14/(byte) keyboard_events_size#1 )
  [625] (byte) keyboard_event_scan::keycode#14 ← ++ (byte) keyboard_event_scan::keycode#10
  [626] (byte) keyboard_event_scan::col#1 ← ++ (byte) keyboard_event_scan::col#2
  [627] if((byte) keyboard_event_scan::col#1!=(byte) 8) goto keyboard_event_scan::@9
  to:keyboard_event_scan::@15
keyboard_event_scan::@15: scope:[keyboard_event_scan]  from keyboard_event_scan::@10
  [628] *((const byte*) keyboard_scan_values + (byte) keyboard_event_scan::row#2) ← (byte) keyboard_event_scan::row_scan#0
  to:keyboard_event_scan::@8
keyboard_event_scan::@11: scope:[keyboard_event_scan]  from keyboard_event_scan::@13
  [629] (byte~) keyboard_event_scan::$23 ← (byte) keyboard_event_scan::keycode#10 | (byte) $40
  [630] *((const byte*) keyboard_events + (byte) keyboard_events_size#19) ← (byte~) keyboard_event_scan::$23
  [631] (byte) keyboard_events_size#0 ← ++ (byte) keyboard_events_size#19
  to:keyboard_event_scan::@10

(byte()) keyboard_event_get()
keyboard_event_get: scope:[keyboard_event_get]  from form_control::@19 gfx_mode::@32
  [632] if((byte) keyboard_events_size#100==(byte) 0) goto keyboard_event_get::@return
  to:keyboard_event_get::@1
keyboard_event_get::@1: scope:[keyboard_event_get]  from keyboard_event_get
  [633] (byte) keyboard_events_size#3 ← -- (byte) keyboard_events_size#100
  [634] (byte) keyboard_event_get::return#1 ← *((const byte*) keyboard_events + (byte) keyboard_events_size#3)
  to:keyboard_event_get::@return
keyboard_event_get::@return: scope:[keyboard_event_get]  from keyboard_event_get keyboard_event_get::@1
  [635] (byte) keyboard_events_size#25 ← phi( keyboard_event_get/(byte) keyboard_events_size#100 keyboard_event_get::@1/(byte) keyboard_events_size#3 )
  [635] (byte) keyboard_event_get::return#2 ← phi( keyboard_event_get/(byte) $ff keyboard_event_get::@1/(byte) keyboard_event_get::return#1 )
  [636] return 
  to:@return

(void()) bitmap_init((byte*) bitmap_init::bitmap)
bitmap_init: scope:[bitmap_init]  from gfx_init_vic_bitmap
  [637] phi()
  to:bitmap_init::@1
bitmap_init::@1: scope:[bitmap_init]  from bitmap_init bitmap_init::@2
  [638] (byte) bitmap_init::bits#3 ← phi( bitmap_init/(byte) $80 bitmap_init::@2/(byte) bitmap_init::bits#4 )
  [638] (byte) bitmap_init::x#2 ← phi( bitmap_init/(byte) 0 bitmap_init::@2/(byte) bitmap_init::x#1 )
  [639] (byte~) bitmap_init::$0 ← (byte) bitmap_init::x#2 & (byte) $f8
  [640] *((const to_nomodify byte*) bitmap_plot_xlo + (byte) bitmap_init::x#2) ← (byte~) bitmap_init::$0
  [641] *((const to_nomodify byte*) bitmap_plot_xhi + (byte) bitmap_init::x#2) ← >(const nomodify byte*) VIC_BITMAP
  [642] *((const to_nomodify byte*) bitmap_plot_bit + (byte) bitmap_init::x#2) ← (byte) bitmap_init::bits#3
  [643] (byte) bitmap_init::bits#1 ← (byte) bitmap_init::bits#3 >> (byte) 1
  [644] if((byte) bitmap_init::bits#1!=(byte) 0) goto bitmap_init::@6
  to:bitmap_init::@2
bitmap_init::@6: scope:[bitmap_init]  from bitmap_init::@1
  [645] phi()
  to:bitmap_init::@2
bitmap_init::@2: scope:[bitmap_init]  from bitmap_init::@1 bitmap_init::@6
  [646] (byte) bitmap_init::bits#4 ← phi( bitmap_init::@6/(byte) bitmap_init::bits#1 bitmap_init::@1/(byte) $80 )
  [647] (byte) bitmap_init::x#1 ← ++ (byte) bitmap_init::x#2
  [648] if((byte) bitmap_init::x#1!=(byte) 0) goto bitmap_init::@1
  to:bitmap_init::@3
bitmap_init::@3: scope:[bitmap_init]  from bitmap_init::@2 bitmap_init::@4
  [649] (byte*) bitmap_init::yoffs#2 ← phi( bitmap_init::@2/(byte*) 0 bitmap_init::@4/(byte*) bitmap_init::yoffs#4 )
  [649] (byte) bitmap_init::y#2 ← phi( bitmap_init::@2/(byte) 0 bitmap_init::@4/(byte) bitmap_init::y#1 )
  [650] (byte~) bitmap_init::$10 ← (byte) bitmap_init::y#2 & (byte) 7
  [651] (byte~) bitmap_init::$7 ← < (byte*) bitmap_init::yoffs#2
  [652] (byte~) bitmap_init::$8 ← (byte~) bitmap_init::$10 | (byte~) bitmap_init::$7
  [653] *((const to_nomodify byte*) bitmap_plot_ylo + (byte) bitmap_init::y#2) ← (byte~) bitmap_init::$8
  [654] (byte~) bitmap_init::$9 ← > (byte*) bitmap_init::yoffs#2
  [655] *((const to_nomodify byte*) bitmap_plot_yhi + (byte) bitmap_init::y#2) ← (byte~) bitmap_init::$9
  [656] if((byte~) bitmap_init::$10!=(byte) 7) goto bitmap_init::@4
  to:bitmap_init::@5
bitmap_init::@5: scope:[bitmap_init]  from bitmap_init::@3
  [657] (byte*) bitmap_init::yoffs#1 ← (byte*) bitmap_init::yoffs#2 + (word)(number) $28*(number) 8
  to:bitmap_init::@4
bitmap_init::@4: scope:[bitmap_init]  from bitmap_init::@3 bitmap_init::@5
  [658] (byte*) bitmap_init::yoffs#4 ← phi( bitmap_init::@3/(byte*) bitmap_init::yoffs#2 bitmap_init::@5/(byte*) bitmap_init::yoffs#1 )
  [659] (byte) bitmap_init::y#1 ← ++ (byte) bitmap_init::y#2
  [660] if((byte) bitmap_init::y#1!=(byte) 0) goto bitmap_init::@3
  to:bitmap_init::@return
bitmap_init::@return: scope:[bitmap_init]  from bitmap_init::@4
  [661] return 
  to:@return

(void()) bitmap_clear()
bitmap_clear: scope:[bitmap_clear]  from gfx_init_vic_bitmap::@3
  [662] (word) bitmap_clear::bitmap#0 ← *((const to_nomodify byte*) bitmap_plot_xhi) w= *((const to_nomodify byte*) bitmap_plot_xlo)
  [663] (byte*) bitmap_clear::bitmap#5 ← (byte*)(word) bitmap_clear::bitmap#0
  to:bitmap_clear::@1
bitmap_clear::@1: scope:[bitmap_clear]  from bitmap_clear bitmap_clear::@3
  [664] (byte) bitmap_clear::y#4 ← phi( bitmap_clear/(byte) 0 bitmap_clear::@3/(byte) bitmap_clear::y#1 )
  [664] (byte*) bitmap_clear::bitmap#3 ← phi( bitmap_clear/(byte*) bitmap_clear::bitmap#5 bitmap_clear::@3/(byte*) bitmap_clear::bitmap#1 )
  to:bitmap_clear::@2
bitmap_clear::@2: scope:[bitmap_clear]  from bitmap_clear::@1 bitmap_clear::@2
  [665] (byte) bitmap_clear::x#2 ← phi( bitmap_clear::@1/(byte) 0 bitmap_clear::@2/(byte) bitmap_clear::x#1 )
  [665] (byte*) bitmap_clear::bitmap#2 ← phi( bitmap_clear::@1/(byte*) bitmap_clear::bitmap#3 bitmap_clear::@2/(byte*) bitmap_clear::bitmap#1 )
  [666] *((byte*) bitmap_clear::bitmap#2) ← (byte) 0
  [667] (byte*) bitmap_clear::bitmap#1 ← ++ (byte*) bitmap_clear::bitmap#2
  [668] (byte) bitmap_clear::x#1 ← ++ (byte) bitmap_clear::x#2
  [669] if((byte) bitmap_clear::x#1!=(byte) $c8) goto bitmap_clear::@2
  to:bitmap_clear::@3
bitmap_clear::@3: scope:[bitmap_clear]  from bitmap_clear::@2
  [670] (byte) bitmap_clear::y#1 ← ++ (byte) bitmap_clear::y#4
  [671] if((byte) bitmap_clear::y#1!=(byte) $28) goto bitmap_clear::@1
  to:bitmap_clear::@return
bitmap_clear::@return: scope:[bitmap_clear]  from bitmap_clear::@3
  [672] return 
  to:@return

(void()) bitmap_line((byte) bitmap_line::x0 , (byte) bitmap_line::x1 , (byte) bitmap_line::y0 , (byte) bitmap_line::y1)
bitmap_line: scope:[bitmap_line]  from gfx_init_vic_bitmap::@2
  [673] if((byte) bitmap_line::x0#0<(byte) bitmap_line::x1#0) goto bitmap_line::@1
  to:bitmap_line::@2
bitmap_line::@2: scope:[bitmap_line]  from bitmap_line
  [674] (byte) bitmap_line::xd#2 ← (byte) bitmap_line::x0#0 - (byte) bitmap_line::x1#0
  [675] if((byte) bitmap_line::y0#0<(byte) bitmap_line::y1#0) goto bitmap_line::@7
  to:bitmap_line::@3
bitmap_line::@3: scope:[bitmap_line]  from bitmap_line::@2
  [676] (byte) bitmap_line::yd#2 ← (byte) bitmap_line::y0#0 - (byte) bitmap_line::y1#0
  [677] if((byte) bitmap_line::yd#2<(byte) bitmap_line::xd#2) goto bitmap_line::@8
  to:bitmap_line::@4
bitmap_line::@4: scope:[bitmap_line]  from bitmap_line::@3
  [678] (byte) bitmap_line_ydxi::y#0 ← (byte) bitmap_line::y1#0
  [679] (byte) bitmap_line_ydxi::x#0 ← (byte) bitmap_line::x1#0
  [680] (byte) bitmap_line_ydxi::y1#0 ← (byte) bitmap_line::y0#0
  [681] (byte) bitmap_line_ydxi::yd#0 ← (byte) bitmap_line::yd#2
  [682] (byte) bitmap_line_ydxi::xd#0 ← (byte) bitmap_line::xd#2
  [683] call bitmap_line_ydxi 
  to:bitmap_line::@return
bitmap_line::@return: scope:[bitmap_line]  from bitmap_line::@10 bitmap_line::@12 bitmap_line::@13 bitmap_line::@14 bitmap_line::@4 bitmap_line::@6 bitmap_line::@8 bitmap_line::@9
  [684] return 
  to:@return
bitmap_line::@8: scope:[bitmap_line]  from bitmap_line::@3
  [685] (byte) bitmap_line_xdyi::x#0 ← (byte) bitmap_line::x1#0
  [686] (byte) bitmap_line_xdyi::y#0 ← (byte) bitmap_line::y1#0
  [687] (byte) bitmap_line_xdyi::x1#0 ← (byte) bitmap_line::x0#0
  [688] (byte) bitmap_line_xdyi::xd#0 ← (byte) bitmap_line::xd#2
  [689] (byte) bitmap_line_xdyi::yd#0 ← (byte) bitmap_line::yd#2
  [690] call bitmap_line_xdyi 
  to:bitmap_line::@return
bitmap_line::@7: scope:[bitmap_line]  from bitmap_line::@2
  [691] (byte) bitmap_line::yd#1 ← (byte) bitmap_line::y1#0 - (byte) bitmap_line::y0#0
  [692] if((byte) bitmap_line::yd#1<(byte) bitmap_line::xd#2) goto bitmap_line::@9
  to:bitmap_line::@10
bitmap_line::@10: scope:[bitmap_line]  from bitmap_line::@7
  [693] (byte) bitmap_line_ydxd::y#0 ← (byte) bitmap_line::y0#0
  [694] (byte) bitmap_line_ydxd::x#0 ← (byte) bitmap_line::x0#0
  [695] (byte) bitmap_line_ydxd::y1#0 ← (byte) bitmap_line::y1#0
  [696] (byte) bitmap_line_ydxd::yd#0 ← (byte) bitmap_line::yd#1
  [697] (byte) bitmap_line_ydxd::xd#0 ← (byte) bitmap_line::xd#2
  [698] call bitmap_line_ydxd 
  to:bitmap_line::@return
bitmap_line::@9: scope:[bitmap_line]  from bitmap_line::@7
  [699] (byte) bitmap_line_xdyd::x#0 ← (byte) bitmap_line::x1#0
  [700] (byte) bitmap_line_xdyd::y#0 ← (byte) bitmap_line::y1#0
  [701] (byte) bitmap_line_xdyd::x1#0 ← (byte) bitmap_line::x0#0
  [702] (byte) bitmap_line_xdyd::xd#0 ← (byte) bitmap_line::xd#2
  [703] (byte) bitmap_line_xdyd::yd#0 ← (byte) bitmap_line::yd#1
  [704] call bitmap_line_xdyd 
  to:bitmap_line::@return
bitmap_line::@1: scope:[bitmap_line]  from bitmap_line
  [705] (byte) bitmap_line::xd#1 ← (byte) bitmap_line::x1#0 - (byte) bitmap_line::x0#0
  [706] if((byte) bitmap_line::y0#0<(byte) bitmap_line::y1#0) goto bitmap_line::@11
  to:bitmap_line::@5
bitmap_line::@5: scope:[bitmap_line]  from bitmap_line::@1
  [707] (byte) bitmap_line::yd#10 ← (byte) bitmap_line::y0#0 - (byte) bitmap_line::y1#0
  [708] if((byte) bitmap_line::yd#10<(byte) bitmap_line::xd#1) goto bitmap_line::@12
  to:bitmap_line::@6
bitmap_line::@6: scope:[bitmap_line]  from bitmap_line::@5
  [709] (byte) bitmap_line_ydxd::y#1 ← (byte) bitmap_line::y1#0
  [710] (byte) bitmap_line_ydxd::x#1 ← (byte) bitmap_line::x1#0
  [711] (byte) bitmap_line_ydxd::y1#1 ← (byte) bitmap_line::y0#0
  [712] (byte) bitmap_line_ydxd::yd#1 ← (byte) bitmap_line::yd#10
  [713] (byte) bitmap_line_ydxd::xd#1 ← (byte) bitmap_line::xd#1
  [714] call bitmap_line_ydxd 
  to:bitmap_line::@return
bitmap_line::@12: scope:[bitmap_line]  from bitmap_line::@5
  [715] (byte) bitmap_line_xdyd::x#1 ← (byte) bitmap_line::x0#0
  [716] (byte) bitmap_line_xdyd::y#1 ← (byte) bitmap_line::y0#0
  [717] (byte) bitmap_line_xdyd::x1#1 ← (byte) bitmap_line::x1#0
  [718] (byte) bitmap_line_xdyd::xd#1 ← (byte) bitmap_line::xd#1
  [719] (byte) bitmap_line_xdyd::yd#1 ← (byte) bitmap_line::yd#10
  [720] call bitmap_line_xdyd 
  to:bitmap_line::@return
bitmap_line::@11: scope:[bitmap_line]  from bitmap_line::@1
  [721] (byte) bitmap_line::yd#11 ← (byte) bitmap_line::y1#0 - (byte) bitmap_line::y0#0
  [722] if((byte) bitmap_line::yd#11<(byte) bitmap_line::xd#1) goto bitmap_line::@13
  to:bitmap_line::@14
bitmap_line::@14: scope:[bitmap_line]  from bitmap_line::@11
  [723] (byte) bitmap_line_ydxi::y#1 ← (byte) bitmap_line::y0#0
  [724] (byte) bitmap_line_ydxi::x#1 ← (byte) bitmap_line::x0#0
  [725] (byte) bitmap_line_ydxi::y1#1 ← (byte) bitmap_line::y1#0
  [726] (byte) bitmap_line_ydxi::yd#1 ← (byte) bitmap_line::yd#11
  [727] (byte) bitmap_line_ydxi::xd#1 ← (byte) bitmap_line::xd#1
  [728] call bitmap_line_ydxi 
  to:bitmap_line::@return
bitmap_line::@13: scope:[bitmap_line]  from bitmap_line::@11
  [729] (byte) bitmap_line_xdyi::x#1 ← (byte) bitmap_line::x0#0
  [730] (byte) bitmap_line_xdyi::y#1 ← (byte) bitmap_line::y0#0
  [731] (byte) bitmap_line_xdyi::x1#1 ← (byte) bitmap_line::x1#0
  [732] (byte) bitmap_line_xdyi::xd#1 ← (byte) bitmap_line::xd#1
  [733] (byte) bitmap_line_xdyi::yd#1 ← (byte) bitmap_line::yd#11
  [734] call bitmap_line_xdyi 
  to:bitmap_line::@return

(void()) dtvSetCpuBankSegment1((byte) dtvSetCpuBankSegment1::cpuBankIdx)
dtvSetCpuBankSegment1: scope:[dtvSetCpuBankSegment1]  from gfx_init_plane_8bppchunky gfx_init_plane_8bppchunky::@4 gfx_init_plane_8bppchunky::@6 gfx_init_plane_charset8 gfx_init_plane_charset8::@8 gfx_init_plane_fill gfx_init_plane_fill::@4 gfx_init_plane_horisontal gfx_init_plane_horisontal2 gfx_init_plane_horisontal2::@4 gfx_init_plane_horisontal::@7 gfx_init_plane_vertical gfx_init_plane_vertical::@4
  [735] (byte) dtvSetCpuBankSegment1::cpuBankIdx#13 ← phi( gfx_init_plane_8bppchunky/(byte)(const nomodify dword) PLANE_8BPP_CHUNKY/(word) $4000 gfx_init_plane_8bppchunky::@4/(byte) dtvSetCpuBankSegment1::cpuBankIdx#1 gfx_init_plane_8bppchunky::@6/(byte)(number) $4000/(number) $4000 gfx_init_plane_charset8/(const byte) gfx_init_plane_charset8::gfxbCpuBank#0 gfx_init_plane_charset8::@8/(byte)(number) $4000/(number) $4000 gfx_init_plane_fill/(byte) dtvSetCpuBankSegment1::cpuBankIdx#11 gfx_init_plane_fill::@4/(byte)(number) $4000/(number) $4000 gfx_init_plane_horisontal/(const byte) gfx_init_plane_horisontal::gfxbCpuBank#0 gfx_init_plane_horisontal2/(const byte) gfx_init_plane_horisontal2::gfxbCpuBank#0 gfx_init_plane_horisontal2::@4/(byte)(number) $4000/(number) $4000 gfx_init_plane_horisontal::@7/(byte)(number) $4000/(number) $4000 gfx_init_plane_vertical/(const byte) gfx_init_plane_vertical::gfxbCpuBank#0 gfx_init_plane_vertical::@4/(byte)(number) $4000/(number) $4000 )
  [736] *((const byte*) dtvSetCpuBankSegment1::cpuBank) ← (byte) dtvSetCpuBankSegment1::cpuBankIdx#13
  asm { .byte$32,$dd lda$ff .byte$32,$00  }
  to:dtvSetCpuBankSegment1::@return
dtvSetCpuBankSegment1::@return: scope:[dtvSetCpuBankSegment1]  from dtvSetCpuBankSegment1
  [738] return 
  to:@return

(void()) gfx_init_plane_fill((dword) gfx_init_plane_fill::plane_addr , (byte) gfx_init_plane_fill::fill)
gfx_init_plane_fill: scope:[gfx_init_plane_fill]  from gfx_init_plane_blank gfx_init_plane_full gfx_init_plane_vertical2
  [739] (byte) gfx_init_plane_fill::fill#6 ← phi( gfx_init_plane_blank/(byte) 0 gfx_init_plane_full/(byte) $ff gfx_init_plane_vertical2/(byte) $1b )
  [739] (dword) gfx_init_plane_fill::plane_addr#3 ← phi( gfx_init_plane_blank/(const nomodify dword) PLANE_BLANK gfx_init_plane_full/(const nomodify dword) PLANE_FULL gfx_init_plane_vertical2/(const nomodify dword) PLANE_VERTICAL2 )
  [740] (dword~) gfx_init_plane_fill::$0 ← (dword) gfx_init_plane_fill::plane_addr#3 << (byte) 2
  [741] (word~) gfx_init_plane_fill::$1 ← > (dword~) gfx_init_plane_fill::$0
  [742] (byte) gfx_init_plane_fill::gfxbCpuBank#0 ← < (word~) gfx_init_plane_fill::$1
  [743] (byte) dtvSetCpuBankSegment1::cpuBankIdx#11 ← (byte) gfx_init_plane_fill::gfxbCpuBank#0
  [744] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_fill::@5
gfx_init_plane_fill::@5: scope:[gfx_init_plane_fill]  from gfx_init_plane_fill
  [745] (word~) gfx_init_plane_fill::$4 ← < (dword) gfx_init_plane_fill::plane_addr#3
  [746] (word~) gfx_init_plane_fill::$5 ← (word~) gfx_init_plane_fill::$4 & (word) $3fff
  [747] (word) gfx_init_plane_fill::gfxb#0 ← (word) $4000 + (word~) gfx_init_plane_fill::$5
  [748] (byte*) gfx_init_plane_fill::gfxb#6 ← (byte*)(word) gfx_init_plane_fill::gfxb#0
  to:gfx_init_plane_fill::@1
gfx_init_plane_fill::@1: scope:[gfx_init_plane_fill]  from gfx_init_plane_fill::@3 gfx_init_plane_fill::@5
  [749] (byte) gfx_init_plane_fill::by#4 ← phi( gfx_init_plane_fill::@3/(byte) gfx_init_plane_fill::by#1 gfx_init_plane_fill::@5/(byte) 0 )
  [749] (byte*) gfx_init_plane_fill::gfxb#3 ← phi( gfx_init_plane_fill::@3/(byte*) gfx_init_plane_fill::gfxb#1 gfx_init_plane_fill::@5/(byte*) gfx_init_plane_fill::gfxb#6 )
  to:gfx_init_plane_fill::@2
gfx_init_plane_fill::@2: scope:[gfx_init_plane_fill]  from gfx_init_plane_fill::@1 gfx_init_plane_fill::@2
  [750] (byte) gfx_init_plane_fill::bx#2 ← phi( gfx_init_plane_fill::@1/(byte) 0 gfx_init_plane_fill::@2/(byte) gfx_init_plane_fill::bx#1 )
  [750] (byte*) gfx_init_plane_fill::gfxb#2 ← phi( gfx_init_plane_fill::@1/(byte*) gfx_init_plane_fill::gfxb#3 gfx_init_plane_fill::@2/(byte*) gfx_init_plane_fill::gfxb#1 )
  [751] *((byte*) gfx_init_plane_fill::gfxb#2) ← (byte) gfx_init_plane_fill::fill#6
  [752] (byte*) gfx_init_plane_fill::gfxb#1 ← ++ (byte*) gfx_init_plane_fill::gfxb#2
  [753] (byte) gfx_init_plane_fill::bx#1 ← ++ (byte) gfx_init_plane_fill::bx#2
  [754] if((byte) gfx_init_plane_fill::bx#1!=(byte) $28) goto gfx_init_plane_fill::@2
  to:gfx_init_plane_fill::@3
gfx_init_plane_fill::@3: scope:[gfx_init_plane_fill]  from gfx_init_plane_fill::@2
  [755] (byte) gfx_init_plane_fill::by#1 ← ++ (byte) gfx_init_plane_fill::by#4
  [756] if((byte) gfx_init_plane_fill::by#1!=(byte) $c8) goto gfx_init_plane_fill::@1
  to:gfx_init_plane_fill::@4
gfx_init_plane_fill::@4: scope:[gfx_init_plane_fill]  from gfx_init_plane_fill::@3
  [757] phi()
  [758] call dtvSetCpuBankSegment1 
  to:gfx_init_plane_fill::@return
gfx_init_plane_fill::@return: scope:[gfx_init_plane_fill]  from gfx_init_plane_fill::@4
  [759] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from print_cls
  [760] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [761] (byte*) memset::end#0 ← (byte*)(void*) memset::str#0 + (const word) memset::num#0
  [762] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#0
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [763] (byte*) memset::dst#2 ← phi( memset::@1/(byte*) memset::dst#4 memset::@3/(byte*) memset::dst#1 )
  [764] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [765] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [766] *((byte*) memset::dst#2) ← (const byte) memset::c#0
  [767] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@2

(void()) print_char((byte) print_char::ch)
print_char: scope:[print_char]  from print_str_lines::@4
  [768] *((byte*) print_char_cursor#43) ← (byte) print_char::ch#0
  [769] (byte*) print_char_cursor#29 ← ++ (byte*) print_char_cursor#43
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [770] return 
  to:@return

(void()) print_ln()
print_ln: scope:[print_ln]  from print_str_lines::@5
  [771] phi()
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [772] (byte*) print_line_cursor#22 ← phi( print_ln/(byte*) print_line_cursor#1 print_ln::@1/(byte*) print_line_cursor#2 )
  [773] (byte*) print_line_cursor#2 ← (byte*) print_line_cursor#22 + (byte) $28
  [774] if((byte*) print_line_cursor#2<(byte*) print_char_cursor#44) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [775] return 
  to:@return

(byte*()) form_field_ptr((byte) form_field_ptr::field_idx)
form_field_ptr: scope:[form_field_ptr]  from form_control form_render_values::@2
  [776] (byte) form_field_ptr::field_idx#2 ← phi( form_control/(byte) form_field_ptr::field_idx#1 form_render_values::@2/(byte) form_field_ptr::field_idx#0 )
  [777] (byte) form_field_ptr::y#0 ← *((const byte*) form_fields_y + (byte) form_field_ptr::field_idx#2)
  [778] (word) form_field_ptr::line#0 ← *((const byte*) form_line_hi + (byte) form_field_ptr::y#0) w= *((const byte*) form_line_lo + (byte) form_field_ptr::y#0)
  [779] (byte) form_field_ptr::x#0 ← *((const byte*) form_fields_x + (byte) form_field_ptr::field_idx#2)
  [780] (byte*) form_field_ptr::return#0 ← (byte*)(word) form_field_ptr::line#0 + (byte) form_field_ptr::x#0
  to:form_field_ptr::@return
form_field_ptr::@return: scope:[form_field_ptr]  from form_field_ptr
  [781] return 
  to:@return

(void()) print_str_at((byte*) print_str_at::str , (byte*) print_str_at::at)
print_str_at: scope:[print_str_at]  from render_preset_name::@2
  [782] phi()
  to:print_str_at::@1
print_str_at::@1: scope:[print_str_at]  from print_str_at print_str_at::@2
  [783] (byte*) print_str_at::at#2 ← phi( print_str_at/(const nomodify byte*) FORM_SCREEN+(byte)(number) $28*(number) 2+(byte) $a print_str_at::@2/(byte*) print_str_at::at#0 )
  [783] (byte*) print_str_at::str#2 ← phi( print_str_at/(byte*) print_str_at::str#1 print_str_at::@2/(byte*) print_str_at::str#0 )
  [784] if((byte) 0!=*((byte*) print_str_at::str#2)) goto print_str_at::@2
  to:print_str_at::@return
print_str_at::@return: scope:[print_str_at]  from print_str_at::@1
  [785] return 
  to:@return
print_str_at::@2: scope:[print_str_at]  from print_str_at::@1
  [786] *((byte*) print_str_at::at#2) ← *((byte*) print_str_at::str#2)
  [787] (byte*) print_str_at::at#0 ← ++ (byte*) print_str_at::at#2
  [788] (byte*) print_str_at::str#0 ← ++ (byte*) print_str_at::str#2
  to:print_str_at::@1

(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_event_scan::@7
  [789] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1) ← *((const byte*) keyboard_matrix_row_bitmask + (byte) keyboard_matrix_read::rowid#0)
  [790] (byte) keyboard_matrix_read::return#0 ← ~ *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_B)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [791] return 
  to:@return

(byte()) keyboard_event_pressed((byte) keyboard_event_pressed::keycode)
keyboard_event_pressed: scope:[keyboard_event_pressed]  from keyboard_event_scan::@1 keyboard_event_scan::@17 keyboard_event_scan::@2 keyboard_event_scan::@3
  [792] (byte) keyboard_event_pressed::keycode#4 ← phi( keyboard_event_scan::@1/(const nomodify byte) KEY_RSHIFT keyboard_event_scan::@17/(const nomodify byte) KEY_LSHIFT keyboard_event_scan::@2/(const nomodify byte) KEY_CTRL keyboard_event_scan::@3/(const nomodify byte) KEY_COMMODORE )
  [793] (byte~) keyboard_event_pressed::$0 ← (byte) keyboard_event_pressed::keycode#4 >> (byte) 3
  [794] (byte) keyboard_event_pressed::row_bits#0 ← *((const byte*) keyboard_scan_values + (byte~) keyboard_event_pressed::$0)
  [795] (byte~) keyboard_event_pressed::$1 ← (byte) keyboard_event_pressed::keycode#4 & (byte) 7
  [796] (byte) keyboard_event_pressed::return#10 ← (byte) keyboard_event_pressed::row_bits#0 & *((const byte*) keyboard_matrix_col_bitmask + (byte~) keyboard_event_pressed::$1)
  to:keyboard_event_pressed::@return
keyboard_event_pressed::@return: scope:[keyboard_event_pressed]  from keyboard_event_pressed
  [797] return 
  to:@return

(void()) bitmap_line_ydxi((byte) bitmap_line_ydxi::y , (byte) bitmap_line_ydxi::x , (byte) bitmap_line_ydxi::y1 , (byte) bitmap_line_ydxi::yd , (byte) bitmap_line_ydxi::xd)
bitmap_line_ydxi: scope:[bitmap_line_ydxi]  from bitmap_line::@14 bitmap_line::@4
  [798] (byte) bitmap_line_ydxi::y1#6 ← phi( bitmap_line::@14/(byte) bitmap_line_ydxi::y1#1 bitmap_line::@4/(byte) bitmap_line_ydxi::y1#0 )
  [798] (byte) bitmap_line_ydxi::yd#5 ← phi( bitmap_line::@14/(byte) bitmap_line_ydxi::yd#1 bitmap_line::@4/(byte) bitmap_line_ydxi::yd#0 )
  [798] (byte) bitmap_line_ydxi::y#6 ← phi( bitmap_line::@14/(byte) bitmap_line_ydxi::y#1 bitmap_line::@4/(byte) bitmap_line_ydxi::y#0 )
  [798] (byte) bitmap_line_ydxi::x#5 ← phi( bitmap_line::@14/(byte) bitmap_line_ydxi::x#1 bitmap_line::@4/(byte) bitmap_line_ydxi::x#0 )
  [798] (byte) bitmap_line_ydxi::xd#2 ← phi( bitmap_line::@14/(byte) bitmap_line_ydxi::xd#1 bitmap_line::@4/(byte) bitmap_line_ydxi::xd#0 )
  [799] (byte) bitmap_line_ydxi::e#0 ← (byte) bitmap_line_ydxi::xd#2 >> (byte) 1
  to:bitmap_line_ydxi::@1
bitmap_line_ydxi::@1: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi bitmap_line_ydxi::@2
  [800] (byte) bitmap_line_ydxi::e#3 ← phi( bitmap_line_ydxi/(byte) bitmap_line_ydxi::e#0 bitmap_line_ydxi::@2/(byte) bitmap_line_ydxi::e#6 )
  [800] (byte) bitmap_line_ydxi::y#3 ← phi( bitmap_line_ydxi/(byte) bitmap_line_ydxi::y#6 bitmap_line_ydxi::@2/(byte) bitmap_line_ydxi::y#2 )
  [800] (byte) bitmap_line_ydxi::x#3 ← phi( bitmap_line_ydxi/(byte) bitmap_line_ydxi::x#5 bitmap_line_ydxi::@2/(byte) bitmap_line_ydxi::x#6 )
  [801] (byte) bitmap_plot::x#2 ← (byte) bitmap_line_ydxi::x#3
  [802] (byte) bitmap_plot::y#2 ← (byte) bitmap_line_ydxi::y#3
  [803] call bitmap_plot 
  to:bitmap_line_ydxi::@4
bitmap_line_ydxi::@4: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@1
  [804] (byte) bitmap_line_ydxi::y#2 ← ++ (byte) bitmap_line_ydxi::y#3
  [805] (byte) bitmap_line_ydxi::e#1 ← (byte) bitmap_line_ydxi::e#3 + (byte) bitmap_line_ydxi::xd#2
  [806] if((byte) bitmap_line_ydxi::yd#5>=(byte) bitmap_line_ydxi::e#1) goto bitmap_line_ydxi::@2
  to:bitmap_line_ydxi::@3
bitmap_line_ydxi::@3: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@4
  [807] (byte) bitmap_line_ydxi::x#2 ← ++ (byte) bitmap_line_ydxi::x#3
  [808] (byte) bitmap_line_ydxi::e#2 ← (byte) bitmap_line_ydxi::e#1 - (byte) bitmap_line_ydxi::yd#5
  to:bitmap_line_ydxi::@2
bitmap_line_ydxi::@2: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@3 bitmap_line_ydxi::@4
  [809] (byte) bitmap_line_ydxi::e#6 ← phi( bitmap_line_ydxi::@3/(byte) bitmap_line_ydxi::e#2 bitmap_line_ydxi::@4/(byte) bitmap_line_ydxi::e#1 )
  [809] (byte) bitmap_line_ydxi::x#6 ← phi( bitmap_line_ydxi::@3/(byte) bitmap_line_ydxi::x#2 bitmap_line_ydxi::@4/(byte) bitmap_line_ydxi::x#3 )
  [810] (byte~) bitmap_line_ydxi::$6 ← (byte) bitmap_line_ydxi::y1#6 + (byte) 1
  [811] if((byte) bitmap_line_ydxi::y#2!=(byte~) bitmap_line_ydxi::$6) goto bitmap_line_ydxi::@1
  to:bitmap_line_ydxi::@return
bitmap_line_ydxi::@return: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@2
  [812] return 
  to:@return

(void()) bitmap_line_xdyi((byte) bitmap_line_xdyi::x , (byte) bitmap_line_xdyi::y , (byte) bitmap_line_xdyi::x1 , (byte) bitmap_line_xdyi::xd , (byte) bitmap_line_xdyi::yd)
bitmap_line_xdyi: scope:[bitmap_line_xdyi]  from bitmap_line::@13 bitmap_line::@8
  [813] (byte) bitmap_line_xdyi::x1#6 ← phi( bitmap_line::@13/(byte) bitmap_line_xdyi::x1#1 bitmap_line::@8/(byte) bitmap_line_xdyi::x1#0 )
  [813] (byte) bitmap_line_xdyi::xd#5 ← phi( bitmap_line::@13/(byte) bitmap_line_xdyi::xd#1 bitmap_line::@8/(byte) bitmap_line_xdyi::xd#0 )
  [813] (byte) bitmap_line_xdyi::y#5 ← phi( bitmap_line::@13/(byte) bitmap_line_xdyi::y#1 bitmap_line::@8/(byte) bitmap_line_xdyi::y#0 )
  [813] (byte) bitmap_line_xdyi::x#6 ← phi( bitmap_line::@13/(byte) bitmap_line_xdyi::x#1 bitmap_line::@8/(byte) bitmap_line_xdyi::x#0 )
  [813] (byte) bitmap_line_xdyi::yd#2 ← phi( bitmap_line::@13/(byte) bitmap_line_xdyi::yd#1 bitmap_line::@8/(byte) bitmap_line_xdyi::yd#0 )
  [814] (byte) bitmap_line_xdyi::e#0 ← (byte) bitmap_line_xdyi::yd#2 >> (byte) 1
  to:bitmap_line_xdyi::@1
bitmap_line_xdyi::@1: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi bitmap_line_xdyi::@2
  [815] (byte) bitmap_line_xdyi::e#3 ← phi( bitmap_line_xdyi/(byte) bitmap_line_xdyi::e#0 bitmap_line_xdyi::@2/(byte) bitmap_line_xdyi::e#6 )
  [815] (byte) bitmap_line_xdyi::y#3 ← phi( bitmap_line_xdyi/(byte) bitmap_line_xdyi::y#5 bitmap_line_xdyi::@2/(byte) bitmap_line_xdyi::y#6 )
  [815] (byte) bitmap_line_xdyi::x#3 ← phi( bitmap_line_xdyi/(byte) bitmap_line_xdyi::x#6 bitmap_line_xdyi::@2/(byte) bitmap_line_xdyi::x#2 )
  [816] (byte) bitmap_plot::x#0 ← (byte) bitmap_line_xdyi::x#3
  [817] (byte) bitmap_plot::y#0 ← (byte) bitmap_line_xdyi::y#3
  [818] call bitmap_plot 
  to:bitmap_line_xdyi::@4
bitmap_line_xdyi::@4: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@1
  [819] (byte) bitmap_line_xdyi::x#2 ← ++ (byte) bitmap_line_xdyi::x#3
  [820] (byte) bitmap_line_xdyi::e#1 ← (byte) bitmap_line_xdyi::e#3 + (byte) bitmap_line_xdyi::yd#2
  [821] if((byte) bitmap_line_xdyi::xd#5>=(byte) bitmap_line_xdyi::e#1) goto bitmap_line_xdyi::@2
  to:bitmap_line_xdyi::@3
bitmap_line_xdyi::@3: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@4
  [822] (byte) bitmap_line_xdyi::y#2 ← ++ (byte) bitmap_line_xdyi::y#3
  [823] (byte) bitmap_line_xdyi::e#2 ← (byte) bitmap_line_xdyi::e#1 - (byte) bitmap_line_xdyi::xd#5
  to:bitmap_line_xdyi::@2
bitmap_line_xdyi::@2: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@3 bitmap_line_xdyi::@4
  [824] (byte) bitmap_line_xdyi::e#6 ← phi( bitmap_line_xdyi::@3/(byte) bitmap_line_xdyi::e#2 bitmap_line_xdyi::@4/(byte) bitmap_line_xdyi::e#1 )
  [824] (byte) bitmap_line_xdyi::y#6 ← phi( bitmap_line_xdyi::@3/(byte) bitmap_line_xdyi::y#2 bitmap_line_xdyi::@4/(byte) bitmap_line_xdyi::y#3 )
  [825] (byte~) bitmap_line_xdyi::$6 ← (byte) bitmap_line_xdyi::x1#6 + (byte) 1
  [826] if((byte) bitmap_line_xdyi::x#2!=(byte~) bitmap_line_xdyi::$6) goto bitmap_line_xdyi::@1
  to:bitmap_line_xdyi::@return
bitmap_line_xdyi::@return: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@2
  [827] return 
  to:@return

(void()) bitmap_line_ydxd((byte) bitmap_line_ydxd::y , (byte) bitmap_line_ydxd::x , (byte) bitmap_line_ydxd::y1 , (byte) bitmap_line_ydxd::yd , (byte) bitmap_line_ydxd::xd)
bitmap_line_ydxd: scope:[bitmap_line_ydxd]  from bitmap_line::@10 bitmap_line::@6
  [828] (byte) bitmap_line_ydxd::y1#6 ← phi( bitmap_line::@10/(byte) bitmap_line_ydxd::y1#0 bitmap_line::@6/(byte) bitmap_line_ydxd::y1#1 )
  [828] (byte) bitmap_line_ydxd::yd#5 ← phi( bitmap_line::@10/(byte) bitmap_line_ydxd::yd#0 bitmap_line::@6/(byte) bitmap_line_ydxd::yd#1 )
  [828] (byte) bitmap_line_ydxd::y#7 ← phi( bitmap_line::@10/(byte) bitmap_line_ydxd::y#0 bitmap_line::@6/(byte) bitmap_line_ydxd::y#1 )
  [828] (byte) bitmap_line_ydxd::x#5 ← phi( bitmap_line::@10/(byte) bitmap_line_ydxd::x#0 bitmap_line::@6/(byte) bitmap_line_ydxd::x#1 )
  [828] (byte) bitmap_line_ydxd::xd#2 ← phi( bitmap_line::@10/(byte) bitmap_line_ydxd::xd#0 bitmap_line::@6/(byte) bitmap_line_ydxd::xd#1 )
  [829] (byte) bitmap_line_ydxd::e#0 ← (byte) bitmap_line_ydxd::xd#2 >> (byte) 1
  to:bitmap_line_ydxd::@1
bitmap_line_ydxd::@1: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd bitmap_line_ydxd::@2
  [830] (byte) bitmap_line_ydxd::e#3 ← phi( bitmap_line_ydxd/(byte) bitmap_line_ydxd::e#0 bitmap_line_ydxd::@2/(byte) bitmap_line_ydxd::e#6 )
  [830] (byte) bitmap_line_ydxd::y#2 ← phi( bitmap_line_ydxd/(byte) bitmap_line_ydxd::y#7 bitmap_line_ydxd::@2/(byte) bitmap_line_ydxd::y#3 )
  [830] (byte) bitmap_line_ydxd::x#3 ← phi( bitmap_line_ydxd/(byte) bitmap_line_ydxd::x#5 bitmap_line_ydxd::@2/(byte) bitmap_line_ydxd::x#6 )
  [831] (byte) bitmap_plot::x#3 ← (byte) bitmap_line_ydxd::x#3
  [832] (byte) bitmap_plot::y#3 ← (byte) bitmap_line_ydxd::y#2
  [833] call bitmap_plot 
  to:bitmap_line_ydxd::@4
bitmap_line_ydxd::@4: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@1
  [834] (byte) bitmap_line_ydxd::y#3 ← ++ (byte) bitmap_line_ydxd::y#2
  [835] (byte) bitmap_line_ydxd::e#1 ← (byte) bitmap_line_ydxd::e#3 + (byte) bitmap_line_ydxd::xd#2
  [836] if((byte) bitmap_line_ydxd::yd#5>=(byte) bitmap_line_ydxd::e#1) goto bitmap_line_ydxd::@2
  to:bitmap_line_ydxd::@3
bitmap_line_ydxd::@3: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@4
  [837] (byte) bitmap_line_ydxd::x#2 ← -- (byte) bitmap_line_ydxd::x#3
  [838] (byte) bitmap_line_ydxd::e#2 ← (byte) bitmap_line_ydxd::e#1 - (byte) bitmap_line_ydxd::yd#5
  to:bitmap_line_ydxd::@2
bitmap_line_ydxd::@2: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@3 bitmap_line_ydxd::@4
  [839] (byte) bitmap_line_ydxd::e#6 ← phi( bitmap_line_ydxd::@3/(byte) bitmap_line_ydxd::e#2 bitmap_line_ydxd::@4/(byte) bitmap_line_ydxd::e#1 )
  [839] (byte) bitmap_line_ydxd::x#6 ← phi( bitmap_line_ydxd::@3/(byte) bitmap_line_ydxd::x#2 bitmap_line_ydxd::@4/(byte) bitmap_line_ydxd::x#3 )
  [840] (byte~) bitmap_line_ydxd::$6 ← (byte) bitmap_line_ydxd::y1#6 + (byte) 1
  [841] if((byte) bitmap_line_ydxd::y#3!=(byte~) bitmap_line_ydxd::$6) goto bitmap_line_ydxd::@1
  to:bitmap_line_ydxd::@return
bitmap_line_ydxd::@return: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@2
  [842] return 
  to:@return

(void()) bitmap_line_xdyd((byte) bitmap_line_xdyd::x , (byte) bitmap_line_xdyd::y , (byte) bitmap_line_xdyd::x1 , (byte) bitmap_line_xdyd::xd , (byte) bitmap_line_xdyd::yd)
bitmap_line_xdyd: scope:[bitmap_line_xdyd]  from bitmap_line::@12 bitmap_line::@9
  [843] (byte) bitmap_line_xdyd::x1#6 ← phi( bitmap_line::@12/(byte) bitmap_line_xdyd::x1#1 bitmap_line::@9/(byte) bitmap_line_xdyd::x1#0 )
  [843] (byte) bitmap_line_xdyd::xd#5 ← phi( bitmap_line::@12/(byte) bitmap_line_xdyd::xd#1 bitmap_line::@9/(byte) bitmap_line_xdyd::xd#0 )
  [843] (byte) bitmap_line_xdyd::y#5 ← phi( bitmap_line::@12/(byte) bitmap_line_xdyd::y#1 bitmap_line::@9/(byte) bitmap_line_xdyd::y#0 )
  [843] (byte) bitmap_line_xdyd::x#6 ← phi( bitmap_line::@12/(byte) bitmap_line_xdyd::x#1 bitmap_line::@9/(byte) bitmap_line_xdyd::x#0 )
  [843] (byte) bitmap_line_xdyd::yd#2 ← phi( bitmap_line::@12/(byte) bitmap_line_xdyd::yd#1 bitmap_line::@9/(byte) bitmap_line_xdyd::yd#0 )
  [844] (byte) bitmap_line_xdyd::e#0 ← (byte) bitmap_line_xdyd::yd#2 >> (byte) 1
  to:bitmap_line_xdyd::@1
bitmap_line_xdyd::@1: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd bitmap_line_xdyd::@2
  [845] (byte) bitmap_line_xdyd::e#3 ← phi( bitmap_line_xdyd/(byte) bitmap_line_xdyd::e#0 bitmap_line_xdyd::@2/(byte) bitmap_line_xdyd::e#6 )
  [845] (byte) bitmap_line_xdyd::y#3 ← phi( bitmap_line_xdyd/(byte) bitmap_line_xdyd::y#5 bitmap_line_xdyd::@2/(byte) bitmap_line_xdyd::y#6 )
  [845] (byte) bitmap_line_xdyd::x#3 ← phi( bitmap_line_xdyd/(byte) bitmap_line_xdyd::x#6 bitmap_line_xdyd::@2/(byte) bitmap_line_xdyd::x#2 )
  [846] (byte) bitmap_plot::x#1 ← (byte) bitmap_line_xdyd::x#3
  [847] (byte) bitmap_plot::y#1 ← (byte) bitmap_line_xdyd::y#3
  [848] call bitmap_plot 
  to:bitmap_line_xdyd::@4
bitmap_line_xdyd::@4: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@1
  [849] (byte) bitmap_line_xdyd::x#2 ← ++ (byte) bitmap_line_xdyd::x#3
  [850] (byte) bitmap_line_xdyd::e#1 ← (byte) bitmap_line_xdyd::e#3 + (byte) bitmap_line_xdyd::yd#2
  [851] if((byte) bitmap_line_xdyd::xd#5>=(byte) bitmap_line_xdyd::e#1) goto bitmap_line_xdyd::@2
  to:bitmap_line_xdyd::@3
bitmap_line_xdyd::@3: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@4
  [852] (byte) bitmap_line_xdyd::y#2 ← -- (byte) bitmap_line_xdyd::y#3
  [853] (byte) bitmap_line_xdyd::e#2 ← (byte) bitmap_line_xdyd::e#1 - (byte) bitmap_line_xdyd::xd#5
  to:bitmap_line_xdyd::@2
bitmap_line_xdyd::@2: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@3 bitmap_line_xdyd::@4
  [854] (byte) bitmap_line_xdyd::e#6 ← phi( bitmap_line_xdyd::@3/(byte) bitmap_line_xdyd::e#2 bitmap_line_xdyd::@4/(byte) bitmap_line_xdyd::e#1 )
  [854] (byte) bitmap_line_xdyd::y#6 ← phi( bitmap_line_xdyd::@3/(byte) bitmap_line_xdyd::y#2 bitmap_line_xdyd::@4/(byte) bitmap_line_xdyd::y#3 )
  [855] (byte~) bitmap_line_xdyd::$6 ← (byte) bitmap_line_xdyd::x1#6 + (byte) 1
  [856] if((byte) bitmap_line_xdyd::x#2!=(byte~) bitmap_line_xdyd::$6) goto bitmap_line_xdyd::@1
  to:bitmap_line_xdyd::@return
bitmap_line_xdyd::@return: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@2
  [857] return 
  to:@return

(void()) bitmap_plot((byte) bitmap_plot::x , (byte) bitmap_plot::y)
bitmap_plot: scope:[bitmap_plot]  from bitmap_line_xdyd::@1 bitmap_line_xdyi::@1 bitmap_line_ydxd::@1 bitmap_line_ydxi::@1
  [858] (byte) bitmap_plot::y#4 ← phi( bitmap_line_xdyd::@1/(byte) bitmap_plot::y#1 bitmap_line_xdyi::@1/(byte) bitmap_plot::y#0 bitmap_line_ydxd::@1/(byte) bitmap_plot::y#3 bitmap_line_ydxi::@1/(byte) bitmap_plot::y#2 )
  [858] (byte) bitmap_plot::x#4 ← phi( bitmap_line_xdyd::@1/(byte) bitmap_plot::x#1 bitmap_line_xdyi::@1/(byte) bitmap_plot::x#0 bitmap_line_ydxd::@1/(byte) bitmap_plot::x#3 bitmap_line_ydxi::@1/(byte) bitmap_plot::x#2 )
  [859] (word) bitmap_plot::plotter_x#0 ← *((const to_nomodify byte*) bitmap_plot_xhi + (byte) bitmap_plot::x#4) w= *((const to_nomodify byte*) bitmap_plot_xlo + (byte) bitmap_plot::x#4)
  [860] (word) bitmap_plot::plotter_y#0 ← *((const to_nomodify byte*) bitmap_plot_yhi + (byte) bitmap_plot::y#4) w= *((const to_nomodify byte*) bitmap_plot_ylo + (byte) bitmap_plot::y#4)
  [861] (word) bitmap_plot::plotter#0 ← (word) bitmap_plot::plotter_x#0 + (word) bitmap_plot::plotter_y#0
  [862] (byte~) bitmap_plot::$1 ← *((byte*)(word) bitmap_plot::plotter#0) | *((const to_nomodify byte*) bitmap_plot_bit + (byte) bitmap_plot::x#4)
  [863] *((byte*)(word) bitmap_plot::plotter#0) ← (byte~) bitmap_plot::$1
  to:bitmap_plot::@return
bitmap_plot::@return: scope:[bitmap_plot]  from bitmap_plot
  [864] return 
  to:@return
