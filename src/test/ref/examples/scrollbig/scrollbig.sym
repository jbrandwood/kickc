(const nomodify byte*) CHARGEN = (byte*) 53248
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = (byte) $21
(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL2 = (byte) $16
(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER = (byte) $12
(const nomodify byte*) PROCPORT = (byte*) 1
(const byte*) SCREEN = (byte*) 1024
(const byte*) TEXT = (byte*) "-= this is rex of camelot testing a scroller created in kickc. kickc is an optimizing c-compiler for 6502 assembler. =-     "
(const nomodify struct MOS6569_VICII*) VICII = (struct MOS6569_VICII*) 53248
(byte) current_bit
(byte) current_bit#13 current_bit zp[1]:2 42.599999999999994
(byte) current_bit#23 current_bit zp[1]:2 5616.833333333334
(byte) current_bit#30 current_bit zp[1]:2 187.85714285714286
(byte) current_bit#4 current_bit zp[1]:2 1501.5
(byte*) current_chargen
(byte*) current_chargen#12 current_chargen zp[2]:7 42.599999999999994
(byte*) current_chargen#21 current_chargen zp[2]:7 5672.444444444444
(byte*) current_chargen#28 current_chargen zp[2]:7 146.11111111111111
(byte*) current_chargen#4 current_chargen zp[2]:7 2002.0
(void()) fillscreen((byte*) fillscreen::screen , (byte) fillscreen::fill)
(label) fillscreen::@1
(label) fillscreen::@2
(label) fillscreen::@return
(byte*) fillscreen::cursor
(byte*) fillscreen::cursor#1 cursor zp[2]:7 202.0
(byte*) fillscreen::cursor#2 cursor zp[2]:7 134.66666666666666
(byte) fillscreen::fill
(const byte) fillscreen::fill#0 fill = (byte) $20
(byte*) fillscreen::screen
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(byte()) next_char()
(label) next_char::@1
(label) next_char::@2
(label) next_char::@return
(byte) next_char::c
(byte) next_char::c#0 reg byte x 15001.5
(byte) next_char::c#1 reg byte x 20002.0
(byte) next_char::return
(byte) next_char::return#0 reg byte a 2002.0
(byte) next_char::return#1 reg byte x 5250.75
(byte*) nxt
(byte*) nxt#15 nxt zp[2]:5 42.599999999999994
(byte*) nxt#19 nxt zp[2]:5 20002.0
(byte*) nxt#20 nxt zp[2]:5 1571.7142857142858
(byte*) nxt#33 nxt zp[2]:5 1776.4166666666665
(byte*) nxt#37 nxt zp[2]:5 116.83333333333334
(byte) scroll
(byte) scroll#11 reg byte x 42.599999999999994
(byte) scroll#19 reg byte x 78.5
(byte) scroll#2 reg byte x 151.5
(void()) scroll_bit()
(word~) scroll_bit::$7 zp[2]:7 2002.0
(byte~) scroll_bit::$9 reg byte a 200002.0
(label) scroll_bit::@1
(label) scroll_bit::@2
(label) scroll_bit::@3
(label) scroll_bit::@4
(label) scroll_bit::@5
(label) scroll_bit::@6
(label) scroll_bit::@7
(label) scroll_bit::@8
(label) scroll_bit::@return
(byte) scroll_bit::b
(byte) scroll_bit::b#2 reg byte a 100001.0
(byte) scroll_bit::bits
(byte) scroll_bit::bits#0 reg byte a 200002.0
(word) scroll_bit::c
(word) scroll_bit::c#0 c zp[2]:7 2002.0
(byte) scroll_bit::r
(byte) scroll_bit::r#1 reg byte x 150001.5
(byte) scroll_bit::r#2 reg byte x 37500.375
(byte*) scroll_bit::sc
(byte*) scroll_bit::sc#1 sc zp[2]:3 66667.33333333333
(byte*) scroll_bit::sc#2 sc zp[2]:3 42857.57142857143
(void()) scroll_hard()
(label) scroll_hard::@1
(label) scroll_hard::@2
(label) scroll_hard::@return
(byte) scroll_hard::i
(byte) scroll_hard::i#1 reg byte x 2000002.0
(byte) scroll_hard::i#2 reg byte x 1900001.9000000006
(void()) scroll_soft()
(label) scroll_soft::@1
(label) scroll_soft::@2
(label) scroll_soft::@return

reg byte x [ scroll#19 scroll#11 scroll#2 ]
zp[1]:2 [ current_bit#30 current_bit#13 current_bit#23 current_bit#4 ]
reg byte x [ scroll_bit::r#2 scroll_bit::r#1 ]
zp[2]:3 [ scroll_bit::sc#2 scroll_bit::sc#1 ]
reg byte a [ scroll_bit::b#2 ]
reg byte x [ scroll_hard::i#2 scroll_hard::i#1 ]
zp[2]:5 [ nxt#19 nxt#33 nxt#15 nxt#37 nxt#20 ]
reg byte x [ next_char::return#1 next_char::c#0 next_char::c#1 ]
zp[2]:7 [ fillscreen::cursor#2 fillscreen::cursor#1 current_chargen#28 current_chargen#12 current_chargen#21 current_chargen#4 scroll_bit::$7 scroll_bit::c#0 ]
reg byte a [ next_char::return#0 ]
reg byte a [ scroll_bit::bits#0 ]
reg byte a [ scroll_bit::$9 ]
