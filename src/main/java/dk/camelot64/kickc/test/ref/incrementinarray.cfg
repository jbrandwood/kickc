@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@7
@7: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @7
  [3] phi() [ ] ( )
main: scope:[main]  from @7
  [4] phi() [ ] ( main:2 [ ] )
  [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main main::@6
  [6] (byte) main::i#2 ← phi( main/(byte/signed byte/word/signed word) 0 main::@6/(byte) main::i#1 ) [ char_cursor#19 line_cursor#13 main::i#2 ] ( main:2 [ char_cursor#19 line_cursor#13 main::i#2 ] )
  [6] (byte*) line_cursor#13 ← phi( main/((byte*))(word/signed word) 1024 main::@6/(byte*) line_cursor#1 ) [ char_cursor#19 line_cursor#13 main::i#2 ] ( main:2 [ char_cursor#19 line_cursor#13 main::i#2 ] )
  [6] (byte*) char_cursor#19 ← phi( main/((byte*))(word/signed word) 1024 main::@6/(byte*~) char_cursor#25 ) [ char_cursor#19 line_cursor#13 main::i#2 ] ( main:2 [ char_cursor#19 line_cursor#13 main::i#2 ] )
  [7] call print_str param-assignment [ line_cursor#13 main::i#2 char_cursor#10 ] ( main:2 [ line_cursor#13 main::i#2 char_cursor#10 ] )
  to:main::@4
main::@4: scope:[main]  from main::@1
  [8] phi() [ line_cursor#13 main::i#2 char_cursor#10 ] ( main:2 [ line_cursor#13 main::i#2 char_cursor#10 ] )
  [9] call print_ln param-assignment [ main::i#2 line_cursor#1 ] ( main:2 [ main::i#2 line_cursor#1 ] )
  to:main::@5
main::@5: scope:[main]  from main::@4
  [10] *((const string) txt#0+(byte/signed byte/word/signed word) 1) ← ++ *((const string) txt#0+(byte/signed byte/word/signed word) 1) [ main::i#2 line_cursor#1 ] ( main:2 [ main::i#2 line_cursor#1 ] )
  [11] (byte) main::i#1 ← ++ (byte) main::i#2 [ line_cursor#1 main::i#1 ] ( main:2 [ line_cursor#1 main::i#1 ] )
  [12] if((byte) main::i#1!=(byte/signed byte/word/signed word) 11) goto main::@6 [ line_cursor#1 main::i#1 ] ( main:2 [ line_cursor#1 main::i#1 ] )
  to:main::@return
main::@return: scope:[main]  from main::@5
  [13] return  [ ] ( main:2 [ ] )
  to:@return
main::@6: scope:[main]  from main::@5
  [14] (byte*~) char_cursor#25 ← (byte*) line_cursor#1 [ char_cursor#25 line_cursor#1 main::i#1 ] ( main:2 [ char_cursor#25 line_cursor#1 main::i#1 ] )
  to:main::@1
print_ln: scope:[print_ln]  from main::@4
  [15] phi() [ line_cursor#13 char_cursor#10 ] ( main:2::print_ln:9 [ main::i#2 line_cursor#13 char_cursor#10 ] )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [16] (byte*) line_cursor#6 ← phi( print_ln/(byte*) line_cursor#13 print_ln::@1/(byte*) line_cursor#1 ) [ line_cursor#6 char_cursor#10 ] ( main:2::print_ln:9 [ main::i#2 line_cursor#6 char_cursor#10 ] )
  [17] (byte*) line_cursor#1 ← (byte*) line_cursor#6 + (byte/signed byte/word/signed word) 40 [ line_cursor#1 char_cursor#10 ] ( main:2::print_ln:9 [ main::i#2 line_cursor#1 char_cursor#10 ] )
  [18] if((byte*) line_cursor#1<(byte*) char_cursor#10) goto print_ln::@1 [ line_cursor#1 char_cursor#10 ] ( main:2::print_ln:9 [ main::i#2 line_cursor#1 char_cursor#10 ] )
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [19] return  [ line_cursor#1 ] ( main:2::print_ln:9 [ main::i#2 line_cursor#1 ] )
  to:@return
print_str: scope:[print_str]  from main::@1
  [20] phi() [ char_cursor#19 ] ( main:2::print_str:7 [ line_cursor#13 main::i#2 char_cursor#19 ] )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [21] (byte*) char_cursor#10 ← phi( print_str/(byte*) char_cursor#19 print_str::@2/(byte*) char_cursor#1 ) [ char_cursor#10 print_str::str#2 ] ( main:2::print_str:7 [ line_cursor#13 main::i#2 char_cursor#10 print_str::str#2 ] )
  [21] (byte*) print_str::str#2 ← phi( print_str/(const string) txt#0 print_str::@2/(byte*) print_str::str#0 ) [ char_cursor#10 print_str::str#2 ] ( main:2::print_str:7 [ line_cursor#13 main::i#2 char_cursor#10 print_str::str#2 ] )
  [22] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#10 print_str::str#2 ] ( main:2::print_str:7 [ line_cursor#13 main::i#2 char_cursor#10 print_str::str#2 ] )
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [23] return  [ char_cursor#10 ] ( main:2::print_str:7 [ line_cursor#13 main::i#2 char_cursor#10 ] )
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [24] *((byte*) char_cursor#10) ← *((byte*) print_str::str#2) [ char_cursor#10 print_str::str#2 ] ( main:2::print_str:7 [ line_cursor#13 main::i#2 char_cursor#10 print_str::str#2 ] )
  [25] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#10 [ print_str::str#2 char_cursor#1 ] ( main:2::print_str:7 [ line_cursor#13 main::i#2 print_str::str#2 char_cursor#1 ] )
  [26] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2 [ print_str::str#0 char_cursor#1 ] ( main:2::print_str:7 [ line_cursor#13 main::i#2 print_str::str#0 char_cursor#1 ] )
  to:print_str::@1
print_cls: scope:[print_cls]  from main
  [27] phi() [ ] ( main:2::print_cls:5 [ ] )
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [28] (byte*) print_cls::sc#2 ← phi( print_cls/((byte*))(word/signed word) 1024 print_cls::@1/(byte*) print_cls::sc#1 ) [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [29] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [30] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  [31] if((byte*) print_cls::sc#1!=(word/signed word) 1024+(word/signed word) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [32] return  [ ] ( main:2::print_cls:5 [ ] )
  to:@return
