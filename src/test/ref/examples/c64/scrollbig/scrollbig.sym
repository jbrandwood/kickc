const nomodify byte* CHARGEN = (byte*) 53248
const byte OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = $21
const byte OFFSET_STRUCT_MOS6569_VICII_CONTROL2 = $16
const byte OFFSET_STRUCT_MOS6569_VICII_RASTER = $12
const nomodify byte* PROCPORT = (byte*) 1
const byte* SCREEN = (byte*) 1024
const byte* TEXT = "-= this is rex of camelot testing a scroller created in kickc. kickc is an optimizing c-compiler for 6502 assembler. =-     "
const nomodify struct MOS6569_VICII* VICII = (struct MOS6569_VICII*) 53248
byte current_bit
byte current_bit#13 current_bit zp[1]:2 42.599999999999994
byte current_bit#23 current_bit zp[1]:2 5616.833333333334
byte current_bit#30 current_bit zp[1]:2 187.85714285714286
byte current_bit#4 current_bit zp[1]:2 1501.5
byte* current_chargen
byte* current_chargen#12 current_chargen zp[2]:3 42.599999999999994
byte* current_chargen#21 current_chargen zp[2]:3 5672.444444444444
byte* current_chargen#28 current_chargen zp[2]:3 146.11111111111111
byte* current_chargen#4 current_chargen zp[2]:3 2002.0
void fillscreen(byte* fillscreen::screen , byte fillscreen::fill)
byte* fillscreen::cursor
byte* fillscreen::cursor#1 cursor zp[2]:3 202.0
byte* fillscreen::cursor#2 cursor zp[2]:3 134.66666666666666
byte fillscreen::fill
const byte fillscreen::fill#0 fill = $20
byte* fillscreen::screen
void main()
byte next_char()
byte next_char::c
byte next_char::c#0 reg byte x 15001.5
byte next_char::c#1 reg byte x 20002.0
byte next_char::return
byte next_char::return#0 reg byte a 2002.0
byte next_char::return#1 reg byte x 5250.75
byte* nxt
byte* nxt#15 nxt zp[2]:7 42.599999999999994
byte* nxt#19 nxt zp[2]:7 20002.0
byte* nxt#20 nxt zp[2]:7 1571.7142857142858
byte* nxt#33 nxt zp[2]:7 1776.4166666666665
byte* nxt#37 nxt zp[2]:7 116.83333333333334
byte scroll
byte scroll#11 reg byte x 42.599999999999994
byte scroll#19 reg byte x 78.5
byte scroll#2 reg byte x 151.5
void scroll_bit()
word~ scroll_bit::$7 zp[2]:3 2002.0
byte~ scroll_bit::$9 reg byte a 200002.0
byte scroll_bit::b
byte scroll_bit::b#2 reg byte a 100001.0
byte scroll_bit::bits
byte scroll_bit::bits#0 reg byte a 200002.0
word scroll_bit::c
word scroll_bit::c#0 c zp[2]:3 2002.0
byte scroll_bit::r
byte scroll_bit::r#1 reg byte x 150001.5
byte scroll_bit::r#2 reg byte x 37500.375
byte* scroll_bit::sc
byte* scroll_bit::sc#1 sc zp[2]:5 66667.33333333333
byte* scroll_bit::sc#2 sc zp[2]:5 42857.57142857143
void scroll_hard()
byte scroll_hard::i
byte scroll_hard::i#1 reg byte x 2000002.0
byte scroll_hard::i#2 reg byte x 1900001.9000000006
void scroll_soft()

reg byte x [ scroll#19 scroll#11 scroll#2 ]
zp[1]:2 [ current_bit#30 current_bit#13 current_bit#23 current_bit#4 ]
zp[2]:3 [ fillscreen::cursor#2 fillscreen::cursor#1 current_chargen#28 current_chargen#12 current_chargen#21 current_chargen#4 scroll_bit::$7 scroll_bit::c#0 ]
reg byte x [ scroll_bit::r#2 scroll_bit::r#1 ]
zp[2]:5 [ scroll_bit::sc#2 scroll_bit::sc#1 ]
reg byte a [ scroll_bit::b#2 ]
zp[2]:7 [ nxt#19 nxt#33 nxt#15 nxt#37 nxt#20 ]
reg byte x [ next_char::return#1 next_char::c#0 next_char::c#1 ]
reg byte x [ scroll_hard::i#2 scroll_hard::i#1 ]
reg byte a [ next_char::return#0 ]
reg byte a [ scroll_bit::bits#0 ]
reg byte a [ scroll_bit::$9 ]
