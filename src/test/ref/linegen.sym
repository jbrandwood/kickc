__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char SIZEOF_UNSIGNED_INT = 2
unsigned int divr16u(unsigned int dividend , unsigned int divisor , unsigned int rem)
char divr16u::$1 // reg byte a 2002.0
char divr16u::$2 // reg byte a 2002.0
unsigned int divr16u::dividend
unsigned int divr16u::dividend#0 // dividend zp[2]:4 250.25
unsigned int divr16u::dividend#1 // dividend zp[2]:4 22.0
unsigned int divr16u::dividend#3 // dividend zp[2]:4 443.42857142857144
unsigned int divr16u::dividend#5 // dividend zp[2]:4 112.0
unsigned int divr16u::divisor
char divr16u::i
char divr16u::i#1 // reg byte x 1501.5
char divr16u::i#2 // reg byte x 154.0
unsigned int divr16u::quotient
unsigned int divr16u::quotient#1 // quotient zp[2]:2 1501.5
unsigned int divr16u::quotient#2 // quotient zp[2]:2 1001.0
unsigned int divr16u::quotient#3 // quotient zp[2]:2 250.25
unsigned int divr16u::rem
unsigned int divr16u::rem#0 // rem zp[2]:8 750.75
unsigned int divr16u::rem#1 // rem zp[2]:8 2002.0
unsigned int divr16u::rem#10 // rem zp[2]:8 112.0
unsigned int divr16u::rem#11 // rem zp[2]:8 1034.6666666666667
unsigned int divr16u::rem#2 // rem zp[2]:8 2002.0
unsigned int divr16u::rem#4 // rem zp[2]:8 22.0
unsigned int divr16u::rem#5 // rem zp[2]:8 2103.0
unsigned int divr16u::rem#6 // rem zp[2]:8 1001.0
unsigned int divr16u::return
unsigned int divr16u::return#0 // return zp[2]:2 432.1428571428571
unsigned int divr16u::return#2 // return zp[2]:2 22.0
unsigned int divr16u::return#3 // return zp[2]:2 22.0
void lin16u_gen(unsigned int min , unsigned int max , unsigned int *lintab , unsigned int length)
unsigned int lin16u_gen::$8 // zp[2]:8 202.0
unsigned int lin16u_gen::ampl
unsigned int lin16u_gen::ampl#0 // ampl zp[2]:4 22.0
unsigned int lin16u_gen::i
unsigned int lin16u_gen::i#1 // i zp[2]:6 202.0
unsigned int lin16u_gen::i#2 // i zp[2]:6 50.5
unsigned int lin16u_gen::length
unsigned int *lin16u_gen::lintab
unsigned int *lin16u_gen::lintab#3 // lintab zp[2]:10 101.0
unsigned int *lin16u_gen::lintab#4 // lintab zp[2]:10 62.8
unsigned int *lin16u_gen::lintab#6 // lintab zp[2]:10 0.9166666666666666
unsigned int lin16u_gen::max
unsigned int lin16u_gen::max#3 // max zp[2]:4 11.0
unsigned int lin16u_gen::min
unsigned int lin16u_gen::min#3 // min zp[2]:16 2.0
unsigned long lin16u_gen::step
unsigned long lin16u_gen::step#0 // step zp[4]:19 12.444444444444443
unsigned int lin16u_gen::stepf
unsigned int lin16u_gen::stepf#0 // stepf zp[2]:2 22.0
unsigned int lin16u_gen::stepi
unsigned int lin16u_gen::stepi#0 // stepi zp[2]:24 4.4
unsigned long lin16u_gen::val
unsigned long lin16u_gen::val#0 // val zp[4]:12 22.0
unsigned long lin16u_gen::val#1 // val zp[4]:12 67.33333333333333
unsigned long lin16u_gen::val#2 // val zp[4]:12 78.5
void main()
char main::$28 // zp[1]:23 4.888888888888889
char main::i
char main::i#1 // i zp[1]:18 22.0
char main::i#10 // i zp[1]:18 2.75
__constant unsigned int main::lintab1[$14] = { fill( $14, 0) }
__constant unsigned int main::lintab2[$14] = { fill( $14, 0) }
__constant unsigned int main::lintab3[$14] = { fill( $14, 0) }
__constant char main::str[4] = "   "
__constant char main::str1[2] = " "
void * memset(void *str , char c , unsigned int num)
char memset::c
__constant char memset::c#0 = ' ' // c
char *memset::dst
char *memset::dst#1 // dst zp[2]:10 2002.0
char *memset::dst#2 // dst zp[2]:10 1334.6666666666667
char *memset::end
__constant char *memset::end#0 = (char *)memset::str#0+memset::num#0 // end
unsigned int memset::num
__constant unsigned int memset::num#0 = $3e8 // num
void *memset::return
void *memset::str
__constant void *memset::str#0 = (void *)print_screen#0 // str
void print_char(char ch)
char print_char::ch
char print_char::ch#0 // reg byte a 20002.0
char print_char::ch#1 // reg byte a 2002.0
char print_char::ch#2 // reg byte a 2002.0
char print_char::ch#3 // reg byte a 112004.0
char *print_char_cursor
char *print_char_cursor#1 // print_char_cursor zp[2]:2 808.1600000000001
char *print_char_cursor#10 // print_char_cursor zp[2]:2 3274.216216216216
char *print_char_cursor#100 // print_char_cursor zp[2]:2 4.0
char *print_char_cursor#104 // print_char_cursor zp[2]:2 22.0
char *print_char_cursor#51 // print_char_cursor zp[2]:2 106002.5
char *print_char_cursor#84 // print_char_cursor zp[2]:2 404.6666666666667
char *print_char_cursor#89 // print_char_cursor zp[2]:2 144.0
void print_cls()
__constant const char print_hextab[] = "0123456789abcdef"z
char *print_line_cursor
char *print_line_cursor#0 // print_line_cursor zp[2]:6 790.2368421052631
char *print_line_cursor#12 // print_line_cursor zp[2]:6 20103.0
char *print_line_cursor#23 // print_line_cursor zp[2]:6 114.0
void print_ln()
char *print_screen
__constant char *print_screen#0 = (char *) 1024 // print_screen
void print_str(char *str)
char *print_str::str
char *print_str::str#0 // str zp[2]:4 20002.0
char *print_str::str#10 // str zp[2]:4 10026.25
char *print_str::str#13 // str zp[2]:4 101.0
void print_uchar(char b)
char print_uchar::$0 // reg byte a 2002.0
char print_uchar::$2 // reg byte x 2002.0
char print_uchar::b
char print_uchar::b#0 // reg byte x 202.0
char print_uchar::b#1 // reg byte x 202.0
char print_uchar::b#2 // reg byte x 11.0
char print_uchar::b#3 // reg byte x 553.75
void print_uint(unsigned int w)
unsigned int print_uint::w
unsigned int print_uint::w#10 // w zp[2]:16 78.33333333333333
unsigned int print_uint::w#3 // w zp[2]:16 22.0
unsigned int print_uint::w#4 // w zp[2]:16 22.0
unsigned int print_uint::w#5 // w zp[2]:16 22.0
unsigned int rem16u
unsigned int rem16u#0 // rem16u zp[2]:8 22.4

zp[1]:18 [ main::i#10 main::i#1 ]
zp[4]:12 [ lin16u_gen::val#2 lin16u_gen::val#1 lin16u_gen::val#0 ]
zp[2]:4 [ print_str::str#10 print_str::str#13 print_str::str#0 lin16u_gen::max#3 lin16u_gen::ampl#0 divr16u::dividend#3 divr16u::dividend#5 divr16u::dividend#1 divr16u::dividend#0 ]
zp[2]:16 [ print_uint::w#10 print_uint::w#3 print_uint::w#4 print_uint::w#5 lin16u_gen::min#3 ]
zp[2]:6 [ print_line_cursor#12 print_line_cursor#23 print_line_cursor#0 lin16u_gen::i#2 lin16u_gen::i#1 ]
reg byte x [ print_uchar::b#3 print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
zp[2]:10 [ memset::dst#2 memset::dst#1 lin16u_gen::lintab#4 lin16u_gen::lintab#3 lin16u_gen::lintab#6 ]
reg byte a [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ]
zp[2]:2 [ print_char_cursor#51 print_char_cursor#84 print_char_cursor#104 print_char_cursor#1 print_char_cursor#89 print_char_cursor#10 print_char_cursor#100 divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 divr16u::return#2 divr16u::return#3 lin16u_gen::stepf#0 ]
zp[1]:23 [ main::$28 ]
zp[2]:24 [ lin16u_gen::stepi#0 ]
zp[4]:19 [ lin16u_gen::step#0 ]
zp[2]:8 [ lin16u_gen::$8 divr16u::rem#5 divr16u::rem#10 divr16u::rem#4 divr16u::rem#11 divr16u::rem#6 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 rem16u#0 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
