byte i = 5;
a = inc(3);
a = inc(a);
a = a + i;

byte inc(byte a) {
 i = i + 1;
 return a + i;
}

// Not committed to a specific parameter transfer style (non SSA)
@BEGIN:
    (byte) i := 5
    (byte) a := call inc 3
    (byte) a := call inc a
    (byte) a := a + i
    to: @END
byte inc(byte a):
    (byte) i := i + 1
    (byte§) $1 := INC.a + i
    return (byte) $1
    to: @RETURN

// Variable/Register parameter/return transfer (non SSA)
@BEGIN:
    (byte) i := 5
    (byte) inc.a := 3
    (byte) a := call inc
    to: @1
@1:
    (byte) inc.a := a
    (byte) a := call inc
    to: @2
@2:
    (byte§) a := a + i
    to: @END
inc: (byte) inc((byte) a)
    (byte) i := i + 1
    (byte§) $1 := inc.a + i
    (byte)return $1
    to: @RETURN

// Variable/Register parameter/return transfer (SSA)
@BEGIN:
    (byte)  i#0 := 5
    (byte)  inc.a#0 := 3
            call inc
    (byte)  a#0 := inc.return#0
    (byte)  i#3 := inc.i#1
    to: @1
@1:
    (byte)  i#2 = phi( @BEGIN/i#3)
    (byte§) a#1 := phi(@BEGIN/a#0)
    (byte)  inc.a#1 := a#1
            call inc
    (byte)  a#1 := inc.return#0
    (byte)  i#4 := inc.i#1
    to @2
@2:
    (byte) i#1 = phi( @1/i#4)
    (byte) a#2 = phi( @1/a#1)
    (byte§) $2 := a#2 + i#1
    (byte§) a#2 := $2
    to: @END
inc: (byte) inc((byte) a) from @BEGIN @1
    (byte)  inc.a#2  = phi( @BEGIN/inc.a#0 @1/inc.a#1)
    (byte)  inc.i#0  = phi( @BEGIN/i#0 @1/i#2)
    (byte)  inc.i#1 := inc.i#0 + 1;
    (byte§) $1 := inc.a#2 + inc.i#1;
    (byte)  inc.return#0 := $1
    (byte)  return inc.return#0
    to: @RETURN

// Variable/Register parameter/return transfer (SSA) optimized
@BEGIN:
            call inc
    to: @1
@1:
            call inc
    to @2
@2:
    (byte§) a#2 := inc.return#0 + inc.i#1
    to: @END
inc: (byte) inc((byte) a) from @BEGIN @1
    (byte)  inc.a#2  = phi( @BEGIN/3 @1/inc.return#0)
    (byte)  inc.i#0  = phi( @BEGIN/5 @1/inc.i#1)
    (byte)  inc.i#1 := inc.i#0 + 1;
    (byte)  inc.return#0 := inc.a#2 + inc.i#1
    to: @RETURN

// Inline call (non SSA)
@BEGIN:
    (byte) i := 5
    to: inc@1
inc@1:
    (byte) inc.a := 3
    (byte) i := i + 1
    (byte§) $2 := inc.a + i
    (byte) a := (byte) $2
    to: inc@2
inc@2:
    (byte) inc.a := a
    (byte) i := i + 1
    (byte§) $3 := inc.a + i
    (byte) a := (byte) $3
    to: @1
@1:
    (byte) a := a + i;
    to: @END

// Inline call (SSA)
@BEGIN:
    (byte) i#0 := 5
    to: inc@1
inc@1: from @BEGIN
    (byte) i#5 := phi(@BEGIN/i#0)
    (byte) inc.a#0 := 3
    (byte) i#1 := i#5 + 1
    (byte§) $2 := inc.a#0 + i#1
    (byte) a#0 := (byte) $2
    to: inc@2
inc@2: from inc@1
    (byte) i#4 := phi(inc@2/i#1)
    (byte) a#4 := phi(inc@1/a#0)
    (byte) inc.a#1 := a#4
    (byte) i#2 := i#4 + 1
    (byte§) $3 := inc.a#1 + i#2
    (byte) a#1 := (byte) $3
    to: @1
@1: from inc@2
    (byte) i#3 := phi(inc@2/i#2)
    (byte) a#3 := phi(inc@2/a#1)
    (byte) a#2 := a#3 + i#3;
    to: @END


// Inline call (SSA) - optimized
@BEGIN:
    (byte) i#3 := 7
    (byte) a#2 := 23;
    to: @END
