@begin: scope:[]  from
  [0] phi()
  to:@7
@7: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @7
  [3] phi()
main: scope:[main]  from @7
  [4] phi()
  [5] call init 
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@3
  [6] (signed word) yvel_init#13 ← phi( main::@3/(signed word) yvel_init#11 main/(byte/signed byte/word/signed word/dword/signed dword) 100 )
  [6] (signed word) xvel#12 ← phi( main::@3/(signed word) xvel#10 main/(byte/word/signed word/dword/signed dword) 200 )
  [6] (signed word) ypos#13 ← phi( main::@3/(signed word) ypos#11 main/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [6] (signed word) xpos#12 ← phi( main::@3/(signed word) xpos#10 main/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [6] (signed word) yvel#12 ← phi( main::@3/(signed word) yvel#10 main/(byte/signed byte/word/signed word/dword/signed dword) 100 )
  [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  [8] phi()
  [9] call anim 
  to:main::@2
anim: scope:[anim]  from main::@3
  [10] if((signed word) ypos#13>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto anim::@1
  to:anim::@3
anim::@3: scope:[anim]  from anim
  [11] (signed word) xvel#14 ← - (signed word) xvel#12
  [12] (signed word) yvel_init#3 ← (signed word) yvel_init#13 - (byte/signed byte/word/signed word/dword/signed dword) 10
  [13] if((signed word) yvel_init#3>=-(byte/word/signed word/dword/signed dword) 200) goto anim::@5
  to:anim::@2
anim::@2: scope:[anim]  from anim::@3 anim::@5
  [14] (signed word) yvel#4 ← phi( anim::@5/(signed word) yvel_init#3 anim::@3/(byte/word/signed word/dword/signed dword) 200 )
  [15] (signed word~) yvel#22 ← (signed word) yvel#4
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@2
  [16] (signed word) yvel_init#11 ← phi( anim/(signed word) yvel_init#13 anim::@2/(signed word) yvel#4 )
  [16] (signed word) ypos#10 ← phi( anim/(signed word) ypos#13 anim::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [16] (signed word) xvel#10 ← phi( anim/(signed word) xvel#12 anim::@2/(signed word) xvel#14 )
  [16] (signed word) xpos#9 ← phi( anim/(signed word) xpos#12 anim::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [16] (signed word) yvel#9 ← phi( anim/(signed word) yvel#12 anim::@2/(signed word~) yvel#22 )
  [17] (signed word) yvel#10 ← (signed word) yvel#9 + (const signed word) g#0
  [18] (signed word) xpos#10 ← (signed word) xpos#9 + (signed word) xvel#10
  [19] (signed word) ypos#11 ← (signed word) ypos#10 + (signed word) yvel#10
  [20] (signed word~) anim::$10 ← (signed word) xpos#10 >> (byte/signed byte/word/signed word/dword/signed dword) 7
  [21] (signed word) anim::sprite_x#0 ← (signed word~) anim::$10 + (byte/word/signed word/dword/signed dword) 160
  [22] (signed word~) anim::$12 ← (signed word) ypos#11 >> (byte/signed byte/word/signed word/dword/signed dword) 5
  [23] (signed word) anim::sprite_y#0 ← (byte/word/signed word/dword/signed dword) 230 - (signed word~) anim::$12
  [24] (byte~) anim::$14 ← ((byte)) (signed word) anim::sprite_x#0
  [25] *((const byte*) SPRITES_XPOS#0) ← (byte~) anim::$14
  [26] (byte~) anim::$15 ← ((byte)) (signed word) anim::sprite_y#0
  [27] *((const byte*) SPRITES_YPOS#0) ← (byte~) anim::$15
  [28] (byte~) anim::$16 ← > (signed word) anim::sprite_x#0
  [29] *((const byte*) SPRITES_XMSB#0) ← (byte~) anim::$16
  to:anim::@return
anim::@return: scope:[anim]  from anim::@1
  [30] return 
  to:@return
anim::@5: scope:[anim]  from anim::@3
  [31] phi()
  to:anim::@2
init: scope:[init]  from main
  [32] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  [33] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  [34] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  [35] *((const byte*) SPRITES_XPOS#0) ← (byte/signed byte/word/signed word/dword/signed dword) 100
  [36] *((const byte*) SPRITES_YPOS#0) ← (byte/signed byte/word/signed word/dword/signed dword) 100
  [37] *((const byte*) SPRITES_COLS#0) ← (const byte) WHITE#0
  [38] *((const byte*) SPRITES_PTR#0) ← ((byte))(const byte*) SPRITE#0/(byte/signed byte/word/signed word/dword/signed dword) 64
  to:init::@1
init::@1: scope:[init]  from init init::@1
  [39] (byte*) init::sc#2 ← phi( init/(const byte*) SCREEN#0 init::@1/(byte*) init::sc#1 )
  [40] *((byte*) init::sc#2) ← (byte) ' '
  [41] (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  [42] if((byte*) init::sc#1!=(const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1 init::@2
  [43] (byte) init::i#2 ← phi( init::@2/(byte) init::i#1 init::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [44] *((const byte*) SPRITE#0 + (byte) init::i#2) ← (byte/word/signed word/dword/signed dword) 255
  [45] (byte) init::i#1 ← ++ (byte) init::i#2
  [46] if((byte) init::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 64) goto init::@2
  to:init::@return
init::@return: scope:[init]  from init::@2
  [47] return 
  to:@return
