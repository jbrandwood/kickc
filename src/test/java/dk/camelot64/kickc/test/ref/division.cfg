@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@13
@13: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @13
  [3] phi() [ ] ( )
main: scope:[main]  from @13
  [4] phi() [ ] ( main:2 [ ] )
  [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi() [ ] ( main:2 [ ] )
  [7] call test_8u param-assignment [ line_cursor#1 ] ( main:2 [ line_cursor#1 ] )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi() [ line_cursor#1 ] ( main:2 [ line_cursor#1 ] )
  [9] call test_16u param-assignment [ ] ( main:2 [ ] )
  to:main::@return
main::@return: scope:[main]  from main::@2
  [10] return  [ ] ( main:2 [ ] )
  to:@return
test_16u: scope:[test_16u]  from main::@2
  [11] phi() [ line_cursor#1 ] ( main:2::test_16u:9 [ line_cursor#1 ] )
  to:test_16u::@1
test_16u::@1: scope:[test_16u]  from test_16u test_16u::@11
  [12] (word) rem16u#16 ← phi( test_16u/(byte/signed byte/word/signed word/dword/signed dword) 0 test_16u::@11/(word) div16u::rem#8 ) [ test_16u::i#10 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 line_cursor#1 ] )
  [12] (byte) test_16u::i#10 ← phi( test_16u/(byte/signed byte/word/signed word/dword/signed dword) 0 test_16u::@11/(byte) test_16u::i#1 ) [ test_16u::i#10 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 line_cursor#1 ] )
  [13] (word) test_16u::dividend#0 ← *((const word[]) test_16u::dividends#0 + (byte) test_16u::i#10) [ test_16u::i#10 test_16u::dividend#0 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 test_16u::dividend#0 line_cursor#1 ] )
  [14] (word) test_16u::divisor#0 ← *((const word[]) test_16u::divisors#0 + (byte) test_16u::i#10) [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 ] )
  [15] (word) div16u::dividend#0 ← (word) test_16u::dividend#0 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::dividend#0 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::dividend#0 line_cursor#1 ] )
  [16] (word) div16u::divisor#0 ← (word) test_16u::divisor#0 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::dividend#0 div16u::divisor#0 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::dividend#0 div16u::divisor#0 line_cursor#1 ] )
  [17] call div16u param-assignment [ test_16u::i#10 div16u::rem#8 test_16u::dividend#0 test_16u::divisor#0 div16u::return#1 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::dividend#0 test_16u::divisor#0 div16u::return#1 line_cursor#1 ] )
  [18] (word) div16u::return#0 ← (word) div16u::return#1 [ test_16u::i#10 div16u::rem#8 test_16u::dividend#0 test_16u::divisor#0 div16u::return#0 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::dividend#0 test_16u::divisor#0 div16u::return#0 line_cursor#1 ] )
  to:test_16u::@3
test_16u::@3: scope:[test_16u]  from test_16u::@1
  [19] (word) test_16u::res#0 ← (word) div16u::return#0 [ test_16u::i#10 div16u::rem#8 test_16u::dividend#0 test_16u::divisor#0 test_16u::res#0 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::dividend#0 test_16u::divisor#0 test_16u::res#0 line_cursor#1 ] )
  [20] (word) print_word::w#0 ← (word) test_16u::dividend#0 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 print_word::w#0 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 print_word::w#0 line_cursor#1 ] )
  [21] (byte*~) char_cursor#84 ← (byte*) line_cursor#1 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 print_word::w#0 char_cursor#84 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 print_word::w#0 char_cursor#84 line_cursor#1 ] )
  [22] call print_word param-assignment [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] )
  to:test_16u::@4
test_16u::@4: scope:[test_16u]  from test_16u::@3
  [23] phi() [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] )
  [24] call print_str param-assignment [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#2 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#2 ] )
  to:test_16u::@5
test_16u::@5: scope:[test_16u]  from test_16u::@4
  [25] (word) print_word::w#1 ← (word) test_16u::divisor#0 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#1 char_cursor#2 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#1 char_cursor#2 ] )
  [26] call print_word param-assignment [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] )
  to:test_16u::@6
test_16u::@6: scope:[test_16u]  from test_16u::@5
  [27] phi() [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] )
  [28] call print_str param-assignment [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#2 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#2 ] )
  to:test_16u::@7
test_16u::@7: scope:[test_16u]  from test_16u::@6
  [29] (word) print_word::w#2 ← (word) test_16u::res#0 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#2 char_cursor#2 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#2 char_cursor#2 ] )
  [30] call print_word param-assignment [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] )
  to:test_16u::@8
test_16u::@8: scope:[test_16u]  from test_16u::@7
  [31] phi() [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] )
  [32] call print_str param-assignment [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#2 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#2 ] )
  to:test_16u::@9
test_16u::@9: scope:[test_16u]  from test_16u::@8
  [33] (word) print_word::w#3 ← (word) div16u::rem#8 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#3 char_cursor#2 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#3 char_cursor#2 ] )
  [34] call print_word param-assignment [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] )
  to:test_16u::@10
test_16u::@10: scope:[test_16u]  from test_16u::@9
  [35] phi() [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] )
  [36] call print_ln param-assignment [ test_16u::i#10 div16u::rem#8 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#10 div16u::rem#8 line_cursor#1 ] )
  to:test_16u::@11
test_16u::@11: scope:[test_16u]  from test_16u::@10
  [37] (byte) test_16u::i#1 ← (byte) test_16u::i#10 + (byte/signed byte/word/signed word/dword/signed dword) 2 [ test_16u::i#1 div16u::rem#8 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#1 div16u::rem#8 line_cursor#1 ] )
  [38] if((byte) test_16u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 12) goto test_16u::@1 [ test_16u::i#1 div16u::rem#8 line_cursor#1 ] ( main:2::test_16u:9 [ test_16u::i#1 div16u::rem#8 line_cursor#1 ] )
  to:test_16u::@return
test_16u::@return: scope:[test_16u]  from test_16u::@11
  [39] return  [ ] ( main:2::test_16u:9 [ ] )
  to:@return
print_ln: scope:[print_ln]  from test_16u::@10 test_8u::@10
  [40] (byte*) line_cursor#22 ← phi( test_16u::@10/(byte*) line_cursor#1 test_8u::@10/(byte*) line_cursor#25 ) [ line_cursor#22 char_cursor#11 ] ( main:2::test_16u:9::print_ln:36 [ test_16u::i#10 div16u::rem#8 line_cursor#22 char_cursor#11 ] main:2::test_8u:7::print_ln:111 [ test_8u::i#10 line_cursor#22 char_cursor#11 ] )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [41] (byte*) line_cursor#11 ← phi( print_ln/(byte*) line_cursor#22 print_ln::@1/(byte*) line_cursor#1 ) [ line_cursor#11 char_cursor#11 ] ( main:2::test_16u:9::print_ln:36 [ test_16u::i#10 div16u::rem#8 line_cursor#11 char_cursor#11 ] main:2::test_8u:7::print_ln:111 [ test_8u::i#10 line_cursor#11 char_cursor#11 ] )
  [42] (byte*) line_cursor#1 ← (byte*) line_cursor#11 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9::print_ln:36 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_8u:7::print_ln:111 [ test_8u::i#10 line_cursor#1 char_cursor#11 ] )
  [43] if((byte*) line_cursor#1<(byte*) char_cursor#11) goto print_ln::@1 [ line_cursor#1 char_cursor#11 ] ( main:2::test_16u:9::print_ln:36 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_8u:7::print_ln:111 [ test_8u::i#10 line_cursor#1 char_cursor#11 ] )
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [44] return  [ line_cursor#1 ] ( main:2::test_16u:9::print_ln:36 [ test_16u::i#10 div16u::rem#8 line_cursor#1 ] main:2::test_8u:7::print_ln:111 [ test_8u::i#10 line_cursor#1 ] )
  to:@return
print_word: scope:[print_word]  from test_16u::@3 test_16u::@5 test_16u::@7 test_16u::@9
  [45] (byte*) char_cursor#71 ← phi( test_16u::@3/(byte*~) char_cursor#84 test_16u::@5/(byte*) char_cursor#2 test_16u::@7/(byte*) char_cursor#2 test_16u::@9/(byte*) char_cursor#2 ) [ print_word::w#4 char_cursor#71 ] ( main:2::test_16u:9::print_word:22 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#71 ] main:2::test_16u:9::print_word:26 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#71 ] main:2::test_16u:9::print_word:30 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#71 ] main:2::test_16u:9::print_word:34 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#71 ] )
  [45] (word) print_word::w#4 ← phi( test_16u::@3/(word) print_word::w#0 test_16u::@5/(word) print_word::w#1 test_16u::@7/(word) print_word::w#2 test_16u::@9/(word) print_word::w#3 ) [ print_word::w#4 char_cursor#71 ] ( main:2::test_16u:9::print_word:22 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#71 ] main:2::test_16u:9::print_word:26 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#71 ] main:2::test_16u:9::print_word:30 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#71 ] main:2::test_16u:9::print_word:34 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#71 ] )
  [46] (byte) print_byte::b#0 ← > (word) print_word::w#4 [ print_word::w#4 char_cursor#71 print_byte::b#0 ] ( main:2::test_16u:9::print_word:22 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#71 print_byte::b#0 ] main:2::test_16u:9::print_word:26 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#71 print_byte::b#0 ] main:2::test_16u:9::print_word:30 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#71 print_byte::b#0 ] main:2::test_16u:9::print_word:34 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#71 print_byte::b#0 ] )
  [47] call print_byte param-assignment [ char_cursor#11 print_word::w#4 ] ( main:2::test_16u:9::print_word:22 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 print_word::w#4 ] main:2::test_16u:9::print_word:26 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 print_word::w#4 ] main:2::test_16u:9::print_word:30 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_word::w#4 ] main:2::test_16u:9::print_word:34 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_word::w#4 ] )
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  [48] (byte) print_byte::b#1 ← < (word) print_word::w#4 [ char_cursor#11 print_byte::b#1 ] ( main:2::test_16u:9::print_word:22 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 print_byte::b#1 ] main:2::test_16u:9::print_word:26 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 print_byte::b#1 ] main:2::test_16u:9::print_word:30 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_byte::b#1 ] main:2::test_16u:9::print_word:34 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_byte::b#1 ] )
  [49] call print_byte param-assignment [ char_cursor#11 ] ( main:2::test_16u:9::print_word:22 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:26 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:30 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:34 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] )
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@1
  [50] return  [ char_cursor#11 ] ( main:2::test_16u:9::print_word:22 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:26 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:30 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:34 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] )
  to:@return
print_byte: scope:[print_byte]  from print_word print_word::@1 test_8u::@3 test_8u::@5 test_8u::@7 test_8u::@9
  [51] (byte*) char_cursor#72 ← phi( print_word/(byte*) char_cursor#71 print_word::@1/(byte*) char_cursor#11 test_8u::@3/(byte*) char_cursor#75 test_8u::@5/(byte*) char_cursor#2 test_8u::@7/(byte*) char_cursor#2 test_8u::@9/(byte*) char_cursor#2 ) [ print_byte::b#6 char_cursor#72 ] ( main:2::test_16u:9::print_word:22::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:26::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:30::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:34::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:22::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:26::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:30::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:34::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#72 ] main:2::test_8u:7::print_byte:97 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#6 char_cursor#72 ] main:2::test_8u:7::print_byte:101 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_byte::b#6 char_cursor#72 ] main:2::test_8u:7::print_byte:105 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#72 ] main:2::test_8u:7::print_byte:109 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#72 ] )
  [51] (byte) print_byte::b#6 ← phi( print_word/(byte) print_byte::b#0 print_word::@1/(byte) print_byte::b#1 test_8u::@3/(byte) print_byte::b#2 test_8u::@5/(byte) print_byte::b#3 test_8u::@7/(byte) print_byte::b#4 test_8u::@9/(byte) print_byte::b#5 ) [ print_byte::b#6 char_cursor#72 ] ( main:2::test_16u:9::print_word:22::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:26::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:30::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:34::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:22::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:26::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:30::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#72 ] main:2::test_16u:9::print_word:34::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#72 ] main:2::test_8u:7::print_byte:97 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#6 char_cursor#72 ] main:2::test_8u:7::print_byte:101 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_byte::b#6 char_cursor#72 ] main:2::test_8u:7::print_byte:105 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#72 ] main:2::test_8u:7::print_byte:109 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#72 ] )
  [52] (byte~) print_byte::$0 ← (byte) print_byte::b#6 >> (byte/signed byte/word/signed word/dword/signed dword) 4 [ print_byte::b#6 char_cursor#72 print_byte::$0 ] ( main:2::test_16u:9::print_word:22::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_16u:9::print_word:26::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_16u:9::print_word:30::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_16u:9::print_word:34::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_16u:9::print_word:22::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_16u:9::print_word:26::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_16u:9::print_word:30::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_16u:9::print_word:34::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_8u:7::print_byte:97 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_8u:7::print_byte:101 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_8u:7::print_byte:105 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#72 print_byte::$0 ] main:2::test_8u:7::print_byte:109 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#72 print_byte::$0 ] )
  [53] (byte) print_char::ch#0 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_byte::b#6 char_cursor#72 print_char::ch#0 ] ( main:2::test_16u:9::print_word:22::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_16u:9::print_word:26::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_16u:9::print_word:30::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_16u:9::print_word:34::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_16u:9::print_word:22::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_16u:9::print_word:26::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_16u:9::print_word:30::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_16u:9::print_word:34::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_8u:7::print_byte:97 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_8u:7::print_byte:101 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_8u:7::print_byte:105 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#72 print_char::ch#0 ] main:2::test_8u:7::print_byte:109 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#72 print_char::ch#0 ] )
  [54] call print_char param-assignment [ char_cursor#11 print_byte::b#6 ] ( main:2::test_16u:9::print_word:22::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 print_byte::b#6 ] main:2::test_16u:9::print_word:26::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 print_byte::b#6 ] main:2::test_16u:9::print_word:30::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 print_byte::b#6 ] main:2::test_16u:9::print_word:34::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 print_byte::b#6 ] main:2::test_16u:9::print_word:22::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 print_byte::b#6 ] main:2::test_16u:9::print_word:26::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 print_byte::b#6 ] main:2::test_16u:9::print_word:30::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_byte::b#6 ] main:2::test_16u:9::print_word:34::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_byte::b#6 ] main:2::test_8u:7::print_byte:97 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#11 print_byte::b#6 ] main:2::test_8u:7::print_byte:101 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#11 print_byte::b#6 ] main:2::test_8u:7::print_byte:105 [ line_cursor#25 test_8u::i#10 char_cursor#11 print_byte::b#6 ] main:2::test_8u:7::print_byte:109 [ line_cursor#25 test_8u::i#10 char_cursor#11 print_byte::b#6 ] )
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [55] (byte~) print_byte::$2 ← (byte) print_byte::b#6 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ char_cursor#11 print_byte::$2 ] ( main:2::test_16u:9::print_word:22::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 print_byte::$2 ] main:2::test_16u:9::print_word:26::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 print_byte::$2 ] main:2::test_16u:9::print_word:30::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 print_byte::$2 ] main:2::test_16u:9::print_word:34::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 print_byte::$2 ] main:2::test_16u:9::print_word:22::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 print_byte::$2 ] main:2::test_16u:9::print_word:26::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 print_byte::$2 ] main:2::test_16u:9::print_word:30::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_byte::$2 ] main:2::test_16u:9::print_word:34::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_byte::$2 ] main:2::test_8u:7::print_byte:97 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#11 print_byte::$2 ] main:2::test_8u:7::print_byte:101 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#11 print_byte::$2 ] main:2::test_8u:7::print_byte:105 [ line_cursor#25 test_8u::i#10 char_cursor#11 print_byte::$2 ] main:2::test_8u:7::print_byte:109 [ line_cursor#25 test_8u::i#10 char_cursor#11 print_byte::$2 ] )
  [56] (byte) print_char::ch#1 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#11 print_char::ch#1 ] ( main:2::test_16u:9::print_word:22::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 print_char::ch#1 ] main:2::test_16u:9::print_word:26::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 print_char::ch#1 ] main:2::test_16u:9::print_word:30::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 print_char::ch#1 ] main:2::test_16u:9::print_word:34::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 print_char::ch#1 ] main:2::test_16u:9::print_word:22::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 print_char::ch#1 ] main:2::test_16u:9::print_word:26::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 print_char::ch#1 ] main:2::test_16u:9::print_word:30::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_char::ch#1 ] main:2::test_16u:9::print_word:34::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_char::ch#1 ] main:2::test_8u:7::print_byte:97 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#11 print_char::ch#1 ] main:2::test_8u:7::print_byte:101 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#11 print_char::ch#1 ] main:2::test_8u:7::print_byte:105 [ line_cursor#25 test_8u::i#10 char_cursor#11 print_char::ch#1 ] main:2::test_8u:7::print_byte:109 [ line_cursor#25 test_8u::i#10 char_cursor#11 print_char::ch#1 ] )
  [57] call print_char param-assignment [ char_cursor#11 ] ( main:2::test_16u:9::print_word:22::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:22::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_8u:7::print_byte:97 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#11 ] main:2::test_8u:7::print_byte:101 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#11 ] main:2::test_8u:7::print_byte:105 [ line_cursor#25 test_8u::i#10 char_cursor#11 ] main:2::test_8u:7::print_byte:109 [ line_cursor#25 test_8u::i#10 char_cursor#11 ] )
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [58] return  [ char_cursor#11 ] ( main:2::test_16u:9::print_word:22::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:47 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:47 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:22::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:49 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:49 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_8u:7::print_byte:97 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#11 ] main:2::test_8u:7::print_byte:101 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#11 ] main:2::test_8u:7::print_byte:105 [ line_cursor#25 test_8u::i#10 char_cursor#11 ] main:2::test_8u:7::print_byte:109 [ line_cursor#25 test_8u::i#10 char_cursor#11 ] )
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1
  [59] (byte*) char_cursor#45 ← phi( print_byte/(byte*) char_cursor#72 print_byte::@1/(byte*) char_cursor#11 ) [ print_char::ch#2 char_cursor#45 ] ( main:2::test_16u:9::print_word:22::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:97::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:101::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:105::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:109::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:22::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:97::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:101::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:105::print_char:57 [ line_cursor#25 test_8u::i#10 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:109::print_char:57 [ line_cursor#25 test_8u::i#10 print_char::ch#2 char_cursor#45 ] )
  [59] (byte) print_char::ch#2 ← phi( print_byte/(byte) print_char::ch#0 print_byte::@1/(byte) print_char::ch#1 ) [ print_char::ch#2 char_cursor#45 ] ( main:2::test_16u:9::print_word:22::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:97::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:101::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:105::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:109::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:22::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_char::ch#2 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:97::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:101::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:105::print_char:57 [ line_cursor#25 test_8u::i#10 print_char::ch#2 char_cursor#45 ] main:2::test_8u:7::print_byte:109::print_char:57 [ line_cursor#25 test_8u::i#10 print_char::ch#2 char_cursor#45 ] )
  [60] *((byte*) char_cursor#45) ← (byte) print_char::ch#2 [ char_cursor#45 ] ( main:2::test_16u:9::print_word:22::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#45 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#45 ] main:2::test_8u:7::print_byte:97::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#6 char_cursor#45 ] main:2::test_8u:7::print_byte:101::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_byte::b#6 char_cursor#45 ] main:2::test_8u:7::print_byte:105::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#45 ] main:2::test_8u:7::print_byte:109::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#45 ] main:2::test_16u:9::print_word:22::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#45 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#45 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#45 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#45 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#45 ] main:2::test_8u:7::print_byte:97::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#45 ] main:2::test_8u:7::print_byte:101::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#45 ] main:2::test_8u:7::print_byte:105::print_char:57 [ line_cursor#25 test_8u::i#10 char_cursor#45 ] main:2::test_8u:7::print_byte:109::print_char:57 [ line_cursor#25 test_8u::i#10 char_cursor#45 ] )
  [61] (byte*) char_cursor#11 ← ++ (byte*) char_cursor#45 [ char_cursor#11 ] ( main:2::test_16u:9::print_word:22::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#11 ] main:2::test_8u:7::print_byte:97::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#6 char_cursor#11 ] main:2::test_8u:7::print_byte:101::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_byte::b#6 char_cursor#11 ] main:2::test_8u:7::print_byte:105::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#11 ] main:2::test_8u:7::print_byte:109::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:22::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_8u:7::print_byte:97::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#11 ] main:2::test_8u:7::print_byte:101::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#11 ] main:2::test_8u:7::print_byte:105::print_char:57 [ line_cursor#25 test_8u::i#10 char_cursor#11 ] main:2::test_8u:7::print_byte:109::print_char:57 [ line_cursor#25 test_8u::i#10 char_cursor#11 ] )
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [62] return  [ char_cursor#11 ] ( main:2::test_16u:9::print_word:22::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:54 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_byte::b#6 char_cursor#11 ] main:2::test_8u:7::print_byte:97::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#6 char_cursor#11 ] main:2::test_8u:7::print_byte:101::print_char:54 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_byte::b#6 char_cursor#11 ] main:2::test_8u:7::print_byte:105::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#11 ] main:2::test_8u:7::print_byte:109::print_char:54 [ line_cursor#25 test_8u::i#10 print_byte::b#6 char_cursor#11 ] main:2::test_16u:9::print_word:22::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:47::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_word::w#4 char_cursor#11 ] main:2::test_16u:9::print_word:22::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:26::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:30::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_16u:9::print_word:34::print_byte:49::print_char:57 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 ] main:2::test_8u:7::print_byte:97::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#11 ] main:2::test_8u:7::print_byte:101::print_char:57 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#11 ] main:2::test_8u:7::print_byte:105::print_char:57 [ line_cursor#25 test_8u::i#10 char_cursor#11 ] main:2::test_8u:7::print_byte:109::print_char:57 [ line_cursor#25 test_8u::i#10 char_cursor#11 ] )
  to:@return
print_str: scope:[print_str]  from test_16u::@4 test_16u::@6 test_16u::@8 test_8u::@4 test_8u::@6 test_8u::@8
  [63] (byte*) print_str::str#9 ← phi( test_16u::@4/(const string) test_16u::str test_16u::@6/(const string) test_16u::str1 test_16u::@8/(const string) test_16u::str2 test_8u::@4/(const string) test_8u::str test_8u::@6/(const string) test_8u::str1 test_8u::@8/(const string) test_8u::str2 ) [ char_cursor#11 print_str::str#9 ] ( main:2::test_16u:9::print_str:24 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#11 print_str::str#9 ] main:2::test_16u:9::print_str:28 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#11 print_str::str#9 ] main:2::test_16u:9::print_str:32 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#11 print_str::str#9 ] main:2::test_8u:7::print_str:99 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#11 print_str::str#9 ] main:2::test_8u:7::print_str:103 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#11 print_str::str#9 ] main:2::test_8u:7::print_str:107 [ line_cursor#25 test_8u::i#10 char_cursor#11 print_str::str#9 ] )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [64] (byte*) char_cursor#2 ← phi( print_str/(byte*) char_cursor#11 print_str::@2/(byte*) char_cursor#1 ) [ char_cursor#2 print_str::str#7 ] ( main:2::test_16u:9::print_str:24 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_16u:9::print_str:28 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_16u:9::print_str:32 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:99 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:103 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:107 [ line_cursor#25 test_8u::i#10 char_cursor#2 print_str::str#7 ] )
  [64] (byte*) print_str::str#7 ← phi( print_str/(byte*) print_str::str#9 print_str::@2/(byte*) print_str::str#0 ) [ char_cursor#2 print_str::str#7 ] ( main:2::test_16u:9::print_str:24 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_16u:9::print_str:28 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_16u:9::print_str:32 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:99 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:103 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:107 [ line_cursor#25 test_8u::i#10 char_cursor#2 print_str::str#7 ] )
  [65] if(*((byte*) print_str::str#7)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#7 ] ( main:2::test_16u:9::print_str:24 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_16u:9::print_str:28 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_16u:9::print_str:32 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:99 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:103 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:107 [ line_cursor#25 test_8u::i#10 char_cursor#2 print_str::str#7 ] )
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [66] return  [ char_cursor#2 ] ( main:2::test_16u:9::print_str:24 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#2 ] main:2::test_16u:9::print_str:28 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#2 ] main:2::test_16u:9::print_str:32 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#2 ] main:2::test_8u:7::print_str:99 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#2 ] main:2::test_8u:7::print_str:103 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#2 ] main:2::test_8u:7::print_str:107 [ line_cursor#25 test_8u::i#10 char_cursor#2 ] )
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [67] *((byte*) char_cursor#2) ← *((byte*) print_str::str#7) [ char_cursor#2 print_str::str#7 ] ( main:2::test_16u:9::print_str:24 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_16u:9::print_str:28 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_16u:9::print_str:32 [ test_16u::i#10 div16u::rem#8 line_cursor#1 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:99 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:103 [ line_cursor#25 test_8u::i#10 test_8u::res#0 char_cursor#2 print_str::str#7 ] main:2::test_8u:7::print_str:107 [ line_cursor#25 test_8u::i#10 char_cursor#2 print_str::str#7 ] )
  [68] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#2 [ print_str::str#7 char_cursor#1 ] ( main:2::test_16u:9::print_str:24 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_str::str#7 char_cursor#1 ] main:2::test_16u:9::print_str:28 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_str::str#7 char_cursor#1 ] main:2::test_16u:9::print_str:32 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_str::str#7 char_cursor#1 ] main:2::test_8u:7::print_str:99 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_str::str#7 char_cursor#1 ] main:2::test_8u:7::print_str:103 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_str::str#7 char_cursor#1 ] main:2::test_8u:7::print_str:107 [ line_cursor#25 test_8u::i#10 print_str::str#7 char_cursor#1 ] )
  [69] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#7 [ print_str::str#0 char_cursor#1 ] ( main:2::test_16u:9::print_str:24 [ test_16u::i#10 div16u::rem#8 test_16u::divisor#0 test_16u::res#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::test_16u:9::print_str:28 [ test_16u::i#10 div16u::rem#8 test_16u::res#0 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::test_16u:9::print_str:32 [ test_16u::i#10 div16u::rem#8 line_cursor#1 print_str::str#0 char_cursor#1 ] main:2::test_8u:7::print_str:99 [ line_cursor#25 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_str::str#0 char_cursor#1 ] main:2::test_8u:7::print_str:103 [ line_cursor#25 test_8u::i#10 test_8u::res#0 print_str::str#0 char_cursor#1 ] main:2::test_8u:7::print_str:107 [ line_cursor#25 test_8u::i#10 print_str::str#0 char_cursor#1 ] )
  to:print_str::@1
div16u: scope:[div16u]  from test_16u::@1
  [70] phi() [ div16u::dividend#0 div16u::divisor#0 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::dividend#0 div16u::divisor#0 ] )
  to:div16u::@1
div16u::@1: scope:[div16u]  from div16u div16u::@3
  [71] (byte) div16u::i#2 ← phi( div16u/(byte/signed byte/word/signed word/dword/signed dword) 0 div16u::@3/(byte) div16u::i#1 ) [ div16u::divisor#0 div16u::rem#4 div16u::dividend#2 div16u::quotient#3 div16u::i#2 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::rem#4 div16u::dividend#2 div16u::quotient#3 div16u::i#2 ] )
  [71] (word) div16u::quotient#3 ← phi( div16u/(byte/signed byte/word/signed word/dword/signed dword) 0 div16u::@3/(word) div16u::return#1 ) [ div16u::divisor#0 div16u::rem#4 div16u::dividend#2 div16u::quotient#3 div16u::i#2 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::rem#4 div16u::dividend#2 div16u::quotient#3 div16u::i#2 ] )
  [71] (word) div16u::dividend#2 ← phi( div16u/(word) div16u::dividend#0 div16u::@3/(word) div16u::dividend#1 ) [ div16u::divisor#0 div16u::rem#4 div16u::dividend#2 div16u::quotient#3 div16u::i#2 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::rem#4 div16u::dividend#2 div16u::quotient#3 div16u::i#2 ] )
  [71] (word) div16u::rem#4 ← phi( div16u/(byte/signed byte/word/signed word/dword/signed dword) 0 div16u::@3/(word) div16u::rem#8 ) [ div16u::divisor#0 div16u::rem#4 div16u::dividend#2 div16u::quotient#3 div16u::i#2 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::rem#4 div16u::dividend#2 div16u::quotient#3 div16u::i#2 ] )
  [72] (word) div16u::rem#1 ← (word) div16u::rem#4 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#1 ] )
  [73] (byte~) div16u::$1 ← > (word) div16u::dividend#2 [ div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#1 div16u::$1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#1 div16u::$1 ] )
  [74] (byte~) div16u::$2 ← (byte~) div16u::$1 & (byte/word/signed word/dword/signed dword) 128 [ div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#1 div16u::$2 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#1 div16u::$2 ] )
  [75] if((byte~) div16u::$2==(byte/signed byte/word/signed word/dword/signed dword) 0) goto div16u::@2 [ div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#1 ] )
  to:div16u::@4
div16u::@4: scope:[div16u]  from div16u::@1
  [76] (word) div16u::rem#2 ← ++ (word) div16u::rem#1 [ div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#2 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#2 ] )
  to:div16u::@2
div16u::@2: scope:[div16u]  from div16u::@1 div16u::@4
  [77] (word) div16u::rem#5 ← phi( div16u::@1/(word) div16u::rem#1 div16u::@4/(word) div16u::rem#2 ) [ div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#5 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::dividend#2 div16u::quotient#3 div16u::i#2 div16u::rem#5 ] )
  [78] (word) div16u::dividend#1 ← (word) div16u::dividend#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ div16u::divisor#0 div16u::quotient#3 div16u::i#2 div16u::dividend#1 div16u::rem#5 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::quotient#3 div16u::i#2 div16u::dividend#1 div16u::rem#5 ] )
  [79] (word) div16u::quotient#1 ← (word) div16u::quotient#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ div16u::divisor#0 div16u::i#2 div16u::dividend#1 div16u::rem#5 div16u::quotient#1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::i#2 div16u::dividend#1 div16u::rem#5 div16u::quotient#1 ] )
  [80] if((word) div16u::rem#5<(word) div16u::divisor#0) goto div16u::@3 [ div16u::divisor#0 div16u::i#2 div16u::dividend#1 div16u::rem#5 div16u::quotient#1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::i#2 div16u::dividend#1 div16u::rem#5 div16u::quotient#1 ] )
  to:div16u::@5
div16u::@5: scope:[div16u]  from div16u::@2
  [81] (word) div16u::quotient#2 ← ++ (word) div16u::quotient#1 [ div16u::divisor#0 div16u::i#2 div16u::dividend#1 div16u::rem#5 div16u::quotient#2 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::i#2 div16u::dividend#1 div16u::rem#5 div16u::quotient#2 ] )
  [82] (word) div16u::rem#3 ← (word) div16u::rem#5 - (word) div16u::divisor#0 [ div16u::divisor#0 div16u::i#2 div16u::dividend#1 div16u::quotient#2 div16u::rem#3 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::divisor#0 div16u::i#2 div16u::dividend#1 div16u::quotient#2 div16u::rem#3 ] )
  to:div16u::@3
div16u::@3: scope:[div16u]  from div16u::@2 div16u::@5
  [83] (word) div16u::return#1 ← phi( div16u::@2/(word) div16u::quotient#1 div16u::@5/(word) div16u::quotient#2 ) [ div16u::rem#8 div16u::divisor#0 div16u::return#1 div16u::i#2 div16u::dividend#1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::rem#8 div16u::divisor#0 div16u::return#1 div16u::i#2 div16u::dividend#1 ] )
  [83] (word) div16u::rem#8 ← phi( div16u::@2/(word) div16u::rem#5 div16u::@5/(word) div16u::rem#3 ) [ div16u::rem#8 div16u::divisor#0 div16u::return#1 div16u::i#2 div16u::dividend#1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::rem#8 div16u::divisor#0 div16u::return#1 div16u::i#2 div16u::dividend#1 ] )
  [84] (byte) div16u::i#1 ← ++ (byte) div16u::i#2 [ div16u::rem#8 div16u::divisor#0 div16u::return#1 div16u::dividend#1 div16u::i#1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::rem#8 div16u::divisor#0 div16u::return#1 div16u::dividend#1 div16u::i#1 ] )
  [85] if((byte) div16u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto div16u::@1 [ div16u::rem#8 div16u::divisor#0 div16u::return#1 div16u::dividend#1 div16u::i#1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::rem#8 div16u::divisor#0 div16u::return#1 div16u::dividend#1 div16u::i#1 ] )
  to:div16u::@return
div16u::@return: scope:[div16u]  from div16u::@3
  [86] return  [ div16u::rem#8 div16u::return#1 ] ( main:2::test_16u:9::div16u:17 [ test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 line_cursor#1 div16u::rem#8 div16u::return#1 ] )
  to:@return
test_8u: scope:[test_8u]  from main::@1
  [87] phi() [ ] ( main:2::test_8u:7 [ ] )
  to:test_8u::@1
test_8u::@1: scope:[test_8u]  from test_8u test_8u::@12
  [88] (byte*) line_cursor#25 ← phi( test_8u/((byte*))(word/signed word/dword/signed dword) 1024 test_8u::@12/(byte*) line_cursor#1 ) [ line_cursor#25 char_cursor#75 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 ] )
  [88] (byte*) char_cursor#75 ← phi( test_8u/((byte*))(word/signed word/dword/signed dword) 1024 test_8u::@12/(byte*~) char_cursor#98 ) [ line_cursor#25 char_cursor#75 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 ] )
  [88] (byte) test_8u::i#10 ← phi( test_8u/(byte/signed byte/word/signed word/dword/signed dword) 0 test_8u::@12/(byte) test_8u::i#1 ) [ line_cursor#25 char_cursor#75 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 ] )
  [89] (byte) test_8u::dividend#0 ← *((const byte[]) test_8u::dividends#0 + (byte) test_8u::i#10) [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 ] )
  [90] (byte) test_8u::divisor#0 ← *((const byte[]) test_8u::divisors#0 + (byte) test_8u::i#10) [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] )
  [91] (byte) div8u::dividend#0 ← (byte) test_8u::dividend#0 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::dividend#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::dividend#0 ] )
  [92] (byte) div8u::divisor#0 ← (byte) test_8u::divisor#0 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::dividend#0 div8u::divisor#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::dividend#0 div8u::divisor#0 ] )
  [93] call div8u param-assignment [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#1 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#1 ] )
  [94] (byte) div8u::return#0 ← (byte) div8u::return#1 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#0 ] )
  to:test_8u::@3
test_8u::@3: scope:[test_8u]  from test_8u::@1
  [95] (byte) test_8u::res#0 ← (byte) div8u::return#0 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 test_8u::res#0 ] )
  [96] (byte) print_byte::b#2 ← (byte) test_8u::dividend#0 [ line_cursor#25 print_byte::b#2 char_cursor#75 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ line_cursor#25 print_byte::b#2 char_cursor#75 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] )
  [97] call print_byte param-assignment [ line_cursor#25 char_cursor#11 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#11 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] )
  to:test_8u::@4
test_8u::@4: scope:[test_8u]  from test_8u::@3
  [98] phi() [ line_cursor#25 char_cursor#11 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#11 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] )
  [99] call print_str param-assignment [ line_cursor#25 char_cursor#2 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#2 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] )
  to:test_8u::@5
test_8u::@5: scope:[test_8u]  from test_8u::@4
  [100] (byte) print_byte::b#3 ← (byte) test_8u::divisor#0 [ line_cursor#25 char_cursor#2 print_byte::b#3 test_8u::i#10 test_8u::res#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#2 print_byte::b#3 test_8u::i#10 test_8u::res#0 ] )
  [101] call print_byte param-assignment [ line_cursor#25 char_cursor#11 test_8u::i#10 test_8u::res#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#11 test_8u::i#10 test_8u::res#0 ] )
  to:test_8u::@6
test_8u::@6: scope:[test_8u]  from test_8u::@5
  [102] phi() [ line_cursor#25 char_cursor#11 test_8u::i#10 test_8u::res#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#11 test_8u::i#10 test_8u::res#0 ] )
  [103] call print_str param-assignment [ line_cursor#25 char_cursor#2 test_8u::i#10 test_8u::res#0 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#2 test_8u::i#10 test_8u::res#0 ] )
  to:test_8u::@7
test_8u::@7: scope:[test_8u]  from test_8u::@6
  [104] (byte) print_byte::b#4 ← (byte) test_8u::res#0 [ line_cursor#25 char_cursor#2 print_byte::b#4 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#2 print_byte::b#4 test_8u::i#10 ] )
  [105] call print_byte param-assignment [ line_cursor#25 char_cursor#11 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#11 test_8u::i#10 ] )
  to:test_8u::@8
test_8u::@8: scope:[test_8u]  from test_8u::@7
  [106] phi() [ line_cursor#25 char_cursor#11 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#11 test_8u::i#10 ] )
  [107] call print_str param-assignment [ line_cursor#25 char_cursor#2 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#2 test_8u::i#10 ] )
  to:test_8u::@9
test_8u::@9: scope:[test_8u]  from test_8u::@8
  [108] (byte) print_byte::b#5 ← *((const byte*) test_8u::rem#0) [ line_cursor#25 char_cursor#2 print_byte::b#5 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#2 print_byte::b#5 test_8u::i#10 ] )
  [109] call print_byte param-assignment [ line_cursor#25 char_cursor#11 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#11 test_8u::i#10 ] )
  to:test_8u::@10
test_8u::@10: scope:[test_8u]  from test_8u::@9
  [110] phi() [ line_cursor#25 char_cursor#11 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#25 char_cursor#11 test_8u::i#10 ] )
  [111] call print_ln param-assignment [ line_cursor#1 test_8u::i#10 ] ( main:2::test_8u:7 [ line_cursor#1 test_8u::i#10 ] )
  to:test_8u::@11
test_8u::@11: scope:[test_8u]  from test_8u::@10
  [112] (byte) test_8u::i#1 ← ++ (byte) test_8u::i#10 [ line_cursor#1 test_8u::i#1 ] ( main:2::test_8u:7 [ line_cursor#1 test_8u::i#1 ] )
  [113] if((byte) test_8u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 6) goto test_8u::@12 [ line_cursor#1 test_8u::i#1 ] ( main:2::test_8u:7 [ line_cursor#1 test_8u::i#1 ] )
  to:test_8u::@return
test_8u::@return: scope:[test_8u]  from test_8u::@11
  [114] return  [ line_cursor#1 ] ( main:2::test_8u:7 [ line_cursor#1 ] )
  to:@return
test_8u::@12: scope:[test_8u]  from test_8u::@11
  [115] (byte*~) char_cursor#98 ← (byte*) line_cursor#1 [ line_cursor#1 test_8u::i#1 char_cursor#98 ] ( main:2::test_8u:7 [ line_cursor#1 test_8u::i#1 char_cursor#98 ] )
  to:test_8u::@1
div8u: scope:[div8u]  from test_8u::@1
  [116] phi() [ div8u::dividend#0 div8u::divisor#0 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::dividend#0 div8u::divisor#0 ] )
  to:div8u::@1
div8u::@1: scope:[div8u]  from div8u div8u::@3
  [117] (byte) div8u::i#2 ← phi( div8u/(byte/signed byte/word/signed word/dword/signed dword) 0 div8u::@3/(byte) div8u::i#1 ) [ div8u::divisor#0 div8u::rem#4 div8u::dividend#2 div8u::quotient#3 div8u::i#2 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::rem#4 div8u::dividend#2 div8u::quotient#3 div8u::i#2 ] )
  [117] (byte) div8u::quotient#3 ← phi( div8u/(byte/signed byte/word/signed word/dword/signed dword) 0 div8u::@3/(byte) div8u::return#1 ) [ div8u::divisor#0 div8u::rem#4 div8u::dividend#2 div8u::quotient#3 div8u::i#2 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::rem#4 div8u::dividend#2 div8u::quotient#3 div8u::i#2 ] )
  [117] (byte) div8u::dividend#2 ← phi( div8u/(byte) div8u::dividend#0 div8u::@3/(byte) div8u::dividend#1 ) [ div8u::divisor#0 div8u::rem#4 div8u::dividend#2 div8u::quotient#3 div8u::i#2 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::rem#4 div8u::dividend#2 div8u::quotient#3 div8u::i#2 ] )
  [117] (byte) div8u::rem#4 ← phi( div8u/(byte/signed byte/word/signed word/dword/signed dword) 0 div8u::@3/(byte) div8u::rem#8 ) [ div8u::divisor#0 div8u::rem#4 div8u::dividend#2 div8u::quotient#3 div8u::i#2 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::rem#4 div8u::dividend#2 div8u::quotient#3 div8u::i#2 ] )
  [118] (byte) div8u::rem#1 ← (byte) div8u::rem#4 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#1 ] )
  [119] (byte~) div8u::$1 ← (byte) div8u::dividend#2 & (byte/word/signed word/dword/signed dword) 128 [ div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#1 div8u::$1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#1 div8u::$1 ] )
  [120] if((byte~) div8u::$1==(byte/signed byte/word/signed word/dword/signed dword) 0) goto div8u::@2 [ div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#1 ] )
  to:div8u::@4
div8u::@4: scope:[div8u]  from div8u::@1
  [121] (byte) div8u::rem#2 ← ++ (byte) div8u::rem#1 [ div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#2 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#2 ] )
  to:div8u::@2
div8u::@2: scope:[div8u]  from div8u::@1 div8u::@4
  [122] (byte) div8u::rem#5 ← phi( div8u::@1/(byte) div8u::rem#1 div8u::@4/(byte) div8u::rem#2 ) [ div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#5 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::dividend#2 div8u::quotient#3 div8u::i#2 div8u::rem#5 ] )
  [123] (byte) div8u::dividend#1 ← (byte) div8u::dividend#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ div8u::divisor#0 div8u::quotient#3 div8u::i#2 div8u::dividend#1 div8u::rem#5 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::quotient#3 div8u::i#2 div8u::dividend#1 div8u::rem#5 ] )
  [124] (byte) div8u::quotient#1 ← (byte) div8u::quotient#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ div8u::divisor#0 div8u::i#2 div8u::dividend#1 div8u::rem#5 div8u::quotient#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::i#2 div8u::dividend#1 div8u::rem#5 div8u::quotient#1 ] )
  [125] if((byte) div8u::rem#5<(byte) div8u::divisor#0) goto div8u::@3 [ div8u::divisor#0 div8u::i#2 div8u::dividend#1 div8u::rem#5 div8u::quotient#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::i#2 div8u::dividend#1 div8u::rem#5 div8u::quotient#1 ] )
  to:div8u::@5
div8u::@5: scope:[div8u]  from div8u::@2
  [126] (byte) div8u::quotient#2 ← ++ (byte) div8u::quotient#1 [ div8u::divisor#0 div8u::i#2 div8u::dividend#1 div8u::rem#5 div8u::quotient#2 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::i#2 div8u::dividend#1 div8u::rem#5 div8u::quotient#2 ] )
  [127] (byte) div8u::rem#3 ← (byte) div8u::rem#5 - (byte) div8u::divisor#0 [ div8u::divisor#0 div8u::i#2 div8u::dividend#1 div8u::quotient#2 div8u::rem#3 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::i#2 div8u::dividend#1 div8u::quotient#2 div8u::rem#3 ] )
  to:div8u::@3
div8u::@3: scope:[div8u]  from div8u::@2 div8u::@5
  [128] (byte) div8u::return#1 ← phi( div8u::@2/(byte) div8u::quotient#1 div8u::@5/(byte) div8u::quotient#2 ) [ div8u::divisor#0 div8u::return#1 div8u::i#2 div8u::rem#8 div8u::dividend#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::return#1 div8u::i#2 div8u::rem#8 div8u::dividend#1 ] )
  [128] (byte) div8u::rem#8 ← phi( div8u::@2/(byte) div8u::rem#5 div8u::@5/(byte) div8u::rem#3 ) [ div8u::divisor#0 div8u::return#1 div8u::i#2 div8u::rem#8 div8u::dividend#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::return#1 div8u::i#2 div8u::rem#8 div8u::dividend#1 ] )
  [129] (byte) div8u::i#1 ← ++ (byte) div8u::i#2 [ div8u::divisor#0 div8u::return#1 div8u::rem#8 div8u::dividend#1 div8u::i#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::return#1 div8u::rem#8 div8u::dividend#1 div8u::i#1 ] )
  [130] if((byte) div8u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto div8u::@1 [ div8u::divisor#0 div8u::return#1 div8u::rem#8 div8u::dividend#1 div8u::i#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#0 div8u::return#1 div8u::rem#8 div8u::dividend#1 div8u::i#1 ] )
  to:div8u::@6
div8u::@6: scope:[div8u]  from div8u::@3
  [131] *((const byte*) test_8u::rem#0) ← (byte) div8u::rem#8 [ div8u::return#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#1 ] )
  to:div8u::@return
div8u::@return: scope:[div8u]  from div8u::@6
  [132] return  [ div8u::return#1 ] ( main:2::test_8u:7::div8u:93 [ line_cursor#25 char_cursor#75 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#1 ] )
  to:@return
print_cls: scope:[print_cls]  from main
  [133] phi() [ ] ( main:2::print_cls:5 [ ] )
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [134] (byte*) print_cls::sc#2 ← phi( print_cls/((byte*))(word/signed word/dword/signed dword) 1024 print_cls::@1/(byte*) print_cls::sc#1 ) [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [135] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [136] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  [137] if((byte*) print_cls::sc#1!=(word/signed word/dword/signed dword) 1024+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [138] return  [ ] ( main:2::print_cls:5 [ ] )
  to:@return
