
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] sin_idx_x = $77
  [2] sin_idx_y = $4f
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [3] phi()
  [4] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [5] return 
  to:@return

void irq_vsync()
irq_vsync: scope:[irq_vsync]  from
  [6] sin_idx_x = ++ sin_idx_x
  [7] if(sin_idx_x!=$f1) goto irq_vsync::@1
  to:irq_vsync::@3
irq_vsync::@3: scope:[irq_vsync]  from irq_vsync
  [8] sin_idx_x = 0
  to:irq_vsync::@1
irq_vsync::@1: scope:[irq_vsync]  from irq_vsync irq_vsync::@3
  [9] sin_idx_y = -- sin_idx_y
  [10] if(sin_idx_y!=$ffff) goto irq_vsync::@2
  to:irq_vsync::@4
irq_vsync::@4: scope:[irq_vsync]  from irq_vsync::@1
  [11] sin_idx_y = $fb-1
  to:irq_vsync::@2
irq_vsync::@2: scope:[irq_vsync]  from irq_vsync::@1 irq_vsync::@4
  [12] irq_vsync::i_x#0 = sin_idx_x
  [13] irq_vsync::i_y#0 = sin_idx_y
  to:irq_vsync::@5
irq_vsync::@5: scope:[irq_vsync]  from irq_vsync::@2 irq_vsync::@9
  [14] irq_vsync::vram_sprite_pos#2 = phi( irq_vsync::@2/(byte*)<VERA_SPRITE_ATTR+2, irq_vsync::@9/irq_vsync::vram_sprite_pos#1 )
  [14] irq_vsync::i_y#3 = phi( irq_vsync::@2/irq_vsync::i_y#0, irq_vsync::@9/irq_vsync::i_y#9 )
  [14] irq_vsync::i_x#3 = phi( irq_vsync::@2/irq_vsync::i_x#0, irq_vsync::@9/irq_vsync::i_x#7 )
  [14] irq_vsync::s#2 = phi( irq_vsync::@2/0, irq_vsync::@9/irq_vsync::s#1 )
  [15] if(irq_vsync::s#2<$80) goto irq_vsync::@6
  to:irq_vsync::@7
irq_vsync::@7: scope:[irq_vsync]  from irq_vsync::@5
  [16] *VERA_ISR = VERA_VSYNC
  asm { jmp$e034  }
  to:irq_vsync::@return
irq_vsync::@return: scope:[irq_vsync]  from irq_vsync::@7
  [18] return 
  to:@return
irq_vsync::@6: scope:[irq_vsync]  from irq_vsync::@5
  [19] irq_vsync::$11 = irq_vsync::i_x#3 << 1
  [20] irq_vsync::$13 = SINX + irq_vsync::$11
  [21] *((word*)&SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = *irq_vsync::$13
  [22] irq_vsync::$12 = irq_vsync::i_y#3 << 1
  [23] irq_vsync::$14 = SINY + irq_vsync::$12
  [24] *((word*)&SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = *irq_vsync::$14
  [25] memcpy_to_vram::vdest#2 = (void*)irq_vsync::vram_sprite_pos#2
  [26] call memcpy_to_vram 
  to:irq_vsync::@12
irq_vsync::@12: scope:[irq_vsync]  from irq_vsync::@6
  [27] irq_vsync::vram_sprite_pos#1 = irq_vsync::vram_sprite_pos#2 + SIZEOF_STRUCT_VERA_SPRITE
  [28] irq_vsync::i_x#1 = irq_vsync::i_x#3 + 3
  [29] if(irq_vsync::i_x#1<$f1) goto irq_vsync::@8
  to:irq_vsync::@10
irq_vsync::@10: scope:[irq_vsync]  from irq_vsync::@12
  [30] irq_vsync::i_x#2 = irq_vsync::i_x#1 - $f1
  to:irq_vsync::@8
irq_vsync::@8: scope:[irq_vsync]  from irq_vsync::@10 irq_vsync::@12
  [31] irq_vsync::i_x#7 = phi( irq_vsync::@10/irq_vsync::i_x#2, irq_vsync::@12/irq_vsync::i_x#1 )
  [32] irq_vsync::i_y#1 = irq_vsync::i_y#3 + 5
  [33] if(irq_vsync::i_y#1<$fb) goto irq_vsync::@9
  to:irq_vsync::@11
irq_vsync::@11: scope:[irq_vsync]  from irq_vsync::@8
  [34] irq_vsync::i_y#2 = irq_vsync::i_y#1 - $fb
  to:irq_vsync::@9
irq_vsync::@9: scope:[irq_vsync]  from irq_vsync::@11 irq_vsync::@8
  [35] irq_vsync::i_y#9 = phi( irq_vsync::@11/irq_vsync::i_y#2, irq_vsync::@8/irq_vsync::i_y#1 )
  [36] irq_vsync::s#1 = ++ irq_vsync::s#2
  to:irq_vsync::@5

void main()
main: scope:[main]  from __start::@1
  [37] phi()
  [38] call memcpy_to_vram 
  to:main::@1
main::@1: scope:[main]  from main main::@5
  [39] main::vram_sprite_attr#2 = phi( main/(byte*)<VERA_SPRITE_ATTR, main::@5/main::vram_sprite_attr#1 )
  [39] main::s#2 = phi( main/0, main::@5/main::s#1 )
  [40] if(main::s#2<$80) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [41] *VERA_CTRL = *VERA_CTRL & ~VERA_DCSEL
  [42] *VERA_DC_VIDEO = *VERA_DC_VIDEO | VERA_SPRITES_ENABLE
  to:main::SEI1
main::SEI1: scope:[main]  from main::@3
  asm { sei  }
  to:main::@4
main::@4: scope:[main]  from main::SEI1
  [44] *KERNEL_IRQ = &irq_vsync
  [45] *VERA_IEN = VERA_VSYNC
  to:main::CLI1
main::CLI1: scope:[main]  from main::@4
  asm { cli  }
  to:main::@return
main::@return: scope:[main]  from main::CLI1
  [47] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [48] *((word*)&SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = *((word*)&SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) + $a
  [49] *((word*)&SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = *((word*)&SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) + $a
  [50] memcpy_to_vram::vdest#1 = (void*)main::vram_sprite_attr#2
  [51] call memcpy_to_vram 
  to:main::@5
main::@5: scope:[main]  from main::@2
  [52] main::vram_sprite_attr#1 = main::vram_sprite_attr#2 + SIZEOF_STRUCT_VERA_SPRITE
  [53] main::s#1 = ++ main::s#2
  to:main::@1

void memcpy_to_vram(byte memcpy_to_vram::vbank , void* memcpy_to_vram::vdest , void* memcpy_to_vram::src , word memcpy_to_vram::num)
memcpy_to_vram: scope:[memcpy_to_vram]  from irq_vsync::@6 main main::@2
  [54] memcpy_to_vram::num#3 = phi( irq_vsync::@6/4, main/(word)$40*$40*SIZEOF_BYTE, main::@2/SIZEOF_STRUCT_VERA_SPRITE )
  [54] memcpy_to_vram::src#3 = phi( irq_vsync::@6/(void*)&SPRITE_ATTR+2, main/(void*)SPRITE_PIXELS, main::@2/(void*)&SPRITE_ATTR )
  [54] memcpy_to_vram::vbank#3 = phi( irq_vsync::@6/irq_vsync::vram_sprite_attr_bank, main/0, main::@2/(byte)>VERA_SPRITE_ATTR )
  [54] memcpy_to_vram::vdest#3 = phi( irq_vsync::@6/memcpy_to_vram::vdest#2, main/(void*)<SPRITE_PIXELS_VRAM, main::@2/memcpy_to_vram::vdest#1 )
  [55] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [56] memcpy_to_vram::$0 = < memcpy_to_vram::vdest#3
  [57] *VERA_ADDRX_L = memcpy_to_vram::$0
  [58] memcpy_to_vram::$1 = > memcpy_to_vram::vdest#3
  [59] *VERA_ADDRX_M = memcpy_to_vram::$1
  [60] memcpy_to_vram::$2 = VERA_INC_1 | memcpy_to_vram::vbank#3
  [61] *VERA_ADDRX_H = memcpy_to_vram::$2
  [62] memcpy_to_vram::end#0 = (byte*)memcpy_to_vram::src#3 + memcpy_to_vram::num#3
  [63] memcpy_to_vram::s#4 = (byte*)memcpy_to_vram::src#3
  to:memcpy_to_vram::@1
memcpy_to_vram::@1: scope:[memcpy_to_vram]  from memcpy_to_vram memcpy_to_vram::@2
  [64] memcpy_to_vram::s#2 = phi( memcpy_to_vram/memcpy_to_vram::s#4, memcpy_to_vram::@2/memcpy_to_vram::s#1 )
  [65] if(memcpy_to_vram::s#2!=memcpy_to_vram::end#0) goto memcpy_to_vram::@2
  to:memcpy_to_vram::@return
memcpy_to_vram::@return: scope:[memcpy_to_vram]  from memcpy_to_vram::@1
  [66] return 
  to:@return
memcpy_to_vram::@2: scope:[memcpy_to_vram]  from memcpy_to_vram::@1
  [67] *VERA_DATA0 = *memcpy_to_vram::s#2
  [68] memcpy_to_vram::s#1 = ++ memcpy_to_vram::s#2
  to:memcpy_to_vram::@1
