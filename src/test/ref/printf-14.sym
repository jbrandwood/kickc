const nomodify byte* COLORRAM = (byte*) 55296
const nomodify byte* DEFAULT_SCREEN = (byte*) 1024
const byte* DIGITS[]  = "0123456789abcdef"z
const nomodify byte LIGHT_BLUE = $e
const byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const byte* RADIX_DECIMAL_VALUES_CHAR[]  = { $64, $a }
const byte SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
void __start()
void clrscr()
byte clrscr::c
byte clrscr::c#1 reg byte y 20002.0
byte clrscr::c#2 reg byte y 12501.25
byte clrscr::l
byte clrscr::l#1 reg byte x 2002.0
byte clrscr::l#2 reg byte x 333.6666666666667
byte* clrscr::line_cols
byte* clrscr::line_cols#1 line_cols zp[2]:4 1001.0
byte* clrscr::line_cols#5 line_cols zp[2]:4 1500.375
byte* clrscr::line_text
byte* clrscr::line_text#1 line_text zp[2]:6 667.3333333333334
byte* clrscr::line_text#5 line_text zp[2]:6 1714.7142857142858
byte conio_cursor_x loadstore zp[1]:8 416669.6944444445
byte conio_cursor_y loadstore zp[1]:9 6153848.23076923
byte* conio_line_color loadstore zp[2]:12 4420002.16
byte* conio_line_text loadstore zp[2]:10 4333335.450980392
void cputc(byte cputc::c)
byte cputc::c
byte cputc::c#0 reg byte a 200002.0
byte cputc::c#2 reg byte a 2002.0
byte cputc::c#3 reg byte a 1050502.0
void cputln()
void cputs(to_nomodify byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 100001.0
to_nomodify byte* cputs::s
to_nomodify byte* cputs::s#0 s zp[2]:4 50000.5
to_nomodify byte* cputs::s#2 s zp[2]:4 150001.5
void cscroll()
void main()
const byte main::c = 7
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#2 destination zp[2]:17
byte* memcpy::dst
byte* memcpy::dst#1 dst zp[2]:17 1.00000000001E11
byte* memcpy::dst#2 dst zp[2]:17 1.0033333333466667E11
byte* memcpy::dst#4 dst zp[2]:17 2.000000002E9
word memcpy::num
void* memcpy::return
void* memcpy::source
void* memcpy::source#2 source zp[2]:6
byte* memcpy::src
byte* memcpy::src#1 src zp[2]:6 2.00000000002E11
byte* memcpy::src#2 src zp[2]:6 1.0025000000125E11
byte* memcpy::src#4 src zp[2]:6 1.000000001E9
byte* memcpy::src_end
byte* memcpy::src_end#0 src_end zp[2]:15 1.262500000025E10
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#4 reg byte x 1.4285714285857143E10
byte* memset::dst
byte* memset::dst#1 dst zp[2]:6 2.00000000002E11
byte* memset::dst#2 dst zp[2]:6 1.3366666666833334E11
byte* memset::dst#4 dst zp[2]:6 2.000000002E9
byte* memset::end
byte* memset::end#0 end zp[2]:17 1.6833333333666668E10
word memset::num
void* memset::return
void* memset::str
void* memset::str#3 str zp[2]:6
struct printf_buffer_number printf_buffer loadstore mem[12] = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
const byte* printf_number_buffer::buffer_digits#0 buffer_digits = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0 reg byte a 701.0
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_zero_padding
signed byte printf_number_buffer::len
signed byte printf_number_buffer::padding
void printf_uchar(byte printf_uchar::uvalue , byte printf_uchar::format_min_length , byte printf_uchar::format_justify_left , byte printf_uchar::format_sign_always , byte printf_uchar::format_zero_padding , byte printf_uchar::format_upper_case , byte printf_uchar::format_radix)
struct printf_format_number printf_uchar::format
byte printf_uchar::format_justify_left
byte printf_uchar::format_min_length
byte printf_uchar::format_radix
byte printf_uchar::format_sign_always
byte printf_uchar::format_upper_case
byte printf_uchar::format_zero_padding
byte printf_uchar::uvalue
void uctoa(byte uctoa::value , byte* uctoa::buffer , byte uctoa::radix)
byte* uctoa::buffer
byte* uctoa::buffer#11 buffer zp[2]:6 3500.4999999999995
byte* uctoa::buffer#14 buffer zp[2]:6 15001.5
byte* uctoa::buffer#3 buffer zp[2]:6 2002.0
byte* uctoa::buffer#4 buffer zp[2]:6 20002.0
byte uctoa::digit
byte uctoa::digit#1 digit zp[1]:2 20002.0
byte uctoa::digit#2 digit zp[1]:2 3077.230769230769
byte uctoa::digit_value
byte uctoa::digit_value#0 digit_value zp[1]:14 6000.6
byte* uctoa::digit_values
byte uctoa::max_digits
const byte uctoa::max_digits#1 max_digits = 3
byte uctoa::radix
byte uctoa::started
byte uctoa::started#2 started zp[1]:3 6000.6
byte uctoa::started#4 started zp[1]:3 10001.0
byte uctoa::value
byte uctoa::value#0 reg byte x 10001.0
byte uctoa::value#2 reg byte x 6834.166666666666
byte uctoa::value#6 reg byte x 15001.5
byte uctoa_append(byte* uctoa_append::buffer , byte uctoa_append::value , byte uctoa_append::sub)
byte* uctoa_append::buffer
byte* uctoa_append::buffer#0 buffer zp[2]:6 13750.25
byte uctoa_append::digit
byte uctoa_append::digit#1 reg byte y 1.0000001E7
byte uctoa_append::digit#2 reg byte y 1.00500015E7
byte uctoa_append::return
byte uctoa_append::return#0 reg byte x 20002.0
byte uctoa_append::sub
byte uctoa_append::sub#0 sub zp[1]:14 3335000.5
byte uctoa_append::value
byte uctoa_append::value#0 reg byte x 36667.33333333333
byte uctoa_append::value#1 reg byte x 2.0000002E7
byte uctoa_append::value#2 reg byte x 5018334.166666666

reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[1]:2 [ uctoa::digit#2 uctoa::digit#1 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#0 ]
zp[1]:3 [ uctoa::started#2 uctoa::started#4 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
reg byte a [ cputc::c#3 cputc::c#0 cputc::c#2 ]
zp[2]:4 [ cputs::s#2 cputs::s#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[2]:6 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 clrscr::line_text#5 clrscr::line_text#1 ]
reg byte x [ memset::c#4 ]
zp[1]:8 [ conio_cursor_x ]
zp[1]:9 [ conio_cursor_y ]
zp[2]:10 [ conio_line_text ]
zp[2]:12 [ conio_line_color ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
zp[1]:14 [ uctoa::digit_value#0 uctoa_append::sub#0 ]
reg byte x [ uctoa_append::return#0 ]
reg byte a [ cputs::c#1 ]
zp[2]:15 [ memcpy::src_end#0 ]
zp[2]:17 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
mem[12] [ printf_buffer ]
