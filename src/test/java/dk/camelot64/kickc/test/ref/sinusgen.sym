(label) @23
(label) @begin
(label) @end
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = ((byte*))(word/signed word/dword/signed dword) 1024
(byte*) char_cursor
(byte*) char_cursor#1 char_cursor zp ZP_WORD:18 101.0
(byte*~) char_cursor#122 char_cursor zp ZP_WORD:18 22.0
(byte*~) char_cursor#128 char_cursor zp ZP_WORD:18 4.0
(byte*) char_cursor#17 char_cursor zp ZP_WORD:18 4.2564102564102555
(byte*) char_cursor#2 char_cursor zp ZP_WORD:18 15.727272727272727
(byte*) char_cursor#60 char_cursor zp ZP_WORD:18 5.0
(byte*) char_cursor#88 char_cursor zp ZP_WORD:18 3.0
(byte*) char_cursor#90 char_cursor zp ZP_WORD:18 27.0
(byte*) char_cursor#92 char_cursor zp ZP_WORD:18 2.0
(byte*) char_cursor#97 char_cursor zp ZP_WORD:18 59.0
(word()) divr16u((word) divr16u::dividend , (word) divr16u::divisor , (word) divr16u::rem)
(byte~) divr16u::$1 reg byte a 202.0
(byte~) divr16u::$2 reg byte a 202.0
(label) divr16u::@1
(label) divr16u::@2
(label) divr16u::@3
(label) divr16u::@4
(label) divr16u::@5
(label) divr16u::@6
(label) divr16u::@return
(word) divr16u::dividend
(word) divr16u::dividend#0 dividend zp ZP_WORD:20 25.25
(word) divr16u::dividend#3 dividend zp ZP_WORD:20 22.0
(word) divr16u::dividend#4 dividend zp ZP_WORD:20 22.0
(word) divr16u::dividend#5 dividend zp ZP_WORD:20 43.57142857142858
(word) divr16u::dividend#7 dividend zp ZP_WORD:20 24.0
(word) divr16u::divisor
(word) divr16u::divisor#8 divisor zp ZP_WORD:16 12.625
(byte) divr16u::i
(byte) divr16u::i#1 reg byte x 151.5
(byte) divr16u::i#2 reg byte x 15.538461538461538
(word) divr16u::quotient
(word) divr16u::quotient#1 quotient zp ZP_WORD:12 151.5
(word) divr16u::quotient#2 quotient zp ZP_WORD:12 101.0
(word) divr16u::quotient#3 quotient zp ZP_WORD:12 25.25
(word) divr16u::rem
(word) divr16u::rem#0 rem zp ZP_WORD:18 75.75
(word) divr16u::rem#1 rem zp ZP_WORD:18 202.0
(word) divr16u::rem#10 rem zp ZP_WORD:18 101.0
(word) divr16u::rem#11 rem zp ZP_WORD:18 101.66666666666667
(word) divr16u::rem#12 rem zp ZP_WORD:18 4.0
(word) divr16u::rem#2 rem zp ZP_WORD:18 202.0
(word) divr16u::rem#4 rem zp ZP_WORD:18 4.0
(word) divr16u::rem#7 rem zp ZP_WORD:18 204.0
(word) divr16u::return
(word) divr16u::return#0 return zp ZP_WORD:12 36.55555555555556
(word) divr16u::return#10 return zp ZP_WORD:12 22.0
(word) divr16u::return#2 return zp ZP_WORD:12 4.0
(word) divr16u::return#3 return zp ZP_WORD:12 4.0
(word) divr16u::return#4 return zp ZP_WORD:12 22.0
(byte*) line_cursor
(byte*) line_cursor#1 line_cursor zp ZP_WORD:14 4.012195121951219
(byte*) line_cursor#13 line_cursor zp ZP_WORD:14 204.0
(byte*) line_cursor#25 line_cursor zp ZP_WORD:14 15.0
(void()) main()
(label) main::@1
(label) main::@return
(signed word[20]) main::sintab
(const signed word[20]) main::sintab#0 sintab = { fill( 20, 0) }
(dword()) mul16u((word) mul16u::a , (word) mul16u::b)
(byte~) mul16u::$1 reg byte a 202.0
(label) mul16u::@1
(label) mul16u::@2
(label) mul16u::@4
(label) mul16u::@7
(label) mul16u::@return
(word) mul16u::a
(word) mul16u::a#0 a zp ZP_WORD:22 101.0
(word) mul16u::a#1 a zp ZP_WORD:22 1.3333333333333333
(word) mul16u::a#2 a zp ZP_WORD:22 67.66666666666666
(word) mul16u::b
(word) mul16u::b#0 b zp ZP_WORD:10 4.0
(dword) mul16u::mb
(dword) mul16u::mb#0 mb zp ZP_DWORD:28 4.0
(dword) mul16u::mb#1 mb zp ZP_DWORD:28 202.0
(dword) mul16u::mb#2 mb zp ZP_DWORD:28 43.57142857142858
(dword) mul16u::res
(dword) mul16u::res#1 res zp ZP_DWORD:24 202.0
(dword) mul16u::res#2 res zp ZP_DWORD:24 50.83333333333333
(dword) mul16u::res#6 res zp ZP_DWORD:24 101.0
(dword) mul16u::return
(dword) mul16u::return#2 return zp ZP_DWORD:24 4.0
(word()) mul_u4f12((word) mul_u4f12::v1 , (word) mul_u4f12::v2)
(dword~) mul_u4f12::$0 $0 zp ZP_DWORD:24 4.0
(dword~) mul_u4f12::$1 $1 zp ZP_DWORD:24 4.0
(label) mul_u4f12::@2
(label) mul_u4f12::@return
(word) mul_u4f12::return
(word) mul_u4f12::return#0 return zp ZP_WORD:22 22.0
(word) mul_u4f12::return#1 return zp ZP_WORD:22 22.0
(word) mul_u4f12::return#10 return zp ZP_WORD:22 7.666666666666666
(word) mul_u4f12::return#2 return zp ZP_WORD:22 22.0
(word) mul_u4f12::return#3 return zp ZP_WORD:22 22.0
(word) mul_u4f12::v1
(word) mul_u4f12::v1#0 v1 zp ZP_WORD:22 11.0
(word) mul_u4f12::v1#1 v1 zp ZP_WORD:22 11.0
(word) mul_u4f12::v1#2 v1 zp ZP_WORD:22 11.0
(word) mul_u4f12::v1#3 v1 zp ZP_WORD:22 11.0
(word) mul_u4f12::v1#4 v1 zp ZP_WORD:22 46.0
(word) mul_u4f12::v2
(word) mul_u4f12::v2#0 v2 zp ZP_WORD:10 22.0
(word) mul_u4f12::v2#1 v2 zp ZP_WORD:10 22.0
(word) mul_u4f12::v2#2 v2 zp ZP_WORD:10 22.0
(word) mul_u4f12::v2#3 v2 zp ZP_WORD:10 22.0
(word) mul_u4f12::v2#4 v2 zp ZP_WORD:10 23.0
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte a 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 reg byte x 4.0
(byte) print_byte::b#1 reg byte x 4.0
(byte) print_byte::b#2 reg byte x 2.0
(byte[]) print_byte::hextab
(const string) print_byte::hextab#0 hextab = (string) "0123456789abcdef"
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#1 reg byte a 4.0
(byte) print_char::ch#2 reg byte a 4.0
(byte) print_char::ch#3 reg byte a 6.0
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:6 16.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:6 16.5
(void()) print_dword((dword) print_dword::dw)
(label) print_dword::@1
(label) print_dword::@return
(dword) print_dword::dw
(dword) print_dword::dw#0 dw zp ZP_DWORD:2 4.0
(dword) print_dword::dw#1 dw zp ZP_DWORD:2 22.0
(dword) print_dword::dw#2 dw zp ZP_DWORD:2 5.666666666666667
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp ZP_WORD:16 202.0
(byte*) print_str::str#10 str zp ZP_WORD:16 2.0
(byte*) print_str::str#8 str zp ZP_WORD:16 101.5
(void()) print_sword((signed word) print_sword::w)
(label) print_sword::@1
(label) print_sword::@2
(label) print_sword::@4
(label) print_sword::@return
(signed word) print_sword::w
(signed word) print_sword::w#0 w zp ZP_WORD:12 4.0
(signed word) print_sword::w#1 w zp ZP_WORD:12 4.25
(signed word) print_sword::w#3 w zp ZP_WORD:12 4.0
(void()) print_word((word) print_word::w)
(label) print_word::@1
(label) print_word::@return
(word) print_word::w
(word) print_word::w#1 w zp ZP_WORD:16 4.0
(word~) print_word::w#12 w zp ZP_WORD:16 4.0
(word) print_word::w#2 w zp ZP_WORD:16 4.0
(word) print_word::w#4 w zp ZP_WORD:16 11.0
(word) print_word::w#5 w zp ZP_WORD:16 22.0
(word) print_word::w#6 w zp ZP_WORD:16 22.0
(word) print_word::w#7 w zp ZP_WORD:16 22.0
(word) print_word::w#8 w zp ZP_WORD:16 18.0
(word) rem16u
(word) rem16u#1 rem16u zp ZP_WORD:18 0.8
(void()) sin16s_gen((signed word*) sin16s_gen::sintab , (word) sin16s_gen::wavelength)
(word~) sin16s_gen::$21 $21 zp ZP_WORD:38 22.0
(label) sin16s_gen::@1
(label) sin16s_gen::@10
(label) sin16s_gen::@11
(label) sin16s_gen::@12
(label) sin16s_gen::@13
(label) sin16s_gen::@14
(label) sin16s_gen::@15
(label) sin16s_gen::@17
(label) sin16s_gen::@18
(label) sin16s_gen::@19
(label) sin16s_gen::@2
(label) sin16s_gen::@20
(label) sin16s_gen::@21
(label) sin16s_gen::@22
(label) sin16s_gen::@23
(label) sin16s_gen::@24
(label) sin16s_gen::@25
(label) sin16s_gen::@26
(label) sin16s_gen::@27
(label) sin16s_gen::@28
(label) sin16s_gen::@29
(label) sin16s_gen::@3
(label) sin16s_gen::@30
(label) sin16s_gen::@31
(label) sin16s_gen::@32
(label) sin16s_gen::@33
(label) sin16s_gen::@34
(label) sin16s_gen::@38
(label) sin16s_gen::@4
(label) sin16s_gen::@5
(label) sin16s_gen::@6
(label) sin16s_gen::@7
(label) sin16s_gen::@9
(label) sin16s_gen::@return
(word) sin16s_gen::PI2
(const word) sin16s_gen::PI2#0 PI2 = (word/signed word/dword/signed dword) 25736
(word) sin16s_gen::PI_HALF_u4f12
(const word) sin16s_gen::PI_HALF_u4f12#0 PI_HALF_u4f12 = (word/signed word/dword/signed dword) 6434
(word) sin16s_gen::PI_u4f12
(const word) sin16s_gen::PI_u4f12#0 PI_u4f12 = (word/signed word/dword/signed dword) 12868
(word) sin16s_gen::i
(word) sin16s_gen::i#1 i zp ZP_WORD:8 16.5
(word) sin16s_gen::i#10 i zp ZP_WORD:8 0.4714285714285714
(byte) sin16s_gen::isUpper
(byte) sin16s_gen::isUpper#10 reg byte y 0.3235294117647059
(signed word*) sin16s_gen::sintab
(signed word*) sin16s_gen::sintab#1 sintab zp ZP_WORD:6 0.7586206896551724
(signed word*) sin16s_gen::sintab#10 sintab zp ZP_WORD:6 0.7674418604651163
(signed word) sin16s_gen::sinx
(signed word) sin16s_gen::sinx#1 sinx zp ZP_WORD:12 22.0
(signed word) sin16s_gen::sinx#10 sinx zp ZP_WORD:12 1.8333333333333333
(signed word~) sin16s_gen::sinx#14 sinx zp ZP_WORD:12 22.0
(dword) sin16s_gen::step
(dword) sin16s_gen::step#0 step zp ZP_DWORD:32 0.17857142857142858
(word) sin16s_gen::stepf
(word) sin16s_gen::stepf#0 stepf zp ZP_WORD:12 4.0
(word) sin16s_gen::stepi
(word) sin16s_gen::stepi#0 stepi zp ZP_WORD:6 0.8
(const string) sin16s_gen::str str = (string) "2*pi @"
(const string) sin16s_gen::str1 str1 = (string) "step @"
(const string) sin16s_gen::str2 str2 = (string) " @"
(const string) sin16s_gen::str3 str3 = (string) " @"
(const string) sin16s_gen::str4 str4 = (string) " @"
(const string) sin16s_gen::str5 str5 = (string) " @"
(const string) sin16s_gen::str6 str6 = (string) " @"
(word) sin16s_gen::usinx
(word) sin16s_gen::usinx#0 usinx zp ZP_WORD:12 5.5
(word) sin16s_gen::wavelength
(const word) sin16s_gen::wavelength#0 wavelength = (byte/signed byte/word/signed word/dword/signed dword) 20
(dword) sin16s_gen::x
(dword) sin16s_gen::x#1 x zp ZP_DWORD:2 7.333333333333333
(dword) sin16s_gen::x#10 x zp ZP_DWORD:2 0.6376811594202898
(word) sin16s_gen::x1
(word) sin16s_gen::x1#0 x1 zp ZP_WORD:10 22.0
(word) sin16s_gen::x1#1 x1 zp ZP_WORD:10 22.0
(word) sin16s_gen::x1#10 x1 zp ZP_WORD:10 27.5
(word) sin16s_gen::x1#11 x1 zp ZP_WORD:10 2.152173913043478
(word) sin16s_gen::x1#2 x1 zp ZP_WORD:10 22.0
(word) sin16s_gen::x2
(word) sin16s_gen::x2#0 x2 zp ZP_WORD:22 22.0
(word) sin16s_gen::x3
(word) sin16s_gen::x3#0 x3 zp ZP_WORD:36 1.1
(word) sin16s_gen::x3_6i
(word) sin16s_gen::x3_6i#0 x3_6i zp ZP_WORD:38 4.4
(word) sin16s_gen::x4
(word) sin16s_gen::x4#0 x4 zp ZP_WORD:22 22.0
(word) sin16s_gen::x5
(word) sin16s_gen::x5#0 x5 zp ZP_WORD:22 0.9705882352941178
(word) sin16s_gen::x5_128i
(word) sin16s_gen::x5_128i#0 x5_128i zp ZP_WORD:12 11.0

zp ZP_DWORD:2 [ sin16s_gen::x#10 sin16s_gen::x#1 print_dword::dw#2 print_dword::dw#0 print_dword::dw#1 ]
zp ZP_WORD:6 [ sin16s_gen::sintab#10 sin16s_gen::sintab#1 print_cls::sc#2 print_cls::sc#1 sin16s_gen::stepi#0 ]
zp ZP_WORD:8 [ sin16s_gen::i#10 sin16s_gen::i#1 ]
reg byte y [ sin16s_gen::isUpper#10 ]
zp ZP_WORD:10 [ sin16s_gen::x1#11 sin16s_gen::x1#10 sin16s_gen::x1#0 sin16s_gen::x1#1 sin16s_gen::x1#2 mul_u4f12::v2#4 mul_u4f12::v2#1 mul_u4f12::v2#2 mul_u4f12::v2#3 mul_u4f12::v2#0 mul16u::b#0 ]
zp ZP_WORD:12 [ sin16s_gen::sinx#10 sin16s_gen::sinx#14 sin16s_gen::sinx#1 sin16s_gen::usinx#0 print_sword::w#3 print_sword::w#1 print_sword::w#0 sin16s_gen::x5_128i#0 divr16u::return#10 divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 divr16u::return#2 divr16u::return#3 sin16s_gen::stepf#0 divr16u::return#4 ]
zp ZP_WORD:14 [ line_cursor#13 line_cursor#25 line_cursor#1 ]
zp ZP_WORD:16 [ print_word::w#8 print_word::w#1 print_word::w#2 print_word::w#12 print_word::w#5 print_word::w#6 print_word::w#7 print_word::w#4 print_str::str#8 print_str::str#10 print_str::str#0 divr16u::divisor#8 ]
reg byte x [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
reg byte a [ print_char::ch#3 print_char::ch#1 print_char::ch#2 ]
zp ZP_WORD:18 [ char_cursor#97 char_cursor#128 char_cursor#60 char_cursor#92 char_cursor#90 char_cursor#88 char_cursor#2 char_cursor#17 char_cursor#122 char_cursor#1 divr16u::rem#7 divr16u::rem#12 divr16u::rem#4 divr16u::rem#11 divr16u::rem#10 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 rem16u#1 ]
zp ZP_WORD:20 [ divr16u::dividend#5 divr16u::dividend#7 divr16u::dividend#3 divr16u::dividend#4 divr16u::dividend#0 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
zp ZP_WORD:22 [ mul_u4f12::v1#4 mul_u4f12::v1#1 mul_u4f12::v1#2 mul_u4f12::v1#3 mul_u4f12::v1#0 mul16u::a#2 mul16u::a#1 mul16u::a#0 sin16s_gen::x2#0 mul_u4f12::return#0 sin16s_gen::x4#0 mul_u4f12::return#2 mul_u4f12::return#10 mul_u4f12::return#1 mul_u4f12::return#3 sin16s_gen::x5#0 ]
zp ZP_DWORD:24 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#2 mul_u4f12::$0 mul_u4f12::$1 ]
zp ZP_DWORD:28 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
zp ZP_DWORD:32 [ sin16s_gen::step#0 ]
zp ZP_WORD:36 [ sin16s_gen::x3#0 ]
zp ZP_WORD:38 [ sin16s_gen::x3_6i#0 sin16s_gen::$21 ]
reg byte a [ print_byte::$0 ]
reg byte a [ print_byte::$2 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
reg byte a [ mul16u::$1 ]
