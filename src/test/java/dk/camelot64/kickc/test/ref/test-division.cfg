@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@26
@26: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @26
  [3] phi() [ ] ( )
main: scope:[main]  from @26
  [4] phi() [ ] ( main:2 [ ] )
  [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi() [ ] ( main:2 [ ] )
  [7] call test_8u param-assignment [ print_line_cursor#1 divr8u::rem#10 ] ( main:2 [ print_line_cursor#1 divr8u::rem#10 ] )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi() [ print_line_cursor#1 divr8u::rem#10 ] ( main:2 [ print_line_cursor#1 divr8u::rem#10 ] )
  [9] call test_16u param-assignment [ print_line_cursor#1 divr16u::rem#10 divr8u::rem#10 ] ( main:2 [ print_line_cursor#1 divr16u::rem#10 divr8u::rem#10 ] )
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] phi() [ print_line_cursor#1 divr16u::rem#10 divr8u::rem#10 ] ( main:2 [ print_line_cursor#1 divr16u::rem#10 divr8u::rem#10 ] )
  [11] call test_8s param-assignment [ print_line_cursor#1 divr16u::rem#10 ] ( main:2 [ print_line_cursor#1 divr16u::rem#10 ] )
  to:main::@4
main::@4: scope:[main]  from main::@3
  [12] phi() [ print_line_cursor#1 divr16u::rem#10 ] ( main:2 [ print_line_cursor#1 divr16u::rem#10 ] )
  [13] call test_16s param-assignment [ ] ( main:2 [ ] )
  to:main::@return
main::@return: scope:[main]  from main::@4
  [14] return  [ ] ( main:2 [ ] )
  to:@return
test_16s: scope:[test_16s]  from main::@4
  [15] phi() [ print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ print_line_cursor#1 divr16u::rem#10 ] )
  to:test_16s::@1
test_16s::@1: scope:[test_16s]  from test_16s test_16s::@11
  [16] (signed word) rem16s#17 ← phi( test_16s/(byte/signed byte/word/signed word/dword/signed dword) 0 test_16s::@11/(signed word) rem16s#3 ) [ test_16s::i#10 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 print_line_cursor#1 divr16u::rem#10 ] )
  [16] (byte) test_16s::i#10 ← phi( test_16s/(byte/signed byte/word/signed word/dword/signed dword) 0 test_16s::@11/(byte) test_16s::i#1 ) [ test_16s::i#10 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 print_line_cursor#1 divr16u::rem#10 ] )
  [17] (signed word) test_16s::dividend#0 ← *((const signed word[]) test_16s::dividends#0 + (byte) test_16s::i#10) [ test_16s::i#10 test_16s::dividend#0 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 test_16s::dividend#0 print_line_cursor#1 divr16u::rem#10 ] )
  [18] (signed word) test_16s::divisor#0 ← *((const signed word[]) test_16s::divisors#0 + (byte) test_16s::i#10) [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 divr16u::rem#10 ] )
  [19] (signed word) div16s::dividend#0 ← (signed word) test_16s::dividend#0 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 div16s::dividend#0 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 div16s::dividend#0 print_line_cursor#1 divr16u::rem#10 ] )
  [20] (signed word) div16s::divisor#0 ← (signed word) test_16s::divisor#0 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 div16s::dividend#0 div16s::divisor#0 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 div16s::dividend#0 div16s::divisor#0 print_line_cursor#1 divr16u::rem#10 ] )
  [21] call div16s param-assignment [ test_16s::i#10 rem16s#3 test_16s::dividend#0 test_16s::divisor#0 div16s::return#2 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::dividend#0 test_16s::divisor#0 div16s::return#2 print_line_cursor#1 divr16u::rem#10 ] )
  [22] (signed word) div16s::return#3 ← (signed word) div16s::return#2 [ test_16s::i#10 rem16s#3 test_16s::dividend#0 test_16s::divisor#0 div16s::return#3 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::dividend#0 test_16s::divisor#0 div16s::return#3 print_line_cursor#1 divr16u::rem#10 ] )
  to:test_16s::@3
test_16s::@3: scope:[test_16s]  from test_16s::@1
  [23] (signed word) test_16s::res#0 ← (signed word) div16s::return#3 [ test_16s::i#10 rem16s#3 test_16s::dividend#0 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::dividend#0 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 ] )
  [24] (signed word) print_sword::w#1 ← (signed word) test_16s::dividend#0 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_sword::w#1 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_sword::w#1 print_line_cursor#1 divr16u::rem#10 ] )
  [25] (byte*~) print_char_cursor#155 ← (byte*) print_line_cursor#1 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_sword::w#1 print_char_cursor#155 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_sword::w#1 print_char_cursor#155 print_line_cursor#1 divr16u::rem#10 ] )
  [26] call print_sword param-assignment [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] )
  to:test_16s::@4
test_16s::@4: scope:[test_16s]  from test_16s::@3
  [27] phi() [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] )
  [28] call print_str param-assignment [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 ] )
  to:test_16s::@5
test_16s::@5: scope:[test_16s]  from test_16s::@4
  [29] (signed word) print_sword::w#2 ← (signed word) test_16s::divisor#0 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 print_sword::w#2 print_char_cursor#126 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 print_sword::w#2 print_char_cursor#126 divr16u::rem#10 ] )
  [30] call print_sword param-assignment [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] )
  to:test_16s::@6
test_16s::@6: scope:[test_16s]  from test_16s::@5
  [31] phi() [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] )
  [32] call print_str param-assignment [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 ] )
  to:test_16s::@7
test_16s::@7: scope:[test_16s]  from test_16s::@6
  [33] (signed word) print_sword::w#3 ← (signed word) test_16s::res#0 [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_sword::w#3 print_char_cursor#126 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_sword::w#3 print_char_cursor#126 divr16u::rem#10 ] )
  [34] call print_sword param-assignment [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] )
  to:test_16s::@8
test_16s::@8: scope:[test_16s]  from test_16s::@7
  [35] phi() [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] )
  [36] call print_str param-assignment [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 ] )
  to:test_16s::@9
test_16s::@9: scope:[test_16s]  from test_16s::@8
  [37] (signed word) print_sword::w#4 ← (signed word) rem16s#3 [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_sword::w#4 print_char_cursor#126 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_sword::w#4 print_char_cursor#126 divr16u::rem#10 ] )
  [38] call print_sword param-assignment [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] )
  to:test_16s::@10
test_16s::@10: scope:[test_16s]  from test_16s::@9
  [39] phi() [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 ] )
  [40] call print_ln param-assignment [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 ] )
  to:test_16s::@11
test_16s::@11: scope:[test_16s]  from test_16s::@10
  [41] (byte) test_16s::i#1 ← (byte) test_16s::i#10 + (byte/signed byte/word/signed word/dword/signed dword) 2 [ test_16s::i#1 rem16s#3 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#1 rem16s#3 print_line_cursor#1 divr16u::rem#10 ] )
  [42] if((byte) test_16s::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 12) goto test_16s::@1 [ test_16s::i#1 rem16s#3 print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16s:13 [ test_16s::i#1 rem16s#3 print_line_cursor#1 divr16u::rem#10 ] )
  to:test_16s::@return
test_16s::@return: scope:[test_16s]  from test_16s::@11
  [43] return  [ ] ( main:2::test_16s:13 [ ] )
  to:@return
print_ln: scope:[print_ln]  from test_16s::@10 test_16u::@10 test_8s::@10 test_8u::@10
  [44] (byte*) print_line_cursor#39 ← phi( test_16s::@10/(byte*) print_line_cursor#1 test_16u::@10/(byte*) print_line_cursor#1 test_8s::@10/(byte*) print_line_cursor#1 test_8u::@10/(byte*) print_line_cursor#41 ) [ print_line_cursor#39 print_char_cursor#17 ] ( main:2::test_16s:13::print_ln:40 [ test_16s::i#10 rem16s#3 divr16u::rem#10 print_line_cursor#39 print_char_cursor#17 ] main:2::test_8s:11::print_ln:155 [ divr16u::rem#10 test_8s::i#10 rem8s#3 divr8u::rem#10 print_line_cursor#39 print_char_cursor#17 ] main:2::test_16u:9::print_ln:239 [ divr8u::rem#10 divr16u::rem#10 test_16u::i#10 print_line_cursor#39 print_char_cursor#17 ] main:2::test_8u:7::print_ln:267 [ divr8u::rem#10 test_8u::i#10 print_line_cursor#39 print_char_cursor#17 ] )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [45] (byte*) print_line_cursor#20 ← phi( print_ln/(byte*) print_line_cursor#39 print_ln::@1/(byte*) print_line_cursor#1 ) [ print_line_cursor#20 print_char_cursor#17 ] ( main:2::test_16s:13::print_ln:40 [ test_16s::i#10 rem16s#3 divr16u::rem#10 print_line_cursor#20 print_char_cursor#17 ] main:2::test_8s:11::print_ln:155 [ divr16u::rem#10 test_8s::i#10 rem8s#3 divr8u::rem#10 print_line_cursor#20 print_char_cursor#17 ] main:2::test_16u:9::print_ln:239 [ divr8u::rem#10 divr16u::rem#10 test_16u::i#10 print_line_cursor#20 print_char_cursor#17 ] main:2::test_8u:7::print_ln:267 [ divr8u::rem#10 test_8u::i#10 print_line_cursor#20 print_char_cursor#17 ] )
  [46] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#20 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ print_line_cursor#1 print_char_cursor#17 ] ( main:2::test_16s:13::print_ln:40 [ test_16s::i#10 rem16s#3 divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 ] main:2::test_8s:11::print_ln:155 [ divr16u::rem#10 test_8s::i#10 rem8s#3 divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 ] main:2::test_16u:9::print_ln:239 [ divr8u::rem#10 divr16u::rem#10 test_16u::i#10 print_line_cursor#1 print_char_cursor#17 ] main:2::test_8u:7::print_ln:267 [ divr8u::rem#10 test_8u::i#10 print_line_cursor#1 print_char_cursor#17 ] )
  [47] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#17) goto print_ln::@1 [ print_line_cursor#1 print_char_cursor#17 ] ( main:2::test_16s:13::print_ln:40 [ test_16s::i#10 rem16s#3 divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 ] main:2::test_8s:11::print_ln:155 [ divr16u::rem#10 test_8s::i#10 rem8s#3 divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 ] main:2::test_16u:9::print_ln:239 [ divr8u::rem#10 divr16u::rem#10 test_16u::i#10 print_line_cursor#1 print_char_cursor#17 ] main:2::test_8u:7::print_ln:267 [ divr8u::rem#10 test_8u::i#10 print_line_cursor#1 print_char_cursor#17 ] )
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [48] return  [ print_line_cursor#1 ] ( main:2::test_16s:13::print_ln:40 [ test_16s::i#10 rem16s#3 divr16u::rem#10 print_line_cursor#1 ] main:2::test_8s:11::print_ln:155 [ divr16u::rem#10 test_8s::i#10 rem8s#3 divr8u::rem#10 print_line_cursor#1 ] main:2::test_16u:9::print_ln:239 [ divr8u::rem#10 divr16u::rem#10 test_16u::i#10 print_line_cursor#1 ] main:2::test_8u:7::print_ln:267 [ divr8u::rem#10 test_8u::i#10 print_line_cursor#1 ] )
  to:@return
print_sword: scope:[print_sword]  from test_16s::@3 test_16s::@5 test_16s::@7 test_16s::@9
  [49] (byte*) print_char_cursor#129 ← phi( test_16s::@3/(byte*~) print_char_cursor#155 test_16s::@5/(byte*) print_char_cursor#126 test_16s::@7/(byte*) print_char_cursor#126 test_16s::@9/(byte*) print_char_cursor#126 ) [ print_sword::w#5 print_char_cursor#129 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] )
  [49] (signed word) print_sword::w#5 ← phi( test_16s::@3/(signed word) print_sword::w#1 test_16s::@5/(signed word) print_sword::w#2 test_16s::@7/(signed word) print_sword::w#3 test_16s::@9/(signed word) print_sword::w#4 ) [ print_sword::w#5 print_char_cursor#129 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] )
  [50] if((signed word) print_sword::w#5>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1 [ print_sword::w#5 print_char_cursor#129 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] )
  to:print_sword::@2
print_sword::@2: scope:[print_sword]  from print_sword
  [51] phi() [ print_sword::w#5 print_char_cursor#129 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#129 ] )
  [52] call print_char param-assignment [ print_char_cursor#17 print_sword::w#5 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_sword::w#5 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_sword::w#5 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_sword::w#5 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_sword::w#5 ] )
  to:print_sword::@4
print_sword::@4: scope:[print_sword]  from print_sword::@2
  [53] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#5 [ print_char_cursor#17 print_sword::w#0 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_sword::w#0 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_sword::w#0 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_sword::w#0 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_sword::w#0 ] )
  to:print_sword::@1
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@4
  [54] (byte*) print_char_cursor#128 ← phi( print_sword/(byte*) print_char_cursor#129 print_sword::@4/(byte*) print_char_cursor#17 ) [ print_sword::w#6 print_char_cursor#128 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#6 print_char_cursor#128 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#6 print_char_cursor#128 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#6 print_char_cursor#128 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#6 print_char_cursor#128 ] )
  [54] (signed word) print_sword::w#6 ← phi( print_sword/(signed word) print_sword::w#5 print_sword::@4/(signed word) print_sword::w#0 ) [ print_sword::w#6 print_char_cursor#128 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#6 print_char_cursor#128 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#6 print_char_cursor#128 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#6 print_char_cursor#128 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#6 print_char_cursor#128 ] )
  [55] (word~) print_word::w#7 ← (word)(signed word) print_sword::w#6 [ print_char_cursor#128 print_word::w#7 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#128 print_word::w#7 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#128 print_word::w#7 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#128 print_word::w#7 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#128 print_word::w#7 ] )
  [56] call print_word param-assignment [ print_char_cursor#17 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] )
  to:print_sword::@return
print_sword::@return: scope:[print_sword]  from print_sword::@1
  [57] return  [ print_char_cursor#17 ] ( main:2::test_16s:13::print_sword:26 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] )
  to:@return
print_word: scope:[print_word]  from print_sword::@1 test_16u::@3 test_16u::@5 test_16u::@7 test_16u::@9
  [58] (byte*) print_char_cursor#132 ← phi( print_sword::@1/(byte*) print_char_cursor#128 test_16u::@3/(byte*~) print_char_cursor#162 test_16u::@5/(byte*) print_char_cursor#126 test_16u::@7/(byte*) print_char_cursor#126 test_16u::@9/(byte*) print_char_cursor#126 ) [ print_word::w#5 print_char_cursor#132 ] ( main:2::test_16s:13::print_sword:26::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16s:13::print_sword:30::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16s:13::print_sword:34::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16s:13::print_sword:38::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16u:9::print_word:225 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#132 ] main:2::test_16u:9::print_word:229 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#132 ] main:2::test_16u:9::print_word:233 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16u:9::print_word:237 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#132 ] )
  [58] (word) print_word::w#5 ← phi( print_sword::@1/(word~) print_word::w#7 test_16u::@3/(word) print_word::w#1 test_16u::@5/(word) print_word::w#2 test_16u::@7/(word) print_word::w#3 test_16u::@9/(word) print_word::w#4 ) [ print_word::w#5 print_char_cursor#132 ] ( main:2::test_16s:13::print_sword:26::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16s:13::print_sword:30::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16s:13::print_sword:34::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16s:13::print_sword:38::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16u:9::print_word:225 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#132 ] main:2::test_16u:9::print_word:229 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#132 ] main:2::test_16u:9::print_word:233 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#132 ] main:2::test_16u:9::print_word:237 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#132 ] )
  [59] (byte) print_byte::b#1 ← > (word) print_word::w#5 [ print_word::w#5 print_char_cursor#132 print_byte::b#1 ] ( main:2::test_16s:13::print_sword:26::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 print_byte::b#1 ] main:2::test_16s:13::print_sword:30::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 print_byte::b#1 ] main:2::test_16s:13::print_sword:34::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 print_byte::b#1 ] main:2::test_16s:13::print_sword:38::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#132 print_byte::b#1 ] main:2::test_16u:9::print_word:225 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#132 print_byte::b#1 ] main:2::test_16u:9::print_word:229 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#132 print_byte::b#1 ] main:2::test_16u:9::print_word:233 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#132 print_byte::b#1 ] main:2::test_16u:9::print_word:237 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#132 print_byte::b#1 ] )
  [60] call print_byte param-assignment [ print_char_cursor#17 print_word::w#5 ] ( main:2::test_16s:13::print_sword:26::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_word::w#5 ] main:2::test_16s:13::print_sword:30::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_word::w#5 ] main:2::test_16s:13::print_sword:34::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_word::w#5 ] main:2::test_16s:13::print_sword:38::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_word::w#5 ] main:2::test_16u:9::print_word:225 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 print_word::w#5 ] main:2::test_16u:9::print_word:229 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 print_word::w#5 ] main:2::test_16u:9::print_word:233 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_word::w#5 ] main:2::test_16u:9::print_word:237 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_word::w#5 ] )
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  [61] (byte) print_byte::b#2 ← < (word) print_word::w#5 [ print_char_cursor#17 print_byte::b#2 ] ( main:2::test_16s:13::print_sword:26::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::b#2 ] main:2::test_16s:13::print_sword:30::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::b#2 ] main:2::test_16s:13::print_sword:34::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::b#2 ] main:2::test_16s:13::print_sword:38::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::b#2 ] main:2::test_16u:9::print_word:225 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 print_byte::b#2 ] main:2::test_16u:9::print_word:229 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 print_byte::b#2 ] main:2::test_16u:9::print_word:233 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_byte::b#2 ] main:2::test_16u:9::print_word:237 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_byte::b#2 ] )
  [62] call print_byte param-assignment [ print_char_cursor#17 ] ( main:2::test_16s:13::print_sword:26::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:225 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:229 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:233 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:237 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] )
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@1
  [63] return  [ print_char_cursor#17 ] ( main:2::test_16s:13::print_sword:26::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:225 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:229 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:233 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:237 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] )
  to:@return
print_byte: scope:[print_byte]  from print_sbyte::@1 print_word print_word::@1 test_8u::@3 test_8u::@5 test_8u::@7 test_8u::@9
  [64] (byte*) print_char_cursor#133 ← phi( print_sbyte::@1/(byte*) print_char_cursor#130 print_word/(byte*) print_char_cursor#132 print_word::@1/(byte*) print_char_cursor#17 test_8u::@3/(byte*) print_char_cursor#135 test_8u::@5/(byte*) print_char_cursor#126 test_8u::@7/(byte*) print_char_cursor#126 test_8u::@9/(byte*) print_char_cursor#126 ) [ print_byte::b#7 print_char_cursor#133 ] ( main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:225::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:229::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:233::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:237::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:225::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:229::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:233::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:237::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8s:11::print_sbyte:141::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8s:11::print_sbyte:145::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8s:11::print_sbyte:149::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8s:11::print_sbyte:153::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8u:7::print_byte:253 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#7 print_char_cursor#133 ] main:2::test_8u:7::print_byte:257 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_byte::b#7 print_char_cursor#133 ] main:2::test_8u:7::print_byte:261 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8u:7::print_byte:265 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#133 ] )
  [64] (byte) print_byte::b#7 ← phi( print_sbyte::@1/(byte~) print_byte::b#9 print_word/(byte) print_byte::b#1 print_word::@1/(byte) print_byte::b#2 test_8u::@3/(byte) print_byte::b#3 test_8u::@5/(byte) print_byte::b#4 test_8u::@7/(byte) print_byte::b#5 test_8u::@9/(byte) print_byte::b#6 ) [ print_byte::b#7 print_char_cursor#133 ] ( main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:225::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:229::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:233::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:237::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:225::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:229::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:233::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_16u:9::print_word:237::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8s:11::print_sbyte:141::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8s:11::print_sbyte:145::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8s:11::print_sbyte:149::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8s:11::print_sbyte:153::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8u:7::print_byte:253 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#7 print_char_cursor#133 ] main:2::test_8u:7::print_byte:257 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_byte::b#7 print_char_cursor#133 ] main:2::test_8u:7::print_byte:261 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#133 ] main:2::test_8u:7::print_byte:265 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#133 ] )
  [65] (byte~) print_byte::$0 ← (byte) print_byte::b#7 >> (byte/signed byte/word/signed word/dword/signed dword) 4 [ print_byte::b#7 print_char_cursor#133 print_byte::$0 ] ( main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16u:9::print_word:225::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16u:9::print_word:229::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16u:9::print_word:233::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16u:9::print_word:237::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16u:9::print_word:225::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16u:9::print_word:229::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16u:9::print_word:233::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_16u:9::print_word:237::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_8s:11::print_sbyte:141::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_8s:11::print_sbyte:145::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_8s:11::print_sbyte:149::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_8s:11::print_sbyte:153::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_8u:7::print_byte:253 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_8u:7::print_byte:257 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_8u:7::print_byte:261 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] main:2::test_8u:7::print_byte:265 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#133 print_byte::$0 ] )
  [66] (byte) print_char::ch#2 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] ( main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16u:9::print_word:225::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16u:9::print_word:229::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16u:9::print_word:233::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16u:9::print_word:237::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16u:9::print_word:225::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16u:9::print_word:229::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16u:9::print_word:233::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_16u:9::print_word:237::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_8s:11::print_sbyte:141::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_8s:11::print_sbyte:145::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_8s:11::print_sbyte:149::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_8s:11::print_sbyte:153::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_8u:7::print_byte:253 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_8u:7::print_byte:257 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_8u:7::print_byte:261 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] main:2::test_8u:7::print_byte:265 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#133 print_char::ch#2 ] )
  [67] call print_char param-assignment [ print_char_cursor#17 print_byte::b#7 ] ( main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_byte::b#7 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_byte::b#7 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_byte::b#7 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_byte::b#7 ] main:2::test_16u:9::print_word:225::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#17 print_byte::b#7 ] main:2::test_16u:9::print_word:229::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#17 print_byte::b#7 ] main:2::test_16u:9::print_word:233::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 print_byte::b#7 ] main:2::test_16u:9::print_word:237::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 print_byte::b#7 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_16u:9::print_word:225::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 print_byte::b#7 ] main:2::test_16u:9::print_word:229::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 print_byte::b#7 ] main:2::test_16u:9::print_word:233::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_16u:9::print_word:237::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_8s:11::print_sbyte:141::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_8s:11::print_sbyte:145::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_8s:11::print_sbyte:149::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_8s:11::print_sbyte:153::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_8u:7::print_byte:253 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#17 print_byte::b#7 ] main:2::test_8u:7::print_byte:257 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#17 print_byte::b#7 ] main:2::test_8u:7::print_byte:261 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 print_byte::b#7 ] main:2::test_8u:7::print_byte:265 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 print_byte::b#7 ] )
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [68] (byte~) print_byte::$2 ← (byte) print_byte::b#7 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ print_char_cursor#17 print_byte::$2 ] ( main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_byte::$2 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_byte::$2 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_byte::$2 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_byte::$2 ] main:2::test_16u:9::print_word:225::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#17 print_byte::$2 ] main:2::test_16u:9::print_word:229::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#17 print_byte::$2 ] main:2::test_16u:9::print_word:233::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 print_byte::$2 ] main:2::test_16u:9::print_word:237::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 print_byte::$2 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::$2 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::$2 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::$2 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_byte::$2 ] main:2::test_16u:9::print_word:225::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 print_byte::$2 ] main:2::test_16u:9::print_word:229::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 print_byte::$2 ] main:2::test_16u:9::print_word:233::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_byte::$2 ] main:2::test_16u:9::print_word:237::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_byte::$2 ] main:2::test_8s:11::print_sbyte:141::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_byte::$2 ] main:2::test_8s:11::print_sbyte:145::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_byte::$2 ] main:2::test_8s:11::print_sbyte:149::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_byte::$2 ] main:2::test_8s:11::print_sbyte:153::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_byte::$2 ] main:2::test_8u:7::print_byte:253 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#17 print_byte::$2 ] main:2::test_8u:7::print_byte:257 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#17 print_byte::$2 ] main:2::test_8u:7::print_byte:261 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 print_byte::$2 ] main:2::test_8u:7::print_byte:265 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 print_byte::$2 ] )
  [69] (byte) print_char::ch#3 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ print_char_cursor#17 print_char::ch#3 ] ( main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_char::ch#3 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_char::ch#3 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_char::ch#3 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 print_char::ch#3 ] main:2::test_16u:9::print_word:225::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#17 print_char::ch#3 ] main:2::test_16u:9::print_word:229::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#17 print_char::ch#3 ] main:2::test_16u:9::print_word:233::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 print_char::ch#3 ] main:2::test_16u:9::print_word:237::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 print_char::ch#3 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_16u:9::print_word:225::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 print_char::ch#3 ] main:2::test_16u:9::print_word:229::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 print_char::ch#3 ] main:2::test_16u:9::print_word:233::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_16u:9::print_word:237::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_8s:11::print_sbyte:141::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_8s:11::print_sbyte:145::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_8s:11::print_sbyte:149::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_8s:11::print_sbyte:153::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_8u:7::print_byte:253 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#17 print_char::ch#3 ] main:2::test_8u:7::print_byte:257 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#17 print_char::ch#3 ] main:2::test_8u:7::print_byte:261 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 print_char::ch#3 ] main:2::test_8u:7::print_byte:265 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 print_char::ch#3 ] )
  [70] call print_char param-assignment [ print_char_cursor#17 ] ( main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:141::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8u:7::print_byte:253 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#17 ] main:2::test_8u:7::print_byte:257 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#17 ] main:2::test_8u:7::print_byte:261 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 ] main:2::test_8u:7::print_byte:265 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 ] )
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [71] return  [ print_char_cursor#17 ] ( main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:60 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:62 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:141::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153::print_byte:166 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8u:7::print_byte:253 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#17 ] main:2::test_8u:7::print_byte:257 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#17 ] main:2::test_8u:7::print_byte:261 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 ] main:2::test_8u:7::print_byte:265 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 ] )
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1 print_sbyte::@2 print_sword::@2
  [72] (byte*) print_char_cursor#80 ← phi( print_byte/(byte*) print_char_cursor#133 print_byte::@1/(byte*) print_char_cursor#17 print_sbyte::@2/(byte*) print_char_cursor#131 print_sword::@2/(byte*) print_char_cursor#129 ) [ print_char::ch#4 print_char_cursor#80 ] ( main:2::test_16s:13::print_sword:26::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:253::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:257::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:261::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:265::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:253::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:257::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:261::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:265::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:141::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:145::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:149::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:153::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char::ch#4 print_char_cursor#80 ] )
  [72] (byte) print_char::ch#4 ← phi( print_byte/(byte) print_char::ch#2 print_byte::@1/(byte) print_char::ch#3 print_sbyte::@2/(byte) '-' print_sword::@2/(byte) '-' ) [ print_char::ch#4 print_char_cursor#80 ] ( main:2::test_16s:13::print_sword:26::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:253::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:257::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:261::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:265::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:253::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:257::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:261::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8u:7::print_byte:265::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:141::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:145::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:149::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char::ch#4 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:153::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char::ch#4 print_char_cursor#80 ] )
  [73] *((byte*) print_char_cursor#80) ← (byte) print_char::ch#4 [ print_char_cursor#80 ] ( main:2::test_16s:13::print_sword:26::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_byte::b#7 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_byte::b#7 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_8u:7::print_byte:253::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#7 print_char_cursor#80 ] main:2::test_8u:7::print_byte:257::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_byte::b#7 print_char_cursor#80 ] main:2::test_8u:7::print_byte:261::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_8u:7::print_byte:265::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#80 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#80 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#80 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#80 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#80 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#80 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#80 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#80 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#80 ] main:2::test_8u:7::print_byte:253::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#80 ] main:2::test_8u:7::print_byte:257::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#80 ] main:2::test_8u:7::print_byte:261::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#80 ] main:2::test_8u:7::print_byte:265::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:141::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:145::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:149::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#80 ] main:2::test_8s:11::print_sbyte:153::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#80 ] )
  [74] (byte*) print_char_cursor#17 ← ++ (byte*) print_char_cursor#80 [ print_char_cursor#17 ] ( main:2::test_16s:13::print_sword:26::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8u:7::print_byte:253::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#7 print_char_cursor#17 ] main:2::test_8u:7::print_byte:257::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_byte::b#7 print_char_cursor#17 ] main:2::test_8u:7::print_byte:261::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8u:7::print_byte:265::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8u:7::print_byte:253::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#17 ] main:2::test_8u:7::print_byte:257::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#17 ] main:2::test_8u:7::print_byte:261::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 ] main:2::test_8u:7::print_byte:265::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:141::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#17 ] )
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [75] return  [ print_char_cursor#17 ] ( main:2::test_16s:13::print_sword:26::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_char:52 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_char:52 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_sword::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:67 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:67 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:67 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8u:7::print_byte:253::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_byte::b#7 print_char_cursor#17 ] main:2::test_8u:7::print_byte:257::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_byte::b#7 print_char_cursor#17 ] main:2::test_8u:7::print_byte:261::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_8u:7::print_byte:265::print_char:67 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_byte::b#7 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:60::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:60::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_word::w#5 print_char_cursor#17 ] main:2::test_16s:13::print_sword:26::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:30::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:34::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16s:13::print_sword:38::print_word:56::print_byte:62::print_char:70 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:225::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:229::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 ] main:2::test_16u:9::print_word:233::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_16u:9::print_word:237::print_byte:62::print_char:70 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:141::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153::print_byte:166::print_char:70 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8u:7::print_byte:253::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#17 ] main:2::test_8u:7::print_byte:257::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#17 ] main:2::test_8u:7::print_byte:261::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 ] main:2::test_8u:7::print_byte:265::print_char:70 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:141::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153::print_char:162 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_sbyte::b#5 print_char_cursor#17 ] )
  to:@return
print_str: scope:[print_str]  from test_16s::@4 test_16s::@6 test_16s::@8 test_16u::@4 test_16u::@6 test_16u::@8 test_8s::@4 test_8s::@6 test_8s::@8 test_8u::@4 test_8u::@6 test_8u::@8
  [76] (byte*) print_str::str#15 ← phi( test_16s::@4/(const string) test_16s::str test_16s::@6/(const string) test_16s::str1 test_16s::@8/(const string) test_16s::str2 test_16u::@4/(const string) test_16u::str test_16u::@6/(const string) test_16u::str1 test_16u::@8/(const string) test_16u::str2 test_8s::@4/(const string) test_8s::str test_8s::@6/(const string) test_8s::str1 test_8s::@8/(const string) test_8s::str2 test_8u::@4/(const string) test_8u::str test_8u::@6/(const string) test_8u::str1 test_8u::@8/(const string) test_8u::str2 ) [ print_char_cursor#17 print_str::str#15 ] ( main:2::test_16s:13::print_str:28 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_str::str#15 ] main:2::test_16s:13::print_str:32 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_str::str#15 ] main:2::test_16s:13::print_str:36 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#17 print_str::str#15 ] main:2::test_8s:11::print_str:143 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_str::str#15 ] main:2::test_8s:11::print_str:147 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_str::str#15 ] main:2::test_8s:11::print_str:151 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_str::str#15 ] main:2::test_16u:9::print_str:227 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#17 print_str::str#15 ] main:2::test_16u:9::print_str:231 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#17 print_str::str#15 ] main:2::test_16u:9::print_str:235 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#17 print_str::str#15 ] main:2::test_8u:7::print_str:255 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#17 print_str::str#15 ] main:2::test_8u:7::print_str:259 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#17 print_str::str#15 ] main:2::test_8u:7::print_str:263 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#17 print_str::str#15 ] )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [77] (byte*) print_char_cursor#126 ← phi( print_str/(byte*) print_char_cursor#17 print_str::@2/(byte*) print_char_cursor#1 ) [ print_char_cursor#126 print_str::str#13 ] ( main:2::test_16s:13::print_str:28 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16s:13::print_str:32 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16s:13::print_str:36 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:143 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:147 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:151 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:227 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:231 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:235 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:255 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:259 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:263 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#126 print_str::str#13 ] )
  [77] (byte*) print_str::str#13 ← phi( print_str/(byte*) print_str::str#15 print_str::@2/(byte*) print_str::str#0 ) [ print_char_cursor#126 print_str::str#13 ] ( main:2::test_16s:13::print_str:28 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16s:13::print_str:32 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16s:13::print_str:36 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:143 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:147 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:151 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:227 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:231 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:235 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:255 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:259 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:263 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#126 print_str::str#13 ] )
  [78] if(*((byte*) print_str::str#13)!=(byte) '@') goto print_str::@2 [ print_char_cursor#126 print_str::str#13 ] ( main:2::test_16s:13::print_str:28 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16s:13::print_str:32 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16s:13::print_str:36 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:143 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:147 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:151 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:227 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:231 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:235 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:255 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:259 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:263 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#126 print_str::str#13 ] )
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [79] return  [ print_char_cursor#126 ] ( main:2::test_16s:13::print_str:28 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 ] main:2::test_16s:13::print_str:32 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 ] main:2::test_16s:13::print_str:36 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 ] main:2::test_8s:11::print_str:143 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 ] main:2::test_8s:11::print_str:147 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 ] main:2::test_8s:11::print_str:151 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#126 ] main:2::test_16u:9::print_str:227 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#126 ] main:2::test_16u:9::print_str:231 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#126 ] main:2::test_16u:9::print_str:235 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#126 ] main:2::test_8u:7::print_str:255 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#126 ] main:2::test_8u:7::print_str:259 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#126 ] main:2::test_8u:7::print_str:263 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#126 ] )
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [80] *((byte*) print_char_cursor#126) ← *((byte*) print_str::str#13) [ print_char_cursor#126 print_str::str#13 ] ( main:2::test_16s:13::print_str:28 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16s:13::print_str:32 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16s:13::print_str:36 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:143 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:147 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8s:11::print_str:151 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:227 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:231 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_16u:9::print_str:235 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:255 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:259 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_char_cursor#126 print_str::str#13 ] main:2::test_8u:7::print_str:263 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_char_cursor#126 print_str::str#13 ] )
  [81] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#126 [ print_str::str#13 print_char_cursor#1 ] ( main:2::test_16s:13::print_str:28 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_str::str#13 print_char_cursor#1 ] main:2::test_16s:13::print_str:32 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_str::str#13 print_char_cursor#1 ] main:2::test_16s:13::print_str:36 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_str::str#13 print_char_cursor#1 ] main:2::test_8s:11::print_str:143 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_str::str#13 print_char_cursor#1 ] main:2::test_8s:11::print_str:147 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_str::str#13 print_char_cursor#1 ] main:2::test_8s:11::print_str:151 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_str::str#13 print_char_cursor#1 ] main:2::test_16u:9::print_str:227 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_str::str#13 print_char_cursor#1 ] main:2::test_16u:9::print_str:231 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_str::str#13 print_char_cursor#1 ] main:2::test_16u:9::print_str:235 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_str::str#13 print_char_cursor#1 ] main:2::test_8u:7::print_str:255 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_str::str#13 print_char_cursor#1 ] main:2::test_8u:7::print_str:259 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_str::str#13 print_char_cursor#1 ] main:2::test_8u:7::print_str:263 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_str::str#13 print_char_cursor#1 ] )
  [82] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#13 [ print_str::str#0 print_char_cursor#1 ] ( main:2::test_16s:13::print_str:28 [ test_16s::i#10 rem16s#3 test_16s::divisor#0 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_str::str#0 print_char_cursor#1 ] main:2::test_16s:13::print_str:32 [ test_16s::i#10 rem16s#3 test_16s::res#0 print_line_cursor#1 divr16u::rem#10 print_str::str#0 print_char_cursor#1 ] main:2::test_16s:13::print_str:36 [ test_16s::i#10 rem16s#3 print_line_cursor#1 divr16u::rem#10 print_str::str#0 print_char_cursor#1 ] main:2::test_8s:11::print_str:143 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_str::str#0 print_char_cursor#1 ] main:2::test_8s:11::print_str:147 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_str::str#0 print_char_cursor#1 ] main:2::test_8s:11::print_str:151 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_str::str#0 print_char_cursor#1 ] main:2::test_16u:9::print_str:227 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 print_str::str#0 print_char_cursor#1 ] main:2::test_16u:9::print_str:231 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::res#0 print_str::str#0 print_char_cursor#1 ] main:2::test_16u:9::print_str:235 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 print_str::str#0 print_char_cursor#1 ] main:2::test_8u:7::print_str:255 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 print_str::str#0 print_char_cursor#1 ] main:2::test_8u:7::print_str:259 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 test_8u::res#0 print_str::str#0 print_char_cursor#1 ] main:2::test_8u:7::print_str:263 [ print_line_cursor#41 divr8u::rem#10 test_8u::i#10 print_str::str#0 print_char_cursor#1 ] )
  to:print_str::@1
div16s: scope:[div16s]  from test_16s::@1
  [83] if((signed word) div16s::dividend#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto div16s::@16 [ div16s::dividend#0 div16s::divisor#0 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::dividend#0 div16s::divisor#0 divr16u::rem#10 ] )
  to:div16s::@7
div16s::@7: scope:[div16s]  from div16s
  [84] (signed word~) div16s::$2 ← - (signed word) div16s::dividend#0 [ div16s::divisor#0 div16s::$2 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::divisor#0 div16s::$2 divr16u::rem#10 ] )
  [85] (word~) div16s::dividendu#8 ← (word)(signed word~) div16s::$2 [ div16s::divisor#0 div16s::dividendu#8 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::divisor#0 div16s::dividendu#8 divr16u::rem#10 ] )
  to:div16s::@2
div16s::@2: scope:[div16s]  from div16s::@16 div16s::@7
  [86] (word) div16s::dividendu#3 ← phi( div16s::@16/(word~) div16s::dividendu#7 div16s::@7/(word~) div16s::dividendu#8 ) [ div16s::divisor#0 div16s::neg#3 div16s::dividendu#3 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::divisor#0 div16s::neg#3 div16s::dividendu#3 divr16u::rem#10 ] )
  [86] (byte) div16s::neg#3 ← phi( div16s::@16/(byte/signed byte/word/signed word/dword/signed dword) 0 div16s::@7/(byte/signed byte/word/signed word/dword/signed dword) 1 ) [ div16s::divisor#0 div16s::neg#3 div16s::dividendu#3 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::divisor#0 div16s::neg#3 div16s::dividendu#3 divr16u::rem#10 ] )
  [87] if((signed word) div16s::divisor#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto div16s::@17 [ div16s::divisor#0 div16s::neg#3 div16s::dividendu#3 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::divisor#0 div16s::neg#3 div16s::dividendu#3 divr16u::rem#10 ] )
  to:div16s::@9
div16s::@9: scope:[div16s]  from div16s::@2
  [88] (signed word~) div16s::$7 ← - (signed word) div16s::divisor#0 [ div16s::neg#3 div16s::dividendu#3 div16s::$7 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#3 div16s::dividendu#3 div16s::$7 divr16u::rem#10 ] )
  [89] (byte) div16s::neg#2 ← (byte) div16s::neg#3 ^ (byte/signed byte/word/signed word/dword/signed dword) 1 [ div16s::dividendu#3 div16s::$7 div16s::neg#2 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::dividendu#3 div16s::$7 div16s::neg#2 divr16u::rem#10 ] )
  [90] (word~) div16s::divisoru#5 ← (word)(signed word~) div16s::$7 [ div16s::dividendu#3 div16s::neg#2 div16s::divisoru#5 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::dividendu#3 div16s::neg#2 div16s::divisoru#5 divr16u::rem#10 ] )
  to:div16s::@4
div16s::@4: scope:[div16s]  from div16s::@17 div16s::@9
  [91] (byte) div16s::neg#4 ← phi( div16s::@17/(byte) div16s::neg#3 div16s::@9/(byte) div16s::neg#2 ) [ div16s::dividendu#3 div16s::divisoru#3 div16s::neg#4 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::dividendu#3 div16s::divisoru#3 div16s::neg#4 divr16u::rem#10 ] )
  [91] (word) div16s::divisoru#3 ← phi( div16s::@17/(word~) div16s::divisoru#4 div16s::@9/(word~) div16s::divisoru#5 ) [ div16s::dividendu#3 div16s::divisoru#3 div16s::neg#4 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::dividendu#3 div16s::divisoru#3 div16s::neg#4 divr16u::rem#10 ] )
  [92] (word) div16u::dividend#0 ← (word) div16s::dividendu#3 [ div16s::divisoru#3 div16s::neg#4 div16u::dividend#0 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::divisoru#3 div16s::neg#4 div16u::dividend#0 divr16u::rem#10 ] )
  [93] (word) div16u::divisor#0 ← (word) div16s::divisoru#3 [ div16s::neg#4 div16u::dividend#0 div16u::divisor#0 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16u::dividend#0 div16u::divisor#0 divr16u::rem#10 ] )
  [94] call div16u param-assignment [ div16s::neg#4 div16u::return#0 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16u::return#0 divr16u::rem#10 ] )
  [95] (word) div16u::return#2 ← (word) div16u::return#0 [ div16s::neg#4 div16u::return#2 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16u::return#2 divr16u::rem#10 ] )
  to:div16s::@15
div16s::@15: scope:[div16s]  from div16s::@4
  [96] (word) div16s::resultu#0 ← (word) div16u::return#2 [ div16s::neg#4 div16s::resultu#0 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16s::resultu#0 divr16u::rem#10 ] )
  [97] if((byte) div16s::neg#4!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto div16s::@5 [ div16s::resultu#0 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::resultu#0 divr16u::rem#10 ] )
  to:div16s::@18
div16s::@18: scope:[div16s]  from div16s::@15
  [98] (signed word~) div16s::return#6 ← (signed word)(word) div16s::resultu#0 [ div16s::return#6 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::return#6 divr16u::rem#10 ] )
  [99] (signed word~) rem16s#32 ← (signed word)(word) divr16u::rem#10 [ div16s::return#6 rem16s#32 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::return#6 rem16s#32 divr16u::rem#10 ] )
  to:div16s::@return
div16s::@return: scope:[div16s]  from div16s::@18 div16s::@5
  [100] (signed word) rem16s#3 ← phi( div16s::@18/(signed word~) rem16s#32 div16s::@5/(signed word) rem16s#1 ) [ rem16s#3 div16s::return#2 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 rem16s#3 div16s::return#2 divr16u::rem#10 ] )
  [100] (signed word) div16s::return#2 ← phi( div16s::@18/(signed word~) div16s::return#6 div16s::@5/(signed word) div16s::return#0 ) [ rem16s#3 div16s::return#2 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 rem16s#3 div16s::return#2 divr16u::rem#10 ] )
  [101] return  [ rem16s#3 div16s::return#2 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 rem16s#3 div16s::return#2 divr16u::rem#10 ] )
  to:@return
div16s::@5: scope:[div16s]  from div16s::@15
  [102] (signed word) rem16s#1 ← - (signed word)(word) divr16u::rem#10 [ div16s::resultu#0 divr16u::rem#10 rem16s#1 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::resultu#0 divr16u::rem#10 rem16s#1 ] )
  [103] (signed word) div16s::return#0 ← - (signed word)(word) div16s::resultu#0 [ divr16u::rem#10 div16s::return#0 rem16s#1 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 divr16u::rem#10 div16s::return#0 rem16s#1 ] )
  to:div16s::@return
div16s::@17: scope:[div16s]  from div16s::@2
  [104] (word~) div16s::divisoru#4 ← (word)(signed word) div16s::divisor#0 [ div16s::neg#3 div16s::dividendu#3 div16s::divisoru#4 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#3 div16s::dividendu#3 div16s::divisoru#4 divr16u::rem#10 ] )
  to:div16s::@4
div16s::@16: scope:[div16s]  from div16s
  [105] (word~) div16s::dividendu#7 ← (word)(signed word) div16s::dividend#0 [ div16s::divisor#0 div16s::dividendu#7 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::divisor#0 div16s::dividendu#7 divr16u::rem#10 ] )
  to:div16s::@2
div16u: scope:[div16u]  from div16s::@4 test_16u::@1
  [106] (word) rem16u#31 ← phi( div16s::@4/(word) divr16u::rem#10 test_16u::@1/(word) rem16u#35 ) [ div16u::dividend#2 div16u::divisor#2 ] ( main:2::test_16s:13::div16s:21::div16u:94 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16u::dividend#2 div16u::divisor#2 ] main:2::test_16u:9::div16u:220 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::dividend#2 div16u::divisor#2 ] )
  [106] (word) div16u::divisor#2 ← phi( div16s::@4/(word) div16u::divisor#0 test_16u::@1/(word) div16u::divisor#1 ) [ div16u::dividend#2 div16u::divisor#2 ] ( main:2::test_16s:13::div16s:21::div16u:94 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16u::dividend#2 div16u::divisor#2 ] main:2::test_16u:9::div16u:220 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::dividend#2 div16u::divisor#2 ] )
  [106] (word) div16u::dividend#2 ← phi( div16s::@4/(word) div16u::dividend#0 test_16u::@1/(word) div16u::dividend#1 ) [ div16u::dividend#2 div16u::divisor#2 ] ( main:2::test_16s:13::div16s:21::div16u:94 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16u::dividend#2 div16u::divisor#2 ] main:2::test_16u:9::div16u:220 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::dividend#2 div16u::divisor#2 ] )
  [107] (word) divr16u::dividend#1 ← (word) div16u::dividend#2 [ div16u::divisor#2 divr16u::dividend#1 ] ( main:2::test_16s:13::div16s:21::div16u:94 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16u::divisor#2 divr16u::dividend#1 ] main:2::test_16u:9::div16u:220 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::divisor#2 divr16u::dividend#1 ] )
  [108] (word) divr16u::divisor#0 ← (word) div16u::divisor#2 [ divr16u::dividend#1 divr16u::divisor#0 ] ( main:2::test_16s:13::div16s:21::div16u:94 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::dividend#1 divr16u::divisor#0 ] main:2::test_16u:9::div16u:220 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::dividend#1 divr16u::divisor#0 ] )
  [109] call divr16u param-assignment [ divr16u::rem#10 divr16u::return#0 ] ( main:2::test_16s:13::div16s:21::div16u:94 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::rem#10 divr16u::return#0 ] main:2::test_16u:9::div16u:220 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::rem#10 divr16u::return#0 ] )
  [110] (word) divr16u::return#2 ← (word) divr16u::return#0 [ divr16u::rem#10 divr16u::return#2 ] ( main:2::test_16s:13::div16s:21::div16u:94 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::rem#10 divr16u::return#2 ] main:2::test_16u:9::div16u:220 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::rem#10 divr16u::return#2 ] )
  to:div16u::@2
div16u::@2: scope:[div16u]  from div16u
  [111] (word) div16u::return#0 ← (word) divr16u::return#2 [ div16u::return#0 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21::div16u:94 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16u::return#0 divr16u::rem#10 ] main:2::test_16u:9::div16u:220 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::return#0 divr16u::rem#10 ] )
  to:div16u::@return
div16u::@return: scope:[div16u]  from div16u::@2
  [112] return  [ div16u::return#0 divr16u::rem#10 ] ( main:2::test_16s:13::div16s:21::div16u:94 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 div16u::return#0 divr16u::rem#10 ] main:2::test_16u:9::div16u:220 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::return#0 divr16u::rem#10 ] )
  to:@return
divr16u: scope:[divr16u]  from div16u
  [113] phi() [ divr16u::dividend#1 divr16u::divisor#0 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::dividend#1 divr16u::divisor#0 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::dividend#1 divr16u::divisor#0 ] )
  to:divr16u::@1
divr16u::@1: scope:[divr16u]  from divr16u divr16u::@3
  [114] (byte) divr16u::i#2 ← phi( divr16u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr16u::@3/(byte) divr16u::i#1 ) [ divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] )
  [114] (word) divr16u::quotient#3 ← phi( divr16u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr16u::@3/(word) divr16u::return#0 ) [ divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] )
  [114] (word) divr16u::dividend#2 ← phi( divr16u/(word) divr16u::dividend#1 divr16u::@3/(word) divr16u::dividend#0 ) [ divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] )
  [114] (word) divr16u::rem#4 ← phi( divr16u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr16u::@3/(word) divr16u::rem#10 ) [ divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::rem#4 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 ] )
  [115] (word) divr16u::rem#0 ← (word) divr16u::rem#4 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] )
  [116] (byte~) divr16u::$1 ← > (word) divr16u::dividend#2 [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$1 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$1 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$1 ] )
  [117] (byte~) divr16u::$2 ← (byte~) divr16u::$1 & (byte/word/signed word/dword/signed dword) 128 [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] )
  [118] if((byte~) divr16u::$2==(byte/signed byte/word/signed word/dword/signed dword) 0) goto divr16u::@2 [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] )
  to:divr16u::@4
divr16u::@4: scope:[divr16u]  from divr16u::@1
  [119] (word) divr16u::rem#1 ← (word) divr16u::rem#0 | (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] )
  to:divr16u::@2
divr16u::@2: scope:[divr16u]  from divr16u::@1 divr16u::@4
  [120] (word) divr16u::rem#5 ← phi( divr16u::@1/(word) divr16u::rem#0 divr16u::@4/(word) divr16u::rem#1 ) [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#5 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#5 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#5 ] )
  [121] (word) divr16u::dividend#0 ← (word) divr16u::dividend#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#0 divr16u::quotient#3 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::quotient#3 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::quotient#3 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 ] )
  [122] (word) divr16u::quotient#1 ← (word) divr16u::quotient#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] )
  [123] if((word) divr16u::rem#5<(word) divr16u::divisor#0) goto divr16u::@3 [ divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] )
  to:divr16u::@5
divr16u::@5: scope:[divr16u]  from divr16u::@2
  [124] (word) divr16u::quotient#2 ← ++ (word) divr16u::quotient#1 [ divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#2 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#2 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#2 ] )
  [125] (word) divr16u::rem#2 ← (word) divr16u::rem#5 - (word) divr16u::divisor#0 [ divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] )
  to:divr16u::@3
divr16u::@3: scope:[divr16u]  from divr16u::@2 divr16u::@5
  [126] (word) divr16u::return#0 ← phi( divr16u::@2/(word) divr16u::quotient#1 divr16u::@5/(word) divr16u::quotient#2 ) [ divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::i#2 divr16u::dividend#0 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::i#2 divr16u::dividend#0 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::i#2 divr16u::dividend#0 ] )
  [126] (word) divr16u::rem#10 ← phi( divr16u::@2/(word) divr16u::rem#5 divr16u::@5/(word) divr16u::rem#2 ) [ divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::i#2 divr16u::dividend#0 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::i#2 divr16u::dividend#0 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::i#2 divr16u::dividend#0 ] )
  [127] (byte) divr16u::i#1 ← ++ (byte) divr16u::i#2 [ divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::dividend#0 divr16u::i#1 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::dividend#0 divr16u::i#1 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::dividend#0 divr16u::i#1 ] )
  [128] if((byte) divr16u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto divr16u::@1 [ divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::dividend#0 divr16u::i#1 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::dividend#0 divr16u::i#1 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::rem#10 divr16u::divisor#0 divr16u::return#0 divr16u::dividend#0 divr16u::i#1 ] )
  to:divr16u::@return
divr16u::@return: scope:[divr16u]  from divr16u::@3
  [129] return  [ divr16u::rem#10 divr16u::return#0 ] ( main:2::test_16s:13::div16s:21::div16u:94::divr16u:109 [ test_16s::i#10 test_16s::dividend#0 test_16s::divisor#0 print_line_cursor#1 div16s::neg#4 divr16u::rem#10 divr16u::return#0 ] main:2::test_16u:9::div16u:220::divr16u:109 [ divr8u::rem#10 print_line_cursor#1 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 divr16u::rem#10 divr16u::return#0 ] )
  to:@return
test_8s: scope:[test_8s]  from main::@3
  [130] phi() [ print_line_cursor#1 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 divr8u::rem#10 ] )
  to:test_8s::@1
test_8s::@1: scope:[test_8s]  from test_8s test_8s::@11
  [131] (signed byte) rem8s#18 ← phi( test_8s/(byte/signed byte/word/signed word/dword/signed dword) 0 test_8s::@11/(signed byte) rem8s#3 ) [ print_line_cursor#1 test_8s::i#10 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 divr8u::rem#10 ] )
  [131] (byte) test_8s::i#10 ← phi( test_8s/(byte/signed byte/word/signed word/dword/signed dword) 0 test_8s::@11/(byte) test_8s::i#1 ) [ print_line_cursor#1 test_8s::i#10 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 divr8u::rem#10 ] )
  [132] (signed byte) test_8s::dividend#0 ← *((const signed byte[]) test_8s::dividends#0 + (byte) test_8s::i#10) [ print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 divr8u::rem#10 ] )
  [133] (signed byte) test_8s::divisor#0 ← *((const signed byte[]) test_8s::divisors#0 + (byte) test_8s::i#10) [ print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 divr8u::rem#10 ] )
  [134] (signed byte) div8s::dividend#0 ← (signed byte) test_8s::dividend#0 [ print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::dividend#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::dividend#0 divr8u::rem#10 ] )
  [135] (signed byte) div8s::divisor#0 ← (signed byte) test_8s::divisor#0 [ print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::dividend#0 div8s::divisor#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::dividend#0 div8s::divisor#0 divr8u::rem#10 ] )
  [136] call div8s param-assignment [ print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::dividend#0 test_8s::divisor#0 div8s::return#2 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::dividend#0 test_8s::divisor#0 div8s::return#2 divr8u::rem#10 ] )
  [137] (signed byte) div8s::return#3 ← (signed byte) div8s::return#2 [ print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::dividend#0 test_8s::divisor#0 div8s::return#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::dividend#0 test_8s::divisor#0 div8s::return#3 divr8u::rem#10 ] )
  to:test_8s::@3
test_8s::@3: scope:[test_8s]  from test_8s::@1
  [138] (signed byte) test_8s::res#0 ← (signed byte) div8s::return#3 [ print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::dividend#0 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::dividend#0 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 ] )
  [139] (signed byte) print_sbyte::b#1 ← (signed byte) test_8s::dividend#0 [ print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 print_sbyte::b#1 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 print_sbyte::b#1 divr8u::rem#10 ] )
  [140] (byte*~) print_char_cursor#179 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 print_sbyte::b#1 print_char_cursor#179 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 print_sbyte::b#1 print_char_cursor#179 divr8u::rem#10 ] )
  [141] call print_sbyte param-assignment [ print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 ] )
  to:test_8s::@4
test_8s::@4: scope:[test_8s]  from test_8s::@3
  [142] phi() [ print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 ] )
  [143] call print_str param-assignment [ print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 ] )
  to:test_8s::@5
test_8s::@5: scope:[test_8s]  from test_8s::@4
  [144] (signed byte) print_sbyte::b#2 ← (signed byte) test_8s::divisor#0 [ print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 test_8s::res#0 print_sbyte::b#2 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 test_8s::res#0 print_sbyte::b#2 divr8u::rem#10 ] )
  [145] call print_sbyte param-assignment [ print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 ] )
  to:test_8s::@6
test_8s::@6: scope:[test_8s]  from test_8s::@5
  [146] phi() [ print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 ] )
  [147] call print_str param-assignment [ print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 ] )
  to:test_8s::@7
test_8s::@7: scope:[test_8s]  from test_8s::@6
  [148] (signed byte) print_sbyte::b#3 ← (signed byte) test_8s::res#0 [ print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 print_sbyte::b#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 print_sbyte::b#3 divr8u::rem#10 ] )
  [149] call print_sbyte param-assignment [ print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 divr8u::rem#10 ] )
  to:test_8s::@8
test_8s::@8: scope:[test_8s]  from test_8s::@7
  [150] phi() [ print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 divr8u::rem#10 ] )
  [151] call print_str param-assignment [ print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 divr8u::rem#10 ] )
  to:test_8s::@9
test_8s::@9: scope:[test_8s]  from test_8s::@8
  [152] (signed byte) print_sbyte::b#4 ← (signed byte) rem8s#3 [ print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 print_sbyte::b#4 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#126 test_8s::i#10 rem8s#3 print_sbyte::b#4 divr8u::rem#10 ] )
  [153] call print_sbyte param-assignment [ print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 divr8u::rem#10 ] )
  to:test_8s::@10
test_8s::@10: scope:[test_8s]  from test_8s::@9
  [154] phi() [ print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 print_char_cursor#17 test_8s::i#10 rem8s#3 divr8u::rem#10 ] )
  [155] call print_ln param-assignment [ print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 ] )
  to:test_8s::@11
test_8s::@11: scope:[test_8s]  from test_8s::@10
  [156] (byte) test_8s::i#1 ← ++ (byte) test_8s::i#10 [ print_line_cursor#1 test_8s::i#1 rem8s#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#1 rem8s#3 divr8u::rem#10 ] )
  [157] if((byte) test_8s::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 6) goto test_8s::@1 [ print_line_cursor#1 test_8s::i#1 rem8s#3 divr8u::rem#10 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#1 rem8s#3 divr8u::rem#10 ] )
  to:test_8s::@return
test_8s::@return: scope:[test_8s]  from test_8s::@11
  [158] return  [ print_line_cursor#1 ] ( main:2::test_8s:11 [ divr16u::rem#10 print_line_cursor#1 ] )
  to:@return
print_sbyte: scope:[print_sbyte]  from test_8s::@3 test_8s::@5 test_8s::@7 test_8s::@9
  [159] (byte*) print_char_cursor#131 ← phi( test_8s::@3/(byte*~) print_char_cursor#179 test_8s::@5/(byte*) print_char_cursor#126 test_8s::@7/(byte*) print_char_cursor#126 test_8s::@9/(byte*) print_char_cursor#126 ) [ print_char_cursor#131 print_sbyte::b#5 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] )
  [159] (signed byte) print_sbyte::b#5 ← phi( test_8s::@3/(signed byte) print_sbyte::b#1 test_8s::@5/(signed byte) print_sbyte::b#2 test_8s::@7/(signed byte) print_sbyte::b#3 test_8s::@9/(signed byte) print_sbyte::b#4 ) [ print_char_cursor#131 print_sbyte::b#5 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] )
  [160] if((signed byte) print_sbyte::b#5>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sbyte::@1 [ print_char_cursor#131 print_sbyte::b#5 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] )
  to:print_sbyte::@2
print_sbyte::@2: scope:[print_sbyte]  from print_sbyte
  [161] phi() [ print_char_cursor#131 print_sbyte::b#5 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#131 print_sbyte::b#5 ] )
  [162] call print_char param-assignment [ print_char_cursor#17 print_sbyte::b#5 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_sbyte::b#5 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_sbyte::b#5 ] )
  to:print_sbyte::@4
print_sbyte::@4: scope:[print_sbyte]  from print_sbyte::@2
  [163] (signed byte) print_sbyte::b#0 ← - (signed byte) print_sbyte::b#5 [ print_char_cursor#17 print_sbyte::b#0 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_sbyte::b#0 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 print_sbyte::b#0 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_sbyte::b#0 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 print_sbyte::b#0 ] )
  to:print_sbyte::@1
print_sbyte::@1: scope:[print_sbyte]  from print_sbyte print_sbyte::@4
  [164] (byte*) print_char_cursor#130 ← phi( print_sbyte/(byte*) print_char_cursor#131 print_sbyte::@4/(byte*) print_char_cursor#17 ) [ print_char_cursor#130 print_sbyte::b#6 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#130 print_sbyte::b#6 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#130 print_sbyte::b#6 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#130 print_sbyte::b#6 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#130 print_sbyte::b#6 ] )
  [164] (signed byte) print_sbyte::b#6 ← phi( print_sbyte/(signed byte) print_sbyte::b#5 print_sbyte::@4/(signed byte) print_sbyte::b#0 ) [ print_char_cursor#130 print_sbyte::b#6 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#130 print_sbyte::b#6 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#130 print_sbyte::b#6 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#130 print_sbyte::b#6 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#130 print_sbyte::b#6 ] )
  [165] (byte~) print_byte::b#9 ← (byte)(signed byte) print_sbyte::b#6 [ print_byte::b#9 print_char_cursor#130 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_byte::b#9 print_char_cursor#130 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_byte::b#9 print_char_cursor#130 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#9 print_char_cursor#130 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_byte::b#9 print_char_cursor#130 ] )
  [166] call print_byte param-assignment [ print_char_cursor#17 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] )
  to:print_sbyte::@return
print_sbyte::@return: scope:[print_sbyte]  from print_sbyte::@1
  [167] return  [ print_char_cursor#17 ] ( main:2::test_8s:11::print_sbyte:141 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::divisor#0 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:145 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 test_8s::res#0 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:149 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] main:2::test_8s:11::print_sbyte:153 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 rem8s#3 divr8u::rem#10 print_char_cursor#17 ] )
  to:@return
div8s: scope:[div8s]  from test_8s::@1
  [168] if((signed byte) div8s::dividend#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto div8s::@16 [ div8s::dividend#0 div8s::divisor#0 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::dividend#0 div8s::divisor#0 divr8u::rem#10 ] )
  to:div8s::@7
div8s::@7: scope:[div8s]  from div8s
  [169] (signed byte~) div8s::$2 ← - (signed byte) div8s::dividend#0 [ div8s::divisor#0 div8s::$2 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::divisor#0 div8s::$2 divr8u::rem#10 ] )
  [170] (byte~) div8s::dividendu#8 ← (byte)(signed byte~) div8s::$2 [ div8s::divisor#0 div8s::dividendu#8 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::divisor#0 div8s::dividendu#8 divr8u::rem#10 ] )
  to:div8s::@2
div8s::@2: scope:[div8s]  from div8s::@16 div8s::@7
  [171] (byte) div8s::dividendu#3 ← phi( div8s::@16/(byte~) div8s::dividendu#7 div8s::@7/(byte~) div8s::dividendu#8 ) [ div8s::divisor#0 div8s::neg#3 div8s::dividendu#3 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::divisor#0 div8s::neg#3 div8s::dividendu#3 divr8u::rem#10 ] )
  [171] (byte) div8s::neg#3 ← phi( div8s::@16/(byte/signed byte/word/signed word/dword/signed dword) 0 div8s::@7/(byte/signed byte/word/signed word/dword/signed dword) 1 ) [ div8s::divisor#0 div8s::neg#3 div8s::dividendu#3 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::divisor#0 div8s::neg#3 div8s::dividendu#3 divr8u::rem#10 ] )
  [172] if((signed byte) div8s::divisor#0>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto div8s::@17 [ div8s::divisor#0 div8s::neg#3 div8s::dividendu#3 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::divisor#0 div8s::neg#3 div8s::dividendu#3 divr8u::rem#10 ] )
  to:div8s::@9
div8s::@9: scope:[div8s]  from div8s::@2
  [173] (signed byte~) div8s::$7 ← - (signed byte) div8s::divisor#0 [ div8s::neg#3 div8s::dividendu#3 div8s::$7 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#3 div8s::dividendu#3 div8s::$7 divr8u::rem#10 ] )
  [174] (byte) div8s::neg#2 ← (byte) div8s::neg#3 ^ (byte/signed byte/word/signed word/dword/signed dword) 1 [ div8s::dividendu#3 div8s::$7 div8s::neg#2 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::dividendu#3 div8s::$7 div8s::neg#2 divr8u::rem#10 ] )
  [175] (byte~) div8s::divisoru#5 ← (byte)(signed byte~) div8s::$7 [ div8s::dividendu#3 div8s::neg#2 div8s::divisoru#5 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::dividendu#3 div8s::neg#2 div8s::divisoru#5 divr8u::rem#10 ] )
  to:div8s::@4
div8s::@4: scope:[div8s]  from div8s::@17 div8s::@9
  [176] (byte) div8s::neg#4 ← phi( div8s::@17/(byte) div8s::neg#3 div8s::@9/(byte) div8s::neg#2 ) [ div8s::dividendu#3 div8s::divisoru#3 div8s::neg#4 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::dividendu#3 div8s::divisoru#3 div8s::neg#4 divr8u::rem#10 ] )
  [176] (byte) div8s::divisoru#3 ← phi( div8s::@17/(byte~) div8s::divisoru#4 div8s::@9/(byte~) div8s::divisoru#5 ) [ div8s::dividendu#3 div8s::divisoru#3 div8s::neg#4 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::dividendu#3 div8s::divisoru#3 div8s::neg#4 divr8u::rem#10 ] )
  [177] (byte) div8u::dividend#0 ← (byte) div8s::dividendu#3 [ div8s::divisoru#3 div8s::neg#4 div8u::dividend#0 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::divisoru#3 div8s::neg#4 div8u::dividend#0 divr8u::rem#10 ] )
  [178] (byte) div8u::divisor#0 ← (byte) div8s::divisoru#3 [ div8s::neg#4 div8u::dividend#0 div8u::divisor#0 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8u::dividend#0 div8u::divisor#0 divr8u::rem#10 ] )
  [179] call div8u param-assignment [ div8s::neg#4 div8u::return#0 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8u::return#0 divr8u::rem#10 ] )
  [180] (byte) div8u::return#2 ← (byte) div8u::return#0 [ div8s::neg#4 div8u::return#2 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8u::return#2 divr8u::rem#10 ] )
  to:div8s::@15
div8s::@15: scope:[div8s]  from div8s::@4
  [181] (byte) div8s::resultu#0 ← (byte) div8u::return#2 [ div8s::neg#4 div8s::resultu#0 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8s::resultu#0 divr8u::rem#10 ] )
  [182] if((byte) div8s::neg#4!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto div8s::@5 [ div8s::resultu#0 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::resultu#0 divr8u::rem#10 ] )
  to:div8s::@18
div8s::@18: scope:[div8s]  from div8s::@15
  [183] (signed byte~) div8s::return#6 ← (signed byte)(byte) div8s::resultu#0 [ div8s::return#6 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::return#6 divr8u::rem#10 ] )
  [184] (signed byte~) rem8s#33 ← (signed byte)(byte) divr8u::rem#10 [ div8s::return#6 rem8s#33 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::return#6 rem8s#33 divr8u::rem#10 ] )
  to:div8s::@return
div8s::@return: scope:[div8s]  from div8s::@18 div8s::@5
  [185] (signed byte) rem8s#3 ← phi( div8s::@18/(signed byte~) rem8s#33 div8s::@5/(signed byte) rem8s#1 ) [ rem8s#3 div8s::return#2 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 rem8s#3 div8s::return#2 divr8u::rem#10 ] )
  [185] (signed byte) div8s::return#2 ← phi( div8s::@18/(signed byte~) div8s::return#6 div8s::@5/(signed byte) div8s::return#0 ) [ rem8s#3 div8s::return#2 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 rem8s#3 div8s::return#2 divr8u::rem#10 ] )
  [186] return  [ rem8s#3 div8s::return#2 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 rem8s#3 div8s::return#2 divr8u::rem#10 ] )
  to:@return
div8s::@5: scope:[div8s]  from div8s::@15
  [187] (signed byte) rem8s#1 ← - (signed byte)(byte) divr8u::rem#10 [ div8s::resultu#0 divr8u::rem#10 rem8s#1 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::resultu#0 divr8u::rem#10 rem8s#1 ] )
  [188] (signed byte) div8s::return#0 ← - (signed byte)(byte) div8s::resultu#0 [ divr8u::rem#10 div8s::return#0 rem8s#1 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 divr8u::rem#10 div8s::return#0 rem8s#1 ] )
  to:div8s::@return
div8s::@17: scope:[div8s]  from div8s::@2
  [189] (byte~) div8s::divisoru#4 ← (byte)(signed byte) div8s::divisor#0 [ div8s::neg#3 div8s::dividendu#3 div8s::divisoru#4 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#3 div8s::dividendu#3 div8s::divisoru#4 divr8u::rem#10 ] )
  to:div8s::@4
div8s::@16: scope:[div8s]  from div8s
  [190] (byte~) div8s::dividendu#7 ← (byte)(signed byte) div8s::dividend#0 [ div8s::divisor#0 div8s::dividendu#7 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::divisor#0 div8s::dividendu#7 divr8u::rem#10 ] )
  to:div8s::@2
div8u: scope:[div8u]  from div8s::@4 test_8u::@1
  [191] (byte) rem8u#31 ← phi( div8s::@4/(byte) divr8u::rem#10 test_8u::@1/(byte) rem8u#36 ) [ div8u::dividend#2 div8u::divisor#2 ] ( main:2::test_8s:11::div8s:136::div8u:179 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8u::dividend#2 div8u::divisor#2 ] main:2::test_8u:7::div8u:249 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::dividend#2 div8u::divisor#2 ] )
  [191] (byte) div8u::divisor#2 ← phi( div8s::@4/(byte) div8u::divisor#0 test_8u::@1/(byte) div8u::divisor#1 ) [ div8u::dividend#2 div8u::divisor#2 ] ( main:2::test_8s:11::div8s:136::div8u:179 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8u::dividend#2 div8u::divisor#2 ] main:2::test_8u:7::div8u:249 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::dividend#2 div8u::divisor#2 ] )
  [191] (byte) div8u::dividend#2 ← phi( div8s::@4/(byte) div8u::dividend#0 test_8u::@1/(byte) div8u::dividend#1 ) [ div8u::dividend#2 div8u::divisor#2 ] ( main:2::test_8s:11::div8s:136::div8u:179 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8u::dividend#2 div8u::divisor#2 ] main:2::test_8u:7::div8u:249 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::dividend#2 div8u::divisor#2 ] )
  [192] (byte) divr8u::dividend#0 ← (byte) div8u::dividend#2 [ div8u::divisor#2 divr8u::dividend#0 ] ( main:2::test_8s:11::div8s:136::div8u:179 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8u::divisor#2 divr8u::dividend#0 ] main:2::test_8u:7::div8u:249 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::divisor#2 divr8u::dividend#0 ] )
  [193] (byte) divr8u::divisor#0 ← (byte) div8u::divisor#2 [ divr8u::dividend#0 divr8u::divisor#0 ] ( main:2::test_8s:11::div8s:136::div8u:179 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::dividend#0 divr8u::divisor#0 ] main:2::test_8u:7::div8u:249 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::dividend#0 divr8u::divisor#0 ] )
  [194] call divr8u param-assignment [ divr8u::rem#10 divr8u::return#1 ] ( main:2::test_8s:11::div8s:136::div8u:179 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::rem#10 divr8u::return#1 ] main:2::test_8u:7::div8u:249 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::rem#10 divr8u::return#1 ] )
  [195] (byte) divr8u::return#0 ← (byte) divr8u::return#1 [ divr8u::rem#10 divr8u::return#0 ] ( main:2::test_8s:11::div8s:136::div8u:179 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::rem#10 divr8u::return#0 ] main:2::test_8u:7::div8u:249 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::rem#10 divr8u::return#0 ] )
  to:div8u::@2
div8u::@2: scope:[div8u]  from div8u
  [196] (byte) div8u::return#0 ← (byte) divr8u::return#0 [ div8u::return#0 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136::div8u:179 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8u::return#0 divr8u::rem#10 ] main:2::test_8u:7::div8u:249 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#0 divr8u::rem#10 ] )
  to:div8u::@return
div8u::@return: scope:[div8u]  from div8u::@2
  [197] return  [ div8u::return#0 divr8u::rem#10 ] ( main:2::test_8s:11::div8s:136::div8u:179 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 div8u::return#0 divr8u::rem#10 ] main:2::test_8u:7::div8u:249 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#0 divr8u::rem#10 ] )
  to:@return
divr8u: scope:[divr8u]  from div8u
  [198] phi() [ divr8u::dividend#0 divr8u::divisor#0 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::dividend#0 divr8u::divisor#0 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::dividend#0 divr8u::divisor#0 ] )
  to:divr8u::@1
divr8u::@1: scope:[divr8u]  from divr8u divr8u::@3
  [199] (byte) divr8u::i#2 ← phi( divr8u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr8u::@3/(byte) divr8u::i#1 ) [ divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] )
  [199] (byte) divr8u::quotient#3 ← phi( divr8u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr8u::@3/(byte) divr8u::return#1 ) [ divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] )
  [199] (byte) divr8u::dividend#2 ← phi( divr8u/(byte) divr8u::dividend#0 divr8u::@3/(byte) divr8u::dividend#1 ) [ divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] )
  [199] (byte) divr8u::rem#4 ← phi( divr8u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr8u::@3/(byte) divr8u::rem#10 ) [ divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::rem#4 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 ] )
  [200] (byte) divr8u::rem#1 ← (byte) divr8u::rem#4 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#1 ] )
  [201] (byte~) divr8u::$1 ← (byte) divr8u::dividend#2 & (byte/word/signed word/dword/signed dword) 128 [ divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#1 divr8u::$1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#1 divr8u::$1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#1 divr8u::$1 ] )
  [202] if((byte~) divr8u::$1==(byte/signed byte/word/signed word/dword/signed dword) 0) goto divr8u::@2 [ divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#1 ] )
  to:divr8u::@4
divr8u::@4: scope:[divr8u]  from divr8u::@1
  [203] (byte) divr8u::rem#2 ← (byte) divr8u::rem#1 | (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#2 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#2 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#2 ] )
  to:divr8u::@2
divr8u::@2: scope:[divr8u]  from divr8u::@1 divr8u::@4
  [204] (byte) divr8u::rem#5 ← phi( divr8u::@1/(byte) divr8u::rem#1 divr8u::@4/(byte) divr8u::rem#2 ) [ divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#5 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#5 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::dividend#2 divr8u::quotient#3 divr8u::i#2 divr8u::rem#5 ] )
  [205] (byte) divr8u::dividend#1 ← (byte) divr8u::dividend#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr8u::divisor#0 divr8u::quotient#3 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::quotient#3 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::quotient#3 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 ] )
  [206] (byte) divr8u::quotient#1 ← (byte) divr8u::quotient#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 divr8u::quotient#1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 divr8u::quotient#1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 divr8u::quotient#1 ] )
  [207] if((byte) divr8u::rem#5<(byte) divr8u::divisor#0) goto divr8u::@3 [ divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 divr8u::quotient#1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 divr8u::quotient#1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 divr8u::quotient#1 ] )
  to:divr8u::@5
divr8u::@5: scope:[divr8u]  from divr8u::@2
  [208] (byte) divr8u::quotient#2 ← ++ (byte) divr8u::quotient#1 [ divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 divr8u::quotient#2 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 divr8u::quotient#2 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::rem#5 divr8u::quotient#2 ] )
  [209] (byte) divr8u::rem#3 ← (byte) divr8u::rem#5 - (byte) divr8u::divisor#0 [ divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::quotient#2 divr8u::rem#3 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::quotient#2 divr8u::rem#3 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::divisor#0 divr8u::i#2 divr8u::dividend#1 divr8u::quotient#2 divr8u::rem#3 ] )
  to:divr8u::@3
divr8u::@3: scope:[divr8u]  from divr8u::@2 divr8u::@5
  [210] (byte) divr8u::return#1 ← phi( divr8u::@2/(byte) divr8u::quotient#1 divr8u::@5/(byte) divr8u::quotient#2 ) [ divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::i#2 divr8u::dividend#1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::i#2 divr8u::dividend#1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::i#2 divr8u::dividend#1 ] )
  [210] (byte) divr8u::rem#10 ← phi( divr8u::@2/(byte) divr8u::rem#5 divr8u::@5/(byte) divr8u::rem#3 ) [ divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::i#2 divr8u::dividend#1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::i#2 divr8u::dividend#1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::i#2 divr8u::dividend#1 ] )
  [211] (byte) divr8u::i#1 ← ++ (byte) divr8u::i#2 [ divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::dividend#1 divr8u::i#1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::dividend#1 divr8u::i#1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::dividend#1 divr8u::i#1 ] )
  [212] if((byte) divr8u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto divr8u::@1 [ divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::dividend#1 divr8u::i#1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::dividend#1 divr8u::i#1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::rem#10 divr8u::divisor#0 divr8u::return#1 divr8u::dividend#1 divr8u::i#1 ] )
  to:divr8u::@return
divr8u::@return: scope:[divr8u]  from divr8u::@3
  [213] return  [ divr8u::rem#10 divr8u::return#1 ] ( main:2::test_8s:11::div8s:136::div8u:179::divr8u:194 [ divr16u::rem#10 print_line_cursor#1 test_8s::i#10 test_8s::dividend#0 test_8s::divisor#0 div8s::neg#4 divr8u::rem#10 divr8u::return#1 ] main:2::test_8u:7::div8u:249::divr8u:194 [ print_line_cursor#41 print_char_cursor#135 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 divr8u::rem#10 divr8u::return#1 ] )
  to:@return
test_16u: scope:[test_16u]  from main::@2
  [214] phi() [ print_line_cursor#1 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 ] )
  to:test_16u::@1
test_16u::@1: scope:[test_16u]  from test_16u test_16u::@11
  [215] (word) rem16u#35 ← phi( test_16u/(byte/signed byte/word/signed word/dword/signed dword) 0 test_16u::@11/(word) divr16u::rem#10 ) [ print_line_cursor#1 rem16u#35 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 rem16u#35 test_16u::i#10 ] )
  [215] (byte) test_16u::i#10 ← phi( test_16u/(byte/signed byte/word/signed word/dword/signed dword) 0 test_16u::@11/(byte) test_16u::i#1 ) [ print_line_cursor#1 rem16u#35 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 rem16u#35 test_16u::i#10 ] )
  [216] (word) test_16u::dividend#0 ← *((const word[]) test_16u::dividends#0 + (byte) test_16u::i#10) [ print_line_cursor#1 rem16u#35 test_16u::i#10 test_16u::dividend#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 rem16u#35 test_16u::i#10 test_16u::dividend#0 ] )
  [217] (word) test_16u::divisor#0 ← *((const word[]) test_16u::divisors#0 + (byte) test_16u::i#10) [ print_line_cursor#1 rem16u#35 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 rem16u#35 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 ] )
  [218] (word) div16u::dividend#1 ← (word) test_16u::dividend#0 [ print_line_cursor#1 div16u::dividend#1 rem16u#35 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 div16u::dividend#1 rem16u#35 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 ] )
  [219] (word) div16u::divisor#1 ← (word) test_16u::divisor#0 [ print_line_cursor#1 div16u::dividend#1 div16u::divisor#1 rem16u#35 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 div16u::dividend#1 div16u::divisor#1 rem16u#35 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 ] )
  [220] call div16u param-assignment [ print_line_cursor#1 div16u::return#0 divr16u::rem#10 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 div16u::return#0 divr16u::rem#10 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 ] )
  [221] (word) div16u::return#3 ← (word) div16u::return#0 [ print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::return#3 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 div16u::return#3 ] )
  to:test_16u::@3
test_16u::@3: scope:[test_16u]  from test_16u::@1
  [222] (word) test_16u::res#0 ← (word) div16u::return#3 [ print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 test_16u::dividend#0 test_16u::divisor#0 test_16u::res#0 ] )
  [223] (word) print_word::w#1 ← (word) test_16u::dividend#0 [ print_line_cursor#1 print_word::w#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_word::w#1 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] )
  [224] (byte*~) print_char_cursor#162 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_word::w#1 print_char_cursor#162 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_word::w#1 print_char_cursor#162 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] )
  [225] call print_word param-assignment [ print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] )
  to:test_16u::@4
test_16u::@4: scope:[test_16u]  from test_16u::@3
  [226] phi() [ print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] )
  [227] call print_str param-assignment [ print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 test_16u::i#10 test_16u::divisor#0 test_16u::res#0 ] )
  to:test_16u::@5
test_16u::@5: scope:[test_16u]  from test_16u::@4
  [228] (word) print_word::w#2 ← (word) test_16u::divisor#0 [ print_line_cursor#1 print_char_cursor#126 print_word::w#2 divr16u::rem#10 test_16u::i#10 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#126 print_word::w#2 divr16u::rem#10 test_16u::i#10 test_16u::res#0 ] )
  [229] call print_word param-assignment [ print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 test_16u::res#0 ] )
  to:test_16u::@6
test_16u::@6: scope:[test_16u]  from test_16u::@5
  [230] phi() [ print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 test_16u::res#0 ] )
  [231] call print_str param-assignment [ print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 test_16u::i#10 test_16u::res#0 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 test_16u::i#10 test_16u::res#0 ] )
  to:test_16u::@7
test_16u::@7: scope:[test_16u]  from test_16u::@6
  [232] (word) print_word::w#3 ← (word) test_16u::res#0 [ print_line_cursor#1 print_char_cursor#126 print_word::w#3 divr16u::rem#10 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#126 print_word::w#3 divr16u::rem#10 test_16u::i#10 ] )
  [233] call print_word param-assignment [ print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 ] )
  to:test_16u::@8
test_16u::@8: scope:[test_16u]  from test_16u::@7
  [234] phi() [ print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 ] )
  [235] call print_str param-assignment [ print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#126 divr16u::rem#10 test_16u::i#10 ] )
  to:test_16u::@9
test_16u::@9: scope:[test_16u]  from test_16u::@8
  [236] (word) print_word::w#4 ← (word) divr16u::rem#10 [ print_line_cursor#1 print_char_cursor#126 print_word::w#4 divr16u::rem#10 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#126 print_word::w#4 divr16u::rem#10 test_16u::i#10 ] )
  [237] call print_word param-assignment [ print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 ] )
  to:test_16u::@10
test_16u::@10: scope:[test_16u]  from test_16u::@9
  [238] phi() [ print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 print_char_cursor#17 divr16u::rem#10 test_16u::i#10 ] )
  [239] call print_ln param-assignment [ print_line_cursor#1 divr16u::rem#10 test_16u::i#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#10 ] )
  to:test_16u::@11
test_16u::@11: scope:[test_16u]  from test_16u::@10
  [240] (byte) test_16u::i#1 ← (byte) test_16u::i#10 + (byte/signed byte/word/signed word/dword/signed dword) 2 [ print_line_cursor#1 divr16u::rem#10 test_16u::i#1 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#1 ] )
  [241] if((byte) test_16u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 12) goto test_16u::@1 [ print_line_cursor#1 divr16u::rem#10 test_16u::i#1 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 test_16u::i#1 ] )
  to:test_16u::@return
test_16u::@return: scope:[test_16u]  from test_16u::@11
  [242] return  [ print_line_cursor#1 divr16u::rem#10 ] ( main:2::test_16u:9 [ divr8u::rem#10 print_line_cursor#1 divr16u::rem#10 ] )
  to:@return
test_8u: scope:[test_8u]  from main::@1
  [243] phi() [ ] ( main:2::test_8u:7 [ ] )
  to:test_8u::@1
test_8u::@1: scope:[test_8u]  from test_8u test_8u::@12
  [244] (byte*) print_line_cursor#41 ← phi( test_8u/((byte*))(word/signed word/dword/signed dword) 1024 test_8u::@12/(byte*) print_line_cursor#1 ) [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 ] )
  [244] (byte*) print_char_cursor#135 ← phi( test_8u/((byte*))(word/signed word/dword/signed dword) 1024 test_8u::@12/(byte*~) print_char_cursor#185 ) [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 ] )
  [244] (byte) rem8u#36 ← phi( test_8u/(byte/signed byte/word/signed word/dword/signed dword) 0 test_8u::@12/(byte) divr8u::rem#10 ) [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 ] )
  [244] (byte) test_8u::i#10 ← phi( test_8u/(byte/signed byte/word/signed word/dword/signed dword) 0 test_8u::@12/(byte) test_8u::i#1 ) [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 ] )
  [245] (byte) test_8u::dividend#0 ← *((const byte[]) test_8u::dividends#0 + (byte) test_8u::i#10) [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 test_8u::dividend#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 test_8u::dividend#0 ] )
  [246] (byte) test_8u::divisor#0 ← *((const byte[]) test_8u::divisors#0 + (byte) test_8u::i#10) [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 rem8u#36 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] )
  [247] (byte) div8u::dividend#1 ← (byte) test_8u::dividend#0 [ print_line_cursor#41 print_char_cursor#135 div8u::dividend#1 rem8u#36 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 div8u::dividend#1 rem8u#36 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] )
  [248] (byte) div8u::divisor#1 ← (byte) test_8u::divisor#0 [ print_line_cursor#41 print_char_cursor#135 div8u::dividend#1 div8u::divisor#1 rem8u#36 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 div8u::dividend#1 div8u::divisor#1 rem8u#36 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] )
  [249] call div8u param-assignment [ print_line_cursor#41 print_char_cursor#135 div8u::return#0 divr8u::rem#10 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 div8u::return#0 divr8u::rem#10 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 ] )
  [250] (byte) div8u::return#3 ← (byte) div8u::return#0 [ print_line_cursor#41 print_char_cursor#135 divr8u::rem#10 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#3 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 divr8u::rem#10 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 div8u::return#3 ] )
  to:test_8u::@3
test_8u::@3: scope:[test_8u]  from test_8u::@1
  [251] (byte) test_8u::res#0 ← (byte) div8u::return#3 [ print_line_cursor#41 print_char_cursor#135 divr8u::rem#10 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#135 divr8u::rem#10 test_8u::i#10 test_8u::dividend#0 test_8u::divisor#0 test_8u::res#0 ] )
  [252] (byte) print_byte::b#3 ← (byte) test_8u::dividend#0 [ print_line_cursor#41 print_byte::b#3 print_char_cursor#135 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_byte::b#3 print_char_cursor#135 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] )
  [253] call print_byte param-assignment [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] )
  to:test_8u::@4
test_8u::@4: scope:[test_8u]  from test_8u::@3
  [254] phi() [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] )
  [255] call print_str param-assignment [ print_line_cursor#41 print_char_cursor#126 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#126 divr8u::rem#10 test_8u::i#10 test_8u::divisor#0 test_8u::res#0 ] )
  to:test_8u::@5
test_8u::@5: scope:[test_8u]  from test_8u::@4
  [256] (byte) print_byte::b#4 ← (byte) test_8u::divisor#0 [ print_line_cursor#41 print_char_cursor#126 print_byte::b#4 divr8u::rem#10 test_8u::i#10 test_8u::res#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#126 print_byte::b#4 divr8u::rem#10 test_8u::i#10 test_8u::res#0 ] )
  [257] call print_byte param-assignment [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 test_8u::res#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 test_8u::res#0 ] )
  to:test_8u::@6
test_8u::@6: scope:[test_8u]  from test_8u::@5
  [258] phi() [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 test_8u::res#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 test_8u::res#0 ] )
  [259] call print_str param-assignment [ print_line_cursor#41 print_char_cursor#126 divr8u::rem#10 test_8u::i#10 test_8u::res#0 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#126 divr8u::rem#10 test_8u::i#10 test_8u::res#0 ] )
  to:test_8u::@7
test_8u::@7: scope:[test_8u]  from test_8u::@6
  [260] (byte) print_byte::b#5 ← (byte) test_8u::res#0 [ print_line_cursor#41 print_char_cursor#126 print_byte::b#5 divr8u::rem#10 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#126 print_byte::b#5 divr8u::rem#10 test_8u::i#10 ] )
  [261] call print_byte param-assignment [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 ] )
  to:test_8u::@8
test_8u::@8: scope:[test_8u]  from test_8u::@7
  [262] phi() [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 ] )
  [263] call print_str param-assignment [ print_line_cursor#41 print_char_cursor#126 divr8u::rem#10 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#126 divr8u::rem#10 test_8u::i#10 ] )
  to:test_8u::@9
test_8u::@9: scope:[test_8u]  from test_8u::@8
  [264] (byte) print_byte::b#6 ← (byte) divr8u::rem#10 [ print_line_cursor#41 print_char_cursor#126 print_byte::b#6 divr8u::rem#10 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#126 print_byte::b#6 divr8u::rem#10 test_8u::i#10 ] )
  [265] call print_byte param-assignment [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 ] )
  to:test_8u::@10
test_8u::@10: scope:[test_8u]  from test_8u::@9
  [266] phi() [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#41 print_char_cursor#17 divr8u::rem#10 test_8u::i#10 ] )
  [267] call print_ln param-assignment [ print_line_cursor#1 divr8u::rem#10 test_8u::i#10 ] ( main:2::test_8u:7 [ print_line_cursor#1 divr8u::rem#10 test_8u::i#10 ] )
  to:test_8u::@11
test_8u::@11: scope:[test_8u]  from test_8u::@10
  [268] (byte) test_8u::i#1 ← ++ (byte) test_8u::i#10 [ print_line_cursor#1 divr8u::rem#10 test_8u::i#1 ] ( main:2::test_8u:7 [ print_line_cursor#1 divr8u::rem#10 test_8u::i#1 ] )
  [269] if((byte) test_8u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 6) goto test_8u::@12 [ print_line_cursor#1 divr8u::rem#10 test_8u::i#1 ] ( main:2::test_8u:7 [ print_line_cursor#1 divr8u::rem#10 test_8u::i#1 ] )
  to:test_8u::@return
test_8u::@return: scope:[test_8u]  from test_8u::@11
  [270] return  [ print_line_cursor#1 divr8u::rem#10 ] ( main:2::test_8u:7 [ print_line_cursor#1 divr8u::rem#10 ] )
  to:@return
test_8u::@12: scope:[test_8u]  from test_8u::@11
  [271] (byte*~) print_char_cursor#185 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 divr8u::rem#10 test_8u::i#1 print_char_cursor#185 ] ( main:2::test_8u:7 [ print_line_cursor#1 divr8u::rem#10 test_8u::i#1 print_char_cursor#185 ] )
  to:test_8u::@1
print_cls: scope:[print_cls]  from main
  [272] phi() [ ] ( main:2::print_cls:5 [ ] )
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [273] (byte*) print_cls::sc#2 ← phi( print_cls/((byte*))(word/signed word/dword/signed dword) 1024 print_cls::@1/(byte*) print_cls::sc#1 ) [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [274] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [275] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  [276] if((byte*) print_cls::sc#1!=((byte*))(word/signed word/dword/signed dword) 1024+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [277] return  [ ] ( main:2::print_cls:5 [ ] )
  to:@return
