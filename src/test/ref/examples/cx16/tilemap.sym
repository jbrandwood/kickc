const nomodify byte BLACK = 0
const nomodify byte BLUE = 6
byte CONIO_SCREEN_BANK
byte CONIO_SCREEN_BANK#17 CONIO_SCREEN_BANK zp[1]:53 50302.02512562814
byte* CONIO_SCREEN_TEXT
word CONIO_SCREEN_TEXT#19 CONIO_SCREEN_TEXT zp[2]:54 0.4007936507936508
const nomodify byte DARK_GREY = $b
const nomodify byte GREEN = 5
const nomodify byte GREY = $c
const nomodify void()** KERNEL_IRQ = (void()**) 788
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const byte SIZEOF_POINTER = 2
const nomodify byte VERA_ADDRSEL = 1
const nomodify byte* VERA_ADDRX_H = (byte*) 40738
const nomodify byte* VERA_ADDRX_L = (byte*) 40736
const nomodify byte* VERA_ADDRX_M = (byte*) 40737
const to_nomodify word* VERA_CONFIG_HEIGHT[4]  = { $20, $40, $80, $100 }
const nomodify byte VERA_CONFIG_HEIGHT_128 = $80
const nomodify byte VERA_CONFIG_HEIGHT_MASK = $c0
const to_nomodify word* VERA_CONFIG_WIDTH[4]  = { $20, $40, $80, $100 }
const nomodify byte VERA_CONFIG_WIDTH_128 = $20
const nomodify byte VERA_CONFIG_WIDTH_MASK = $30
const nomodify byte* VERA_CTRL = (byte*) 40741
const nomodify byte* VERA_DATA0 = (byte*) 40739
const nomodify byte* VERA_DATA1 = (byte*) 40740
const nomodify byte* VERA_DC_HSCALE = (byte*) 40746
const nomodify byte* VERA_DC_VIDEO = (byte*) 40745
const nomodify byte* VERA_DC_VSCALE = (byte*) 40747
const nomodify byte* VERA_IEN = (byte*) 40742
const nomodify byte VERA_INC_1 = $10
const nomodify byte* VERA_ISR = (byte*) 40743
const nomodify byte* VERA_L0_CONFIG = (byte*) 40749
const nomodify byte* VERA_L0_HSCROLL_H = (byte*) 40753
const nomodify byte* VERA_L0_HSCROLL_L = (byte*) 40752
const nomodify byte* VERA_L0_MAPBASE = (byte*) 40750
const nomodify byte* VERA_L0_TILEBASE = (byte*) 40751
const nomodify byte* VERA_L0_VSCROLL_H = (byte*) 40755
const nomodify byte* VERA_L0_VSCROLL_L = (byte*) 40754
const nomodify byte* VERA_L1_CONFIG = (byte*) 40756
const nomodify byte* VERA_L1_HSCROLL_H = (byte*) 40760
const nomodify byte* VERA_L1_HSCROLL_L = (byte*) 40759
const nomodify byte* VERA_L1_MAPBASE = (byte*) 40757
const nomodify byte* VERA_L1_TILEBASE = (byte*) 40758
const nomodify byte* VERA_L1_VSCROLL_H = (byte*) 40762
const nomodify byte* VERA_L1_VSCROLL_L = (byte*) 40761
const nomodify byte VERA_LAYER0_ENABLE = $10
const nomodify byte VERA_LAYER1_ENABLE = $20
const nomodify byte VERA_VSYNC = 1
const nomodify byte WHITE = 1
const nomodify byte YELLOW = 7
void __start()
void clearline()
byte~ clearline::$1 reg byte a 2.00000000002E11
byte~ clearline::$2 reg byte a 2.00000000002E11
byte~ clearline::$5 reg byte a 2.00000000002E11
byte* clearline::addr
byte* clearline::addr#0 addr zp[2]:87 1.00000000001E11
word clearline::c
word clearline::c#1 c zp[2]:47 2.0E16
word clearline::c#2 c zp[2]:47 7.5E15
byte clearline::color
byte clearline::color#0 reg byte x 1.6666833333333335E15
void clrscr()
byte~ clrscr::$1 reg byte a 2002.0
byte~ clrscr::$10 reg byte a 2002.0
byte~ clrscr::$2 zp[1]:64 400.4
byte~ clrscr::$3 reg byte a 2002.0
byte~ clrscr::$6 reg byte a 20002.0
byte~ clrscr::$7 reg byte a 20002.0
byte~ clrscr::$8 reg byte a 20002.0
byte clrscr::c
byte clrscr::c#1 reg byte y 200002.0
byte clrscr::c#2 reg byte y 75000.75
byte* clrscr::ch
byte clrscr::color
byte clrscr::color#0 color zp[1]:64 5941.294117647059
byte clrscr::l
byte clrscr::l#1 reg byte x 20002.0
byte clrscr::l#2 reg byte x 2000.2
byte* clrscr::line_text
byte* clrscr::line_text#0 line_text zp[2]:45 166.83333333333334
byte* clrscr::line_text#1 line_text zp[2]:45 10001.0
byte* clrscr::line_text#2 line_text zp[2]:45 2928.9285714285716
word clrscr::skip
word clrscr::skip#0 skip zp[2]:73 407.48148148148147
const byte* conio_cursor_x[2]  = { 0, 0 }
const byte* conio_cursor_y[2]  = { 0, 0 }
word conio_height loadstore zp[2]:24 4878098.073170732
const word* conio_line_text[2]  = { 0, 0 }
volatile byte conio_screen_height loadstore zp[1]:20 5.1282051397435896E7
byte conio_screen_layer loadstore zp[1]:21 1.2448188607028985E9
volatile byte conio_screen_width loadstore zp[1]:19 3.703711114814817E13
const byte* conio_scroll_enable[2]  = { 1, 1 }
byte conio_skip loadstore zp[1]:26 8.298797095440282E12
word conio_width loadstore zp[2]:22 52332.67357512953
void conio_x16_init()
const nomodify byte* conio_x16_init::BASIC_CURSOR_LINE = (byte*) 214
byte conio_x16_init::line
byte conio_x16_init::line#0 line zp[1]:2 2.5384615384615383
byte conio_x16_init::line#1 line zp[1]:2 22.0
byte conio_x16_init::line#3 line zp[1]:2 33.0
void cputc(byte cputc::c)
byte~ cputc::$15 reg byte a 2.0000002E7
word~ cputc::$16 zp[2]:75 2.0000002E7
byte~ cputc::$2 reg byte a 2.0000002E7
byte~ cputc::$4 reg byte a 2.0000002E7
byte~ cputc::$5 reg byte a 2.0000002E7
byte~ cputc::$6 reg byte a 2.0000002E7
byte cputc::c
byte cputc::c#0 c zp[1]:64 2002.0
byte cputc::c#1 c zp[1]:64 1000001.0
byte cputc::c#2 c zp[1]:64 1235353.1764705884
byte cputc::color
byte cputc::color#0 reg byte x 1428571.5714285714
byte* cputc::conio_addr
byte* cputc::conio_addr#0 conio_addr zp[2]:73 1.0000001E7
byte* cputc::conio_addr#1 conio_addr zp[2]:73 6000000.6
byte cputc::scroll_enable
byte cputc::scroll_enable#0 reg byte a 2.0000002E7
void cputln()
byte~ cputln::$3 reg byte a 2.00000002E8
byte~ cputln::$4 reg byte a 2.00000002E8
word~ cputln::$5 zp[2]:79 2.00000002E8
word cputln::temp
word cputln::temp#0 temp zp[2]:77 1.00000001E8
word cputln::temp#1 temp zp[2]:77 1.00000001E8
void cputs(to_nomodify byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 1001.0
to_nomodify byte* cputs::s
to_nomodify byte* cputs::s#0 s zp[2]:45 500.5
to_nomodify byte* cputs::s#10 s zp[2]:45 1552.0
to_nomodify byte* cputs::s#11 s zp[2]:45 101.0
void cscroll()
volatile signed word delta_x loadstore zp[2]:31 120.0
volatile signed word delta_y loadstore zp[2]:33 12.0
void draw_characters(dword draw_characters::tilebase)
byte~ draw_characters::$2 reg byte x 2000002.0
byte~ draw_characters::$3 reg byte a 2000002.0
byte draw_characters::b
byte draw_characters::b#1 b zp[1]:18 1500001.5
byte draw_characters::b#2 b zp[1]:18 375000.375
byte draw_characters::bit
byte draw_characters::bit#0 bit zp[1]:65 100000.18181818182
byte draw_characters::bit#1 reg byte a 2000002.0
byte draw_characters::data
byte draw_characters::r
byte draw_characters::r#1 r zp[1]:12 15001.5
byte draw_characters::r#11 r zp[1]:12 1000.1
dword draw_characters::tilebase
dword draw_characters::tilebase#0 tilebase zp[4]:3 22.0
dword draw_characters::tilebase#1 tilebase zp[4]:3 22.0
dword draw_characters::tilebase#2 tilebase zp[4]:3 22.0
dword draw_characters::tilebase#3 tilebase zp[4]:3 667.3333333333334
dword draw_characters::tilebase#4 tilebase zp[4]:3 67.0
dword draw_characters::tilecolumn
dword draw_characters::tilecolumn#1 tilecolumn zp[4]:8 1631.7894736842104
dword draw_characters::tilecolumn#10 tilecolumn_1 zp[4]:13 22143.14285714286
dword draw_characters::tilecolumn#11 tilecolumn zp[4]:8 2002.0
dword draw_characters::tilecolumn#13 tilecolumn_1 zp[4]:13 20002.0
dword draw_characters::tilecolumn#2 tilecolumn_1 zp[4]:13 66667.33333333333
dword draw_characters::tilerow
dword draw_characters::tilerow#1 tilerow zp[4]:3 129.33333333333334
dword draw_characters::tilerow#2 tilerow_1 zp[4]:8 6667.333333333333
byte draw_characters::x
byte draw_characters::x#1 x zp[1]:17 150001.5
byte draw_characters::x#8 x zp[1]:17 13333.466666666667
byte draw_characters::y
byte draw_characters::y#1 y zp[1]:7 1501.5
byte draw_characters::y#13 y zp[1]:7 80.08
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte~ gotoxy::$5 reg byte a 2.0000000002E10
word~ gotoxy::$6 zp[2]:62 2.0000000002E10
word gotoxy::line_offset
word gotoxy::line_offset#0 line_offset zp[2]:62 1.0000000001E10
byte gotoxy::x
byte gotoxy::y
byte gotoxy::y#0 reg byte x 22.0
byte gotoxy::y#2 reg byte x 2.000000002E9
byte gotoxy::y#4 reg byte x 7.000000004666666E9
byte gotoxy::y#5 reg byte x 4.0000000004E9
void insertup()
byte~ insertup::$3 reg byte a 2.000000000000002E15
word~ insertup::$6 zp[2]:85 2.000000000000002E15
byte insertup::cy
byte insertup::cy#0 cy zp[1]:81 7.692384615384631E13
byte insertup::i
byte insertup::i#1 reg byte x 2.000000000000002E15
byte insertup::i#2 reg byte x 4.000000000000004E14
word insertup::line
word insertup::line#0 line zp[2]:83 2.000000000000002E15
byte* insertup::start
byte* insertup::start#0 start zp[2]:83 6.666666666666674E14
byte insertup::width
byte insertup::width#0 width zp[1]:82 8.333416666666684E13
__interrupt(rom_sys_cx16) void irq_vsync()
signed word~ irq_vsync::$10 zp[2]:37 4.0
signed word~ irq_vsync::$11 zp[2]:39 4.0
byte~ irq_vsync::vera_set_layer_horizontal_scroll1_$0 reg byte a 4.0
byte~ irq_vsync::vera_set_layer_horizontal_scroll1_$1 reg byte a 4.0
byte irq_vsync::vera_set_layer_horizontal_scroll1_layer
word irq_vsync::vera_set_layer_horizontal_scroll1_scroll
word irq_vsync::vera_set_layer_horizontal_scroll1_scroll#0 vera_set_layer_horizontal_scroll1_scroll zp[2]:41 2.0
byte~ irq_vsync::vera_set_layer_vertical_scroll1_$0 reg byte a 4.0
byte~ irq_vsync::vera_set_layer_vertical_scroll1_$1 reg byte a 4.0
byte irq_vsync::vera_set_layer_vertical_scroll1_layer
word irq_vsync::vera_set_layer_vertical_scroll1_scroll
word irq_vsync::vera_set_layer_vertical_scroll1_scroll#0 vera_set_layer_vertical_scroll1_scroll zp[2]:43 2.0
byte kbhit()
const nomodify byte* kbhit::GETIN = (byte*) 65508
const nomodify byte* kbhit::IN_DEV = (byte*) 650
volatile byte kbhit::ch loadstore zp[1]:66 1001.0
const nomodify byte* kbhit::chptr = &kbhit::ch
byte kbhit::return
byte kbhit::return#0 reg byte a 2002.0
byte kbhit::return#1 reg byte a 300.75
byte kbhit::return#2 reg byte a 202.0
byte kbhit::return#3 reg byte a 202.0
void main()
byte~ main::$45 reg byte a 202.0
byte~ main::$47 reg byte a 202.0
byte main::bgcolor1_color
byte main::bgcolor2_color
byte main::bgcolor3_color
byte main::bgcolor4_color
byte main::bgcolor5_color
const byte* main::s[$3f]  = "

this demo displays the design of the standard x16 commander
"
const byte* main::s1[$4f]  = "character set on the vera layer 0. it's the character set i grew up with :-).
"
const byte* main::s2[$45]  = "
the smooth scrolling is implemented by manipulating the scrolling 
"
const byte* main::s3[$37]  = "registers of layer 0. at each raster line interrupt, 
"
const byte* main::s4[$45]  = "the x and y scrolling registers are manipulated. the cx16 terminal 
"
const byte* main::s5[$40]  = "works on layer 1. when layer 0 is enabled with the scrolling, 
"
const byte* main::s6[$4c]  = "it gives a nice background effect. this technique can be used to implement
"
const byte* main::s7[$44]  = "smooth scrolling backgrounds using tile layouts in games or demos.
"
const byte* main::s8[$1d]  = "
press a key to continue ..."
byte main::textcolor1_color
byte main::textcolor2_color
byte main::textcolor3_color
byte main::textcolor4_color
byte main::textcolor5_color
byte main::textcolor6_color
dword main::tilebase
dword main::tilebase#0 tilebase zp[4]:49 0.6470588235294118
byte~ main::vera_hide_layer1_$0 reg byte a 22.0
byte main::vera_hide_layer1_layer
byte~ main::vera_hide_layer2_$0 reg byte a 22.0
byte main::vera_hide_layer2_layer
byte* main::vera_set_layer_map_height_1281_addr
byte* main::vera_set_layer_map_height_1281_addr#0 vera_set_layer_map_height_1281_addr zp[2]:47 27.5
byte main::vera_set_layer_map_height_1281_layer
byte* main::vera_set_layer_map_width_1281_addr
byte* main::vera_set_layer_map_width_1281_addr#0 vera_set_layer_map_width_1281_addr zp[2]:45 27.5
byte main::vera_set_layer_map_width_1281_layer
byte main::vera_show_layer1_layer
byte main::vera_show_layer2_layer
byte main::vera_show_layer3_layer
void memcpy_in_vram(byte memcpy_in_vram::dest_bank , void* memcpy_in_vram::dest , byte memcpy_in_vram::dest_increment , byte memcpy_in_vram::src_bank , void* memcpy_in_vram::src , byte memcpy_in_vram::src_increment , word memcpy_in_vram::num)
byte~ memcpy_in_vram::$0 reg byte a 2.0E16
byte~ memcpy_in_vram::$1 reg byte a 2.0E16
byte~ memcpy_in_vram::$3 reg byte a 2.0E16
byte~ memcpy_in_vram::$4 reg byte a 2.0E16
void* memcpy_in_vram::dest
void* memcpy_in_vram::dest#0 dest zp[2]:83 1.9090909090909092E15
byte memcpy_in_vram::dest_bank
byte memcpy_in_vram::dest_increment
word memcpy_in_vram::i
word memcpy_in_vram::i#1 i zp[2]:47 2.0E22
word memcpy_in_vram::i#2 i zp[2]:47 1.0E22
word memcpy_in_vram::num
word memcpy_in_vram::num#0 num zp[2]:87 5.882353529411765E20
void* memcpy_in_vram::src
byte* memcpy_in_vram::src#0 src zp[2]:85 1.6666666666666684E14
byte memcpy_in_vram::src_bank
byte memcpy_in_vram::src_increment
void screenlayer(byte screenlayer::layer)
word~ screenlayer::$4 zp[2]:62 202.0
word~ screenlayer::$5 zp[2]:56 101.0
word~ screenlayer::$6 zp[2]:58 202.0
byte screenlayer::addr
byte screenlayer::addr#0 reg byte a 202.0
word screenlayer::addr_i
word screenlayer::addr_i#0 addr_i zp[2]:60 151.5
byte screenlayer::layer
byte screenlayer::layer#1 reg byte a 151.5
byte screenlayer::layer#6 reg byte a 101.0
void screensize(byte* screensize::x , byte* screensize::y)
byte~ screensize::$1 reg byte a 202.0
byte~ screensize::$3 reg byte a 202.0
byte screensize::hscale
byte screensize::hscale#0 reg byte a 202.0
byte screensize::vscale
byte screensize::vscale#0 reg byte a 202.0
byte* screensize::x
const byte* screensize::x#0 x = &conio_screen_width
byte* screensize::y
const byte* screensize::y#0 y = &conio_screen_height
byte scroll(byte scroll::onoff)
byte scroll::old
byte scroll::onoff
const byte scroll::onoff#0 onoff = 0
byte scroll::return
volatile signed word scroll_x loadstore zp[2]:27 0.9333333333333332
volatile signed word scroll_y loadstore zp[2]:29 0.7
volatile signed word speed loadstore zp[2]:35 0.5882352941176471
byte vera_get_layer_backcolor(byte vera_get_layer_backcolor::layer)
byte vera_get_layer_backcolor::layer
byte vera_get_layer_backcolor::layer#0 reg byte a 11002.0
byte vera_get_layer_backcolor::layer#1 reg byte a 20002.0
byte vera_get_layer_backcolor::return
byte vera_get_layer_backcolor::return#0 reg byte a 2002.0
byte vera_get_layer_backcolor::return#1 reg byte a 3667.333333333333
byte vera_get_layer_color(byte vera_get_layer_color::layer)
byte~ vera_get_layer_color::$0 reg byte a 2.000000000002E12
byte vera_get_layer_color::layer
byte vera_get_layer_color::layer#0 reg byte a 2.0000002E7
byte vera_get_layer_color::layer#1 reg byte a 2.00000000002E11
byte vera_get_layer_color::layer#2 reg byte x 1.5000000000015E12
byte vera_get_layer_color::layer#3 reg byte a 1.100010000003E12
byte vera_get_layer_color::return
byte vera_get_layer_color::return#0 reg byte a 2.0000002E7
byte vera_get_layer_color::return#1 reg byte a 2.00000000002E11
byte vera_get_layer_color::return#2 reg byte a 2.7500250000075E11
byte vera_get_layer_config(byte vera_get_layer_config::layer)
byte* vera_get_layer_config::config
byte* vera_get_layer_config::config#0 config zp[2]:73 202.0
byte vera_get_layer_config::layer
byte vera_get_layer_config::return
byte vera_get_layer_config::return#0 reg byte a 37.33333333333333
byte vera_get_layer_config::return#2 reg byte a 22.0
word vera_get_layer_map_height(byte vera_get_layer_map_height::layer)
byte~ vera_get_layer_map_height::$0 reg byte a 2002.0
byte~ vera_get_layer_map_height::$1 reg byte a 2002.0
byte~ vera_get_layer_map_height::$2 reg byte a 2002.0
byte~ vera_get_layer_map_height::$3 reg byte a 2002.0
byte* vera_get_layer_map_height::config
byte* vera_get_layer_map_height::config#0 config zp[2]:67 2002.0
byte vera_get_layer_map_height::layer
byte vera_get_layer_map_height::layer#0 reg byte a 1102.0
word vera_get_layer_map_height::return
word vera_get_layer_map_height::return#0 return zp[2]:58 202.0
word vera_get_layer_map_height::return#1 return zp[2]:58 367.33333333333337
word vera_get_layer_map_width(byte vera_get_layer_map_width::layer)
byte~ vera_get_layer_map_width::$0 reg byte a 2002.0
byte~ vera_get_layer_map_width::$1 reg byte a 2002.0
byte~ vera_get_layer_map_width::$2 reg byte a 2002.0
byte~ vera_get_layer_map_width::$3 reg byte a 2002.0
byte* vera_get_layer_map_width::config
byte* vera_get_layer_map_width::config#0 config zp[2]:67 2002.0
byte vera_get_layer_map_width::layer
byte vera_get_layer_map_width::layer#0 reg byte a 1102.0
word vera_get_layer_map_width::return
word vera_get_layer_map_width::return#0 return zp[2]:62 202.0
word vera_get_layer_map_width::return#1 return zp[2]:62 367.33333333333337
byte vera_get_layer_mapbase(byte vera_get_layer_mapbase::layer)
byte~ vera_get_layer_mapbase::$0 reg byte a 2002.0
byte vera_get_layer_mapbase::layer
byte vera_get_layer_mapbase::layer#0 reg byte a 1102.0
byte vera_get_layer_mapbase::layer#1 reg byte a 2002.0
byte* vera_get_layer_mapbase::mapbase
byte* vera_get_layer_mapbase::mapbase#0 mapbase zp[2]:67 2002.0
byte vera_get_layer_mapbase::return
byte vera_get_layer_mapbase::return#0 reg byte a 202.0
byte vera_get_layer_mapbase::return#1 reg byte a 367.33333333333337
byte vera_get_layer_textcolor(byte vera_get_layer_textcolor::layer)
byte vera_get_layer_textcolor::layer
byte vera_get_layer_textcolor::layer#0 reg byte a 11002.0
byte vera_get_layer_textcolor::layer#1 reg byte a 20002.0
byte vera_get_layer_textcolor::return
byte vera_get_layer_textcolor::return#0 reg byte a 2002.0
byte vera_get_layer_textcolor::return#1 reg byte a 3667.333333333333
byte vera_get_layer_tilebase(byte vera_get_layer_tilebase::layer)
byte vera_get_layer_tilebase::layer
byte vera_get_layer_tilebase::return
byte vera_get_layer_tilebase::return#0 reg byte a 37.33333333333333
byte vera_get_layer_tilebase::return#2 reg byte a 22.0
byte* vera_get_layer_tilebase::tilebase
byte* vera_get_layer_tilebase::tilebase#0 tilebase zp[2]:73 202.0
dword vera_get_layer_tilebase_address(byte vera_get_layer_tilebase_address::layer)
dword vera_get_layer_tilebase_address::address
dword vera_get_layer_tilebase_address::address#0 address zp[4]:49 202.0
dword vera_get_layer_tilebase_address::address#1 address zp[4]:49 202.0
dword vera_get_layer_tilebase_address::address#2 address zp[4]:49 202.0
byte vera_get_layer_tilebase_address::layer
dword vera_get_layer_tilebase_address::return
dword vera_get_layer_tilebase_address::return#0 return zp[4]:49 37.33333333333333
dword vera_get_layer_tilebase_address::return#2 return zp[4]:49 22.0
byte vera_get_layer_tilebase_address::tilebase
byte vera_get_layer_tilebase_address::tilebase#0 reg byte a 101.0
const byte* vera_layer_backcolor[2]  = { BLUE, BLUE }
const byte** vera_layer_config[2]  = { VERA_L0_CONFIG, VERA_L1_CONFIG }
const byte* vera_layer_enable[2]  = { VERA_LAYER0_ENABLE, VERA_LAYER1_ENABLE }
const byte** vera_layer_hscroll_h[2]  = { VERA_L0_HSCROLL_H, VERA_L1_HSCROLL_H }
const byte** vera_layer_hscroll_l[2]  = { VERA_L0_HSCROLL_L, VERA_L1_HSCROLL_L }
const byte** vera_layer_mapbase[2]  = { VERA_L0_MAPBASE, VERA_L1_MAPBASE }
const byte* vera_layer_textcolor[2]  = { WHITE, WHITE }
const byte** vera_layer_tilebase[2]  = { VERA_L0_TILEBASE, VERA_L1_TILEBASE }
const byte** vera_layer_vscroll_h[2]  = { VERA_L0_VSCROLL_H, VERA_L1_VSCROLL_H }
const byte** vera_layer_vscroll_l[2]  = { VERA_L0_VSCROLL_L, VERA_L1_VSCROLL_L }
byte vera_set_layer_backcolor(byte vera_set_layer_backcolor::layer , byte vera_set_layer_backcolor::color)
byte vera_set_layer_backcolor::color
byte vera_set_layer_backcolor::color#6 reg byte x 50.5
byte vera_set_layer_backcolor::layer
byte vera_set_layer_backcolor::layer#1 reg byte a 202.0
byte vera_set_layer_backcolor::layer#2 reg byte a 22.0
byte vera_set_layer_backcolor::layer#3 reg byte a 22.0
byte vera_set_layer_backcolor::layer#4 reg byte a 22.0
byte vera_set_layer_backcolor::layer#5 reg byte a 22.0
byte vera_set_layer_backcolor::layer#6 reg byte a 22.0
byte vera_set_layer_backcolor::layer#7 reg byte a 156.0
byte vera_set_layer_backcolor::old
byte vera_set_layer_backcolor::return
void vera_set_layer_config(byte vera_set_layer_config::layer , byte vera_set_layer_config::config)
byte* vera_set_layer_config::addr
byte* vera_set_layer_config::addr#0 addr zp[2]:73 202.0
byte vera_set_layer_config::config
byte vera_set_layer_config::config#0 reg byte x 56.0
byte vera_set_layer_config::layer
void vera_set_layer_mapbase(byte vera_set_layer_mapbase::layer , byte vera_set_layer_mapbase::mapbase)
byte~ vera_set_layer_mapbase::$0 reg byte a 202.0
byte* vera_set_layer_mapbase::addr
byte* vera_set_layer_mapbase::addr#0 addr zp[2]:60 202.0
byte vera_set_layer_mapbase::layer
byte vera_set_layer_mapbase::layer#2 reg byte a 202.0
byte vera_set_layer_mapbase::layer#4 reg byte a 101.0
byte vera_set_layer_mapbase::mapbase
byte vera_set_layer_mapbase::mapbase#3 reg byte x 25.25
byte vera_set_layer_textcolor(byte vera_set_layer_textcolor::layer , byte vera_set_layer_textcolor::color)
byte vera_set_layer_textcolor::color
byte vera_set_layer_textcolor::color#7 reg byte x 50.5
byte vera_set_layer_textcolor::layer
byte vera_set_layer_textcolor::layer#1 reg byte a 202.0
byte vera_set_layer_textcolor::layer#2 reg byte a 22.0
byte vera_set_layer_textcolor::layer#3 reg byte a 22.0
byte vera_set_layer_textcolor::layer#4 reg byte a 22.0
byte vera_set_layer_textcolor::layer#5 reg byte a 22.0
byte vera_set_layer_textcolor::layer#6 reg byte a 22.0
byte vera_set_layer_textcolor::layer#7 reg byte a 22.0
byte vera_set_layer_textcolor::layer#8 reg byte a 167.0
byte vera_set_layer_textcolor::old
byte vera_set_layer_textcolor::return
void vera_set_layer_tilebase(byte vera_set_layer_tilebase::layer , byte vera_set_layer_tilebase::tilebase)
byte* vera_set_layer_tilebase::addr
byte* vera_set_layer_tilebase::addr#0 addr zp[2]:73 202.0
byte vera_set_layer_tilebase::layer
byte vera_set_layer_tilebase::tilebase
byte vera_set_layer_tilebase::tilebase#0 reg byte x 56.0
void vera_vram_address0(dword vera_vram_address0::bankaddr , byte vera_vram_address0::incr)
volatile word vera_vram_address0::$0 loadstore zp[2]:69 1.000001E7
volatile word vera_vram_address0::$1 loadstore zp[2]:71 1.000001E7
byte~ vera_vram_address0::$2 reg byte a 2000002.0
byte~ vera_vram_address0::$3 reg byte a 2000002.0
byte~ vera_vram_address0::$5 reg byte a 2000002.0
dword vera_vram_address0::bankaddr
dword vera_vram_address0::bankaddr#0 bankaddr zp[4]:13 1050001.5
byte vera_vram_address0::incr
const word* vera_vram_address0::word_h = &vera_vram_address0::$1
const word* vera_vram_address0::word_l = &vera_vram_address0::$0

zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
reg byte a [ screenlayer::layer#6 ]
reg byte a [ vera_set_layer_textcolor::layer#8 vera_set_layer_textcolor::layer#2 vera_set_layer_textcolor::layer#3 vera_set_layer_textcolor::layer#4 vera_set_layer_textcolor::layer#5 vera_set_layer_textcolor::layer#6 vera_set_layer_textcolor::layer#7 ]
reg byte x [ vera_set_layer_textcolor::color#7 ]
reg byte a [ vera_set_layer_backcolor::layer#7 vera_set_layer_backcolor::layer#2 vera_set_layer_backcolor::layer#3 vera_set_layer_backcolor::layer#4 vera_set_layer_backcolor::layer#5 vera_set_layer_backcolor::layer#6 ]
reg byte x [ vera_set_layer_backcolor::color#6 ]
reg byte a [ vera_set_layer_mapbase::layer#4 ]
reg byte x [ vera_set_layer_mapbase::mapbase#3 ]
reg byte x [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#0 gotoxy::y#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[4]:3 [ draw_characters::tilerow#1 draw_characters::tilebase#3 draw_characters::tilebase#4 draw_characters::tilebase#0 draw_characters::tilebase#1 draw_characters::tilebase#2 ]
zp[1]:7 [ draw_characters::y#13 draw_characters::y#1 ]
zp[4]:8 [ draw_characters::tilecolumn#1 draw_characters::tilecolumn#11 draw_characters::tilerow#2 ]
zp[1]:12 [ draw_characters::r#11 draw_characters::r#1 ]
zp[4]:13 [ draw_characters::tilecolumn#10 draw_characters::tilecolumn#13 draw_characters::tilecolumn#2 vera_vram_address0::bankaddr#0 ]
zp[1]:17 [ draw_characters::x#8 draw_characters::x#1 ]
zp[1]:18 [ draw_characters::b#2 draw_characters::b#1 ]
reg byte a [ vera_get_layer_color::layer#3 vera_get_layer_color::layer#1 vera_get_layer_color::layer#0 ]
reg byte x [ insertup::i#2 insertup::i#1 ]
zp[1]:19 [ conio_screen_width ]
zp[1]:20 [ conio_screen_height ]
zp[1]:21 [ conio_screen_layer ]
zp[2]:22 [ conio_width ]
zp[2]:24 [ conio_height ]
zp[1]:26 [ conio_skip ]
zp[2]:27 [ scroll_x ]
zp[2]:29 [ scroll_y ]
zp[2]:31 [ delta_x ]
zp[2]:33 [ delta_y ]
zp[2]:35 [ speed ]
zp[2]:37 [ irq_vsync::$10 ]
zp[2]:39 [ irq_vsync::$11 ]
zp[2]:41 [ irq_vsync::vera_set_layer_horizontal_scroll1_scroll#0 ]
reg byte a [ irq_vsync::vera_set_layer_horizontal_scroll1_$0 ]
reg byte a [ irq_vsync::vera_set_layer_horizontal_scroll1_$1 ]
zp[2]:43 [ irq_vsync::vera_set_layer_vertical_scroll1_scroll#0 ]
reg byte a [ irq_vsync::vera_set_layer_vertical_scroll1_$0 ]
reg byte a [ irq_vsync::vera_set_layer_vertical_scroll1_$1 ]
reg byte a [ vera_get_layer_config::return#2 ]
reg byte x [ vera_set_layer_config::config#0 ]
reg byte a [ vera_get_layer_tilebase::return#2 ]
reg byte x [ vera_set_layer_tilebase::tilebase#0 ]
zp[2]:45 [ main::vera_set_layer_map_width_1281_addr#0 cputs::s#10 cputs::s#11 cputs::s#0 clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
zp[2]:47 [ main::vera_set_layer_map_height_1281_addr#0 memcpy_in_vram::i#2 memcpy_in_vram::i#1 clearline::c#2 clearline::c#1 ]
zp[4]:49 [ vera_get_layer_tilebase_address::return#2 main::tilebase#0 vera_get_layer_tilebase_address::return#0 vera_get_layer_tilebase_address::address#2 vera_get_layer_tilebase_address::address#0 vera_get_layer_tilebase_address::address#1 ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$45 ]
reg byte a [ main::vera_hide_layer1_$0 ]
reg byte a [ kbhit::return#3 ]
reg byte a [ main::$47 ]
reg byte a [ main::vera_hide_layer2_$0 ]
reg byte a [ screensize::hscale#0 ]
reg byte a [ screensize::$1 ]
reg byte a [ screensize::vscale#0 ]
reg byte a [ screensize::$3 ]
reg byte a [ screenlayer::layer#1 ]
reg byte a [ vera_get_layer_mapbase::layer#0 ]
reg byte a [ vera_get_layer_mapbase::return#0 ]
reg byte a [ screenlayer::addr#0 ]
zp[1]:53 [ CONIO_SCREEN_BANK#17 ]
zp[2]:54 [ CONIO_SCREEN_TEXT#19 ]
reg byte a [ vera_get_layer_map_width::layer#0 ]
zp[2]:56 [ screenlayer::$5 ]
reg byte a [ vera_get_layer_map_height::layer#0 ]
zp[2]:58 [ vera_get_layer_map_height::return#0 screenlayer::$6 vera_get_layer_map_height::return#1 ]
reg byte a [ vera_set_layer_textcolor::layer#1 ]
reg byte a [ vera_set_layer_backcolor::layer#1 ]
reg byte a [ vera_set_layer_mapbase::layer#2 ]
reg byte a [ vera_set_layer_mapbase::$0 ]
zp[2]:60 [ vera_set_layer_mapbase::addr#0 screenlayer::addr_i#0 ]
zp[2]:62 [ gotoxy::$6 gotoxy::line_offset#0 vera_get_layer_map_width::return#0 screenlayer::$4 vera_get_layer_map_width::return#1 ]
reg byte a [ gotoxy::$5 ]
reg byte a [ vera_get_layer_backcolor::layer#0 ]
reg byte a [ vera_get_layer_backcolor::return#0 ]
reg byte a [ clrscr::$1 ]
zp[1]:64 [ clrscr::$2 clrscr::color#0 cputc::c#2 cputc::c#0 cputc::c#1 ]
reg byte a [ vera_get_layer_textcolor::layer#0 ]
reg byte a [ vera_get_layer_textcolor::return#0 ]
reg byte a [ clrscr::$3 ]
reg byte a [ clrscr::$10 ]
reg byte a [ clrscr::$6 ]
reg byte a [ clrscr::$7 ]
reg byte a [ clrscr::$8 ]
reg byte a [ vera_get_layer_config::return#0 ]
reg byte a [ vera_get_layer_tilebase::return#0 ]
reg byte a [ vera_get_layer_tilebase_address::tilebase#0 ]
zp[1]:65 [ draw_characters::bit#0 ]
reg byte x [ draw_characters::$2 ]
reg byte a [ draw_characters::$3 ]
reg byte a [ draw_characters::bit#1 ]
zp[1]:66 [ kbhit::ch ]
reg byte a [ kbhit::return#0 ]
reg byte a [ kbhit::return#1 ]
reg byte a [ cputs::c#1 ]
reg byte a [ vera_get_layer_mapbase::layer#1 ]
reg byte a [ vera_get_layer_mapbase::$0 ]
reg byte a [ vera_get_layer_mapbase::return#1 ]
reg byte a [ vera_get_layer_map_width::$2 ]
reg byte a [ vera_get_layer_map_width::$0 ]
reg byte a [ vera_get_layer_map_width::$1 ]
reg byte a [ vera_get_layer_map_width::$3 ]
reg byte a [ vera_get_layer_map_height::$2 ]
zp[2]:67 [ vera_get_layer_map_height::config#0 vera_get_layer_map_width::config#0 vera_get_layer_mapbase::mapbase#0 ]
reg byte a [ vera_get_layer_map_height::$0 ]
reg byte a [ vera_get_layer_map_height::$1 ]
reg byte a [ vera_get_layer_map_height::$3 ]
reg byte a [ vera_get_layer_backcolor::layer#1 ]
reg byte a [ vera_get_layer_backcolor::return#1 ]
reg byte a [ vera_get_layer_textcolor::layer#1 ]
reg byte a [ vera_get_layer_textcolor::return#1 ]
zp[2]:69 [ vera_vram_address0::$0 ]
zp[2]:71 [ vera_vram_address0::$1 ]
reg byte a [ vera_vram_address0::$2 ]
reg byte a [ vera_vram_address0::$3 ]
reg byte a [ vera_vram_address0::$5 ]
reg byte a [ vera_get_layer_color::return#0 ]
reg byte x [ cputc::color#0 ]
reg byte a [ cputc::$15 ]
zp[2]:73 [ cputc::conio_addr#0 cputc::conio_addr#1 vera_set_layer_tilebase::addr#0 vera_get_layer_tilebase::tilebase#0 vera_set_layer_config::addr#0 vera_get_layer_config::config#0 clrscr::skip#0 ]
reg byte a [ cputc::$2 ]
reg byte a [ cputc::$4 ]
reg byte a [ cputc::$5 ]
reg byte a [ cputc::$6 ]
reg byte a [ cputc::scroll_enable#0 ]
zp[2]:75 [ cputc::$16 ]
reg byte x [ vera_get_layer_color::layer#2 ]
reg byte a [ vera_get_layer_color::$0 ]
reg byte a [ vera_get_layer_color::return#2 ]
reg byte a [ cputln::$3 ]
zp[2]:77 [ cputln::temp#0 cputln::temp#1 ]
zp[2]:79 [ cputln::$5 ]
reg byte a [ cputln::$4 ]
zp[1]:81 [ insertup::cy#0 ]
zp[1]:82 [ insertup::width#0 ]
reg byte a [ insertup::$3 ]
zp[2]:83 [ insertup::line#0 insertup::start#0 memcpy_in_vram::dest#0 ]
zp[2]:85 [ insertup::$6 memcpy_in_vram::src#0 ]
reg byte a [ clearline::$5 ]
zp[2]:87 [ clearline::addr#0 memcpy_in_vram::num#0 ]
reg byte a [ clearline::$1 ]
reg byte a [ clearline::$2 ]
reg byte a [ vera_get_layer_color::return#1 ]
reg byte x [ clearline::color#0 ]
reg byte a [ memcpy_in_vram::$0 ]
reg byte a [ memcpy_in_vram::$1 ]
reg byte a [ memcpy_in_vram::$3 ]
reg byte a [ memcpy_in_vram::$4 ]
