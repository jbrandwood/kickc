Inlined call call __init 

CONTROL FLOW GRAPH SSA

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from print_cls
  memset::c#4 = phi( print_cls/memset::c#0 )
  memset::str#3 = phi( print_cls/memset::str#0 )
  memset::num#1 = phi( print_cls/memset::num#0 )
  memset::$0 = memset::num#1 > 0
  memset::$1 = ! memset::$0
  if(memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  memset::str#1 = phi( memset/memset::str#3, memset::@3/memset::str#4 )
  memset::return#0 = memset::str#1
  to:memset::@return
memset::@2: scope:[memset]  from memset
  memset::c#3 = phi( memset/memset::c#4 )
  memset::num#2 = phi( memset/memset::num#1 )
  memset::str#2 = phi( memset/memset::str#3 )
  memset::$4 = (byte*)memset::str#2
  memset::$2 = memset::$4 + memset::num#2
  memset::end#0 = memset::$2
  memset::dst#0 = ((byte*)) memset::str#2
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  memset::c#2 = phi( memset::@2/memset::c#3, memset::@4/memset::c#1 )
  memset::str#4 = phi( memset::@2/memset::str#2, memset::@4/memset::str#5 )
  memset::end#1 = phi( memset::@2/memset::end#0, memset::@4/memset::end#2 )
  memset::dst#2 = phi( memset::@2/memset::dst#0, memset::@4/memset::dst#1 )
  memset::$3 = memset::dst#2 != memset::end#1
  if(memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  memset::str#5 = phi( memset::@3/memset::str#4 )
  memset::end#2 = phi( memset::@3/memset::end#1 )
  memset::dst#3 = phi( memset::@3/memset::dst#2 )
  memset::c#1 = phi( memset::@3/memset::c#2 )
  *memset::dst#3 = memset::c#1
  memset::dst#1 = ++ memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  memset::return#3 = phi( memset::@1/memset::return#0 )
  memset::return#1 = memset::return#3
  return 
  to:@return

void print_str(byte* print_str::str)
print_str: scope:[print_str]  from printu::@2
  print_char_cursor#122 = phi( printu::@2/print_char_cursor#39 )
  print_str::str#5 = phi( printu::@2/print_str::str#1 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  print_char_cursor#95 = phi( print_str/print_char_cursor#122, print_str::@3/print_char_cursor#0 )
  print_str::str#2 = phi( print_str/print_str::str#5, print_str::@3/print_str::str#0 )
  print_str::$1 = 0 != *print_str::str#2
  if(print_str::$1) goto print_str::@2
  to:print_str::@return
print_str::@2: scope:[print_str]  from print_str::@1
  print_char_cursor#94 = phi( print_str::@1/print_char_cursor#95 )
  print_str::str#3 = phi( print_str::@1/print_str::str#2 )
  print_char::ch#0 = *print_str::str#3
  call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  print_str::str#4 = phi( print_str::@2/print_str::str#3 )
  print_char_cursor#48 = phi( print_str::@2/print_char_cursor#8 )
  print_char_cursor#0 = print_char_cursor#48
  print_str::str#0 = ++ print_str::str#4
  to:print_str::@1
print_str::@return: scope:[print_str]  from print_str::@1
  print_char_cursor#49 = phi( print_str::@1/print_char_cursor#95 )
  print_char_cursor#1 = print_char_cursor#49
  return 
  to:@return

void print_ln()
print_ln: scope:[print_ln]  from main::@47 main::@52 main::@57 main::@62 main::@67
  print_char_cursor#96 = phi( main::@47/print_char_cursor#15, main::@52/print_char_cursor#20, main::@57/print_char_cursor#25, main::@62/print_char_cursor#30, main::@67/print_char_cursor#35 )
  print_line_cursor#27 = phi( main::@47/print_line_cursor#29, main::@52/print_line_cursor#30, main::@57/print_line_cursor#31, main::@62/print_line_cursor#32, main::@67/print_line_cursor#33 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  print_char_cursor#50 = phi( print_ln/print_char_cursor#96, print_ln::@1/print_char_cursor#50 )
  print_line_cursor#14 = phi( print_ln/print_line_cursor#27, print_ln::@1/print_line_cursor#0 )
  print_ln::$0 = print_line_cursor#14 + $28
  print_line_cursor#0 = print_ln::$0
  print_ln::$1 = print_line_cursor#0 < print_char_cursor#50
  if(print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  print_line_cursor#15 = phi( print_ln::@1/print_line_cursor#0 )
  print_char_cursor#2 = print_line_cursor#15
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  print_char_cursor#51 = phi( print_ln::@2/print_char_cursor#2 )
  print_line_cursor#16 = phi( print_ln::@2/print_line_cursor#15 )
  print_line_cursor#1 = print_line_cursor#16
  print_char_cursor#3 = print_char_cursor#51
  return 
  to:@return

void print_uchar(byte print_uchar::b)
print_uchar: scope:[print_uchar]  from printu::@1 printu::@3
  print_char_cursor#97 = phi( printu::@1/print_char_cursor#38, printu::@3/print_char_cursor#40 )
  print_uchar::b#2 = phi( printu::@1/print_uchar::b#0, printu::@3/print_uchar::b#1 )
  print_uchar::$0 = print_uchar::b#2 >> 4
  print_char::ch#1 = print_hextab[print_uchar::$0]
  call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  print_uchar::b#3 = phi( print_uchar/print_uchar::b#2 )
  print_char_cursor#52 = phi( print_uchar/print_char_cursor#8 )
  print_char_cursor#4 = print_char_cursor#52
  print_uchar::$2 = print_uchar::b#3 & $f
  print_char::ch#2 = print_hextab[print_uchar::$2]
  call print_char 
  to:print_uchar::@2
print_uchar::@2: scope:[print_uchar]  from print_uchar::@1
  print_char_cursor#53 = phi( print_uchar::@1/print_char_cursor#8 )
  print_char_cursor#5 = print_char_cursor#53
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@2
  print_char_cursor#54 = phi( print_uchar::@2/print_char_cursor#5 )
  print_char_cursor#6 = print_char_cursor#54
  return 
  to:@return

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_str::@2 print_uchar print_uchar::@1 printu printu::@4 printu::@5
  print_char_cursor#55 = phi( print_str::@2/print_char_cursor#94, print_uchar/print_char_cursor#97, print_uchar::@1/print_char_cursor#4, printu/print_char_cursor#98, printu::@4/print_char_cursor#41, printu::@5/print_char_cursor#42 )
  print_char::ch#6 = phi( print_str::@2/print_char::ch#0, print_uchar/print_char::ch#1, print_uchar::@1/print_char::ch#2, printu/print_char::ch#3, printu::@4/print_char::ch#4, printu::@5/print_char::ch#5 )
  *print_char_cursor#55 = print_char::ch#6
  print_char_cursor#7 = ++ print_char_cursor#55
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  print_char_cursor#56 = phi( print_char/print_char_cursor#7 )
  print_char_cursor#8 = print_char_cursor#56
  return 
  to:@return

void print_cls()
print_cls: scope:[print_cls]  from main
  print_screen#2 = phi( main/print_screen#5 )
  memset::str#0 = (void*)print_screen#2
  memset::c#0 = ' '
  memset::num#0 = $3e8
  call memset 
  memset::return#2 = memset::return#1
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls
  print_screen#3 = phi( print_cls/print_screen#2 )
  print_line_cursor#2 = print_screen#3
  print_char_cursor#9 = print_line_cursor#2
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  print_char_cursor#57 = phi( print_cls::@1/print_char_cursor#9 )
  print_line_cursor#17 = phi( print_cls::@1/print_line_cursor#2 )
  print_line_cursor#3 = print_line_cursor#17
  print_char_cursor#10 = print_char_cursor#57
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  print_char_cursor#99 = phi( __start::@1/print_char_cursor#121 )
  print_line_cursor#28 = phi( __start::@1/print_line_cursor#35 )
  print_screen#5 = phi( __start::@1/print_screen#7 )
  call print_cls 
  to:main::@43
main::@43: scope:[main]  from main
  print_char_cursor#58 = phi( main/print_char_cursor#10 )
  print_line_cursor#18 = phi( main/print_line_cursor#3 )
  print_line_cursor#4 = print_line_cursor#18
  print_char_cursor#11 = print_char_cursor#58
  main::a#0 = 7
  main::i#0 = 0
  to:main::@1
main::@1: scope:[main]  from main::@43 main::@68
  print_line_cursor#86 = phi( main::@43/print_line_cursor#4, main::@68/print_line_cursor#9 )
  main::i#42 = phi( main::@43/main::i#0, main::@68/main::i#1 )
  print_char_cursor#123 = phi( main::@43/print_char_cursor#11, main::@68/print_char_cursor#36 )
  main::a#2 = phi( main::@43/main::a#0, main::@68/main::a#1 )
  main::r#0 = 0
  main::$1 = $ce - main::a#2
  main::b#0 = main::$1
  main::r#1 = '-'
  main::$2 = main::a#2 < main::b#0
  main::$3 = ! main::$2
  if(main::$3) goto main::@2
  to:main::@22
main::@2: scope:[main]  from main::@1 main::@22
  print_line_cursor#81 = phi( main::@1/print_line_cursor#86, main::@22/print_line_cursor#87 )
  main::i#35 = phi( main::@1/main::i#42, main::@22/main::i#43 )
  print_char_cursor#100 = phi( main::@1/print_char_cursor#123, main::@22/print_char_cursor#124 )
  main::r#41 = phi( main::@1/main::r#1, main::@22/main::r#3 )
  main::b#1 = phi( main::@1/main::b#0, main::@22/main::b#10 )
  main::a#3 = phi( main::@1/main::a#2, main::@22/main::a#43 )
  printu::a#0 = main::a#3
  printu::op#0 = main::op
  printu::b#0 = main::b#1
  printu::res#0 = main::r#41
  call printu 
  to:main::@44
main::@44: scope:[main]  from main::@2
  main::b#48 = phi( main::@2/main::b#1 )
  print_line_cursor#72 = phi( main::@2/print_line_cursor#81 )
  main::i#25 = phi( main::@2/main::i#35 )
  main::a#4 = phi( main::@2/main::a#3 )
  print_char_cursor#59 = phi( main::@2/print_char_cursor#44 )
  print_char_cursor#12 = print_char_cursor#59
  main::r#2 = '-'
  main::$5 = main::a#4 < $37
  main::$6 = ! main::$5
  if(main::$6) goto main::@3
  to:main::@23
main::@22: scope:[main]  from main::@1
  print_line_cursor#87 = phi( main::@1/print_line_cursor#86 )
  main::i#43 = phi( main::@1/main::i#42 )
  print_char_cursor#124 = phi( main::@1/print_char_cursor#123 )
  main::b#10 = phi( main::@1/main::b#0 )
  main::a#43 = phi( main::@1/main::a#2 )
  main::r#3 = '+'
  to:main::@2
main::@3: scope:[main]  from main::@23 main::@44
  main::b#43 = phi( main::@23/main::b#47, main::@44/main::b#48 )
  print_line_cursor#66 = phi( main::@23/print_line_cursor#71, main::@44/print_line_cursor#72 )
  main::i#13 = phi( main::@23/main::i#24, main::@44/main::i#25 )
  print_char_cursor#101 = phi( main::@23/print_char_cursor#125, main::@44/print_char_cursor#12 )
  main::r#42 = phi( main::@23/main::r#5, main::@44/main::r#2 )
  main::a#5 = phi( main::@23/main::a#44, main::@44/main::a#4 )
  printu::a#1 = main::a#5
  printu::op#1 = main::op1
  printu::b#1 = $37
  printu::res#1 = main::r#42
  call printu 
  to:main::@45
main::@45: scope:[main]  from main::@3
  main::b#36 = phi( main::@3/main::b#43 )
  print_line_cursor#57 = phi( main::@3/print_line_cursor#66 )
  main::i#2 = phi( main::@3/main::i#13 )
  main::a#6 = phi( main::@3/main::a#5 )
  print_char_cursor#60 = phi( main::@3/print_char_cursor#44 )
  print_char_cursor#13 = print_char_cursor#60
  main::r#4 = '-'
  main::$8 = main::a#6 < main::cs[main::i#2]
  main::$9 = ! main::$8
  if(main::$9) goto main::@4
  to:main::@24
main::@23: scope:[main]  from main::@44
  main::b#47 = phi( main::@44/main::b#48 )
  print_line_cursor#71 = phi( main::@44/print_line_cursor#72 )
  main::i#24 = phi( main::@44/main::i#25 )
  print_char_cursor#125 = phi( main::@44/print_char_cursor#12 )
  main::a#44 = phi( main::@44/main::a#4 )
  main::r#5 = '+'
  to:main::@3
main::@4: scope:[main]  from main::@24 main::@45
  main::b#31 = phi( main::@24/main::b#35, main::@45/main::b#36 )
  print_line_cursor#51 = phi( main::@24/print_line_cursor#56, main::@45/print_line_cursor#57 )
  print_char_cursor#102 = phi( main::@24/print_char_cursor#126, main::@45/print_char_cursor#13 )
  main::r#43 = phi( main::@24/main::r#7, main::@45/main::r#4 )
  main::i#3 = phi( main::@24/main::i#14, main::@45/main::i#2 )
  main::a#7 = phi( main::@24/main::a#45, main::@45/main::a#6 )
  printu::a#2 = main::a#7
  printu::op#2 = main::op2
  printu::b#2 = main::cs[main::i#3]
  printu::res#2 = main::r#43
  call printu 
  to:main::@46
main::@46: scope:[main]  from main::@4
  main::i#61 = phi( main::@4/main::i#3 )
  main::b#24 = phi( main::@4/main::b#31 )
  print_line_cursor#42 = phi( main::@4/print_line_cursor#51 )
  main::a#8 = phi( main::@4/main::a#7 )
  print_char_cursor#61 = phi( main::@4/print_char_cursor#44 )
  print_char_cursor#14 = print_char_cursor#61
  main::r#6 = '-'
  main::$11 = main::a#8 < main::a#8
  main::$12 = ! main::$11
  if(main::$12) goto main::@5
  to:main::@25
main::@24: scope:[main]  from main::@45
  main::b#35 = phi( main::@45/main::b#36 )
  print_line_cursor#56 = phi( main::@45/print_line_cursor#57 )
  print_char_cursor#126 = phi( main::@45/print_char_cursor#13 )
  main::i#14 = phi( main::@45/main::i#2 )
  main::a#45 = phi( main::@45/main::a#6 )
  main::r#7 = '+'
  to:main::@4
main::@5: scope:[main]  from main::@25 main::@46
  main::i#56 = phi( main::@25/main::i#60, main::@46/main::i#61 )
  main::b#19 = phi( main::@25/main::b#23, main::@46/main::b#24 )
  print_line_cursor#36 = phi( main::@25/print_line_cursor#41, main::@46/print_line_cursor#42 )
  print_char_cursor#103 = phi( main::@25/print_char_cursor#127, main::@46/print_char_cursor#14 )
  main::r#44 = phi( main::@25/main::r#9, main::@46/main::r#6 )
  main::a#9 = phi( main::@25/main::a#46, main::@46/main::a#8 )
  printu::a#3 = main::a#9
  printu::op#3 = main::op3
  printu::b#3 = main::a#9
  printu::res#3 = main::r#44
  call printu 
  to:main::@47
main::@47: scope:[main]  from main::@5
  main::i#52 = phi( main::@5/main::i#56 )
  main::b#11 = phi( main::@5/main::b#19 )
  main::a#47 = phi( main::@5/main::a#9 )
  print_line_cursor#29 = phi( main::@5/print_line_cursor#36 )
  print_char_cursor#62 = phi( main::@5/print_char_cursor#44 )
  print_char_cursor#15 = print_char_cursor#62
  call print_ln 
  to:main::@48
main::@48: scope:[main]  from main::@47
  main::i#45 = phi( main::@47/main::i#52 )
  main::b#2 = phi( main::@47/main::b#11 )
  main::a#10 = phi( main::@47/main::a#47 )
  print_char_cursor#63 = phi( main::@47/print_char_cursor#3 )
  print_line_cursor#19 = phi( main::@47/print_line_cursor#1 )
  print_line_cursor#5 = print_line_cursor#19
  print_char_cursor#16 = print_char_cursor#63
  main::r#8 = '-'
  main::$15 = main::a#10 > main::b#2
  main::$16 = ! main::$15
  if(main::$16) goto main::@6
  to:main::@26
main::@25: scope:[main]  from main::@46
  main::i#60 = phi( main::@46/main::i#61 )
  main::b#23 = phi( main::@46/main::b#24 )
  print_line_cursor#41 = phi( main::@46/print_line_cursor#42 )
  print_char_cursor#127 = phi( main::@46/print_char_cursor#14 )
  main::a#46 = phi( main::@46/main::a#8 )
  main::r#9 = '+'
  to:main::@5
main::@6: scope:[main]  from main::@26 main::@48
  print_line_cursor#82 = phi( main::@26/print_line_cursor#88, main::@48/print_line_cursor#5 )
  main::i#36 = phi( main::@26/main::i#44, main::@48/main::i#45 )
  print_char_cursor#104 = phi( main::@26/print_char_cursor#128, main::@48/print_char_cursor#16 )
  main::r#45 = phi( main::@26/main::r#11, main::@48/main::r#8 )
  main::b#3 = phi( main::@26/main::b#12, main::@48/main::b#2 )
  main::a#11 = phi( main::@26/main::a#48, main::@48/main::a#10 )
  printu::a#4 = main::a#11
  printu::op#4 = main::op4
  printu::b#4 = main::b#3
  printu::res#4 = main::r#45
  call printu 
  to:main::@49
main::@49: scope:[main]  from main::@6
  main::b#50 = phi( main::@6/main::b#3 )
  print_line_cursor#74 = phi( main::@6/print_line_cursor#82 )
  main::i#27 = phi( main::@6/main::i#36 )
  main::a#12 = phi( main::@6/main::a#11 )
  print_char_cursor#64 = phi( main::@6/print_char_cursor#44 )
  print_char_cursor#17 = print_char_cursor#64
  main::r#10 = '-'
  main::$18 = main::a#12 > $37
  main::$19 = ! main::$18
  if(main::$19) goto main::@7
  to:main::@27
main::@26: scope:[main]  from main::@48
  print_line_cursor#88 = phi( main::@48/print_line_cursor#5 )
  main::i#44 = phi( main::@48/main::i#45 )
  print_char_cursor#128 = phi( main::@48/print_char_cursor#16 )
  main::b#12 = phi( main::@48/main::b#2 )
  main::a#48 = phi( main::@48/main::a#10 )
  main::r#11 = '+'
  to:main::@6
main::@7: scope:[main]  from main::@27 main::@49
  main::b#44 = phi( main::@27/main::b#49, main::@49/main::b#50 )
  print_line_cursor#67 = phi( main::@27/print_line_cursor#73, main::@49/print_line_cursor#74 )
  main::i#15 = phi( main::@27/main::i#26, main::@49/main::i#27 )
  print_char_cursor#105 = phi( main::@27/print_char_cursor#129, main::@49/print_char_cursor#17 )
  main::r#46 = phi( main::@27/main::r#13, main::@49/main::r#10 )
  main::a#13 = phi( main::@27/main::a#49, main::@49/main::a#12 )
  printu::a#5 = main::a#13
  printu::op#5 = main::op5
  printu::b#5 = $37
  printu::res#5 = main::r#46
  call printu 
  to:main::@50
main::@50: scope:[main]  from main::@7
  main::b#38 = phi( main::@7/main::b#44 )
  print_line_cursor#59 = phi( main::@7/print_line_cursor#67 )
  main::i#4 = phi( main::@7/main::i#15 )
  main::a#14 = phi( main::@7/main::a#13 )
  print_char_cursor#65 = phi( main::@7/print_char_cursor#44 )
  print_char_cursor#18 = print_char_cursor#65
  main::r#12 = '-'
  main::$21 = main::a#14 > main::cs[main::i#4]
  main::$22 = ! main::$21
  if(main::$22) goto main::@8
  to:main::@28
main::@27: scope:[main]  from main::@49
  main::b#49 = phi( main::@49/main::b#50 )
  print_line_cursor#73 = phi( main::@49/print_line_cursor#74 )
  main::i#26 = phi( main::@49/main::i#27 )
  print_char_cursor#129 = phi( main::@49/print_char_cursor#17 )
  main::a#49 = phi( main::@49/main::a#12 )
  main::r#13 = '+'
  to:main::@7
main::@8: scope:[main]  from main::@28 main::@50
  main::b#32 = phi( main::@28/main::b#37, main::@50/main::b#38 )
  print_line_cursor#52 = phi( main::@28/print_line_cursor#58, main::@50/print_line_cursor#59 )
  print_char_cursor#106 = phi( main::@28/print_char_cursor#130, main::@50/print_char_cursor#18 )
  main::r#47 = phi( main::@28/main::r#15, main::@50/main::r#12 )
  main::i#5 = phi( main::@28/main::i#16, main::@50/main::i#4 )
  main::a#15 = phi( main::@28/main::a#50, main::@50/main::a#14 )
  printu::a#6 = main::a#15
  printu::op#6 = main::op6
  printu::b#6 = main::cs[main::i#5]
  printu::res#6 = main::r#47
  call printu 
  to:main::@51
main::@51: scope:[main]  from main::@8
  main::i#63 = phi( main::@8/main::i#5 )
  main::b#26 = phi( main::@8/main::b#32 )
  print_line_cursor#44 = phi( main::@8/print_line_cursor#52 )
  main::a#16 = phi( main::@8/main::a#15 )
  print_char_cursor#66 = phi( main::@8/print_char_cursor#44 )
  print_char_cursor#19 = print_char_cursor#66
  main::r#14 = '-'
  main::$24 = main::a#16 > main::a#16
  main::$25 = ! main::$24
  if(main::$25) goto main::@9
  to:main::@29
main::@28: scope:[main]  from main::@50
  main::b#37 = phi( main::@50/main::b#38 )
  print_line_cursor#58 = phi( main::@50/print_line_cursor#59 )
  print_char_cursor#130 = phi( main::@50/print_char_cursor#18 )
  main::i#16 = phi( main::@50/main::i#4 )
  main::a#50 = phi( main::@50/main::a#14 )
  main::r#15 = '+'
  to:main::@8
main::@9: scope:[main]  from main::@29 main::@51
  main::i#57 = phi( main::@29/main::i#62, main::@51/main::i#63 )
  main::b#20 = phi( main::@29/main::b#25, main::@51/main::b#26 )
  print_line_cursor#37 = phi( main::@29/print_line_cursor#43, main::@51/print_line_cursor#44 )
  print_char_cursor#107 = phi( main::@29/print_char_cursor#131, main::@51/print_char_cursor#19 )
  main::r#48 = phi( main::@29/main::r#17, main::@51/main::r#14 )
  main::a#17 = phi( main::@29/main::a#51, main::@51/main::a#16 )
  printu::a#7 = main::a#17
  printu::op#7 = main::op7
  printu::b#7 = main::a#17
  printu::res#7 = main::r#48
  call printu 
  to:main::@52
main::@52: scope:[main]  from main::@9
  main::i#53 = phi( main::@9/main::i#57 )
  main::b#13 = phi( main::@9/main::b#20 )
  main::a#52 = phi( main::@9/main::a#17 )
  print_line_cursor#30 = phi( main::@9/print_line_cursor#37 )
  print_char_cursor#67 = phi( main::@9/print_char_cursor#44 )
  print_char_cursor#20 = print_char_cursor#67
  call print_ln 
  to:main::@53
main::@53: scope:[main]  from main::@52
  main::i#47 = phi( main::@52/main::i#53 )
  main::b#4 = phi( main::@52/main::b#13 )
  main::a#18 = phi( main::@52/main::a#52 )
  print_char_cursor#68 = phi( main::@52/print_char_cursor#3 )
  print_line_cursor#20 = phi( main::@52/print_line_cursor#1 )
  print_line_cursor#6 = print_line_cursor#20
  print_char_cursor#21 = print_char_cursor#68
  main::r#16 = '-'
  main::$28 = main::a#18 <= main::b#4
  main::$29 = ! main::$28
  if(main::$29) goto main::@10
  to:main::@30
main::@29: scope:[main]  from main::@51
  main::i#62 = phi( main::@51/main::i#63 )
  main::b#25 = phi( main::@51/main::b#26 )
  print_line_cursor#43 = phi( main::@51/print_line_cursor#44 )
  print_char_cursor#131 = phi( main::@51/print_char_cursor#19 )
  main::a#51 = phi( main::@51/main::a#16 )
  main::r#17 = '+'
  to:main::@9
main::@10: scope:[main]  from main::@30 main::@53
  print_line_cursor#83 = phi( main::@30/print_line_cursor#89, main::@53/print_line_cursor#6 )
  main::i#37 = phi( main::@30/main::i#46, main::@53/main::i#47 )
  print_char_cursor#108 = phi( main::@30/print_char_cursor#132, main::@53/print_char_cursor#21 )
  main::r#49 = phi( main::@30/main::r#19, main::@53/main::r#16 )
  main::b#5 = phi( main::@30/main::b#14, main::@53/main::b#4 )
  main::a#19 = phi( main::@30/main::a#53, main::@53/main::a#18 )
  printu::a#8 = main::a#19
  printu::op#8 = main::op8
  printu::b#8 = main::b#5
  printu::res#8 = main::r#49
  call printu 
  to:main::@54
main::@54: scope:[main]  from main::@10
  main::b#52 = phi( main::@10/main::b#5 )
  print_line_cursor#76 = phi( main::@10/print_line_cursor#83 )
  main::i#29 = phi( main::@10/main::i#37 )
  main::a#20 = phi( main::@10/main::a#19 )
  print_char_cursor#69 = phi( main::@10/print_char_cursor#44 )
  print_char_cursor#22 = print_char_cursor#69
  main::r#18 = '-'
  main::$31 = main::a#20 <= $37
  main::$32 = ! main::$31
  if(main::$32) goto main::@11
  to:main::@31
main::@30: scope:[main]  from main::@53
  print_line_cursor#89 = phi( main::@53/print_line_cursor#6 )
  main::i#46 = phi( main::@53/main::i#47 )
  print_char_cursor#132 = phi( main::@53/print_char_cursor#21 )
  main::b#14 = phi( main::@53/main::b#4 )
  main::a#53 = phi( main::@53/main::a#18 )
  main::r#19 = '+'
  to:main::@10
main::@11: scope:[main]  from main::@31 main::@54
  main::b#45 = phi( main::@31/main::b#51, main::@54/main::b#52 )
  print_line_cursor#68 = phi( main::@31/print_line_cursor#75, main::@54/print_line_cursor#76 )
  main::i#17 = phi( main::@31/main::i#28, main::@54/main::i#29 )
  print_char_cursor#109 = phi( main::@31/print_char_cursor#133, main::@54/print_char_cursor#22 )
  main::r#50 = phi( main::@31/main::r#21, main::@54/main::r#18 )
  main::a#21 = phi( main::@31/main::a#54, main::@54/main::a#20 )
  printu::a#9 = main::a#21
  printu::op#9 = main::op9
  printu::b#9 = $37
  printu::res#9 = main::r#50
  call printu 
  to:main::@55
main::@55: scope:[main]  from main::@11
  main::b#40 = phi( main::@11/main::b#45 )
  print_line_cursor#61 = phi( main::@11/print_line_cursor#68 )
  main::i#6 = phi( main::@11/main::i#17 )
  main::a#22 = phi( main::@11/main::a#21 )
  print_char_cursor#70 = phi( main::@11/print_char_cursor#44 )
  print_char_cursor#23 = print_char_cursor#70
  main::r#20 = '-'
  main::$34 = main::a#22 <= main::cs[main::i#6]
  main::$35 = ! main::$34
  if(main::$35) goto main::@12
  to:main::@32
main::@31: scope:[main]  from main::@54
  main::b#51 = phi( main::@54/main::b#52 )
  print_line_cursor#75 = phi( main::@54/print_line_cursor#76 )
  main::i#28 = phi( main::@54/main::i#29 )
  print_char_cursor#133 = phi( main::@54/print_char_cursor#22 )
  main::a#54 = phi( main::@54/main::a#20 )
  main::r#21 = '+'
  to:main::@11
main::@12: scope:[main]  from main::@32 main::@55
  main::b#33 = phi( main::@32/main::b#39, main::@55/main::b#40 )
  print_line_cursor#53 = phi( main::@32/print_line_cursor#60, main::@55/print_line_cursor#61 )
  print_char_cursor#110 = phi( main::@32/print_char_cursor#134, main::@55/print_char_cursor#23 )
  main::r#51 = phi( main::@32/main::r#23, main::@55/main::r#20 )
  main::i#7 = phi( main::@32/main::i#18, main::@55/main::i#6 )
  main::a#23 = phi( main::@32/main::a#55, main::@55/main::a#22 )
  printu::a#10 = main::a#23
  printu::op#10 = main::op10
  printu::b#10 = main::cs[main::i#7]
  printu::res#10 = main::r#51
  call printu 
  to:main::@56
main::@56: scope:[main]  from main::@12
  main::i#65 = phi( main::@12/main::i#7 )
  main::b#28 = phi( main::@12/main::b#33 )
  print_line_cursor#46 = phi( main::@12/print_line_cursor#53 )
  main::a#24 = phi( main::@12/main::a#23 )
  print_char_cursor#71 = phi( main::@12/print_char_cursor#44 )
  print_char_cursor#24 = print_char_cursor#71
  main::r#22 = '-'
  main::$37 = main::a#24 <= main::a#24
  main::$38 = ! main::$37
  if(main::$38) goto main::@13
  to:main::@33
main::@32: scope:[main]  from main::@55
  main::b#39 = phi( main::@55/main::b#40 )
  print_line_cursor#60 = phi( main::@55/print_line_cursor#61 )
  print_char_cursor#134 = phi( main::@55/print_char_cursor#23 )
  main::i#18 = phi( main::@55/main::i#6 )
  main::a#55 = phi( main::@55/main::a#22 )
  main::r#23 = '+'
  to:main::@12
main::@13: scope:[main]  from main::@33 main::@56
  main::i#58 = phi( main::@33/main::i#64, main::@56/main::i#65 )
  main::b#21 = phi( main::@33/main::b#27, main::@56/main::b#28 )
  print_line_cursor#38 = phi( main::@33/print_line_cursor#45, main::@56/print_line_cursor#46 )
  print_char_cursor#111 = phi( main::@33/print_char_cursor#135, main::@56/print_char_cursor#24 )
  main::r#52 = phi( main::@33/main::r#25, main::@56/main::r#22 )
  main::a#25 = phi( main::@33/main::a#56, main::@56/main::a#24 )
  printu::a#11 = main::a#25
  printu::op#11 = main::op11
  printu::b#11 = main::a#25
  printu::res#11 = main::r#52
  call printu 
  to:main::@57
main::@57: scope:[main]  from main::@13
  main::i#54 = phi( main::@13/main::i#58 )
  main::b#15 = phi( main::@13/main::b#21 )
  main::a#57 = phi( main::@13/main::a#25 )
  print_line_cursor#31 = phi( main::@13/print_line_cursor#38 )
  print_char_cursor#72 = phi( main::@13/print_char_cursor#44 )
  print_char_cursor#25 = print_char_cursor#72
  call print_ln 
  to:main::@58
main::@58: scope:[main]  from main::@57
  main::i#49 = phi( main::@57/main::i#54 )
  main::b#6 = phi( main::@57/main::b#15 )
  main::a#26 = phi( main::@57/main::a#57 )
  print_char_cursor#73 = phi( main::@57/print_char_cursor#3 )
  print_line_cursor#21 = phi( main::@57/print_line_cursor#1 )
  print_line_cursor#7 = print_line_cursor#21
  print_char_cursor#26 = print_char_cursor#73
  main::r#24 = '-'
  main::$41 = main::a#26 >= main::b#6
  main::$42 = ! main::$41
  if(main::$42) goto main::@14
  to:main::@34
main::@33: scope:[main]  from main::@56
  main::i#64 = phi( main::@56/main::i#65 )
  main::b#27 = phi( main::@56/main::b#28 )
  print_line_cursor#45 = phi( main::@56/print_line_cursor#46 )
  print_char_cursor#135 = phi( main::@56/print_char_cursor#24 )
  main::a#56 = phi( main::@56/main::a#24 )
  main::r#25 = '+'
  to:main::@13
main::@14: scope:[main]  from main::@34 main::@58
  print_line_cursor#84 = phi( main::@34/print_line_cursor#90, main::@58/print_line_cursor#7 )
  main::i#38 = phi( main::@34/main::i#48, main::@58/main::i#49 )
  print_char_cursor#112 = phi( main::@34/print_char_cursor#136, main::@58/print_char_cursor#26 )
  main::r#53 = phi( main::@34/main::r#27, main::@58/main::r#24 )
  main::b#7 = phi( main::@34/main::b#16, main::@58/main::b#6 )
  main::a#27 = phi( main::@34/main::a#58, main::@58/main::a#26 )
  printu::a#12 = main::a#27
  printu::op#12 = main::op12
  printu::b#12 = main::b#7
  printu::res#12 = main::r#53
  call printu 
  to:main::@59
main::@59: scope:[main]  from main::@14
  main::b#54 = phi( main::@14/main::b#7 )
  print_line_cursor#78 = phi( main::@14/print_line_cursor#84 )
  main::i#31 = phi( main::@14/main::i#38 )
  main::a#28 = phi( main::@14/main::a#27 )
  print_char_cursor#74 = phi( main::@14/print_char_cursor#44 )
  print_char_cursor#27 = print_char_cursor#74
  main::r#26 = '-'
  main::$44 = main::a#28 >= $37
  main::$45 = ! main::$44
  if(main::$45) goto main::@15
  to:main::@35
main::@34: scope:[main]  from main::@58
  print_line_cursor#90 = phi( main::@58/print_line_cursor#7 )
  main::i#48 = phi( main::@58/main::i#49 )
  print_char_cursor#136 = phi( main::@58/print_char_cursor#26 )
  main::b#16 = phi( main::@58/main::b#6 )
  main::a#58 = phi( main::@58/main::a#26 )
  main::r#27 = '+'
  to:main::@14
main::@15: scope:[main]  from main::@35 main::@59
  main::b#46 = phi( main::@35/main::b#53, main::@59/main::b#54 )
  print_line_cursor#69 = phi( main::@35/print_line_cursor#77, main::@59/print_line_cursor#78 )
  main::i#19 = phi( main::@35/main::i#30, main::@59/main::i#31 )
  print_char_cursor#113 = phi( main::@35/print_char_cursor#137, main::@59/print_char_cursor#27 )
  main::r#54 = phi( main::@35/main::r#29, main::@59/main::r#26 )
  main::a#29 = phi( main::@35/main::a#59, main::@59/main::a#28 )
  printu::a#13 = main::a#29
  printu::op#13 = main::op13
  printu::b#13 = $37
  printu::res#13 = main::r#54
  call printu 
  to:main::@60
main::@60: scope:[main]  from main::@15
  main::b#42 = phi( main::@15/main::b#46 )
  print_line_cursor#63 = phi( main::@15/print_line_cursor#69 )
  main::i#8 = phi( main::@15/main::i#19 )
  main::a#30 = phi( main::@15/main::a#29 )
  print_char_cursor#75 = phi( main::@15/print_char_cursor#44 )
  print_char_cursor#28 = print_char_cursor#75
  main::r#28 = '-'
  main::$47 = main::a#30 >= main::cs[main::i#8]
  main::$48 = ! main::$47
  if(main::$48) goto main::@16
  to:main::@36
main::@35: scope:[main]  from main::@59
  main::b#53 = phi( main::@59/main::b#54 )
  print_line_cursor#77 = phi( main::@59/print_line_cursor#78 )
  main::i#30 = phi( main::@59/main::i#31 )
  print_char_cursor#137 = phi( main::@59/print_char_cursor#27 )
  main::a#59 = phi( main::@59/main::a#28 )
  main::r#29 = '+'
  to:main::@15
main::@16: scope:[main]  from main::@36 main::@60
  main::b#34 = phi( main::@36/main::b#41, main::@60/main::b#42 )
  print_line_cursor#54 = phi( main::@36/print_line_cursor#62, main::@60/print_line_cursor#63 )
  print_char_cursor#114 = phi( main::@36/print_char_cursor#138, main::@60/print_char_cursor#28 )
  main::r#55 = phi( main::@36/main::r#31, main::@60/main::r#28 )
  main::i#9 = phi( main::@36/main::i#20, main::@60/main::i#8 )
  main::a#31 = phi( main::@36/main::a#60, main::@60/main::a#30 )
  printu::a#14 = main::a#31
  printu::op#14 = main::op14
  printu::b#14 = main::cs[main::i#9]
  printu::res#14 = main::r#55
  call printu 
  to:main::@61
main::@61: scope:[main]  from main::@16
  main::i#67 = phi( main::@16/main::i#9 )
  main::b#30 = phi( main::@16/main::b#34 )
  print_line_cursor#48 = phi( main::@16/print_line_cursor#54 )
  main::a#32 = phi( main::@16/main::a#31 )
  print_char_cursor#76 = phi( main::@16/print_char_cursor#44 )
  print_char_cursor#29 = print_char_cursor#76
  main::r#30 = '-'
  main::$50 = main::a#32 >= main::a#32
  main::$51 = ! main::$50
  if(main::$51) goto main::@17
  to:main::@37
main::@36: scope:[main]  from main::@60
  main::b#41 = phi( main::@60/main::b#42 )
  print_line_cursor#62 = phi( main::@60/print_line_cursor#63 )
  print_char_cursor#138 = phi( main::@60/print_char_cursor#28 )
  main::i#20 = phi( main::@60/main::i#8 )
  main::a#60 = phi( main::@60/main::a#30 )
  main::r#31 = '+'
  to:main::@16
main::@17: scope:[main]  from main::@37 main::@61
  main::i#59 = phi( main::@37/main::i#66, main::@61/main::i#67 )
  main::b#22 = phi( main::@37/main::b#29, main::@61/main::b#30 )
  print_line_cursor#39 = phi( main::@37/print_line_cursor#47, main::@61/print_line_cursor#48 )
  print_char_cursor#115 = phi( main::@37/print_char_cursor#139, main::@61/print_char_cursor#29 )
  main::r#56 = phi( main::@37/main::r#33, main::@61/main::r#30 )
  main::a#33 = phi( main::@37/main::a#61, main::@61/main::a#32 )
  printu::a#15 = main::a#33
  printu::op#15 = main::op15
  printu::b#15 = main::a#33
  printu::res#15 = main::r#56
  call printu 
  to:main::@62
main::@62: scope:[main]  from main::@17
  main::i#55 = phi( main::@17/main::i#59 )
  main::b#17 = phi( main::@17/main::b#22 )
  main::a#62 = phi( main::@17/main::a#33 )
  print_line_cursor#32 = phi( main::@17/print_line_cursor#39 )
  print_char_cursor#77 = phi( main::@17/print_char_cursor#44 )
  print_char_cursor#30 = print_char_cursor#77
  call print_ln 
  to:main::@63
main::@63: scope:[main]  from main::@62
  main::i#51 = phi( main::@62/main::i#55 )
  main::b#8 = phi( main::@62/main::b#17 )
  main::a#34 = phi( main::@62/main::a#62 )
  print_char_cursor#78 = phi( main::@62/print_char_cursor#3 )
  print_line_cursor#22 = phi( main::@62/print_line_cursor#1 )
  print_line_cursor#8 = print_line_cursor#22
  print_char_cursor#31 = print_char_cursor#78
  main::r#32 = '-'
  main::$54 = main::a#34 == main::b#8
  main::$55 = ! main::$54
  if(main::$55) goto main::@18
  to:main::@38
main::@37: scope:[main]  from main::@61
  main::i#66 = phi( main::@61/main::i#67 )
  main::b#29 = phi( main::@61/main::b#30 )
  print_line_cursor#47 = phi( main::@61/print_line_cursor#48 )
  print_char_cursor#139 = phi( main::@61/print_char_cursor#29 )
  main::a#61 = phi( main::@61/main::a#32 )
  main::r#33 = '+'
  to:main::@17
main::@18: scope:[main]  from main::@38 main::@63
  print_line_cursor#85 = phi( main::@38/print_line_cursor#91, main::@63/print_line_cursor#8 )
  main::i#39 = phi( main::@38/main::i#50, main::@63/main::i#51 )
  print_char_cursor#116 = phi( main::@38/print_char_cursor#140, main::@63/print_char_cursor#31 )
  main::r#57 = phi( main::@38/main::r#35, main::@63/main::r#32 )
  main::b#9 = phi( main::@38/main::b#18, main::@63/main::b#8 )
  main::a#35 = phi( main::@38/main::a#63, main::@63/main::a#34 )
  printu::a#16 = main::a#35
  printu::op#16 = main::op16
  printu::b#16 = main::b#9
  printu::res#16 = main::r#57
  call printu 
  to:main::@64
main::@64: scope:[main]  from main::@18
  print_line_cursor#80 = phi( main::@18/print_line_cursor#85 )
  main::i#33 = phi( main::@18/main::i#39 )
  main::a#36 = phi( main::@18/main::a#35 )
  print_char_cursor#79 = phi( main::@18/print_char_cursor#44 )
  print_char_cursor#32 = print_char_cursor#79
  main::r#34 = '-'
  main::$57 = main::a#36 == $37
  main::$58 = ! main::$57
  if(main::$58) goto main::@19
  to:main::@39
main::@38: scope:[main]  from main::@63
  print_line_cursor#91 = phi( main::@63/print_line_cursor#8 )
  main::i#50 = phi( main::@63/main::i#51 )
  print_char_cursor#140 = phi( main::@63/print_char_cursor#31 )
  main::b#18 = phi( main::@63/main::b#8 )
  main::a#63 = phi( main::@63/main::a#34 )
  main::r#35 = '+'
  to:main::@18
main::@19: scope:[main]  from main::@39 main::@64
  print_line_cursor#70 = phi( main::@39/print_line_cursor#79, main::@64/print_line_cursor#80 )
  main::i#21 = phi( main::@39/main::i#32, main::@64/main::i#33 )
  print_char_cursor#117 = phi( main::@39/print_char_cursor#141, main::@64/print_char_cursor#32 )
  main::r#58 = phi( main::@39/main::r#37, main::@64/main::r#34 )
  main::a#37 = phi( main::@39/main::a#64, main::@64/main::a#36 )
  printu::a#17 = main::a#37
  printu::op#17 = main::op17
  printu::b#17 = $37
  printu::res#17 = main::r#58
  call printu 
  to:main::@65
main::@65: scope:[main]  from main::@19
  print_line_cursor#65 = phi( main::@19/print_line_cursor#70 )
  main::i#10 = phi( main::@19/main::i#21 )
  main::a#38 = phi( main::@19/main::a#37 )
  print_char_cursor#80 = phi( main::@19/print_char_cursor#44 )
  print_char_cursor#33 = print_char_cursor#80
  main::r#36 = '-'
  main::$60 = main::a#38 == main::cs[main::i#10]
  main::$61 = ! main::$60
  if(main::$61) goto main::@20
  to:main::@40
main::@39: scope:[main]  from main::@64
  print_line_cursor#79 = phi( main::@64/print_line_cursor#80 )
  main::i#32 = phi( main::@64/main::i#33 )
  print_char_cursor#141 = phi( main::@64/print_char_cursor#32 )
  main::a#64 = phi( main::@64/main::a#36 )
  main::r#37 = '+'
  to:main::@19
main::@20: scope:[main]  from main::@40 main::@65
  print_line_cursor#55 = phi( main::@40/print_line_cursor#64, main::@65/print_line_cursor#65 )
  print_char_cursor#118 = phi( main::@40/print_char_cursor#142, main::@65/print_char_cursor#33 )
  main::r#59 = phi( main::@40/main::r#39, main::@65/main::r#36 )
  main::i#11 = phi( main::@40/main::i#22, main::@65/main::i#10 )
  main::a#39 = phi( main::@40/main::a#65, main::@65/main::a#38 )
  printu::a#18 = main::a#39
  printu::op#18 = main::op18
  printu::b#18 = main::cs[main::i#11]
  printu::res#18 = main::r#59
  call printu 
  to:main::@66
main::@66: scope:[main]  from main::@20
  main::i#41 = phi( main::@20/main::i#11 )
  print_line_cursor#50 = phi( main::@20/print_line_cursor#55 )
  main::a#40 = phi( main::@20/main::a#39 )
  print_char_cursor#81 = phi( main::@20/print_char_cursor#44 )
  print_char_cursor#34 = print_char_cursor#81
  main::r#38 = '-'
  main::$63 = main::a#40 == main::a#40
  main::$64 = ! main::$63
  if(main::$64) goto main::@21
  to:main::@41
main::@40: scope:[main]  from main::@65
  print_line_cursor#64 = phi( main::@65/print_line_cursor#65 )
  print_char_cursor#142 = phi( main::@65/print_char_cursor#33 )
  main::i#22 = phi( main::@65/main::i#10 )
  main::a#65 = phi( main::@65/main::a#38 )
  main::r#39 = '+'
  to:main::@20
main::@21: scope:[main]  from main::@41 main::@66
  main::i#34 = phi( main::@41/main::i#40, main::@66/main::i#41 )
  print_line_cursor#40 = phi( main::@41/print_line_cursor#49, main::@66/print_line_cursor#50 )
  print_char_cursor#119 = phi( main::@41/print_char_cursor#143, main::@66/print_char_cursor#34 )
  main::r#60 = phi( main::@41/main::r#40, main::@66/main::r#38 )
  main::a#41 = phi( main::@41/main::a#66, main::@66/main::a#40 )
  printu::a#19 = main::a#41
  printu::op#19 = main::op19
  printu::b#19 = main::a#41
  printu::res#19 = main::r#60
  call printu 
  to:main::@67
main::@67: scope:[main]  from main::@21
  main::i#23 = phi( main::@21/main::i#34 )
  main::a#67 = phi( main::@21/main::a#41 )
  print_line_cursor#33 = phi( main::@21/print_line_cursor#40 )
  print_char_cursor#82 = phi( main::@21/print_char_cursor#44 )
  print_char_cursor#35 = print_char_cursor#82
  call print_ln 
  to:main::@68
main::@68: scope:[main]  from main::@67
  main::i#12 = phi( main::@67/main::i#23 )
  main::a#42 = phi( main::@67/main::a#67 )
  print_char_cursor#83 = phi( main::@67/print_char_cursor#3 )
  print_line_cursor#23 = phi( main::@67/print_line_cursor#1 )
  print_line_cursor#9 = print_line_cursor#23
  print_char_cursor#36 = print_char_cursor#83
  main::$67 = main::a#42 + $30
  main::a#1 = main::$67
  main::i#1 = main::i#12 + rangenext(0,4)
  main::$68 = main::i#1 != rangelast(0,4)
  if(main::$68) goto main::@1
  to:main::@42
main::@41: scope:[main]  from main::@66
  main::i#40 = phi( main::@66/main::i#41 )
  print_line_cursor#49 = phi( main::@66/print_line_cursor#50 )
  print_char_cursor#143 = phi( main::@66/print_char_cursor#34 )
  main::a#66 = phi( main::@66/main::a#40 )
  main::r#40 = '+'
  to:main::@21
main::@42: scope:[main]  from main::@42 main::@68
  print_char_cursor#120 = phi( main::@42/print_char_cursor#120, main::@68/print_char_cursor#36 )
  print_line_cursor#34 = phi( main::@42/print_line_cursor#34, main::@68/print_line_cursor#9 )
  if(true) goto main::@42
  to:main::@return
main::@return: scope:[main]  from main::@42
  print_char_cursor#84 = phi( main::@42/print_char_cursor#120 )
  print_line_cursor#24 = phi( main::@42/print_line_cursor#34 )
  print_line_cursor#10 = print_line_cursor#24
  print_char_cursor#37 = print_char_cursor#84
  return 
  to:@return

void printu(byte printu::a , byte* printu::op , byte printu::b , byte printu::res)
printu: scope:[printu]  from main::@10 main::@11 main::@12 main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@2 main::@20 main::@21 main::@3 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  printu::res#25 = phi( main::@10/printu::res#8, main::@11/printu::res#9, main::@12/printu::res#10, main::@13/printu::res#11, main::@14/printu::res#12, main::@15/printu::res#13, main::@16/printu::res#14, main::@17/printu::res#15, main::@18/printu::res#16, main::@19/printu::res#17, main::@2/printu::res#0, main::@20/printu::res#18, main::@21/printu::res#19, main::@3/printu::res#1, main::@4/printu::res#2, main::@5/printu::res#3, main::@6/printu::res#4, main::@7/printu::res#5, main::@8/printu::res#6, main::@9/printu::res#7 )
  printu::b#23 = phi( main::@10/printu::b#8, main::@11/printu::b#9, main::@12/printu::b#10, main::@13/printu::b#11, main::@14/printu::b#12, main::@15/printu::b#13, main::@16/printu::b#14, main::@17/printu::b#15, main::@18/printu::b#16, main::@19/printu::b#17, main::@2/printu::b#0, main::@20/printu::b#18, main::@21/printu::b#19, main::@3/printu::b#1, main::@4/printu::b#2, main::@5/printu::b#3, main::@6/printu::b#4, main::@7/printu::b#5, main::@8/printu::b#6, main::@9/printu::b#7 )
  printu::op#22 = phi( main::@10/printu::op#8, main::@11/printu::op#9, main::@12/printu::op#10, main::@13/printu::op#11, main::@14/printu::op#12, main::@15/printu::op#13, main::@16/printu::op#14, main::@17/printu::op#15, main::@18/printu::op#16, main::@19/printu::op#17, main::@2/printu::op#0, main::@20/printu::op#18, main::@21/printu::op#19, main::@3/printu::op#1, main::@4/printu::op#2, main::@5/printu::op#3, main::@6/printu::op#4, main::@7/printu::op#5, main::@8/printu::op#6, main::@9/printu::op#7 )
  printu::a#21 = phi( main::@10/printu::a#8, main::@11/printu::a#9, main::@12/printu::a#10, main::@13/printu::a#11, main::@14/printu::a#12, main::@15/printu::a#13, main::@16/printu::a#14, main::@17/printu::a#15, main::@18/printu::a#16, main::@19/printu::a#17, main::@2/printu::a#0, main::@20/printu::a#18, main::@21/printu::a#19, main::@3/printu::a#1, main::@4/printu::a#2, main::@5/printu::a#3, main::@6/printu::a#4, main::@7/printu::a#5, main::@8/printu::a#6, main::@9/printu::a#7 )
  print_char_cursor#98 = phi( main::@10/print_char_cursor#108, main::@11/print_char_cursor#109, main::@12/print_char_cursor#110, main::@13/print_char_cursor#111, main::@14/print_char_cursor#112, main::@15/print_char_cursor#113, main::@16/print_char_cursor#114, main::@17/print_char_cursor#115, main::@18/print_char_cursor#116, main::@19/print_char_cursor#117, main::@2/print_char_cursor#100, main::@20/print_char_cursor#118, main::@21/print_char_cursor#119, main::@3/print_char_cursor#101, main::@4/print_char_cursor#102, main::@5/print_char_cursor#103, main::@6/print_char_cursor#104, main::@7/print_char_cursor#105, main::@8/print_char_cursor#106, main::@9/print_char_cursor#107 )
  print_char::ch#3 = ' '
  call print_char 
  to:printu::@1
printu::@1: scope:[printu]  from printu
  printu::res#24 = phi( printu/printu::res#25 )
  printu::b#22 = phi( printu/printu::b#23 )
  printu::op#21 = phi( printu/printu::op#22 )
  printu::a#20 = phi( printu/printu::a#21 )
  print_char_cursor#85 = phi( printu/print_char_cursor#8 )
  print_char_cursor#38 = print_char_cursor#85
  print_uchar::b#0 = printu::a#20
  call print_uchar 
  to:printu::@2
printu::@2: scope:[printu]  from printu::@1
  printu::res#23 = phi( printu::@1/printu::res#24 )
  printu::b#21 = phi( printu::@1/printu::b#22 )
  printu::op#20 = phi( printu::@1/printu::op#21 )
  print_char_cursor#86 = phi( printu::@1/print_char_cursor#6 )
  print_char_cursor#39 = print_char_cursor#86
  print_str::str#1 = printu::op#20
  call print_str 
  to:printu::@3
printu::@3: scope:[printu]  from printu::@2
  printu::res#22 = phi( printu::@2/printu::res#23 )
  printu::b#20 = phi( printu::@2/printu::b#21 )
  print_char_cursor#87 = phi( printu::@2/print_char_cursor#1 )
  print_char_cursor#40 = print_char_cursor#87
  print_uchar::b#1 = printu::b#20
  call print_uchar 
  to:printu::@4
printu::@4: scope:[printu]  from printu::@3
  printu::res#21 = phi( printu::@3/printu::res#22 )
  print_char_cursor#88 = phi( printu::@3/print_char_cursor#6 )
  print_char_cursor#41 = print_char_cursor#88
  print_char::ch#4 = ' '
  call print_char 
  to:printu::@5
printu::@5: scope:[printu]  from printu::@4
  printu::res#20 = phi( printu::@4/printu::res#21 )
  print_char_cursor#89 = phi( printu::@4/print_char_cursor#8 )
  print_char_cursor#42 = print_char_cursor#89
  print_char::ch#5 = printu::res#20
  call print_char 
  to:printu::@6
printu::@6: scope:[printu]  from printu::@5
  print_char_cursor#90 = phi( printu::@5/print_char_cursor#8 )
  print_char_cursor#43 = print_char_cursor#90
  to:printu::@return
printu::@return: scope:[printu]  from printu::@6
  print_char_cursor#91 = phi( printu::@6/print_char_cursor#43 )
  print_char_cursor#44 = print_char_cursor#91
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  print_screen#0 = (byte*)$400
  print_line_cursor#11 = print_screen#0
  print_char_cursor#45 = print_line_cursor#11
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  print_screen#7 = phi( __start::__init1/print_screen#0 )
  print_char_cursor#121 = phi( __start::__init1/print_char_cursor#45 )
  print_line_cursor#35 = phi( __start::__init1/print_line_cursor#11 )
  call main 
  to:__start::@2
__start::@2: scope:[__start]  from __start::@1
  print_screen#6 = phi( __start::@1/print_screen#7 )
  print_char_cursor#92 = phi( __start::@1/print_char_cursor#37 )
  print_line_cursor#25 = phi( __start::@1/print_line_cursor#10 )
  print_line_cursor#12 = print_line_cursor#25
  print_char_cursor#46 = print_char_cursor#92
  to:__start::@return
__start::@return: scope:[__start]  from __start::@2
  print_char_cursor#93 = phi( __start::@2/print_char_cursor#46 )
  print_line_cursor#26 = phi( __start::@2/print_line_cursor#12 )
  print_screen#4 = phi( __start::@2/print_screen#6 )
  print_screen#1 = print_screen#4
  print_line_cursor#13 = print_line_cursor#26
  print_char_cursor#47 = print_char_cursor#93
  return 
  to:@return

SYMBOL TABLE SSA
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
void __start()
void main()
number~ main::$1
bool~ main::$11
bool~ main::$12
bool~ main::$15
bool~ main::$16
bool~ main::$18
bool~ main::$19
bool~ main::$2
bool~ main::$21
bool~ main::$22
bool~ main::$24
bool~ main::$25
bool~ main::$28
bool~ main::$29
bool~ main::$3
bool~ main::$31
bool~ main::$32
bool~ main::$34
bool~ main::$35
bool~ main::$37
bool~ main::$38
bool~ main::$41
bool~ main::$42
bool~ main::$44
bool~ main::$45
bool~ main::$47
bool~ main::$48
bool~ main::$5
bool~ main::$50
bool~ main::$51
bool~ main::$54
bool~ main::$55
bool~ main::$57
bool~ main::$58
bool~ main::$6
bool~ main::$60
bool~ main::$61
bool~ main::$63
bool~ main::$64
number~ main::$67
bool~ main::$68
bool~ main::$8
bool~ main::$9
byte main::a
byte main::a#0
byte main::a#1
byte main::a#10
byte main::a#11
byte main::a#12
byte main::a#13
byte main::a#14
byte main::a#15
byte main::a#16
byte main::a#17
byte main::a#18
byte main::a#19
byte main::a#2
byte main::a#20
byte main::a#21
byte main::a#22
byte main::a#23
byte main::a#24
byte main::a#25
byte main::a#26
byte main::a#27
byte main::a#28
byte main::a#29
byte main::a#3
byte main::a#30
byte main::a#31
byte main::a#32
byte main::a#33
byte main::a#34
byte main::a#35
byte main::a#36
byte main::a#37
byte main::a#38
byte main::a#39
byte main::a#4
byte main::a#40
byte main::a#41
byte main::a#42
byte main::a#43
byte main::a#44
byte main::a#45
byte main::a#46
byte main::a#47
byte main::a#48
byte main::a#49
byte main::a#5
byte main::a#50
byte main::a#51
byte main::a#52
byte main::a#53
byte main::a#54
byte main::a#55
byte main::a#56
byte main::a#57
byte main::a#58
byte main::a#59
byte main::a#6
byte main::a#60
byte main::a#61
byte main::a#62
byte main::a#63
byte main::a#64
byte main::a#65
byte main::a#66
byte main::a#67
byte main::a#7
byte main::a#8
byte main::a#9
byte main::b
byte main::b#0
byte main::b#1
byte main::b#10
byte main::b#11
byte main::b#12
byte main::b#13
byte main::b#14
byte main::b#15
byte main::b#16
byte main::b#17
byte main::b#18
byte main::b#19
byte main::b#2
byte main::b#20
byte main::b#21
byte main::b#22
byte main::b#23
byte main::b#24
byte main::b#25
byte main::b#26
byte main::b#27
byte main::b#28
byte main::b#29
byte main::b#3
byte main::b#30
byte main::b#31
byte main::b#32
byte main::b#33
byte main::b#34
byte main::b#35
byte main::b#36
byte main::b#37
byte main::b#38
byte main::b#39
byte main::b#4
byte main::b#40
byte main::b#41
byte main::b#42
byte main::b#43
byte main::b#44
byte main::b#45
byte main::b#46
byte main::b#47
byte main::b#48
byte main::b#49
byte main::b#5
byte main::b#50
byte main::b#51
byte main::b#52
byte main::b#53
byte main::b#54
byte main::b#6
byte main::b#7
byte main::b#8
byte main::b#9
constant byte* main::cs[5]  = { 7, $c7, $37, $97, $67 }
byte main::i
byte main::i#0
byte main::i#1
byte main::i#10
byte main::i#11
byte main::i#12
byte main::i#13
byte main::i#14
byte main::i#15
byte main::i#16
byte main::i#17
byte main::i#18
byte main::i#19
byte main::i#2
byte main::i#20
byte main::i#21
byte main::i#22
byte main::i#23
byte main::i#24
byte main::i#25
byte main::i#26
byte main::i#27
byte main::i#28
byte main::i#29
byte main::i#3
byte main::i#30
byte main::i#31
byte main::i#32
byte main::i#33
byte main::i#34
byte main::i#35
byte main::i#36
byte main::i#37
byte main::i#38
byte main::i#39
byte main::i#4
byte main::i#40
byte main::i#41
byte main::i#42
byte main::i#43
byte main::i#44
byte main::i#45
byte main::i#46
byte main::i#47
byte main::i#48
byte main::i#49
byte main::i#5
byte main::i#50
byte main::i#51
byte main::i#52
byte main::i#53
byte main::i#54
byte main::i#55
byte main::i#56
byte main::i#57
byte main::i#58
byte main::i#59
byte main::i#6
byte main::i#60
byte main::i#61
byte main::i#62
byte main::i#63
byte main::i#64
byte main::i#65
byte main::i#66
byte main::i#67
byte main::i#7
byte main::i#8
byte main::i#9
constant byte* main::op[3]  = "< "
constant byte* main::op1[3]  = "< "
constant byte* main::op10[3]  = "<="
constant byte* main::op11[3]  = "<="
constant byte* main::op12[3]  = ">="
constant byte* main::op13[3]  = ">="
constant byte* main::op14[3]  = ">="
constant byte* main::op15[3]  = ">="
constant byte* main::op16[3]  = "=="
constant byte* main::op17[3]  = "=="
constant byte* main::op18[3]  = "=="
constant byte* main::op19[3]  = "=="
constant byte* main::op2[3]  = "< "
constant byte* main::op3[3]  = "< "
constant byte* main::op4[3]  = "> "
constant byte* main::op5[3]  = "> "
constant byte* main::op6[3]  = "> "
constant byte* main::op7[3]  = "> "
constant byte* main::op8[3]  = "<="
constant byte* main::op9[3]  = "<="
byte main::r
byte main::r#0
byte main::r#1
byte main::r#10
byte main::r#11
byte main::r#12
byte main::r#13
byte main::r#14
byte main::r#15
byte main::r#16
byte main::r#17
byte main::r#18
byte main::r#19
byte main::r#2
byte main::r#20
byte main::r#21
byte main::r#22
byte main::r#23
byte main::r#24
byte main::r#25
byte main::r#26
byte main::r#27
byte main::r#28
byte main::r#29
byte main::r#3
byte main::r#30
byte main::r#31
byte main::r#32
byte main::r#33
byte main::r#34
byte main::r#35
byte main::r#36
byte main::r#37
byte main::r#38
byte main::r#39
byte main::r#4
byte main::r#40
byte main::r#41
byte main::r#42
byte main::r#43
byte main::r#44
byte main::r#45
byte main::r#46
byte main::r#47
byte main::r#48
byte main::r#49
byte main::r#5
byte main::r#50
byte main::r#51
byte main::r#52
byte main::r#53
byte main::r#54
byte main::r#55
byte main::r#56
byte main::r#57
byte main::r#58
byte main::r#59
byte main::r#6
byte main::r#60
byte main::r#7
byte main::r#8
byte main::r#9
void* memset(void* memset::str , byte memset::c , word memset::num)
bool~ memset::$0
bool~ memset::$1
byte*~ memset::$2
bool~ memset::$3
byte*~ memset::$4
byte memset::c
byte memset::c#0
byte memset::c#1
byte memset::c#2
byte memset::c#3
byte memset::c#4
byte* memset::dst
byte* memset::dst#0
byte* memset::dst#1
byte* memset::dst#2
byte* memset::dst#3
byte* memset::end
byte* memset::end#0
byte* memset::end#1
byte* memset::end#2
word memset::num
word memset::num#0
word memset::num#1
word memset::num#2
void* memset::return
void* memset::return#0
void* memset::return#1
void* memset::return#2
void* memset::return#3
void* memset::str
void* memset::str#0
void* memset::str#1
void* memset::str#2
void* memset::str#3
void* memset::str#4
void* memset::str#5
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0
byte print_char::ch#1
byte print_char::ch#2
byte print_char::ch#3
byte print_char::ch#4
byte print_char::ch#5
byte print_char::ch#6
byte* print_char_cursor
byte* print_char_cursor#0
byte* print_char_cursor#1
byte* print_char_cursor#10
byte* print_char_cursor#100
byte* print_char_cursor#101
byte* print_char_cursor#102
byte* print_char_cursor#103
byte* print_char_cursor#104
byte* print_char_cursor#105
byte* print_char_cursor#106
byte* print_char_cursor#107
byte* print_char_cursor#108
byte* print_char_cursor#109
byte* print_char_cursor#11
byte* print_char_cursor#110
byte* print_char_cursor#111
byte* print_char_cursor#112
byte* print_char_cursor#113
byte* print_char_cursor#114
byte* print_char_cursor#115
byte* print_char_cursor#116
byte* print_char_cursor#117
byte* print_char_cursor#118
byte* print_char_cursor#119
byte* print_char_cursor#12
byte* print_char_cursor#120
byte* print_char_cursor#121
byte* print_char_cursor#122
byte* print_char_cursor#123
byte* print_char_cursor#124
byte* print_char_cursor#125
byte* print_char_cursor#126
byte* print_char_cursor#127
byte* print_char_cursor#128
byte* print_char_cursor#129
byte* print_char_cursor#13
byte* print_char_cursor#130
byte* print_char_cursor#131
byte* print_char_cursor#132
byte* print_char_cursor#133
byte* print_char_cursor#134
byte* print_char_cursor#135
byte* print_char_cursor#136
byte* print_char_cursor#137
byte* print_char_cursor#138
byte* print_char_cursor#139
byte* print_char_cursor#14
byte* print_char_cursor#140
byte* print_char_cursor#141
byte* print_char_cursor#142
byte* print_char_cursor#143
byte* print_char_cursor#15
byte* print_char_cursor#16
byte* print_char_cursor#17
byte* print_char_cursor#18
byte* print_char_cursor#19
byte* print_char_cursor#2
byte* print_char_cursor#20
byte* print_char_cursor#21
byte* print_char_cursor#22
byte* print_char_cursor#23
byte* print_char_cursor#24
byte* print_char_cursor#25
byte* print_char_cursor#26
byte* print_char_cursor#27
byte* print_char_cursor#28
byte* print_char_cursor#29
byte* print_char_cursor#3
byte* print_char_cursor#30
byte* print_char_cursor#31
byte* print_char_cursor#32
byte* print_char_cursor#33
byte* print_char_cursor#34
byte* print_char_cursor#35
byte* print_char_cursor#36
byte* print_char_cursor#37
byte* print_char_cursor#38
byte* print_char_cursor#39
byte* print_char_cursor#4
byte* print_char_cursor#40
byte* print_char_cursor#41
byte* print_char_cursor#42
byte* print_char_cursor#43
byte* print_char_cursor#44
byte* print_char_cursor#45
byte* print_char_cursor#46
byte* print_char_cursor#47
byte* print_char_cursor#48
byte* print_char_cursor#49
byte* print_char_cursor#5
byte* print_char_cursor#50
byte* print_char_cursor#51
byte* print_char_cursor#52
byte* print_char_cursor#53
byte* print_char_cursor#54
byte* print_char_cursor#55
byte* print_char_cursor#56
byte* print_char_cursor#57
byte* print_char_cursor#58
byte* print_char_cursor#59
byte* print_char_cursor#6
byte* print_char_cursor#60
byte* print_char_cursor#61
byte* print_char_cursor#62
byte* print_char_cursor#63
byte* print_char_cursor#64
byte* print_char_cursor#65
byte* print_char_cursor#66
byte* print_char_cursor#67
byte* print_char_cursor#68
byte* print_char_cursor#69
byte* print_char_cursor#7
byte* print_char_cursor#70
byte* print_char_cursor#71
byte* print_char_cursor#72
byte* print_char_cursor#73
byte* print_char_cursor#74
byte* print_char_cursor#75
byte* print_char_cursor#76
byte* print_char_cursor#77
byte* print_char_cursor#78
byte* print_char_cursor#79
byte* print_char_cursor#8
byte* print_char_cursor#80
byte* print_char_cursor#81
byte* print_char_cursor#82
byte* print_char_cursor#83
byte* print_char_cursor#84
byte* print_char_cursor#85
byte* print_char_cursor#86
byte* print_char_cursor#87
byte* print_char_cursor#88
byte* print_char_cursor#89
byte* print_char_cursor#9
byte* print_char_cursor#90
byte* print_char_cursor#91
byte* print_char_cursor#92
byte* print_char_cursor#93
byte* print_char_cursor#94
byte* print_char_cursor#95
byte* print_char_cursor#96
byte* print_char_cursor#97
byte* print_char_cursor#98
byte* print_char_cursor#99
void print_cls()
constant const byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0
byte* print_line_cursor#1
byte* print_line_cursor#10
byte* print_line_cursor#11
byte* print_line_cursor#12
byte* print_line_cursor#13
byte* print_line_cursor#14
byte* print_line_cursor#15
byte* print_line_cursor#16
byte* print_line_cursor#17
byte* print_line_cursor#18
byte* print_line_cursor#19
byte* print_line_cursor#2
byte* print_line_cursor#20
byte* print_line_cursor#21
byte* print_line_cursor#22
byte* print_line_cursor#23
byte* print_line_cursor#24
byte* print_line_cursor#25
byte* print_line_cursor#26
byte* print_line_cursor#27
byte* print_line_cursor#28
byte* print_line_cursor#29
byte* print_line_cursor#3
byte* print_line_cursor#30
byte* print_line_cursor#31
byte* print_line_cursor#32
byte* print_line_cursor#33
byte* print_line_cursor#34
byte* print_line_cursor#35
byte* print_line_cursor#36
byte* print_line_cursor#37
byte* print_line_cursor#38
byte* print_line_cursor#39
byte* print_line_cursor#4
byte* print_line_cursor#40
byte* print_line_cursor#41
byte* print_line_cursor#42
byte* print_line_cursor#43
byte* print_line_cursor#44
byte* print_line_cursor#45
byte* print_line_cursor#46
byte* print_line_cursor#47
byte* print_line_cursor#48
byte* print_line_cursor#49
byte* print_line_cursor#5
byte* print_line_cursor#50
byte* print_line_cursor#51
byte* print_line_cursor#52
byte* print_line_cursor#53
byte* print_line_cursor#54
byte* print_line_cursor#55
byte* print_line_cursor#56
byte* print_line_cursor#57
byte* print_line_cursor#58
byte* print_line_cursor#59
byte* print_line_cursor#6
byte* print_line_cursor#60
byte* print_line_cursor#61
byte* print_line_cursor#62
byte* print_line_cursor#63
byte* print_line_cursor#64
byte* print_line_cursor#65
byte* print_line_cursor#66
byte* print_line_cursor#67
byte* print_line_cursor#68
byte* print_line_cursor#69
byte* print_line_cursor#7
byte* print_line_cursor#70
byte* print_line_cursor#71
byte* print_line_cursor#72
byte* print_line_cursor#73
byte* print_line_cursor#74
byte* print_line_cursor#75
byte* print_line_cursor#76
byte* print_line_cursor#77
byte* print_line_cursor#78
byte* print_line_cursor#79
byte* print_line_cursor#8
byte* print_line_cursor#80
byte* print_line_cursor#81
byte* print_line_cursor#82
byte* print_line_cursor#83
byte* print_line_cursor#84
byte* print_line_cursor#85
byte* print_line_cursor#86
byte* print_line_cursor#87
byte* print_line_cursor#88
byte* print_line_cursor#89
byte* print_line_cursor#9
byte* print_line_cursor#90
byte* print_line_cursor#91
void print_ln()
byte*~ print_ln::$0
bool~ print_ln::$1
byte* print_screen
byte* print_screen#0
byte* print_screen#1
byte* print_screen#2
byte* print_screen#3
byte* print_screen#4
byte* print_screen#5
byte* print_screen#6
byte* print_screen#7
void print_str(byte* print_str::str)
bool~ print_str::$1
byte* print_str::str
byte* print_str::str#0
byte* print_str::str#1
byte* print_str::str#2
byte* print_str::str#3
byte* print_str::str#4
byte* print_str::str#5
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0
number~ print_uchar::$2
byte print_uchar::b
byte print_uchar::b#0
byte print_uchar::b#1
byte print_uchar::b#2
byte print_uchar::b#3
void printu(byte printu::a , byte* printu::op , byte printu::b , byte printu::res)
byte printu::a
byte printu::a#0
byte printu::a#1
byte printu::a#10
byte printu::a#11
byte printu::a#12
byte printu::a#13
byte printu::a#14
byte printu::a#15
byte printu::a#16
byte printu::a#17
byte printu::a#18
byte printu::a#19
byte printu::a#2
byte printu::a#20
byte printu::a#21
byte printu::a#3
byte printu::a#4
byte printu::a#5
byte printu::a#6
byte printu::a#7
byte printu::a#8
byte printu::a#9
byte printu::b
byte printu::b#0
byte printu::b#1
byte printu::b#10
byte printu::b#11
byte printu::b#12
byte printu::b#13
byte printu::b#14
byte printu::b#15
byte printu::b#16
byte printu::b#17
byte printu::b#18
byte printu::b#19
byte printu::b#2
byte printu::b#20
byte printu::b#21
byte printu::b#22
byte printu::b#23
byte printu::b#3
byte printu::b#4
byte printu::b#5
byte printu::b#6
byte printu::b#7
byte printu::b#8
byte printu::b#9
byte* printu::op
byte* printu::op#0
byte* printu::op#1
byte* printu::op#10
byte* printu::op#11
byte* printu::op#12
byte* printu::op#13
byte* printu::op#14
byte* printu::op#15
byte* printu::op#16
byte* printu::op#17
byte* printu::op#18
byte* printu::op#19
byte* printu::op#2
byte* printu::op#20
byte* printu::op#21
byte* printu::op#22
byte* printu::op#3
byte* printu::op#4
byte* printu::op#5
byte* printu::op#6
byte* printu::op#7
byte* printu::op#8
byte* printu::op#9
byte printu::res
byte printu::res#0
byte printu::res#1
byte printu::res#10
byte printu::res#11
byte printu::res#12
byte printu::res#13
byte printu::res#14
byte printu::res#15
byte printu::res#16
byte printu::res#17
byte printu::res#18
byte printu::res#19
byte printu::res#2
byte printu::res#20
byte printu::res#21
byte printu::res#22
byte printu::res#23
byte printu::res#24
byte printu::res#25
byte printu::res#3
byte printu::res#4
byte printu::res#5
byte printu::res#6
byte printu::res#7
byte printu::res#8
byte printu::res#9

Adding number conversion cast (unumber) 0 in memset::$0 = memset::num#1 > 0
Adding number conversion cast (unumber) 0 in print_str::$1 = 0 != *print_str::str#2
Adding number conversion cast (unumber) $28 in print_ln::$0 = print_line_cursor#14 + $28
Adding number conversion cast (unumber) 4 in print_uchar::$0 = print_uchar::b#2 >> 4
Adding number conversion cast (unumber) $f in print_uchar::$2 = print_uchar::b#3 & $f
Adding number conversion cast (unumber) print_uchar::$2 in print_uchar::$2 = print_uchar::b#3 & (unumber)$f
Adding number conversion cast (unumber) $3e8 in memset::num#0 = $3e8
Adding number conversion cast (unumber) $ce in main::$1 = $ce - main::a#2
Adding number conversion cast (unumber) main::$1 in main::$1 = (unumber)$ce - main::a#2
Adding number conversion cast (unumber) $37 in main::$5 = main::a#4 < $37
Adding number conversion cast (unumber) $37 in printu::b#1 = $37
Adding number conversion cast (unumber) $37 in main::$18 = main::a#12 > $37
Adding number conversion cast (unumber) $37 in printu::b#5 = $37
Adding number conversion cast (unumber) $37 in main::$31 = main::a#20 <= $37
Adding number conversion cast (unumber) $37 in printu::b#9 = $37
Adding number conversion cast (unumber) $37 in main::$44 = main::a#28 >= $37
Adding number conversion cast (unumber) $37 in printu::b#13 = $37
Adding number conversion cast (unumber) $37 in main::$57 = main::a#36 == $37
Adding number conversion cast (unumber) $37 in printu::b#17 = $37
Adding number conversion cast (unumber) $30 in main::$67 = main::a#42 + $30
Adding number conversion cast (unumber) main::$67 in main::$67 = main::a#42 + (unumber)$30
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast memset::dst#0 = (byte*)memset::str#2
Inlining cast memset::num#0 = (unumber)$3e8
Inlining cast printu::b#1 = (unumber)$37
Inlining cast printu::b#5 = (unumber)$37
Inlining cast printu::b#9 = (unumber)$37
Inlining cast printu::b#13 = (unumber)$37
Inlining cast printu::b#17 = (unumber)$37
Successful SSA optimization Pass2InlineCast
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 4
Simplifying constant integer cast $f
Simplifying constant integer cast $3e8
Simplifying constant integer cast $ce
Simplifying constant integer cast $37
Simplifying constant integer cast $37
Simplifying constant integer cast $37
Simplifying constant integer cast $37
Simplifying constant integer cast $37
Simplifying constant integer cast $37
Simplifying constant integer cast $37
Simplifying constant integer cast $37
Simplifying constant integer cast $37
Simplifying constant integer cast $37
Simplifying constant integer cast $30
Simplifying constant pointer cast (byte*) 1024
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) $f
Finalized unsigned number type (word) $3e8
Finalized unsigned number type (byte) $ce
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $37
Finalized unsigned number type (byte) $30
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in print_uchar::$2 = print_uchar::b#3 & $f
Inferred type updated to byte in main::$1 = $ce - main::a#2
Inferred type updated to byte in main::$67 = main::a#42 + $30
Inversing boolean not [2] memset::$1 = memset::num#1 <= 0 from [1] memset::$0 = memset::num#1 > 0
Inversing boolean not [91] main::$3 = main::a#2 >= main::b#0 from [90] main::$2 = main::a#2 < main::b#0
Inversing boolean not [103] main::$6 = main::a#4 >= $37 from [102] main::$5 = main::a#4 < $37
Inversing boolean not [117] main::$9 = main::a#6 >= main::cs[main::i#2] from [116] main::$8 = main::a#6 < main::cs[main::i#2]
Inversing boolean not [131] main::$12 = main::a#8 >= main::a#8 from [130] main::$11 = main::a#8 < main::a#8
Inversing boolean not [149] main::$16 = main::a#10 <= main::b#2 from [148] main::$15 = main::a#10 > main::b#2
Inversing boolean not [163] main::$19 = main::a#12 <= $37 from [162] main::$18 = main::a#12 > $37
Inversing boolean not [177] main::$22 = main::a#14 <= main::cs[main::i#4] from [176] main::$21 = main::a#14 > main::cs[main::i#4]
Inversing boolean not [191] main::$25 = main::a#16 <= main::a#16 from [190] main::$24 = main::a#16 > main::a#16
Inversing boolean not [209] main::$29 = main::a#18 > main::b#4 from [208] main::$28 = main::a#18 <= main::b#4
Inversing boolean not [223] main::$32 = main::a#20 > $37 from [222] main::$31 = main::a#20 <= $37
Inversing boolean not [237] main::$35 = main::a#22 > main::cs[main::i#6] from [236] main::$34 = main::a#22 <= main::cs[main::i#6]
Inversing boolean not [251] main::$38 = main::a#24 > main::a#24 from [250] main::$37 = main::a#24 <= main::a#24
Inversing boolean not [269] main::$42 = main::a#26 < main::b#6 from [268] main::$41 = main::a#26 >= main::b#6
Inversing boolean not [283] main::$45 = main::a#28 < $37 from [282] main::$44 = main::a#28 >= $37
Inversing boolean not [297] main::$48 = main::a#30 < main::cs[main::i#8] from [296] main::$47 = main::a#30 >= main::cs[main::i#8]
Inversing boolean not [311] main::$51 = main::a#32 < main::a#32 from [310] main::$50 = main::a#32 >= main::a#32
Inversing boolean not [329] main::$55 = main::a#34 != main::b#8 from [328] main::$54 = main::a#34 == main::b#8
Inversing boolean not [343] main::$58 = main::a#36 != $37 from [342] main::$57 = main::a#36 == $37
Inversing boolean not [357] main::$61 = main::a#38 != main::cs[main::i#10] from [356] main::$60 = main::a#38 == main::cs[main::i#10]
Inversing boolean not [371] main::$64 = main::a#40 != main::a#40 from [370] main::$63 = main::a#40 == main::a#40
Successful SSA optimization Pass2UnaryNotSimplification
Alias memset::return#0 = memset::str#1 memset::return#3 memset::return#1 
Alias memset::str#2 = memset::str#3 
Alias memset::num#1 = memset::num#2 
Alias memset::c#3 = memset::c#4 
Alias memset::end#0 = memset::$2 
Alias memset::c#1 = memset::c#2 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#4 = memset::str#5 
Alias print_str::str#2 = print_str::str#3 print_str::str#4 
Alias print_char_cursor#1 = print_char_cursor#94 print_char_cursor#95 print_char_cursor#49 
Alias print_char_cursor#0 = print_char_cursor#48 
Alias print_line_cursor#0 = print_ln::$0 print_line_cursor#15 print_char_cursor#2 print_line_cursor#16 print_char_cursor#51 print_line_cursor#1 print_char_cursor#3 
Alias print_uchar::b#2 = print_uchar::b#3 
Alias print_char_cursor#4 = print_char_cursor#52 
Alias print_char_cursor#5 = print_char_cursor#53 print_char_cursor#54 print_char_cursor#6 
Alias print_char_cursor#56 = print_char_cursor#7 print_char_cursor#8 
Alias print_line_cursor#17 = print_screen#3 print_screen#2 print_line_cursor#2 print_char_cursor#9 print_char_cursor#57 print_line_cursor#3 print_char_cursor#10 
Alias print_line_cursor#18 = print_line_cursor#4 
Alias print_char_cursor#11 = print_char_cursor#58 
Alias main::b#0 = main::$1 main::b#10 
Alias main::a#3 = main::a#4 main::a#44 
Alias main::i#24 = main::i#25 main::i#35 
Alias print_line_cursor#71 = print_line_cursor#72 print_line_cursor#81 
Alias main::b#1 = main::b#48 main::b#47 
Alias print_char_cursor#12 = print_char_cursor#59 print_char_cursor#125 
Alias main::a#2 = main::a#43 
Alias print_char_cursor#123 = print_char_cursor#124 
Alias main::i#42 = main::i#43 
Alias print_line_cursor#86 = print_line_cursor#87 
Alias main::a#45 = main::a#6 main::a#5 
Alias main::i#13 = main::i#2 main::i#14 
Alias print_line_cursor#56 = print_line_cursor#57 print_line_cursor#66 
Alias main::b#35 = main::b#36 main::b#43 
Alias print_char_cursor#126 = print_char_cursor#13 print_char_cursor#60 
Alias main::a#46 = main::a#8 main::a#7 
Alias print_line_cursor#41 = print_line_cursor#42 print_line_cursor#51 
Alias main::b#23 = main::b#24 main::b#31 
Alias main::i#3 = main::i#61 main::i#60 
Alias print_char_cursor#127 = print_char_cursor#14 print_char_cursor#61 
Alias print_line_cursor#29 = print_line_cursor#36 
Alias main::a#10 = main::a#47 main::a#9 main::a#48 
Alias main::b#11 = main::b#19 main::b#2 main::b#12 
Alias main::i#44 = main::i#52 main::i#56 main::i#45 
Alias print_char_cursor#15 = print_char_cursor#62 
Alias print_line_cursor#19 = print_line_cursor#5 print_line_cursor#88 
Alias print_char_cursor#128 = print_char_cursor#16 print_char_cursor#63 
Alias main::a#11 = main::a#12 main::a#49 
Alias main::i#26 = main::i#27 main::i#36 
Alias print_line_cursor#73 = print_line_cursor#74 print_line_cursor#82 
Alias main::b#3 = main::b#50 main::b#49 
Alias print_char_cursor#129 = print_char_cursor#17 print_char_cursor#64 
Alias main::a#13 = main::a#14 main::a#50 
Alias main::i#15 = main::i#4 main::i#16 
Alias print_line_cursor#58 = print_line_cursor#59 print_line_cursor#67 
Alias main::b#37 = main::b#38 main::b#44 
Alias print_char_cursor#130 = print_char_cursor#18 print_char_cursor#65 
Alias main::a#15 = main::a#16 main::a#51 
Alias print_line_cursor#43 = print_line_cursor#44 print_line_cursor#52 
Alias main::b#25 = main::b#26 main::b#32 
Alias main::i#5 = main::i#63 main::i#62 
Alias print_char_cursor#131 = print_char_cursor#19 print_char_cursor#66 
Alias print_line_cursor#30 = print_line_cursor#37 
Alias main::a#17 = main::a#52 main::a#18 main::a#53 
Alias main::b#13 = main::b#20 main::b#4 main::b#14 
Alias main::i#46 = main::i#53 main::i#57 main::i#47 
Alias print_char_cursor#20 = print_char_cursor#67 
Alias print_line_cursor#20 = print_line_cursor#6 print_line_cursor#89 
Alias print_char_cursor#132 = print_char_cursor#21 print_char_cursor#68 
Alias main::a#19 = main::a#20 main::a#54 
Alias main::i#28 = main::i#29 main::i#37 
Alias print_line_cursor#75 = print_line_cursor#76 print_line_cursor#83 
Alias main::b#5 = main::b#52 main::b#51 
Alias print_char_cursor#133 = print_char_cursor#22 print_char_cursor#69 
Alias main::a#21 = main::a#22 main::a#55 
Alias main::i#17 = main::i#6 main::i#18 
Alias print_line_cursor#60 = print_line_cursor#61 print_line_cursor#68 
Alias main::b#39 = main::b#40 main::b#45 
Alias print_char_cursor#134 = print_char_cursor#23 print_char_cursor#70 
Alias main::a#23 = main::a#24 main::a#56 
Alias print_line_cursor#45 = print_line_cursor#46 print_line_cursor#53 
Alias main::b#27 = main::b#28 main::b#33 
Alias main::i#64 = main::i#65 main::i#7 
Alias print_char_cursor#135 = print_char_cursor#24 print_char_cursor#71 
Alias print_line_cursor#31 = print_line_cursor#38 
Alias main::a#25 = main::a#57 main::a#26 main::a#58 
Alias main::b#15 = main::b#21 main::b#6 main::b#16 
Alias main::i#48 = main::i#54 main::i#58 main::i#49 
Alias print_char_cursor#25 = print_char_cursor#72 
Alias print_line_cursor#21 = print_line_cursor#7 print_line_cursor#90 
Alias print_char_cursor#136 = print_char_cursor#26 print_char_cursor#73 
Alias main::a#27 = main::a#28 main::a#59 
Alias main::i#30 = main::i#31 main::i#38 
Alias print_line_cursor#77 = print_line_cursor#78 print_line_cursor#84 
Alias main::b#53 = main::b#54 main::b#7 
Alias print_char_cursor#137 = print_char_cursor#27 print_char_cursor#74 
Alias main::a#29 = main::a#30 main::a#60 
Alias main::i#19 = main::i#8 main::i#20 
Alias print_line_cursor#62 = print_line_cursor#63 print_line_cursor#69 
Alias main::b#41 = main::b#42 main::b#46 
Alias print_char_cursor#138 = print_char_cursor#28 print_char_cursor#75 
Alias main::a#31 = main::a#32 main::a#61 
Alias print_line_cursor#47 = print_line_cursor#48 print_line_cursor#54 
Alias main::b#29 = main::b#30 main::b#34 
Alias main::i#66 = main::i#67 main::i#9 
Alias print_char_cursor#139 = print_char_cursor#29 print_char_cursor#76 
Alias print_line_cursor#32 = print_line_cursor#39 
Alias main::a#33 = main::a#62 main::a#34 main::a#63 
Alias main::b#17 = main::b#22 main::b#8 main::b#18 
Alias main::i#50 = main::i#55 main::i#59 main::i#51 
Alias print_char_cursor#30 = print_char_cursor#77 
Alias print_line_cursor#22 = print_line_cursor#8 print_line_cursor#91 
Alias print_char_cursor#140 = print_char_cursor#31 print_char_cursor#78 
Alias main::a#35 = main::a#36 main::a#64 
Alias main::i#32 = main::i#33 main::i#39 
Alias print_line_cursor#79 = print_line_cursor#80 print_line_cursor#85 
Alias print_char_cursor#141 = print_char_cursor#32 print_char_cursor#79 
Alias main::a#37 = main::a#38 main::a#65 
Alias main::i#10 = main::i#21 main::i#22 
Alias print_line_cursor#64 = print_line_cursor#65 print_line_cursor#70 
Alias print_char_cursor#142 = print_char_cursor#33 print_char_cursor#80 
Alias main::a#39 = main::a#40 main::a#66 
Alias print_line_cursor#49 = print_line_cursor#50 print_line_cursor#55 
Alias main::i#11 = main::i#41 main::i#40 
Alias print_char_cursor#143 = print_char_cursor#34 print_char_cursor#81 
Alias print_line_cursor#33 = print_line_cursor#40 
Alias main::a#41 = main::a#67 main::a#42 
Alias main::i#12 = main::i#23 main::i#34 
Alias print_char_cursor#35 = print_char_cursor#82 
Alias print_line_cursor#23 = print_line_cursor#9 
Alias print_char_cursor#36 = print_char_cursor#83 
Alias main::a#1 = main::$67 
Alias print_line_cursor#10 = print_line_cursor#24 print_line_cursor#34 
Alias print_char_cursor#120 = print_char_cursor#84 print_char_cursor#37 
Alias printu::a#20 = printu::a#21 
Alias printu::op#20 = printu::op#21 printu::op#22 
Alias printu::b#20 = printu::b#22 printu::b#23 printu::b#21 
Alias printu::res#20 = printu::res#24 printu::res#25 printu::res#23 printu::res#22 printu::res#21 
Alias print_char_cursor#38 = print_char_cursor#85 
Alias print_char_cursor#39 = print_char_cursor#86 
Alias print_char_cursor#40 = print_char_cursor#87 
Alias print_char_cursor#41 = print_char_cursor#88 
Alias print_char_cursor#42 = print_char_cursor#89 
Alias print_char_cursor#43 = print_char_cursor#90 print_char_cursor#91 print_char_cursor#44 
Alias print_screen#0 = print_line_cursor#11 print_char_cursor#45 print_line_cursor#35 print_char_cursor#121 print_screen#7 print_screen#6 print_screen#4 print_screen#1 
Alias print_line_cursor#12 = print_line_cursor#25 print_line_cursor#26 print_line_cursor#13 
Alias print_char_cursor#46 = print_char_cursor#92 print_char_cursor#93 print_char_cursor#47 
Successful SSA optimization Pass2AliasElimination
Alias main::a#10 = main::a#3 main::a#2 main::a#45 main::a#46 main::a#11 main::a#13 main::a#15 main::a#17 main::a#19 main::a#21 main::a#23 main::a#25 main::a#27 main::a#29 main::a#31 main::a#33 main::a#35 main::a#37 main::a#39 main::a#41 
Alias main::b#0 = main::b#1 main::b#35 main::b#23 main::b#11 main::b#3 main::b#37 main::b#25 main::b#13 main::b#5 main::b#39 main::b#27 main::b#15 main::b#53 main::b#41 main::b#29 main::b#17 main::b#9 
Alias print_char_cursor#100 = print_char_cursor#123 
Alias main::i#10 = main::i#24 main::i#42 main::i#13 main::i#3 main::i#44 main::i#26 main::i#15 main::i#5 main::i#46 main::i#28 main::i#17 main::i#64 main::i#48 main::i#30 main::i#19 main::i#66 main::i#50 main::i#32 main::i#11 main::i#12 
Alias print_line_cursor#29 = print_line_cursor#71 print_line_cursor#86 print_line_cursor#56 print_line_cursor#41 
Alias print_char_cursor#101 = print_char_cursor#12 
Alias print_char_cursor#102 = print_char_cursor#126 
Alias print_char_cursor#103 = print_char_cursor#127 
Alias print_char_cursor#104 = print_char_cursor#128 
Alias print_line_cursor#19 = print_line_cursor#73 print_line_cursor#58 print_line_cursor#43 print_line_cursor#30 
Alias print_char_cursor#105 = print_char_cursor#129 
Alias print_char_cursor#106 = print_char_cursor#130 
Alias print_char_cursor#107 = print_char_cursor#131 
Alias print_char_cursor#108 = print_char_cursor#132 
Alias print_line_cursor#20 = print_line_cursor#75 print_line_cursor#60 print_line_cursor#45 print_line_cursor#31 
Alias print_char_cursor#109 = print_char_cursor#133 
Alias print_char_cursor#110 = print_char_cursor#134 
Alias print_char_cursor#111 = print_char_cursor#135 
Alias print_char_cursor#112 = print_char_cursor#136 
Alias print_line_cursor#21 = print_line_cursor#77 print_line_cursor#62 print_line_cursor#47 print_line_cursor#32 
Alias print_char_cursor#113 = print_char_cursor#137 
Alias print_char_cursor#114 = print_char_cursor#138 
Alias print_char_cursor#115 = print_char_cursor#139 
Alias print_char_cursor#116 = print_char_cursor#140 
Alias print_line_cursor#22 = print_line_cursor#79 print_line_cursor#64 print_line_cursor#49 print_line_cursor#33 
Alias print_char_cursor#117 = print_char_cursor#141 
Alias print_char_cursor#118 = print_char_cursor#142 
Alias print_char_cursor#119 = print_char_cursor#143 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values memset::num#1 memset::num#0
Identical Phi Values memset::str#2 memset::str#0
Identical Phi Values memset::c#3 memset::c#0
Identical Phi Values memset::end#1 memset::end#0
Identical Phi Values memset::str#4 memset::str#2
Identical Phi Values memset::c#1 memset::c#3
Identical Phi Values print_str::str#5 print_str::str#1
Identical Phi Values print_char_cursor#122 print_char_cursor#39
Identical Phi Values print_char_cursor#0 print_char_cursor#56
Identical Phi Values print_char_cursor#50 print_char_cursor#96
Identical Phi Values print_char_cursor#4 print_char_cursor#56
Identical Phi Values print_char_cursor#5 print_char_cursor#56
Identical Phi Values print_line_cursor#17 print_screen#5
Identical Phi Values print_screen#5 print_screen#0
Identical Phi Values print_line_cursor#28 print_screen#0
Identical Phi Values print_char_cursor#99 print_screen#0
Identical Phi Values print_line_cursor#18 print_line_cursor#17
Identical Phi Values print_char_cursor#11 print_line_cursor#17
Identical Phi Values print_char_cursor#101 print_char_cursor#43
Identical Phi Values print_char_cursor#102 print_char_cursor#43
Identical Phi Values print_char_cursor#103 print_char_cursor#43
Identical Phi Values print_char_cursor#15 print_char_cursor#43
Identical Phi Values print_line_cursor#19 print_line_cursor#0
Identical Phi Values print_char_cursor#104 print_line_cursor#0
Identical Phi Values print_char_cursor#105 print_char_cursor#43
Identical Phi Values print_char_cursor#106 print_char_cursor#43
Identical Phi Values print_char_cursor#107 print_char_cursor#43
Identical Phi Values print_char_cursor#20 print_char_cursor#43
Identical Phi Values print_line_cursor#20 print_line_cursor#0
Identical Phi Values print_char_cursor#108 print_line_cursor#0
Identical Phi Values print_char_cursor#109 print_char_cursor#43
Identical Phi Values print_char_cursor#110 print_char_cursor#43
Identical Phi Values print_char_cursor#111 print_char_cursor#43
Identical Phi Values print_char_cursor#25 print_char_cursor#43
Identical Phi Values print_line_cursor#21 print_line_cursor#0
Identical Phi Values print_char_cursor#112 print_line_cursor#0
Identical Phi Values print_char_cursor#113 print_char_cursor#43
Identical Phi Values print_char_cursor#114 print_char_cursor#43
Identical Phi Values print_char_cursor#115 print_char_cursor#43
Identical Phi Values print_char_cursor#30 print_char_cursor#43
Identical Phi Values print_line_cursor#22 print_line_cursor#0
Identical Phi Values print_char_cursor#116 print_line_cursor#0
Identical Phi Values print_char_cursor#117 print_char_cursor#43
Identical Phi Values print_char_cursor#118 print_char_cursor#43
Identical Phi Values print_char_cursor#119 print_char_cursor#43
Identical Phi Values print_char_cursor#35 print_char_cursor#43
Identical Phi Values print_line_cursor#23 print_line_cursor#0
Identical Phi Values print_char_cursor#36 print_line_cursor#0
Identical Phi Values print_line_cursor#10 print_line_cursor#23
Identical Phi Values print_char_cursor#120 print_char_cursor#36
Identical Phi Values print_char_cursor#38 print_char_cursor#56
Identical Phi Values print_char_cursor#39 print_char_cursor#5
Identical Phi Values print_char_cursor#40 print_char_cursor#1
Identical Phi Values print_char_cursor#41 print_char_cursor#5
Identical Phi Values print_char_cursor#42 print_char_cursor#56
Identical Phi Values print_char_cursor#43 print_char_cursor#56
Identical Phi Values print_line_cursor#12 print_line_cursor#10
Identical Phi Values print_char_cursor#46 print_char_cursor#120
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values memset::return#0 memset::str#0
Identical Phi Values print_char_cursor#1 print_char_cursor#56
Identical Phi Values print_char_cursor#96 print_char_cursor#56
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values print_char_cursor#97 print_char_cursor#56
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition memset::$1 [2] if(memset::num#0<=0) goto memset::@1
Simple Condition memset::$3 [9] if(memset::dst#2!=memset::end#0) goto memset::@4
Simple Condition print_str::$1 [16] if(0!=*print_str::str#2) goto print_str::@2
Simple Condition print_ln::$1 [26] if(print_line_cursor#0<print_char_cursor#56) goto print_ln::@1
Simple Condition main::$3 [59] if(main::a#10>=main::b#0) goto main::@2
Simple Condition main::$6 [69] if(main::a#10>=$37) goto main::@3
Simple Condition main::$9 [80] if(main::a#10>=main::cs[main::i#10]) goto main::@4
Simple Condition main::$12 [91] if(main::a#10>=main::a#10) goto main::@5
Simple Condition main::$16 [104] if(main::a#10<=main::b#0) goto main::@6
Simple Condition main::$19 [115] if(main::a#10<=$37) goto main::@7
Simple Condition main::$22 [126] if(main::a#10<=main::cs[main::i#10]) goto main::@8
Simple Condition main::$25 [137] if(main::a#10<=main::a#10) goto main::@9
Simple Condition main::$29 [150] if(main::a#10>main::b#0) goto main::@10
Simple Condition main::$32 [161] if(main::a#10>$37) goto main::@11
Simple Condition main::$35 [172] if(main::a#10>main::cs[main::i#10]) goto main::@12
Simple Condition main::$38 [183] if(main::a#10>main::a#10) goto main::@13
Simple Condition main::$42 [196] if(main::a#10<main::b#0) goto main::@14
Simple Condition main::$45 [207] if(main::a#10<$37) goto main::@15
Simple Condition main::$48 [218] if(main::a#10<main::cs[main::i#10]) goto main::@16
Simple Condition main::$51 [229] if(main::a#10<main::a#10) goto main::@17
Simple Condition main::$55 [242] if(main::a#10!=main::b#0) goto main::@18
Simple Condition main::$58 [253] if(main::a#10!=$37) goto main::@19
Simple Condition main::$61 [264] if(main::a#10!=main::cs[main::i#10]) goto main::@20
Simple Condition main::$64 [275] if(main::a#10!=main::a#10) goto main::@21
Simple Condition main::$68 [289] if(main::i#1!=rangelast(0,4)) goto main::@1
Successful SSA optimization Pass2ConditionalJumpSimplification
Constant memset::c#0 = ' '
Constant memset::num#0 = $3e8
Constant main::a#0 = 7
Constant main::i#0 = 0
Constant main::r#0 = 0
Constant main::r#1 = '-'
Constant printu::op#0 = main::op
Constant main::r#2 = '-'
Constant main::r#3 = '+'
Constant printu::op#1 = main::op1
Constant printu::b#1 = $37
Constant main::r#4 = '-'
Constant main::r#5 = '+'
Constant printu::op#2 = main::op2
Constant main::r#6 = '-'
Constant main::r#7 = '+'
Constant printu::op#3 = main::op3
Constant main::r#8 = '-'
Constant main::r#9 = '+'
Constant printu::op#4 = main::op4
Constant main::r#10 = '-'
Constant main::r#11 = '+'
Constant printu::op#5 = main::op5
Constant printu::b#5 = $37
Constant main::r#12 = '-'
Constant main::r#13 = '+'
Constant printu::op#6 = main::op6
Constant main::r#14 = '-'
Constant main::r#15 = '+'
Constant printu::op#7 = main::op7
Constant main::r#16 = '-'
Constant main::r#17 = '+'
Constant printu::op#8 = main::op8
Constant main::r#18 = '-'
Constant main::r#19 = '+'
Constant printu::op#9 = main::op9
Constant printu::b#9 = $37
Constant main::r#20 = '-'
Constant main::r#21 = '+'
Constant printu::op#10 = main::op10
Constant main::r#22 = '-'
Constant main::r#23 = '+'
Constant printu::op#11 = main::op11
Constant main::r#24 = '-'
Constant main::r#25 = '+'
Constant printu::op#12 = main::op12
Constant main::r#26 = '-'
Constant main::r#27 = '+'
Constant printu::op#13 = main::op13
Constant printu::b#13 = $37
Constant main::r#28 = '-'
Constant main::r#29 = '+'
Constant printu::op#14 = main::op14
Constant main::r#30 = '-'
Constant main::r#31 = '+'
Constant printu::op#15 = main::op15
Constant main::r#32 = '-'
Constant main::r#33 = '+'
Constant printu::op#16 = main::op16
Constant main::r#34 = '-'
Constant main::r#35 = '+'
Constant printu::op#17 = main::op17
Constant printu::b#17 = $37
Constant main::r#36 = '-'
Constant main::r#37 = '+'
Constant printu::op#18 = main::op18
Constant main::r#38 = '-'
Constant main::r#39 = '+'
Constant printu::op#19 = main::op19
Constant main::r#40 = '+'
Constant print_char::ch#3 = ' '
Constant print_char::ch#4 = ' '
Constant print_screen#0 = (byte*) 1024
Successful SSA optimization Pass2ConstantIdentification
Constant memset::str#0 = (void*)print_screen#0
Successful SSA optimization Pass2ConstantIdentification
Constant memset::$4 = (byte*)memset::str#0
Constant memset::dst#0 = (byte*)memset::str#0
Constant memset::return#2 = memset::str#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [2] if(memset::num#0<=0) goto memset::@1
if() condition always true - replacing block destination [292] if(true) goto main::@42
Successful SSA optimization Pass2ConstantIfs
Consolidated constant strings into main::op
Consolidated constant strings into main::op4
Consolidated constant strings into main::op8
Consolidated constant strings into main::op12
Consolidated constant strings into main::op16
Successful SSA optimization Pass2ConstantStringConsolidation
Resolved ranged next value [287] main::i#1 = ++ main::i#10 to ++
Resolved ranged comparison value [289] if(main::i#1!=rangelast(0,4)) goto main::@1 to 5
Rewriting conditional comparison [115] if(main::a#10<=$37) goto main::@7
Rewriting conditional comparison [161] if(main::a#10>$37) goto main::@11
Removing unused block main::@return
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused constant memset::return#2
Eliminating unused constant main::r#0
Successful SSA optimization PassNEliminateUnusedVars
Removing unused procedure __start
Removing unused procedure block __start
Removing unused procedure block __start::__init1
Removing unused procedure block __start::@1
Removing unused procedure block __start::@2
Removing unused procedure block __start::@return
Successful SSA optimization PassNEliminateEmptyStart
Adding number conversion cast (unumber) $37+1 in [64] if(main::a#10<$37+1) goto main::@7
Adding number conversion cast (unumber) 1 in [64] if(main::a#10<(unumber)$37+1) goto main::@7
Adding number conversion cast (unumber) $37+1 in [88] if(main::a#10>=$37+1) goto main::@11
Adding number conversion cast (unumber) 1 in [88] if(main::a#10>=(unumber)$37+1) goto main::@11
Adding number conversion cast (unumber) 5 in [156] if(main::i#1!=5) goto main::@1
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast $37+(unumber)1
Simplifying constant integer cast 1
Simplifying constant integer cast $37+(unumber)1
Simplifying constant integer cast 1
Simplifying constant integer cast 5
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 5
Successful SSA optimization PassNFinalizeNumberTypeConversions
Constant right-side identified [0] memset::end#0 = memset::$4 + memset::num#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant memset::end#0 = memset::$4+memset::num#0
Successful SSA optimization Pass2ConstantIdentification
Inlining constant with var siblings memset::dst#0
Inlining constant with var siblings print_char::ch#3
Inlining constant with var siblings print_char::ch#4
Inlining constant with var siblings main::a#0
Inlining constant with var siblings main::i#0
Inlining constant with var siblings main::r#1
Inlining constant with var siblings main::r#2
Inlining constant with var siblings main::r#3
Inlining constant with var siblings main::r#4
Inlining constant with var siblings main::r#5
Inlining constant with var siblings main::r#6
Inlining constant with var siblings main::r#7
Inlining constant with var siblings main::r#8
Inlining constant with var siblings main::r#9
Inlining constant with var siblings main::r#10
Inlining constant with var siblings main::r#11
Inlining constant with var siblings main::r#12
Inlining constant with var siblings main::r#13
Inlining constant with var siblings main::r#14
Inlining constant with var siblings main::r#15
Inlining constant with var siblings main::r#16
Inlining constant with var siblings main::r#17
Inlining constant with var siblings main::r#18
Inlining constant with var siblings main::r#19
Inlining constant with var siblings main::r#20
Inlining constant with var siblings main::r#21
Inlining constant with var siblings main::r#22
Inlining constant with var siblings main::r#23
Inlining constant with var siblings main::r#24
Inlining constant with var siblings main::r#25
Inlining constant with var siblings main::r#26
Inlining constant with var siblings main::r#27
Inlining constant with var siblings main::r#28
Inlining constant with var siblings main::r#29
Inlining constant with var siblings main::r#30
Inlining constant with var siblings main::r#31
Inlining constant with var siblings main::r#32
Inlining constant with var siblings main::r#33
Inlining constant with var siblings main::r#34
Inlining constant with var siblings main::r#35
Inlining constant with var siblings main::r#36
Inlining constant with var siblings main::r#37
Inlining constant with var siblings main::r#38
Inlining constant with var siblings main::r#39
Inlining constant with var siblings main::r#40
Inlining constant with var siblings printu::op#0
Inlining constant with var siblings printu::op#1
Inlining constant with var siblings printu::b#1
Inlining constant with var siblings printu::op#2
Inlining constant with var siblings printu::op#3
Inlining constant with var siblings printu::op#4
Inlining constant with var siblings printu::op#5
Inlining constant with var siblings printu::b#5
Inlining constant with var siblings printu::op#6
Inlining constant with var siblings printu::op#7
Inlining constant with var siblings printu::op#8
Inlining constant with var siblings printu::op#9
Inlining constant with var siblings printu::b#9
Inlining constant with var siblings printu::op#10
Inlining constant with var siblings printu::op#11
Inlining constant with var siblings printu::op#12
Inlining constant with var siblings printu::op#13
Inlining constant with var siblings printu::b#13
Inlining constant with var siblings printu::op#14
Inlining constant with var siblings printu::op#15
Inlining constant with var siblings printu::op#16
Inlining constant with var siblings printu::op#17
Inlining constant with var siblings printu::b#17
Inlining constant with var siblings printu::op#18
Inlining constant with var siblings printu::op#19
Constant inlined printu::op#0 = main::op
Constant inlined printu::op#1 = main::op
Constant inlined printu::op#8 = main::op8
Constant inlined printu::op#9 = main::op8
Constant inlined printu::op#6 = main::op4
Constant inlined main::r#39 = '+'
Constant inlined printu::op#7 = main::op4
Constant inlined printu::op#4 = main::op4
Constant inlined printu::op#5 = main::op4
Constant inlined printu::op#2 = main::op
Constant inlined printu::op#3 = main::op
Constant inlined main::r#33 = '+'
Constant inlined main::r#34 = '-'
Constant inlined main::r#31 = '+'
Constant inlined main::r#32 = '-'
Constant inlined main::r#37 = '+'
Constant inlined main::r#38 = '-'
Constant inlined main::r#35 = '+'
Constant inlined main::r#36 = '-'
Constant inlined main::r#30 = '-'
Constant inlined main::op11 = main::op8
Constant inlined printu::b#17 = $37
Constant inlined main::op10 = main::op8
Constant inlined main::op15 = main::op12
Constant inlined printu::b#13 = $37
Constant inlined main::op13 = main::op12
Constant inlined main::op14 = main::op12
Constant inlined memset::dst#0 = (byte*)memset::str#0
Constant inlined main::r#40 = '+'
Constant inlined printu::op#17 = main::op16
Constant inlined main::r#19 = '+'
Constant inlined printu::op#18 = main::op16
Constant inlined printu::op#19 = main::op16
Constant inlined main::r#17 = '+'
Constant inlined main::r#18 = '-'
Constant inlined main::a#0 = 7
Constant inlined main::r#11 = '+'
Constant inlined main::r#12 = '-'
Constant inlined main::r#10 = '-'
Constant inlined memset::$4 = (byte*)memset::str#0
Constant inlined main::r#15 = '+'
Constant inlined main::r#16 = '-'
Constant inlined main::r#13 = '+'
Constant inlined main::r#14 = '-'
Constant inlined main::op19 = main::op16
Constant inlined main::i#0 = 0
Constant inlined main::op17 = main::op16
Constant inlined main::op18 = main::op16
Constant inlined main::r#1 = '-'
Constant inlined main::r#8 = '-'
Constant inlined main::r#9 = '+'
Constant inlined main::r#6 = '-'
Constant inlined main::r#28 = '-'
Constant inlined main::r#7 = '+'
Constant inlined main::r#29 = '+'
Constant inlined main::r#4 = '-'
Constant inlined printu::b#9 = $37
Constant inlined main::r#5 = '+'
Constant inlined main::r#2 = '-'
Constant inlined main::r#3 = '+'
Constant inlined print_char::ch#3 = ' '
Constant inlined main::r#22 = '-'
Constant inlined printu::b#5 = $37
Constant inlined main::op1 = main::op
Constant inlined printu::op#10 = main::op8
Constant inlined main::r#23 = '+'
Constant inlined printu::op#11 = main::op8
Constant inlined main::r#20 = '-'
Constant inlined printu::op#12 = main::op12
Constant inlined print_char::ch#4 = ' '
Constant inlined main::r#21 = '+'
Constant inlined printu::op#13 = main::op12
Constant inlined main::r#26 = '-'
Constant inlined printu::b#1 = $37
Constant inlined printu::op#14 = main::op12
Constant inlined main::r#27 = '+'
Constant inlined printu::op#15 = main::op12
Constant inlined main::r#24 = '-'
Constant inlined printu::op#16 = main::op16
Constant inlined main::r#25 = '+'
Constant inlined main::op9 = main::op8
Constant inlined main::op6 = main::op4
Constant inlined main::op7 = main::op4
Constant inlined main::op5 = main::op4
Constant inlined main::op2 = main::op
Constant inlined main::op3 = main::op
Successful SSA optimization Pass2ConstantInlining
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) 5
Successful SSA optimization PassNFinalizeNumberTypeConversions
Added new block during phi lifting print_ln::@3(between print_ln::@1 and print_ln::@1)
Added new block during phi lifting main::@69(between main::@68 and main::@1)
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@43
Adding NOP phi() at start of main::@22
Adding NOP phi() at start of main::@23
Adding NOP phi() at start of main::@24
Adding NOP phi() at start of main::@25
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@27
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@30
Adding NOP phi() at start of main::@31
Adding NOP phi() at start of main::@32
Adding NOP phi() at start of main::@33
Adding NOP phi() at start of main::@34
Adding NOP phi() at start of main::@35
Adding NOP phi() at start of main::@36
Adding NOP phi() at start of main::@37
Adding NOP phi() at start of main::@38
Adding NOP phi() at start of main::@39
Adding NOP phi() at start of main::@40
Adding NOP phi() at start of main::@41
Adding NOP phi() at start of main::@42
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of print_cls::@1
Adding NOP phi() at start of printu::@6
Adding NOP phi() at start of print_ln::@2
Adding NOP phi() at start of memset
Adding NOP phi() at start of memset::@2
Adding NOP phi() at start of memset::@1
Adding NOP phi() at start of print_uchar::@2
CALL GRAPH
Calls in [main] to print_cls:1 printu:15 printu:24 printu:35 printu:46 print_ln:48 printu:59 printu:68 printu:79 printu:90 print_ln:92 printu:103 printu:112 printu:123 printu:134 print_ln:136 printu:147 printu:156 printu:167 printu:178 print_ln:180 printu:191 printu:200 printu:211 printu:222 print_ln:224 
Calls in [print_cls] to memset:234 
Calls in [printu] to print_char:239 print_uchar:242 print_str:244 print_uchar:247 print_char:249 print_char:253 
Calls in [print_uchar] to print_char:282 print_char:287 
Calls in [print_str] to print_char:297 

Created 36 initial phi equivalence classes
Coalesced [11] print_char_cursor#161 = print_char_cursor#100
Coalesced [12] printu::a#32 = printu::a#0
Coalesced [13] printu::b#31 = printu::b#0
Coalesced [14] printu::res#36 = printu::res#0
Coalesced [21] print_char_cursor#164 = print_char_cursor#56
Coalesced [22] printu::a#35 = printu::a#1
Coalesced [23] printu::res#39 = printu::res#1
Coalesced (already) [31] print_char_cursor#165 = print_char_cursor#56
Coalesced [32] printu::a#36 = printu::a#2
Coalesced [33] printu::b#34 = printu::b#2
Coalesced [34] printu::res#40 = printu::res#2
Coalesced (already) [42] print_char_cursor#166 = print_char_cursor#56
Coalesced [43] printu::a#37 = printu::a#3
Coalesced [44] printu::b#35 = printu::b#3
Coalesced [45] printu::res#41 = printu::res#3
Coalesced [47] print_line_cursor#92 = print_line_cursor#29
Not coalescing [55] print_char_cursor#167 = print_line_cursor#0
Coalesced [56] printu::a#38 = printu::a#4
Coalesced [57] printu::b#36 = printu::b#4
Coalesced [58] printu::res#42 = printu::res#4
Coalesced (already) [65] print_char_cursor#168 = print_char_cursor#56
Coalesced [66] printu::a#39 = printu::a#5
Coalesced [67] printu::res#43 = printu::res#5
Coalesced (already) [75] print_char_cursor#169 = print_char_cursor#56
Coalesced [76] printu::a#40 = printu::a#6
Coalesced [77] printu::b#37 = printu::b#6
Coalesced [78] printu::res#44 = printu::res#6
Coalesced (already) [86] print_char_cursor#170 = print_char_cursor#56
Coalesced [87] printu::a#41 = printu::a#7
Coalesced [88] printu::b#38 = printu::b#7
Coalesced [89] printu::res#45 = printu::res#7
Coalesced [91] print_line_cursor#93 = print_line_cursor#0
Not coalescing [99] print_char_cursor#151 = print_line_cursor#0
Coalesced [100] printu::a#22 = printu::a#8
Coalesced [101] printu::b#24 = printu::b#8
Coalesced [102] printu::res#26 = printu::res#8
Coalesced (already) [109] print_char_cursor#152 = print_char_cursor#56
Coalesced [110] printu::a#23 = printu::a#9
Coalesced [111] printu::res#27 = printu::res#9
Coalesced (already) [119] print_char_cursor#153 = print_char_cursor#56
Coalesced [120] printu::a#24 = printu::a#10
Coalesced [121] printu::b#25 = printu::b#10
Coalesced [122] printu::res#28 = printu::res#10
Coalesced (already) [130] print_char_cursor#154 = print_char_cursor#56
Coalesced [131] printu::a#25 = printu::a#11
Coalesced [132] printu::b#26 = printu::b#11
Coalesced [133] printu::res#29 = printu::res#11
Coalesced (already) [135] print_line_cursor#94 = print_line_cursor#0
Not coalescing [143] print_char_cursor#155 = print_line_cursor#0
Coalesced [144] printu::a#26 = printu::a#12
Coalesced [145] printu::b#27 = printu::b#12
Coalesced [146] printu::res#30 = printu::res#12
Coalesced (already) [153] print_char_cursor#156 = print_char_cursor#56
Coalesced [154] printu::a#27 = printu::a#13
Coalesced [155] printu::res#31 = printu::res#13
Coalesced (already) [163] print_char_cursor#157 = print_char_cursor#56
Coalesced [164] printu::a#28 = printu::a#14
Coalesced [165] printu::b#28 = printu::b#14
Coalesced [166] printu::res#32 = printu::res#14
Coalesced (already) [174] print_char_cursor#158 = print_char_cursor#56
Coalesced [175] printu::a#29 = printu::a#15
Coalesced [176] printu::b#29 = printu::b#15
Coalesced [177] printu::res#33 = printu::res#15
Coalesced (already) [179] print_line_cursor#95 = print_line_cursor#0
Not coalescing [187] print_char_cursor#159 = print_line_cursor#0
Coalesced [188] printu::a#30 = printu::a#16
Coalesced [189] printu::b#30 = printu::b#16
Coalesced [190] printu::res#34 = printu::res#16
Coalesced (already) [197] print_char_cursor#160 = print_char_cursor#56
Coalesced [198] printu::a#31 = printu::a#17
Coalesced [199] printu::res#35 = printu::res#17
Coalesced (already) [207] print_char_cursor#162 = print_char_cursor#56
Coalesced [208] printu::a#33 = printu::a#18
Coalesced [209] printu::b#32 = printu::b#18
Coalesced [210] printu::res#37 = printu::res#18
Coalesced (already) [218] print_char_cursor#163 = print_char_cursor#56
Coalesced [219] printu::a#34 = printu::a#19
Coalesced [220] printu::b#33 = printu::b#19
Coalesced [221] printu::res#38 = printu::res#19
Coalesced (already) [223] print_line_cursor#96 = print_line_cursor#0
Coalesced [229] main::a#68 = main::a#1
Not coalescing [230] print_char_cursor#150 = print_line_cursor#0
Coalesced [231] main::i#68 = main::i#1
Coalesced (already) [232] print_line_cursor#99 = print_line_cursor#0
Coalesced [238] print_char_cursor#147 = print_char_cursor#98
Coalesced [241] print_uchar::b#4 = print_uchar::b#0
Coalesced [246] print_uchar::b#5 = print_uchar::b#1
Coalesced (already) [248] print_char_cursor#148 = print_char_cursor#56
Coalesced [251] print_char::ch#10 = print_char::ch#5
Coalesced (already) [252] print_char_cursor#149 = print_char_cursor#56
Coalesced [257] print_line_cursor#97 = print_line_cursor#27
Coalesced (already) [263] print_line_cursor#98 = print_line_cursor#0
Coalesced [272] memset::dst#4 = memset::dst#1
Coalesced [280] print_char::ch#8 = print_char::ch#1
Coalesced (already) [281] print_char_cursor#145 = print_char_cursor#56
Coalesced [285] print_char::ch#9 = print_char::ch#2
Coalesced (already) [286] print_char_cursor#146 = print_char_cursor#56
Coalesced [290] print_str::str#6 = print_str::str#1
Coalesced [295] print_char::ch#7 = print_char::ch#0
Coalesced (already) [296] print_char_cursor#144 = print_char_cursor#56
Coalesced [299] print_str::str#7 = print_str::str#0
Coalesced down to 32 phi equivalence classes
Culled Empty Block label main::@43
Culled Empty Block label print_cls::@1
Culled Empty Block label printu::@6
Culled Empty Block label print_ln::@2
Culled Empty Block label print_ln::@3
Culled Empty Block label memset::@2
Culled Empty Block label memset::@1
Culled Empty Block label print_uchar::@2
Renumbering block memset::@3 to memset::@1
Renumbering block memset::@4 to memset::@2
Renumbering block main::@44 to main::@43
Renumbering block main::@45 to main::@44
Renumbering block main::@46 to main::@45
Renumbering block main::@47 to main::@46
Renumbering block main::@48 to main::@47
Renumbering block main::@49 to main::@48
Renumbering block main::@50 to main::@49
Renumbering block main::@51 to main::@50
Renumbering block main::@52 to main::@51
Renumbering block main::@53 to main::@52
Renumbering block main::@54 to main::@53
Renumbering block main::@55 to main::@54
Renumbering block main::@56 to main::@55
Renumbering block main::@57 to main::@56
Renumbering block main::@58 to main::@57
Renumbering block main::@59 to main::@58
Renumbering block main::@60 to main::@59
Renumbering block main::@61 to main::@60
Renumbering block main::@62 to main::@61
Renumbering block main::@63 to main::@62
Renumbering block main::@64 to main::@63
Renumbering block main::@65 to main::@64
Renumbering block main::@66 to main::@65
Renumbering block main::@67 to main::@66
Renumbering block main::@68 to main::@67
Renumbering block main::@69 to main::@68
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@22
Adding NOP phi() at start of main::@23
Adding NOP phi() at start of main::@24
Adding NOP phi() at start of main::@25
Adding NOP phi() at start of main::@46
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@27
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@51
Adding NOP phi() at start of main::@30
Adding NOP phi() at start of main::@31
Adding NOP phi() at start of main::@32
Adding NOP phi() at start of main::@33
Adding NOP phi() at start of main::@56
Adding NOP phi() at start of main::@34
Adding NOP phi() at start of main::@35
Adding NOP phi() at start of main::@36
Adding NOP phi() at start of main::@37
Adding NOP phi() at start of main::@61
Adding NOP phi() at start of main::@38
Adding NOP phi() at start of main::@39
Adding NOP phi() at start of main::@40
Adding NOP phi() at start of main::@41
Adding NOP phi() at start of main::@66
Adding NOP phi() at start of main::@42
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of printu::@4
Adding NOP phi() at start of memset
Adding NOP phi() at start of print_str

FINAL CONTROL FLOW GRAPH

void main()
main: scope:[main]  from
  [0] phi()
  [1] call print_cls 
  to:main::@1
main::@1: scope:[main]  from main main::@68
  [2] print_line_cursor#29 = phi( main/print_screen#0, main::@68/print_line_cursor#0 )
  [2] main::i#10 = phi( main/0, main::@68/main::i#1 )
  [2] print_char_cursor#100 = phi( main/print_screen#0, main::@68/print_char_cursor#150 )
  [2] main::a#10 = phi( main/7, main::@68/main::a#1 )
  [3] main::b#0 = $ce - main::a#10
  [4] if(main::a#10>=main::b#0) goto main::@2
  to:main::@22
main::@22: scope:[main]  from main::@1
  [5] phi()
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@22
  [6] main::r#41 = phi( main::@1/'-', main::@22/'+' )
  [7] printu::a#0 = main::a#10
  [8] printu::b#0 = main::b#0
  [9] printu::res#0 = main::r#41
  [10] call printu 
  to:main::@43
main::@43: scope:[main]  from main::@2
  [11] if(main::a#10>=$37) goto main::@3
  to:main::@23
main::@23: scope:[main]  from main::@43
  [12] phi()
  to:main::@3
main::@3: scope:[main]  from main::@23 main::@43
  [13] main::r#42 = phi( main::@23/'+', main::@43/'-' )
  [14] printu::a#1 = main::a#10
  [15] printu::res#1 = main::r#42
  [16] call printu 
  to:main::@44
main::@44: scope:[main]  from main::@3
  [17] if(main::a#10>=main::cs[main::i#10]) goto main::@4
  to:main::@24
main::@24: scope:[main]  from main::@44
  [18] phi()
  to:main::@4
main::@4: scope:[main]  from main::@24 main::@44
  [19] main::r#43 = phi( main::@24/'+', main::@44/'-' )
  [20] printu::a#2 = main::a#10
  [21] printu::b#2 = main::cs[main::i#10]
  [22] printu::res#2 = main::r#43
  [23] call printu 
  to:main::@45
main::@45: scope:[main]  from main::@4
  [24] if(main::a#10>=main::a#10) goto main::@5
  to:main::@25
main::@25: scope:[main]  from main::@45
  [25] phi()
  to:main::@5
main::@5: scope:[main]  from main::@25 main::@45
  [26] main::r#44 = phi( main::@25/'+', main::@45/'-' )
  [27] printu::a#3 = main::a#10
  [28] printu::b#3 = main::a#10
  [29] printu::res#3 = main::r#44
  [30] call printu 
  to:main::@46
main::@46: scope:[main]  from main::@5
  [31] phi()
  [32] call print_ln 
  to:main::@47
main::@47: scope:[main]  from main::@46
  [33] if(main::a#10<=main::b#0) goto main::@6
  to:main::@26
main::@26: scope:[main]  from main::@47
  [34] phi()
  to:main::@6
main::@6: scope:[main]  from main::@26 main::@47
  [35] main::r#45 = phi( main::@26/'+', main::@47/'-' )
  [36] printu::a#4 = main::a#10
  [37] printu::b#4 = main::b#0
  [38] printu::res#4 = main::r#45
  [39] print_char_cursor#167 = print_line_cursor#0
  [40] call printu 
  to:main::@48
main::@48: scope:[main]  from main::@6
  [41] if(main::a#10<$37+1) goto main::@7
  to:main::@27
main::@27: scope:[main]  from main::@48
  [42] phi()
  to:main::@7
main::@7: scope:[main]  from main::@27 main::@48
  [43] main::r#46 = phi( main::@27/'+', main::@48/'-' )
  [44] printu::a#5 = main::a#10
  [45] printu::res#5 = main::r#46
  [46] call printu 
  to:main::@49
main::@49: scope:[main]  from main::@7
  [47] if(main::a#10<=main::cs[main::i#10]) goto main::@8
  to:main::@28
main::@28: scope:[main]  from main::@49
  [48] phi()
  to:main::@8
main::@8: scope:[main]  from main::@28 main::@49
  [49] main::r#47 = phi( main::@28/'+', main::@49/'-' )
  [50] printu::a#6 = main::a#10
  [51] printu::b#6 = main::cs[main::i#10]
  [52] printu::res#6 = main::r#47
  [53] call printu 
  to:main::@50
main::@50: scope:[main]  from main::@8
  [54] if(main::a#10<=main::a#10) goto main::@9
  to:main::@29
main::@29: scope:[main]  from main::@50
  [55] phi()
  to:main::@9
main::@9: scope:[main]  from main::@29 main::@50
  [56] main::r#48 = phi( main::@29/'+', main::@50/'-' )
  [57] printu::a#7 = main::a#10
  [58] printu::b#7 = main::a#10
  [59] printu::res#7 = main::r#48
  [60] call printu 
  to:main::@51
main::@51: scope:[main]  from main::@9
  [61] phi()
  [62] call print_ln 
  to:main::@52
main::@52: scope:[main]  from main::@51
  [63] if(main::a#10>main::b#0) goto main::@10
  to:main::@30
main::@30: scope:[main]  from main::@52
  [64] phi()
  to:main::@10
main::@10: scope:[main]  from main::@30 main::@52
  [65] main::r#49 = phi( main::@30/'+', main::@52/'-' )
  [66] printu::a#8 = main::a#10
  [67] printu::b#8 = main::b#0
  [68] printu::res#8 = main::r#49
  [69] print_char_cursor#151 = print_line_cursor#0
  [70] call printu 
  to:main::@53
main::@53: scope:[main]  from main::@10
  [71] if(main::a#10>=$37+1) goto main::@11
  to:main::@31
main::@31: scope:[main]  from main::@53
  [72] phi()
  to:main::@11
main::@11: scope:[main]  from main::@31 main::@53
  [73] main::r#50 = phi( main::@31/'+', main::@53/'-' )
  [74] printu::a#9 = main::a#10
  [75] printu::res#9 = main::r#50
  [76] call printu 
  to:main::@54
main::@54: scope:[main]  from main::@11
  [77] if(main::a#10>main::cs[main::i#10]) goto main::@12
  to:main::@32
main::@32: scope:[main]  from main::@54
  [78] phi()
  to:main::@12
main::@12: scope:[main]  from main::@32 main::@54
  [79] main::r#51 = phi( main::@32/'+', main::@54/'-' )
  [80] printu::a#10 = main::a#10
  [81] printu::b#10 = main::cs[main::i#10]
  [82] printu::res#10 = main::r#51
  [83] call printu 
  to:main::@55
main::@55: scope:[main]  from main::@12
  [84] if(main::a#10>main::a#10) goto main::@13
  to:main::@33
main::@33: scope:[main]  from main::@55
  [85] phi()
  to:main::@13
main::@13: scope:[main]  from main::@33 main::@55
  [86] main::r#52 = phi( main::@33/'+', main::@55/'-' )
  [87] printu::a#11 = main::a#10
  [88] printu::b#11 = main::a#10
  [89] printu::res#11 = main::r#52
  [90] call printu 
  to:main::@56
main::@56: scope:[main]  from main::@13
  [91] phi()
  [92] call print_ln 
  to:main::@57
main::@57: scope:[main]  from main::@56
  [93] if(main::a#10<main::b#0) goto main::@14
  to:main::@34
main::@34: scope:[main]  from main::@57
  [94] phi()
  to:main::@14
main::@14: scope:[main]  from main::@34 main::@57
  [95] main::r#53 = phi( main::@34/'+', main::@57/'-' )
  [96] printu::a#12 = main::a#10
  [97] printu::b#12 = main::b#0
  [98] printu::res#12 = main::r#53
  [99] print_char_cursor#155 = print_line_cursor#0
  [100] call printu 
  to:main::@58
main::@58: scope:[main]  from main::@14
  [101] if(main::a#10<$37) goto main::@15
  to:main::@35
main::@35: scope:[main]  from main::@58
  [102] phi()
  to:main::@15
main::@15: scope:[main]  from main::@35 main::@58
  [103] main::r#54 = phi( main::@35/'+', main::@58/'-' )
  [104] printu::a#13 = main::a#10
  [105] printu::res#13 = main::r#54
  [106] call printu 
  to:main::@59
main::@59: scope:[main]  from main::@15
  [107] if(main::a#10<main::cs[main::i#10]) goto main::@16
  to:main::@36
main::@36: scope:[main]  from main::@59
  [108] phi()
  to:main::@16
main::@16: scope:[main]  from main::@36 main::@59
  [109] main::r#55 = phi( main::@36/'+', main::@59/'-' )
  [110] printu::a#14 = main::a#10
  [111] printu::b#14 = main::cs[main::i#10]
  [112] printu::res#14 = main::r#55
  [113] call printu 
  to:main::@60
main::@60: scope:[main]  from main::@16
  [114] if(main::a#10<main::a#10) goto main::@17
  to:main::@37
main::@37: scope:[main]  from main::@60
  [115] phi()
  to:main::@17
main::@17: scope:[main]  from main::@37 main::@60
  [116] main::r#56 = phi( main::@37/'+', main::@60/'-' )
  [117] printu::a#15 = main::a#10
  [118] printu::b#15 = main::a#10
  [119] printu::res#15 = main::r#56
  [120] call printu 
  to:main::@61
main::@61: scope:[main]  from main::@17
  [121] phi()
  [122] call print_ln 
  to:main::@62
main::@62: scope:[main]  from main::@61
  [123] if(main::a#10!=main::b#0) goto main::@18
  to:main::@38
main::@38: scope:[main]  from main::@62
  [124] phi()
  to:main::@18
main::@18: scope:[main]  from main::@38 main::@62
  [125] main::r#57 = phi( main::@38/'+', main::@62/'-' )
  [126] printu::a#16 = main::a#10
  [127] printu::b#16 = main::b#0
  [128] printu::res#16 = main::r#57
  [129] print_char_cursor#159 = print_line_cursor#0
  [130] call printu 
  to:main::@63
main::@63: scope:[main]  from main::@18
  [131] if(main::a#10!=$37) goto main::@19
  to:main::@39
main::@39: scope:[main]  from main::@63
  [132] phi()
  to:main::@19
main::@19: scope:[main]  from main::@39 main::@63
  [133] main::r#58 = phi( main::@39/'+', main::@63/'-' )
  [134] printu::a#17 = main::a#10
  [135] printu::res#17 = main::r#58
  [136] call printu 
  to:main::@64
main::@64: scope:[main]  from main::@19
  [137] if(main::a#10!=main::cs[main::i#10]) goto main::@20
  to:main::@40
main::@40: scope:[main]  from main::@64
  [138] phi()
  to:main::@20
main::@20: scope:[main]  from main::@40 main::@64
  [139] main::r#59 = phi( main::@40/'+', main::@64/'-' )
  [140] printu::a#18 = main::a#10
  [141] printu::b#18 = main::cs[main::i#10]
  [142] printu::res#18 = main::r#59
  [143] call printu 
  to:main::@65
main::@65: scope:[main]  from main::@20
  [144] if(main::a#10!=main::a#10) goto main::@21
  to:main::@41
main::@41: scope:[main]  from main::@65
  [145] phi()
  to:main::@21
main::@21: scope:[main]  from main::@41 main::@65
  [146] main::r#60 = phi( main::@41/'+', main::@65/'-' )
  [147] printu::a#19 = main::a#10
  [148] printu::b#19 = main::a#10
  [149] printu::res#19 = main::r#60
  [150] call printu 
  to:main::@66
main::@66: scope:[main]  from main::@21
  [151] phi()
  [152] call print_ln 
  to:main::@67
main::@67: scope:[main]  from main::@66
  [153] main::a#1 = main::a#10 + $30
  [154] main::i#1 = ++ main::i#10
  [155] if(main::i#1!=5) goto main::@68
  to:main::@42
main::@42: scope:[main]  from main::@42 main::@67
  [156] phi()
  to:main::@42
main::@68: scope:[main]  from main::@67
  [157] print_char_cursor#150 = print_line_cursor#0
  to:main::@1

void print_cls()
print_cls: scope:[print_cls]  from main
  [158] phi()
  [159] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [160] return 
  to:@return

void printu(byte printu::a , byte* printu::op , byte printu::b , byte printu::res)
printu: scope:[printu]  from main::@10 main::@11 main::@12 main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@2 main::@20 main::@21 main::@3 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  [161] printu::res#20 = phi( main::@10/printu::res#8, main::@11/printu::res#9, main::@12/printu::res#10, main::@13/printu::res#11, main::@14/printu::res#12, main::@15/printu::res#13, main::@16/printu::res#14, main::@17/printu::res#15, main::@18/printu::res#16, main::@19/printu::res#17, main::@2/printu::res#0, main::@20/printu::res#18, main::@21/printu::res#19, main::@3/printu::res#1, main::@4/printu::res#2, main::@5/printu::res#3, main::@6/printu::res#4, main::@7/printu::res#5, main::@8/printu::res#6, main::@9/printu::res#7 )
  [161] printu::b#20 = phi( main::@10/printu::b#8, main::@11/$37, main::@12/printu::b#10, main::@13/printu::b#11, main::@14/printu::b#12, main::@15/$37, main::@16/printu::b#14, main::@17/printu::b#15, main::@18/printu::b#16, main::@19/$37, main::@2/printu::b#0, main::@20/printu::b#18, main::@21/printu::b#19, main::@3/$37, main::@4/printu::b#2, main::@5/printu::b#3, main::@6/printu::b#4, main::@7/$37, main::@8/printu::b#6, main::@9/printu::b#7 )
  [161] printu::op#20 = phi( main::@10/main::op8, main::@11/main::op8, main::@12/main::op8, main::@13/main::op8, main::@14/main::op12, main::@15/main::op12, main::@16/main::op12, main::@17/main::op12, main::@18/main::op16, main::@19/main::op16, main::@2/main::op, main::@20/main::op16, main::@21/main::op16, main::@3/main::op, main::@4/main::op, main::@5/main::op, main::@6/main::op4, main::@7/main::op4, main::@8/main::op4, main::@9/main::op4 )
  [161] printu::a#20 = phi( main::@10/printu::a#8, main::@11/printu::a#9, main::@12/printu::a#10, main::@13/printu::a#11, main::@14/printu::a#12, main::@15/printu::a#13, main::@16/printu::a#14, main::@17/printu::a#15, main::@18/printu::a#16, main::@19/printu::a#17, main::@2/printu::a#0, main::@20/printu::a#18, main::@21/printu::a#19, main::@3/printu::a#1, main::@4/printu::a#2, main::@5/printu::a#3, main::@6/printu::a#4, main::@7/printu::a#5, main::@8/printu::a#6, main::@9/printu::a#7 )
  [161] print_char_cursor#98 = phi( main::@10/print_char_cursor#151, main::@11/print_char_cursor#56, main::@12/print_char_cursor#56, main::@13/print_char_cursor#56, main::@14/print_char_cursor#155, main::@15/print_char_cursor#56, main::@16/print_char_cursor#56, main::@17/print_char_cursor#56, main::@18/print_char_cursor#159, main::@19/print_char_cursor#56, main::@2/print_char_cursor#100, main::@20/print_char_cursor#56, main::@21/print_char_cursor#56, main::@3/print_char_cursor#56, main::@4/print_char_cursor#56, main::@5/print_char_cursor#56, main::@6/print_char_cursor#167, main::@7/print_char_cursor#56, main::@8/print_char_cursor#56, main::@9/print_char_cursor#56 )
  [162] call print_char 
  to:printu::@1
printu::@1: scope:[printu]  from printu
  [163] print_uchar::b#0 = printu::a#20
  [164] call print_uchar 
  to:printu::@2
printu::@2: scope:[printu]  from printu::@1
  [165] print_str::str#1 = printu::op#20
  [166] call print_str 
  to:printu::@3
printu::@3: scope:[printu]  from printu::@2
  [167] print_uchar::b#1 = printu::b#20
  [168] call print_uchar 
  to:printu::@4
printu::@4: scope:[printu]  from printu::@3
  [169] phi()
  [170] call print_char 
  to:printu::@5
printu::@5: scope:[printu]  from printu::@4
  [171] print_char::ch#5 = printu::res#20
  [172] call print_char 
  to:printu::@return
printu::@return: scope:[printu]  from printu::@5
  [173] return 
  to:@return

void print_ln()
print_ln: scope:[print_ln]  from main::@46 main::@51 main::@56 main::@61 main::@66
  [174] print_line_cursor#27 = phi( main::@46/print_line_cursor#29, main::@51/print_line_cursor#0, main::@56/print_line_cursor#0, main::@61/print_line_cursor#0, main::@66/print_line_cursor#0 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [175] print_line_cursor#14 = phi( print_ln/print_line_cursor#27, print_ln::@1/print_line_cursor#0 )
  [176] print_line_cursor#0 = print_line_cursor#14 + $28
  [177] if(print_line_cursor#0<print_char_cursor#56) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [178] return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from print_cls
  [179] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [180] memset::dst#2 = phi( memset/(byte*)memset::str#0, memset::@2/memset::dst#1 )
  [181] if(memset::dst#2!=memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [182] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [183] *memset::dst#2 = memset::c#0
  [184] memset::dst#1 = ++ memset::dst#2
  to:memset::@1

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_str::@2 print_uchar print_uchar::@1 printu printu::@4 printu::@5
  [185] print_char_cursor#55 = phi( print_str::@2/print_char_cursor#56, print_uchar/print_char_cursor#56, print_uchar::@1/print_char_cursor#56, printu/print_char_cursor#98, printu::@4/print_char_cursor#56, printu::@5/print_char_cursor#56 )
  [185] print_char::ch#6 = phi( print_str::@2/print_char::ch#0, print_uchar/print_char::ch#1, print_uchar::@1/print_char::ch#2, printu/' ', printu::@4/' ', printu::@5/print_char::ch#5 )
  [186] *print_char_cursor#55 = print_char::ch#6
  [187] print_char_cursor#56 = ++ print_char_cursor#55
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [188] return 
  to:@return

void print_uchar(byte print_uchar::b)
print_uchar: scope:[print_uchar]  from printu::@1 printu::@3
  [189] print_uchar::b#2 = phi( printu::@1/print_uchar::b#0, printu::@3/print_uchar::b#1 )
  [190] print_uchar::$0 = print_uchar::b#2 >> 4
  [191] print_char::ch#1 = print_hextab[print_uchar::$0]
  [192] call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  [193] print_uchar::$2 = print_uchar::b#2 & $f
  [194] print_char::ch#2 = print_hextab[print_uchar::$2]
  [195] call print_char 
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@1
  [196] return 
  to:@return

void print_str(byte* print_str::str)
print_str: scope:[print_str]  from printu::@2
  [197] phi()
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  [198] print_str::str#2 = phi( print_str/print_str::str#1, print_str::@3/print_str::str#0 )
  [199] if(0!=*print_str::str#2) goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [200] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [201] print_char::ch#0 = *print_str::str#2
  [202] call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  [203] print_str::str#0 = ++ print_str::str#2
  to:print_str::@1

null depth in calling loop Loop head: print_str::@1 tails: print_str::@3 blocks: print_str::@3 print_str::@2 print_str::@1  in scope print_char

VARIABLE REGISTER WEIGHTS
void main()
byte main::a
byte main::a#1 5.5
byte main::a#10 3.860927152317884
byte main::b
byte main::b#0 0.9758064516129035
byte main::i
byte main::i#1 11.0
byte main::i#10 0.8684210526315792
byte main::r
byte main::r#41 3.6666666666666665
byte main::r#42 5.5
byte main::r#43 3.6666666666666665
byte main::r#44 3.6666666666666665
byte main::r#45 3.6666666666666665
byte main::r#46 5.5
byte main::r#47 3.6666666666666665
byte main::r#48 3.6666666666666665
byte main::r#49 3.6666666666666665
byte main::r#50 5.5
byte main::r#51 3.6666666666666665
byte main::r#52 3.6666666666666665
byte main::r#53 3.6666666666666665
byte main::r#54 5.5
byte main::r#55 3.6666666666666665
byte main::r#56 3.6666666666666665
byte main::r#57 3.6666666666666665
byte main::r#58 5.5
byte main::r#59 3.6666666666666665
byte main::r#60 3.6666666666666665
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte* memset::dst
byte* memset::dst#1 2002.0
byte* memset::dst#2 1334.6666666666667
byte* memset::end
word memset::num
void* memset::return
void* memset::str
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 200002.0
byte print_char::ch#1 2002.0
byte print_char::ch#2 2002.0
byte print_char::ch#5 202.0
byte print_char::ch#6 1102105.0
byte* print_char_cursor
byte* print_char_cursor#100 2.75
byte* print_char_cursor#150 22.0
byte* print_char_cursor#151 22.0
byte* print_char_cursor#155 22.0
byte* print_char_cursor#159 22.0
byte* print_char_cursor#167 22.0
byte* print_char_cursor#55 1051154.0
byte* print_char_cursor#56 7778.825174825175
byte* print_char_cursor#98 321.0
void print_cls()
byte* print_line_cursor
byte* print_line_cursor#0 235.2578125
byte* print_line_cursor#14 20103.0
byte* print_line_cursor#27 156.0
byte* print_line_cursor#29 0.7333333333333333
void print_ln()
byte* print_screen
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 200002.0
byte* print_str::str#1 551.0
byte* print_str::str#2 100251.25
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 2002.0
byte~ print_uchar::$2 2002.0
byte print_uchar::b
byte print_uchar::b#0 202.0
byte print_uchar::b#1 202.0
byte print_uchar::b#2 551.0
void printu(byte printu::a , byte* printu::op , byte printu::b , byte printu::res)
byte printu::a
byte printu::a#0 7.333333333333333
byte printu::a#1 11.0
byte printu::a#10 7.333333333333333
byte printu::a#11 7.333333333333333
byte printu::a#12 5.5
byte printu::a#13 11.0
byte printu::a#14 7.333333333333333
byte printu::a#15 7.333333333333333
byte printu::a#16 5.5
byte printu::a#17 11.0
byte printu::a#18 7.333333333333333
byte printu::a#19 7.333333333333333
byte printu::a#2 7.333333333333333
byte printu::a#20 160.5
byte printu::a#3 7.333333333333333
byte printu::a#4 5.5
byte printu::a#5 11.0
byte printu::a#6 7.333333333333333
byte printu::a#7 7.333333333333333
byte printu::a#8 5.5
byte printu::a#9 11.0
byte printu::b
byte printu::b#0 11.0
byte printu::b#10 11.0
byte printu::b#11 11.0
byte printu::b#12 7.333333333333333
byte printu::b#14 11.0
byte printu::b#15 11.0
byte printu::b#16 7.333333333333333
byte printu::b#18 11.0
byte printu::b#19 11.0
byte printu::b#2 11.0
byte printu::b#20 44.33333333333333
byte printu::b#3 11.0
byte printu::b#4 7.333333333333333
byte printu::b#6 11.0
byte printu::b#7 11.0
byte printu::b#8 7.333333333333333
byte* printu::op
byte* printu::op#20 25.25
byte printu::res
byte printu::res#0 22.0
byte printu::res#1 22.0
byte printu::res#10 22.0
byte printu::res#11 22.0
byte printu::res#12 11.0
byte printu::res#13 22.0
byte printu::res#14 22.0
byte printu::res#15 22.0
byte printu::res#16 11.0
byte printu::res#17 22.0
byte printu::res#18 22.0
byte printu::res#19 22.0
byte printu::res#2 22.0
byte printu::res#20 32.1
byte printu::res#3 22.0
byte printu::res#4 11.0
byte printu::res#5 22.0
byte printu::res#6 22.0
byte printu::res#7 22.0
byte printu::res#8 11.0
byte printu::res#9 22.0

Initial phi equivalence classes
[ main::a#10 main::a#1 ]
[ main::i#10 main::i#1 ]
[ main::r#41 ]
[ main::r#42 ]
[ main::r#43 ]
[ main::r#44 ]
[ main::r#45 ]
[ main::r#46 ]
[ main::r#47 ]
[ main::r#48 ]
[ main::r#49 ]
[ main::r#50 ]
[ main::r#51 ]
[ main::r#52 ]
[ main::r#53 ]
[ main::r#54 ]
[ main::r#55 ]
[ main::r#56 ]
[ main::r#57 ]
[ main::r#58 ]
[ main::r#59 ]
[ main::r#60 ]
[ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
[ printu::op#20 ]
[ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
[ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
[ print_line_cursor#14 print_line_cursor#27 print_line_cursor#29 print_line_cursor#0 ]
[ memset::dst#2 memset::dst#1 ]
[ print_char::ch#6 print_char::ch#0 print_char::ch#1 print_char::ch#2 print_char::ch#5 ]
[ print_char_cursor#55 print_char_cursor#98 print_char_cursor#151 print_char_cursor#56 print_char_cursor#155 print_char_cursor#159 print_char_cursor#100 print_char_cursor#150 print_char_cursor#167 ]
[ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
[ print_str::str#2 print_str::str#1 print_str::str#0 ]
Added variable main::b#0 to live range equivalence class [ main::b#0 ]
Added variable print_uchar::$0 to live range equivalence class [ print_uchar::$0 ]
Added variable print_uchar::$2 to live range equivalence class [ print_uchar::$2 ]
Complete equivalence classes
[ main::a#10 main::a#1 ]
[ main::i#10 main::i#1 ]
[ main::r#41 ]
[ main::r#42 ]
[ main::r#43 ]
[ main::r#44 ]
[ main::r#45 ]
[ main::r#46 ]
[ main::r#47 ]
[ main::r#48 ]
[ main::r#49 ]
[ main::r#50 ]
[ main::r#51 ]
[ main::r#52 ]
[ main::r#53 ]
[ main::r#54 ]
[ main::r#55 ]
[ main::r#56 ]
[ main::r#57 ]
[ main::r#58 ]
[ main::r#59 ]
[ main::r#60 ]
[ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
[ printu::op#20 ]
[ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
[ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
[ print_line_cursor#14 print_line_cursor#27 print_line_cursor#29 print_line_cursor#0 ]
[ memset::dst#2 memset::dst#1 ]
[ print_char::ch#6 print_char::ch#0 print_char::ch#1 print_char::ch#2 print_char::ch#5 ]
[ print_char_cursor#55 print_char_cursor#98 print_char_cursor#151 print_char_cursor#56 print_char_cursor#155 print_char_cursor#159 print_char_cursor#100 print_char_cursor#150 print_char_cursor#167 ]
[ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
[ print_str::str#2 print_str::str#1 print_str::str#0 ]
[ main::b#0 ]
[ print_uchar::$0 ]
[ print_uchar::$2 ]
Allocated zp[1]:2 [ main::a#10 main::a#1 ]
Allocated zp[1]:3 [ main::i#10 main::i#1 ]
Allocated zp[1]:4 [ main::r#41 ]
Allocated zp[1]:5 [ main::r#42 ]
Allocated zp[1]:6 [ main::r#43 ]
Allocated zp[1]:7 [ main::r#44 ]
Allocated zp[1]:8 [ main::r#45 ]
Allocated zp[1]:9 [ main::r#46 ]
Allocated zp[1]:10 [ main::r#47 ]
Allocated zp[1]:11 [ main::r#48 ]
Allocated zp[1]:12 [ main::r#49 ]
Allocated zp[1]:13 [ main::r#50 ]
Allocated zp[1]:14 [ main::r#51 ]
Allocated zp[1]:15 [ main::r#52 ]
Allocated zp[1]:16 [ main::r#53 ]
Allocated zp[1]:17 [ main::r#54 ]
Allocated zp[1]:18 [ main::r#55 ]
Allocated zp[1]:19 [ main::r#56 ]
Allocated zp[1]:20 [ main::r#57 ]
Allocated zp[1]:21 [ main::r#58 ]
Allocated zp[1]:22 [ main::r#59 ]
Allocated zp[1]:23 [ main::r#60 ]
Allocated zp[1]:24 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
Allocated zp[2]:25 [ printu::op#20 ]
Allocated zp[1]:27 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Allocated zp[1]:28 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
Allocated zp[2]:29 [ print_line_cursor#14 print_line_cursor#27 print_line_cursor#29 print_line_cursor#0 ]
Allocated zp[2]:31 [ memset::dst#2 memset::dst#1 ]
Allocated zp[1]:33 [ print_char::ch#6 print_char::ch#0 print_char::ch#1 print_char::ch#2 print_char::ch#5 ]
Allocated zp[2]:34 [ print_char_cursor#55 print_char_cursor#98 print_char_cursor#151 print_char_cursor#56 print_char_cursor#155 print_char_cursor#159 print_char_cursor#100 print_char_cursor#150 print_char_cursor#167 ]
Allocated zp[1]:36 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
Allocated zp[2]:37 [ print_str::str#2 print_str::str#1 print_str::str#0 ]
Allocated zp[1]:39 [ main::b#0 ]
Allocated zp[1]:40 [ print_uchar::$0 ]
Allocated zp[1]:41 [ print_uchar::$2 ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [3] main::b#0 = $ce - main::a#10 [ main::a#10 print_char_cursor#100 main::i#10 print_line_cursor#29 main::b#0 ] (  [ main::a#10 print_char_cursor#100 main::i#10 print_line_cursor#29 main::b#0 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:2 [ main::a#10 main::a#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:3 [ main::i#10 main::i#1 ]
Statement [17] if(main::a#10>=main::cs[main::i#10]) goto main::@4 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:39 [ main::b#0 ]
Statement [24] if(main::a#10>=main::a#10) goto main::@5 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [39] print_char_cursor#167 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#4 printu::b#4 printu::res#4 print_char_cursor#167 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#4 printu::b#4 printu::res#4 print_char_cursor#167 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:24 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
Removing always clobbered register reg byte a as potential for zp[1]:27 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Removing always clobbered register reg byte a as potential for zp[1]:28 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
Statement [47] if(main::a#10<=main::cs[main::i#10]) goto main::@8 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [54] if(main::a#10<=main::a#10) goto main::@9 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [69] print_char_cursor#151 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#8 printu::b#8 printu::res#8 print_char_cursor#151 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#8 printu::b#8 printu::res#8 print_char_cursor#151 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } }  ) always clobbers reg byte a 
Statement [77] if(main::a#10>main::cs[main::i#10]) goto main::@12 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [84] if(main::a#10>main::a#10) goto main::@13 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [99] print_char_cursor#155 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#12 printu::b#12 printu::res#12 print_char_cursor#155 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#12 printu::b#12 printu::res#12 print_char_cursor#155 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } }  ) always clobbers reg byte a 
Statement [107] if(main::a#10<main::cs[main::i#10]) goto main::@16 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [114] if(main::a#10<main::a#10) goto main::@17 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [129] print_char_cursor#159 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#16 printu::b#16 printu::res#16 print_char_cursor#159 ] (  [ main::a#10 main::i#10 print_line_cursor#0 printu::a#16 printu::b#16 printu::res#16 print_char_cursor#159 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } }  ) always clobbers reg byte a 
Statement [137] if(main::a#10!=main::cs[main::i#10]) goto main::@20 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [144] if(main::a#10!=main::a#10) goto main::@21 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [153] main::a#1 = main::a#10 + $30 [ main::i#10 main::a#1 print_line_cursor#0 ] (  [ main::i#10 main::a#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a 
Statement [157] print_char_cursor#150 = print_line_cursor#0 [ main::a#1 print_char_cursor#150 main::i#1 print_line_cursor#0 ] (  [ main::a#1 print_char_cursor#150 main::i#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a 
Statement [165] print_str::str#1 = printu::op#20 [ printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] ( printu:10 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } }  printu:16 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } }  printu:23 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } }  printu:30 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } }  printu:40 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } }  printu:46 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } }  printu:53 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } }  printu:60 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } }  printu:70 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } }  printu:76 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } }  printu:83 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } }  printu:90 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } }  printu:100 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } }  printu:106 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } }  printu:113 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } }  printu:120 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } }  printu:130 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } }  printu:136 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } }  printu:143 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } }  printu:150 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } }  ) always clobbers reg byte a 
Statement [176] print_line_cursor#0 = print_line_cursor#14 + $28 [ print_line_cursor#0 print_char_cursor#56 ] ( print_ln:32 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#27 = print_line_cursor#29 } }  print_ln:62 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:92 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:122 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:152 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  ) always clobbers reg byte a 
Statement [177] if(print_line_cursor#0<print_char_cursor#56) goto print_ln::@1 [ print_line_cursor#0 print_char_cursor#56 ] ( print_ln:32 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#27 = print_line_cursor#29 } }  print_ln:62 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:92 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:122 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:152 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  ) always clobbers reg byte a 
Statement [181] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:1::memset:159 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [183] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:1::memset:159 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [186] *print_char_cursor#55 = print_char::ch#6 [ print_char_cursor#55 ] ( printu:10::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 print_char_cursor#55 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } }  printu:16::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } }  printu:23::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  printu:30::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } }  printu:40::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 print_char_cursor#55 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } }  printu:46::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } }  printu:53::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  printu:60::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } }  printu:70::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 print_char_cursor#55 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } }  printu:76::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } }  printu:83::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  printu:90::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } }  printu:100::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 print_char_cursor#55 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } }  printu:106::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } }  printu:113::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  printu:120::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } }  printu:130::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 print_char_cursor#55 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } }  printu:136::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } }  printu:143::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  printu:150::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } }  printu:10::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } }  printu:23::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  printu:30::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } }  printu:40::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } }  printu:53::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  printu:60::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } }  printu:70::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } }  printu:83::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  printu:90::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } }  printu:100::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } }  printu:113::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  printu:120::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } }  printu:130::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } }  printu:143::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  printu:150::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } }  printu:10::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#0 main::r#41 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#1 main::r#42 } }  printu:23::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#2 main::r#43 } }  printu:30::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#3 main::r#44 } }  printu:40::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#4 main::r#45 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#5 main::r#46 } }  printu:53::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#6 main::r#47 } }  printu:60::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#7 main::r#48 } }  printu:70::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#8 main::r#49 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#9 main::r#50 } }  printu:83::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#10 main::r#51 } }  printu:90::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#11 main::r#52 } }  printu:100::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#12 main::r#53 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#13 main::r#54 } }  printu:113::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#14 main::r#55 } }  printu:120::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#15 main::r#56 } }  printu:130::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#16 main::r#57 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#17 main::r#58 } }  printu:143::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#18 main::r#59 } }  printu:150::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#19 main::r#60 } }  printu:10::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:23::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:30::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:40::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:53::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:60::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:70::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:83::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:90::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:100::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:113::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:120::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:130::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:143::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:150::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:2 [ main::a#10 main::a#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:3 [ main::i#10 main::i#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:39 [ main::b#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:24 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
Removing always clobbered register reg byte y as potential for zp[1]:27 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Removing always clobbered register reg byte y as potential for zp[1]:28 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
Removing always clobbered register reg byte y as potential for zp[1]:36 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
Statement [190] print_uchar::$0 = print_uchar::b#2 >> 4 [ print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] ( printu:10::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:36 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
Statement [193] print_uchar::$2 = print_uchar::b#2 & $f [ print_char_cursor#56 print_uchar::$2 ] ( printu:10::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  ) always clobbers reg byte a 
Statement [199] if(0!=*print_str::str#2) goto print_str::@2 [ print_char_cursor#56 print_str::str#2 ] ( printu:10::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } }  printu:16::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } }  printu:23::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } }  printu:30::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } }  printu:40::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } }  printu:46::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } }  printu:53::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } }  printu:60::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } }  printu:70::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } }  printu:76::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } }  printu:83::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } }  printu:90::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } }  printu:100::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } }  printu:106::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } }  printu:113::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } }  printu:120::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } }  printu:130::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } }  printu:136::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } }  printu:143::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } }  printu:150::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } }  ) always clobbers reg byte a reg byte y 
Statement [201] print_char::ch#0 = *print_str::str#2 [ print_char_cursor#56 print_char::ch#0 print_str::str#2 ] ( printu:10::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:23::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:30::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:40::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:53::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:60::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:70::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:83::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:90::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:100::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:113::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:120::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:130::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:143::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:150::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  ) always clobbers reg byte a reg byte y 
Statement [3] main::b#0 = $ce - main::a#10 [ main::a#10 print_char_cursor#100 main::i#10 print_line_cursor#29 main::b#0 ] (  [ main::a#10 print_char_cursor#100 main::i#10 print_line_cursor#29 main::b#0 ] { }  ) always clobbers reg byte a 
Statement [17] if(main::a#10>=main::cs[main::i#10]) goto main::@4 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [24] if(main::a#10>=main::a#10) goto main::@5 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [39] print_char_cursor#167 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#4 printu::b#4 printu::res#4 print_char_cursor#167 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#4 printu::b#4 printu::res#4 print_char_cursor#167 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } }  ) always clobbers reg byte a 
Statement [47] if(main::a#10<=main::cs[main::i#10]) goto main::@8 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [54] if(main::a#10<=main::a#10) goto main::@9 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [69] print_char_cursor#151 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#8 printu::b#8 printu::res#8 print_char_cursor#151 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#8 printu::b#8 printu::res#8 print_char_cursor#151 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } }  ) always clobbers reg byte a 
Statement [77] if(main::a#10>main::cs[main::i#10]) goto main::@12 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [84] if(main::a#10>main::a#10) goto main::@13 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [99] print_char_cursor#155 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#12 printu::b#12 printu::res#12 print_char_cursor#155 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#12 printu::b#12 printu::res#12 print_char_cursor#155 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } }  ) always clobbers reg byte a 
Statement [107] if(main::a#10<main::cs[main::i#10]) goto main::@16 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [114] if(main::a#10<main::a#10) goto main::@17 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [129] print_char_cursor#159 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#16 printu::b#16 printu::res#16 print_char_cursor#159 ] (  [ main::a#10 main::i#10 print_line_cursor#0 printu::a#16 printu::b#16 printu::res#16 print_char_cursor#159 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } }  ) always clobbers reg byte a 
Statement [137] if(main::a#10!=main::cs[main::i#10]) goto main::@20 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [144] if(main::a#10!=main::a#10) goto main::@21 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [153] main::a#1 = main::a#10 + $30 [ main::i#10 main::a#1 print_line_cursor#0 ] (  [ main::i#10 main::a#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a reg byte x 
Removing always clobbered register reg byte x as potential for zp[1]:3 [ main::i#10 main::i#1 ]
Statement [155] if(main::i#1!=5) goto main::@68 [ main::a#1 main::i#1 print_line_cursor#0 ] (  [ main::a#1 main::i#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a 
Statement [157] print_char_cursor#150 = print_line_cursor#0 [ main::a#1 print_char_cursor#150 main::i#1 print_line_cursor#0 ] (  [ main::a#1 print_char_cursor#150 main::i#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a 
Statement [165] print_str::str#1 = printu::op#20 [ printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] ( printu:10 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } }  printu:16 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } }  printu:23 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } }  printu:30 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } }  printu:40 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } }  printu:46 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } }  printu:53 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } }  printu:60 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } }  printu:70 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } }  printu:76 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } }  printu:83 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } }  printu:90 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } }  printu:100 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } }  printu:106 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } }  printu:113 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } }  printu:120 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } }  printu:130 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } }  printu:136 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } }  printu:143 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } }  printu:150 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } }  ) always clobbers reg byte a 
Statement [176] print_line_cursor#0 = print_line_cursor#14 + $28 [ print_line_cursor#0 print_char_cursor#56 ] ( print_ln:32 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#27 = print_line_cursor#29 } }  print_ln:62 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:92 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:122 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:152 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  ) always clobbers reg byte a 
Statement [177] if(print_line_cursor#0<print_char_cursor#56) goto print_ln::@1 [ print_line_cursor#0 print_char_cursor#56 ] ( print_ln:32 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#27 = print_line_cursor#29 } }  print_ln:62 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:92 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:122 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:152 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  ) always clobbers reg byte a 
Statement [181] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:1::memset:159 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [183] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:1::memset:159 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [186] *print_char_cursor#55 = print_char::ch#6 [ print_char_cursor#55 ] ( printu:10::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 print_char_cursor#55 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } }  printu:16::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } }  printu:23::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  printu:30::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } }  printu:40::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 print_char_cursor#55 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } }  printu:46::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } }  printu:53::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  printu:60::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } }  printu:70::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 print_char_cursor#55 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } }  printu:76::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } }  printu:83::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  printu:90::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } }  printu:100::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 print_char_cursor#55 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } }  printu:106::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } }  printu:113::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  printu:120::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } }  printu:130::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 print_char_cursor#55 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } }  printu:136::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } }  printu:143::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  printu:150::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } }  printu:10::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } }  printu:23::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  printu:30::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } }  printu:40::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } }  printu:53::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  printu:60::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } }  printu:70::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } }  printu:83::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  printu:90::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } }  printu:100::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } }  printu:113::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  printu:120::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } }  printu:130::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } }  printu:143::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  printu:150::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } }  printu:10::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#0 main::r#41 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#1 main::r#42 } }  printu:23::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#2 main::r#43 } }  printu:30::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#3 main::r#44 } }  printu:40::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#4 main::r#45 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#5 main::r#46 } }  printu:53::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#6 main::r#47 } }  printu:60::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#7 main::r#48 } }  printu:70::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#8 main::r#49 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#9 main::r#50 } }  printu:83::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#10 main::r#51 } }  printu:90::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#11 main::r#52 } }  printu:100::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#12 main::r#53 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#13 main::r#54 } }  printu:113::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#14 main::r#55 } }  printu:120::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#15 main::r#56 } }  printu:130::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#16 main::r#57 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#17 main::r#58 } }  printu:143::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#18 main::r#59 } }  printu:150::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#19 main::r#60 } }  printu:10::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:23::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:30::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:40::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:53::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:60::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:70::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:83::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:90::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:100::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:113::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:120::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:130::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:143::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:150::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  ) always clobbers reg byte y 
Statement [190] print_uchar::$0 = print_uchar::b#2 >> 4 [ print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] ( printu:10::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  ) always clobbers reg byte a 
Statement [193] print_uchar::$2 = print_uchar::b#2 & $f [ print_char_cursor#56 print_uchar::$2 ] ( printu:10::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  ) always clobbers reg byte a 
Statement [199] if(0!=*print_str::str#2) goto print_str::@2 [ print_char_cursor#56 print_str::str#2 ] ( printu:10::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } }  printu:16::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } }  printu:23::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } }  printu:30::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } }  printu:40::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } }  printu:46::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } }  printu:53::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } }  printu:60::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } }  printu:70::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } }  printu:76::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } }  printu:83::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } }  printu:90::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } }  printu:100::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } }  printu:106::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } }  printu:113::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } }  printu:120::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } }  printu:130::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } }  printu:136::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } }  printu:143::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } }  printu:150::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } }  ) always clobbers reg byte a reg byte y 
Statement [201] print_char::ch#0 = *print_str::str#2 [ print_char_cursor#56 print_char::ch#0 print_str::str#2 ] ( printu:10::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:23::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:30::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:40::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:53::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:60::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:70::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:83::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:90::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:100::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:113::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:120::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:130::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:143::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:150::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  ) always clobbers reg byte a reg byte y 
Statement [3] main::b#0 = $ce - main::a#10 [ main::a#10 print_char_cursor#100 main::i#10 print_line_cursor#29 main::b#0 ] (  [ main::a#10 print_char_cursor#100 main::i#10 print_line_cursor#29 main::b#0 ] { }  ) always clobbers reg byte a 
Statement [17] if(main::a#10>=main::cs[main::i#10]) goto main::@4 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [21] printu::b#2 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 main::r#43 printu::a#2 printu::b#2 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 main::r#43 printu::a#2 printu::b#2 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:6 [ main::r#43 ]
Statement [24] if(main::a#10>=main::a#10) goto main::@5 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [39] print_char_cursor#167 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#4 printu::b#4 printu::res#4 print_char_cursor#167 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#4 printu::b#4 printu::res#4 print_char_cursor#167 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } }  ) always clobbers reg byte a 
Statement [47] if(main::a#10<=main::cs[main::i#10]) goto main::@8 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [51] printu::b#6 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#47 printu::a#6 printu::b#6 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#47 printu::a#6 printu::b#6 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:10 [ main::r#47 ]
Statement [54] if(main::a#10<=main::a#10) goto main::@9 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [69] print_char_cursor#151 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#8 printu::b#8 printu::res#8 print_char_cursor#151 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#8 printu::b#8 printu::res#8 print_char_cursor#151 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } }  ) always clobbers reg byte a 
Statement [77] if(main::a#10>main::cs[main::i#10]) goto main::@12 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [81] printu::b#10 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#51 printu::a#10 printu::b#10 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#51 printu::a#10 printu::b#10 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:14 [ main::r#51 ]
Statement [84] if(main::a#10>main::a#10) goto main::@13 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [99] print_char_cursor#155 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#12 printu::b#12 printu::res#12 print_char_cursor#155 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#12 printu::b#12 printu::res#12 print_char_cursor#155 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } }  ) always clobbers reg byte a 
Statement [107] if(main::a#10<main::cs[main::i#10]) goto main::@16 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [111] printu::b#14 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#55 printu::a#14 printu::b#14 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#55 printu::a#14 printu::b#14 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:18 [ main::r#55 ]
Statement [114] if(main::a#10<main::a#10) goto main::@17 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [129] print_char_cursor#159 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#16 printu::b#16 printu::res#16 print_char_cursor#159 ] (  [ main::a#10 main::i#10 print_line_cursor#0 printu::a#16 printu::b#16 printu::res#16 print_char_cursor#159 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } }  ) always clobbers reg byte a 
Statement [137] if(main::a#10!=main::cs[main::i#10]) goto main::@20 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [141] printu::b#18 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#0 main::r#59 printu::a#18 printu::b#18 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::r#59 printu::a#18 printu::b#18 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:22 [ main::r#59 ]
Statement [144] if(main::a#10!=main::a#10) goto main::@21 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [153] main::a#1 = main::a#10 + $30 [ main::i#10 main::a#1 print_line_cursor#0 ] (  [ main::i#10 main::a#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a reg byte x 
Statement [155] if(main::i#1!=5) goto main::@68 [ main::a#1 main::i#1 print_line_cursor#0 ] (  [ main::a#1 main::i#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a 
Statement [157] print_char_cursor#150 = print_line_cursor#0 [ main::a#1 print_char_cursor#150 main::i#1 print_line_cursor#0 ] (  [ main::a#1 print_char_cursor#150 main::i#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a 
Statement [165] print_str::str#1 = printu::op#20 [ printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] ( printu:10 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } }  printu:16 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } }  printu:23 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } }  printu:30 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } }  printu:40 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } }  printu:46 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } }  printu:53 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } }  printu:60 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } }  printu:70 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } }  printu:76 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } }  printu:83 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } }  printu:90 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } }  printu:100 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } }  printu:106 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } }  printu:113 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } }  printu:120 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } }  printu:130 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } }  printu:136 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } }  printu:143 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } }  printu:150 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } }  ) always clobbers reg byte a 
Statement [176] print_line_cursor#0 = print_line_cursor#14 + $28 [ print_line_cursor#0 print_char_cursor#56 ] ( print_ln:32 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#27 = print_line_cursor#29 } }  print_ln:62 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:92 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:122 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:152 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  ) always clobbers reg byte a 
Statement [177] if(print_line_cursor#0<print_char_cursor#56) goto print_ln::@1 [ print_line_cursor#0 print_char_cursor#56 ] ( print_ln:32 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#27 = print_line_cursor#29 } }  print_ln:62 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:92 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:122 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:152 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  ) always clobbers reg byte a 
Statement [181] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:1::memset:159 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [183] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:1::memset:159 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [186] *print_char_cursor#55 = print_char::ch#6 [ print_char_cursor#55 ] ( printu:10::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 print_char_cursor#55 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } }  printu:16::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } }  printu:23::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  printu:30::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } }  printu:40::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 print_char_cursor#55 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } }  printu:46::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } }  printu:53::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  printu:60::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } }  printu:70::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 print_char_cursor#55 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } }  printu:76::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } }  printu:83::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  printu:90::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } }  printu:100::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 print_char_cursor#55 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } }  printu:106::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } }  printu:113::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  printu:120::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } }  printu:130::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 print_char_cursor#55 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } }  printu:136::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } }  printu:143::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  printu:150::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } }  printu:10::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } }  printu:23::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  printu:30::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } }  printu:40::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } }  printu:53::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  printu:60::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } }  printu:70::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } }  printu:83::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  printu:90::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } }  printu:100::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } }  printu:113::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  printu:120::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } }  printu:130::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } }  printu:143::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  printu:150::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } }  printu:10::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#0 main::r#41 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#1 main::r#42 } }  printu:23::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#2 main::r#43 } }  printu:30::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#3 main::r#44 } }  printu:40::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#4 main::r#45 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#5 main::r#46 } }  printu:53::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#6 main::r#47 } }  printu:60::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#7 main::r#48 } }  printu:70::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#8 main::r#49 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#9 main::r#50 } }  printu:83::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#10 main::r#51 } }  printu:90::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#11 main::r#52 } }  printu:100::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#12 main::r#53 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#13 main::r#54 } }  printu:113::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#14 main::r#55 } }  printu:120::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#15 main::r#56 } }  printu:130::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#16 main::r#57 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#17 main::r#58 } }  printu:143::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#18 main::r#59 } }  printu:150::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#19 main::r#60 } }  printu:10::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:23::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:30::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:40::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:53::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:60::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:70::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:83::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:90::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:100::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:113::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:120::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:130::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:143::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:150::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  ) always clobbers reg byte y 
Statement [190] print_uchar::$0 = print_uchar::b#2 >> 4 [ print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] ( printu:10::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  ) always clobbers reg byte a 
Statement [193] print_uchar::$2 = print_uchar::b#2 & $f [ print_char_cursor#56 print_uchar::$2 ] ( printu:10::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  ) always clobbers reg byte a 
Statement [199] if(0!=*print_str::str#2) goto print_str::@2 [ print_char_cursor#56 print_str::str#2 ] ( printu:10::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } }  printu:16::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } }  printu:23::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } }  printu:30::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } }  printu:40::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } }  printu:46::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } }  printu:53::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } }  printu:60::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } }  printu:70::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } }  printu:76::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } }  printu:83::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } }  printu:90::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } }  printu:100::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } }  printu:106::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } }  printu:113::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } }  printu:120::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } }  printu:130::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } }  printu:136::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } }  printu:143::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } }  printu:150::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } }  ) always clobbers reg byte a reg byte y 
Statement [201] print_char::ch#0 = *print_str::str#2 [ print_char_cursor#56 print_char::ch#0 print_str::str#2 ] ( printu:10::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:23::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:30::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:40::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:53::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:60::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:70::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:83::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:90::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:100::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:113::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:120::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:130::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:143::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:150::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  ) always clobbers reg byte a reg byte y 
Statement [3] main::b#0 = $ce - main::a#10 [ main::a#10 print_char_cursor#100 main::i#10 print_line_cursor#29 main::b#0 ] (  [ main::a#10 print_char_cursor#100 main::i#10 print_line_cursor#29 main::b#0 ] { }  ) always clobbers reg byte a 
Statement [17] if(main::a#10>=main::cs[main::i#10]) goto main::@4 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [21] printu::b#2 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 main::r#43 printu::a#2 printu::b#2 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 main::r#43 printu::a#2 printu::b#2 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  ) always clobbers reg byte y 
Statement [24] if(main::a#10>=main::a#10) goto main::@5 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [39] print_char_cursor#167 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#4 printu::b#4 printu::res#4 print_char_cursor#167 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#4 printu::b#4 printu::res#4 print_char_cursor#167 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } }  ) always clobbers reg byte a 
Statement [47] if(main::a#10<=main::cs[main::i#10]) goto main::@8 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [51] printu::b#6 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#47 printu::a#6 printu::b#6 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#47 printu::a#6 printu::b#6 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  ) always clobbers reg byte y 
Statement [54] if(main::a#10<=main::a#10) goto main::@9 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [69] print_char_cursor#151 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#8 printu::b#8 printu::res#8 print_char_cursor#151 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#8 printu::b#8 printu::res#8 print_char_cursor#151 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } }  ) always clobbers reg byte a 
Statement [77] if(main::a#10>main::cs[main::i#10]) goto main::@12 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [81] printu::b#10 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#51 printu::a#10 printu::b#10 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#51 printu::a#10 printu::b#10 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  ) always clobbers reg byte y 
Statement [84] if(main::a#10>main::a#10) goto main::@13 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [99] print_char_cursor#155 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#12 printu::b#12 printu::res#12 print_char_cursor#155 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#12 printu::b#12 printu::res#12 print_char_cursor#155 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } }  ) always clobbers reg byte a 
Statement [107] if(main::a#10<main::cs[main::i#10]) goto main::@16 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [111] printu::b#14 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#55 printu::a#14 printu::b#14 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 main::r#55 printu::a#14 printu::b#14 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  ) always clobbers reg byte y 
Statement [114] if(main::a#10<main::a#10) goto main::@17 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [129] print_char_cursor#159 = print_line_cursor#0 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#16 printu::b#16 printu::res#16 print_char_cursor#159 ] (  [ main::a#10 main::i#10 print_line_cursor#0 printu::a#16 printu::b#16 printu::res#16 print_char_cursor#159 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } }  ) always clobbers reg byte a 
Statement [137] if(main::a#10!=main::cs[main::i#10]) goto main::@20 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a reg byte y 
Statement [141] printu::b#18 = main::cs[main::i#10] [ main::a#10 main::i#10 print_line_cursor#0 main::r#59 printu::a#18 printu::b#18 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 main::r#59 printu::a#18 printu::b#18 print_char_cursor#56 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  ) always clobbers reg byte y 
Statement [144] if(main::a#10!=main::a#10) goto main::@21 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] (  [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { }  ) always clobbers reg byte a 
Statement [153] main::a#1 = main::a#10 + $30 [ main::i#10 main::a#1 print_line_cursor#0 ] (  [ main::i#10 main::a#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a reg byte x 
Statement [155] if(main::i#1!=5) goto main::@68 [ main::a#1 main::i#1 print_line_cursor#0 ] (  [ main::a#1 main::i#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a 
Statement [157] print_char_cursor#150 = print_line_cursor#0 [ main::a#1 print_char_cursor#150 main::i#1 print_line_cursor#0 ] (  [ main::a#1 print_char_cursor#150 main::i#1 print_line_cursor#0 ] { }  ) always clobbers reg byte a 
Statement [165] print_str::str#1 = printu::op#20 [ printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] ( printu:10 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } }  printu:16 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } }  printu:23 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } }  printu:30 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } }  printu:40 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } }  printu:46 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } }  printu:53 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } }  printu:60 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } }  printu:70 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } }  printu:76 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } }  printu:83 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } }  printu:90 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } }  printu:100 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } }  printu:106 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } }  printu:113 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } }  printu:120 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } }  printu:130 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } }  printu:136 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } }  printu:143 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } }  printu:150 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#1 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } }  ) always clobbers reg byte a 
Statement [176] print_line_cursor#0 = print_line_cursor#14 + $28 [ print_line_cursor#0 print_char_cursor#56 ] ( print_ln:32 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#27 = print_line_cursor#29 } }  print_ln:62 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:92 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:122 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:152 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  ) always clobbers reg byte a 
Statement [177] if(print_line_cursor#0<print_char_cursor#56) goto print_ln::@1 [ print_line_cursor#0 print_char_cursor#56 ] ( print_ln:32 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#27 = print_line_cursor#29 } }  print_ln:62 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:92 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:122 [ main::a#10 main::i#10 main::b#0 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  print_ln:152 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#56 ] { { print_line_cursor#0 = print_line_cursor#27 } }  ) always clobbers reg byte a 
Statement [181] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:1::memset:159 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [183] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:1::memset:159 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [186] *print_char_cursor#55 = print_char::ch#6 [ print_char_cursor#55 ] ( printu:10::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 print_char_cursor#55 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } }  printu:16::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } }  printu:23::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  printu:30::print_char:162 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } }  printu:40::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 print_char_cursor#55 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } }  printu:46::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } }  printu:53::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  printu:60::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } }  printu:70::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 print_char_cursor#55 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } }  printu:76::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } }  printu:83::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  printu:90::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } }  printu:100::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 print_char_cursor#55 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } }  printu:106::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } }  printu:113::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  printu:120::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } }  printu:130::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 print_char_cursor#55 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } }  printu:136::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } }  printu:143::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  printu:150::print_char:162 [ main::a#10 main::i#10 print_line_cursor#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } }  printu:10::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } }  printu:23::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } }  printu:30::print_char:170 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } }  printu:40::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } }  printu:53::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } }  printu:60::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } }  printu:70::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } }  printu:83::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } }  printu:90::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } }  printu:100::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } }  printu:113::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } }  printu:120::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } }  printu:130::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } }  printu:143::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } }  printu:150::print_char:170 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } }  printu:10::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#0 main::r#41 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#1 main::r#42 } }  printu:23::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#2 main::r#43 } }  printu:30::print_char:172 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#3 main::r#44 } }  printu:40::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#4 main::r#45 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#5 main::r#46 } }  printu:53::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#6 main::r#47 } }  printu:60::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#7 main::r#48 } }  printu:70::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#8 main::r#49 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#9 main::r#50 } }  printu:83::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#10 main::r#51 } }  printu:90::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#11 main::r#52 } }  printu:100::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#12 main::r#53 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#13 main::r#54 } }  printu:113::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#14 main::r#55 } }  printu:120::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#15 main::r#56 } }  printu:130::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#16 main::r#57 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#17 main::r#58 } }  printu:143::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#18 main::r#59 } }  printu:150::print_char:172 [ main::a#10 main::i#10 print_line_cursor#0 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#5 = print_char::ch#6 printu::res#20 printu::res#19 main::r#60 } }  printu:10::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:164::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:168::print_char:192 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_uchar::b#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:164::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:168::print_char:195 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:23::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:30::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:40::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:53::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:60::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:70::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:83::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:90::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:100::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:113::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:120::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:130::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:143::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:150::print_str:166::print_char:202 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_str::str#2 print_char_cursor#55 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  ) always clobbers reg byte y 
Statement [190] print_uchar::$0 = print_uchar::b#2 >> 4 [ print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] ( printu:10::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:10::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:23::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#1 = print_char::ch#6 } }  printu:30::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:40::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:53::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#1 = print_char::ch#6 } }  printu:60::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:70::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:83::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:90::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:100::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:113::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#1 = print_char::ch#6 } }  printu:120::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  printu:130::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#1 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#1 = print_char::ch#6 } }  printu:143::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#1 = print_char::ch#6 } }  printu:150::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::b#2 print_uchar::$0 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#1 = print_char::ch#6 } }  ) always clobbers reg byte a 
Statement [193] print_uchar::$2 = print_uchar::b#2 & $f [ print_char_cursor#56 print_uchar::$2 ] ( printu:10::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#0 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#1 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#2 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#4 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#5 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#6 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#8 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#9 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#10 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#12 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#13 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#14 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#16 main::a#10 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#17 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#0 = print_uchar::b#2 printu::a#20 printu::a#18 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:164 [ main::a#10 main::i#10 print_line_cursor#0 printu::op#20 printu::b#20 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#0 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:10::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::res#0 = printu::res#20 main::r#41 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#0 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:23::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::res#2 = printu::res#20 main::r#43 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#2 } { print_char::ch#2 = print_char::ch#6 } }  printu:30::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#3 main::r#44 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#3 printu::a#20 printu::a#3 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:40::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::res#20 = printu::res#4 main::r#45 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#4 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:53::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::res#20 = printu::res#6 main::r#47 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#6 } { print_char::ch#2 = print_char::ch#6 } }  printu:60::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#20 = printu::res#7 main::r#48 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#7 printu::a#20 printu::a#7 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:70::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::res#20 = printu::res#8 main::r#49 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#8 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:83::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::res#10 = printu::res#20 main::r#51 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:90::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#11 = printu::res#20 main::r#52 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#11 printu::a#20 printu::a#11 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:100::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::res#12 = printu::res#20 main::r#53 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#12 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:113::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::res#14 = printu::res#20 main::r#55 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#14 } { print_char::ch#2 = print_char::ch#6 } }  printu:120::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#15 = printu::res#20 main::r#56 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#15 printu::a#20 printu::a#15 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  printu:130::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::res#16 = printu::res#20 main::r#57 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#16 main::b#0 } { print_char::ch#2 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 } { print_char::ch#2 = print_char::ch#6 } }  printu:143::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::res#18 = printu::res#20 main::r#59 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#18 } { print_char::ch#2 = print_char::ch#6 } }  printu:150::print_uchar:168 [ main::a#10 main::i#10 print_line_cursor#0 printu::res#20 print_char_cursor#56 print_uchar::$2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::res#19 = printu::res#20 main::r#60 } { print_uchar::b#1 = print_uchar::b#2 printu::b#20 printu::b#19 printu::a#20 printu::a#19 main::a#10 } { print_char::ch#2 = print_char::ch#6 } }  ) always clobbers reg byte a 
Statement [199] if(0!=*print_str::str#2) goto print_str::@2 [ print_char_cursor#56 print_str::str#2 ] ( printu:10::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } }  printu:16::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } }  printu:23::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } }  printu:30::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } }  printu:40::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } }  printu:46::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } }  printu:53::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } }  printu:60::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } }  printu:70::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } }  printu:76::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } }  printu:83::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } }  printu:90::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } }  printu:100::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } }  printu:106::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } }  printu:113::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } }  printu:120::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } }  printu:130::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } }  printu:136::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } }  printu:143::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } }  printu:150::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_str::str#2 ] { { print_char_cursor#56 = print_char_cursor#98 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } }  ) always clobbers reg byte a reg byte y 
Statement [201] print_char::ch#0 = *print_str::str#2 [ print_char_cursor#56 print_char::ch#0 print_str::str#2 ] ( printu:10::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#100 = print_char_cursor#98 } { printu::a#0 = printu::a#20 main::a#10 } { printu::b#0 = printu::b#20 main::b#0 } { printu::res#0 = printu::res#20 main::r#41 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:16::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#1 = printu::a#20 main::a#10 } { printu::res#1 = printu::res#20 main::r#42 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:23::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#2 = printu::a#20 main::a#10 } { printu::b#2 = printu::b#20 } { printu::res#2 = printu::res#20 main::r#43 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:30::print_str:166 [ main::a#10 main::i#10 print_line_cursor#29 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#3 printu::a#20 printu::a#3 main::a#10 } { printu::res#20 = printu::res#3 main::r#44 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:40::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#167 = print_char_cursor#98 } { printu::a#20 = printu::a#4 main::a#10 } { printu::b#20 = printu::b#4 main::b#0 } { printu::res#20 = printu::res#4 main::r#45 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:46::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#5 main::a#10 } { printu::res#20 = printu::res#5 main::r#46 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:53::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#6 main::a#10 } { printu::b#20 = printu::b#6 } { printu::res#20 = printu::res#6 main::r#47 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:60::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#20 = printu::b#7 printu::a#20 printu::a#7 main::a#10 } { printu::res#20 = printu::res#7 main::r#48 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:70::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#151 = print_char_cursor#98 } { printu::a#20 = printu::a#8 main::a#10 } { printu::b#20 = printu::b#8 main::b#0 } { printu::res#20 = printu::res#8 main::r#49 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:76::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#20 = printu::a#9 main::a#10 } { printu::res#20 = printu::res#9 main::r#50 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:83::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#10 = printu::a#20 main::a#10 } { printu::b#10 = printu::b#20 } { printu::res#10 = printu::res#20 main::r#51 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:90::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#11 = printu::b#20 printu::a#20 printu::a#11 main::a#10 } { printu::res#11 = printu::res#20 main::r#52 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:100::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#155 = print_char_cursor#98 } { printu::a#12 = printu::a#20 main::a#10 } { printu::b#12 = printu::b#20 main::b#0 } { printu::res#12 = printu::res#20 main::r#53 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:106::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#13 = printu::a#20 main::a#10 } { printu::res#13 = printu::res#20 main::r#54 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:113::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#14 = printu::a#20 main::a#10 } { printu::b#14 = printu::b#20 } { printu::res#14 = printu::res#20 main::r#55 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:120::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 main::b#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#15 = printu::b#20 printu::a#20 printu::a#15 main::a#10 } { printu::res#15 = printu::res#20 main::r#56 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:130::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#159 = print_char_cursor#98 } { printu::a#16 = printu::a#20 main::a#10 } { printu::b#16 = printu::b#20 main::b#0 } { printu::res#16 = printu::res#20 main::r#57 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } { print_char_cursor#55 = print_char_cursor#56 } }  printu:136::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#17 = printu::a#20 main::a#10 } { printu::res#17 = printu::res#20 main::r#58 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:143::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::a#18 = printu::a#20 main::a#10 } { printu::b#18 = printu::b#20 } { printu::res#18 = printu::res#20 main::r#59 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  printu:150::print_str:166 [ main::a#10 main::i#10 print_line_cursor#0 printu::b#20 printu::res#20 print_char_cursor#56 print_char::ch#0 print_str::str#2 ] { { print_char_cursor#55 = print_char_cursor#98 print_char_cursor#56 } { printu::b#19 = printu::b#20 printu::a#20 printu::a#19 main::a#10 } { printu::res#19 = printu::res#20 main::r#60 } { print_str::str#1 = printu::op#20 } { print_char::ch#0 = print_char::ch#6 } }  ) always clobbers reg byte a reg byte y 
Potential registers zp[1]:2 [ main::a#10 main::a#1 ] : zp[1]:2 , reg byte x , 
Potential registers zp[1]:3 [ main::i#10 main::i#1 ] : zp[1]:3 , 
Potential registers zp[1]:4 [ main::r#41 ] : zp[1]:4 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:5 [ main::r#42 ] : zp[1]:5 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:6 [ main::r#43 ] : zp[1]:6 , reg byte a , reg byte x , 
Potential registers zp[1]:7 [ main::r#44 ] : zp[1]:7 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:8 [ main::r#45 ] : zp[1]:8 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:9 [ main::r#46 ] : zp[1]:9 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:10 [ main::r#47 ] : zp[1]:10 , reg byte a , reg byte x , 
Potential registers zp[1]:11 [ main::r#48 ] : zp[1]:11 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:12 [ main::r#49 ] : zp[1]:12 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:13 [ main::r#50 ] : zp[1]:13 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:14 [ main::r#51 ] : zp[1]:14 , reg byte a , reg byte x , 
Potential registers zp[1]:15 [ main::r#52 ] : zp[1]:15 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:16 [ main::r#53 ] : zp[1]:16 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:17 [ main::r#54 ] : zp[1]:17 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:18 [ main::r#55 ] : zp[1]:18 , reg byte a , reg byte x , 
Potential registers zp[1]:19 [ main::r#56 ] : zp[1]:19 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:20 [ main::r#57 ] : zp[1]:20 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:21 [ main::r#58 ] : zp[1]:21 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:22 [ main::r#59 ] : zp[1]:22 , reg byte a , reg byte x , 
Potential registers zp[1]:23 [ main::r#60 ] : zp[1]:23 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:24 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ] : zp[1]:24 , reg byte x , 
Potential registers zp[2]:25 [ printu::op#20 ] : zp[2]:25 , 
Potential registers zp[1]:27 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ] : zp[1]:27 , reg byte x , 
Potential registers zp[1]:28 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ] : zp[1]:28 , reg byte x , 
Potential registers zp[2]:29 [ print_line_cursor#14 print_line_cursor#27 print_line_cursor#29 print_line_cursor#0 ] : zp[2]:29 , 
Potential registers zp[2]:31 [ memset::dst#2 memset::dst#1 ] : zp[2]:31 , 
Potential registers zp[1]:33 [ print_char::ch#6 print_char::ch#0 print_char::ch#1 print_char::ch#2 print_char::ch#5 ] : zp[1]:33 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:34 [ print_char_cursor#55 print_char_cursor#98 print_char_cursor#151 print_char_cursor#56 print_char_cursor#155 print_char_cursor#159 print_char_cursor#100 print_char_cursor#150 print_char_cursor#167 ] : zp[2]:34 , 
Potential registers zp[1]:36 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ] : zp[1]:36 , reg byte x , 
Potential registers zp[2]:37 [ print_str::str#2 print_str::str#1 print_str::str#0 ] : zp[2]:37 , 
Potential registers zp[1]:39 [ main::b#0 ] : zp[1]:39 , reg byte x , 
Potential registers zp[1]:40 [ print_uchar::$0 ] : zp[1]:40 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:41 [ print_uchar::$2 ] : zp[1]:41 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [print_char] 1,306,313: zp[1]:33 [ print_char::ch#6 print_char::ch#0 print_char::ch#1 print_char::ch#2 print_char::ch#5 ] 
Uplift Scope [] 1,059,366.58: zp[2]:34 [ print_char_cursor#55 print_char_cursor#98 print_char_cursor#151 print_char_cursor#56 print_char_cursor#155 print_char_cursor#159 print_char_cursor#100 print_char_cursor#150 print_char_cursor#167 ] 20,494.99: zp[2]:29 [ print_line_cursor#14 print_line_cursor#27 print_line_cursor#29 print_line_cursor#0 ] 
Uplift Scope [print_str] 300,804.25: zp[2]:37 [ print_str::str#2 print_str::str#1 print_str::str#0 ] 
Uplift Scope [print_uchar] 2,002: zp[1]:40 [ print_uchar::$0 ] 2,002: zp[1]:41 [ print_uchar::$2 ] 955: zp[1]:36 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ] 
Uplift Scope [memset] 3,336.67: zp[2]:31 [ memset::dst#2 memset::dst#1 ] 
Uplift Scope [printu] 428.1: zp[1]:28 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ] 318.17: zp[1]:24 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ] 194.67: zp[1]:27 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ] 25.25: zp[2]:25 [ printu::op#20 ] 
Uplift Scope [main] 11.87: zp[1]:3 [ main::i#10 main::i#1 ] 9.36: zp[1]:2 [ main::a#10 main::a#1 ] 5.5: zp[1]:5 [ main::r#42 ] 5.5: zp[1]:9 [ main::r#46 ] 5.5: zp[1]:13 [ main::r#50 ] 5.5: zp[1]:17 [ main::r#54 ] 5.5: zp[1]:21 [ main::r#58 ] 3.67: zp[1]:4 [ main::r#41 ] 3.67: zp[1]:6 [ main::r#43 ] 3.67: zp[1]:7 [ main::r#44 ] 3.67: zp[1]:8 [ main::r#45 ] 3.67: zp[1]:10 [ main::r#47 ] 3.67: zp[1]:11 [ main::r#48 ] 3.67: zp[1]:12 [ main::r#49 ] 3.67: zp[1]:14 [ main::r#51 ] 3.67: zp[1]:15 [ main::r#52 ] 3.67: zp[1]:16 [ main::r#53 ] 3.67: zp[1]:18 [ main::r#55 ] 3.67: zp[1]:19 [ main::r#56 ] 3.67: zp[1]:20 [ main::r#57 ] 3.67: zp[1]:22 [ main::r#59 ] 3.67: zp[1]:23 [ main::r#60 ] 0.98: zp[1]:39 [ main::b#0 ] 
Uplift Scope [RADIX] 
Uplift Scope [print_ln] 
Uplift Scope [print_cls] 

Uplifting [print_char] best 20303 combination reg byte a [ print_char::ch#6 print_char::ch#0 print_char::ch#1 print_char::ch#2 print_char::ch#5 ] 
Uplifting [] best 20303 combination zp[2]:34 [ print_char_cursor#55 print_char_cursor#98 print_char_cursor#151 print_char_cursor#56 print_char_cursor#155 print_char_cursor#159 print_char_cursor#100 print_char_cursor#150 print_char_cursor#167 ] zp[2]:29 [ print_line_cursor#14 print_line_cursor#27 print_line_cursor#29 print_line_cursor#0 ] 
Uplifting [print_str] best 20303 combination zp[2]:37 [ print_str::str#2 print_str::str#1 print_str::str#0 ] 
Uplifting [print_uchar] best 20295 combination reg byte a [ print_uchar::$0 ] reg byte a [ print_uchar::$2 ] zp[1]:36 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ] 
Limited combination testing to 10 combinations of 32 possible.
Uplifting [memset] best 20295 combination zp[2]:31 [ memset::dst#2 memset::dst#1 ] 
Uplifting [printu] best 19692 combination zp[1]:28 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ] reg byte x [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ] zp[1]:27 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ] zp[2]:25 [ printu::op#20 ] 
Uplifting [RADIX] best 19692 combination 
Uplifting [print_ln] best 19692 combination 
Uplifting [print_cls] best 19692 combination 
Attempting to uplift remaining variables inzp[1]:36 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
Uplifting [print_uchar] best 19684 combination reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ] 
Attempting to uplift remaining variables inzp[1]:28 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
Uplifting [printu] best 19684 combination zp[1]:28 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ] 
Attempting to uplift remaining variables inzp[1]:27 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Uplifting [printu] best 19684 combination zp[1]:27 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ] 
Attempting to uplift remaining variables inzp[1]:3 [ main::i#10 main::i#1 ]
Uplifting [main] best 19684 combination zp[1]:3 [ main::i#10 main::i#1 ] 
Attempting to uplift remaining variables inzp[1]:2 [ main::a#10 main::a#1 ]
Uplifting [main] best 19684 combination zp[1]:2 [ main::a#10 main::a#1 ] 
Attempting to uplift remaining variables inzp[1]:5 [ main::r#42 ]
Uplifting [main] best 19594 combination reg byte a [ main::r#42 ] 
Attempting to uplift remaining variables inzp[1]:9 [ main::r#46 ]
Uplifting [main] best 19504 combination reg byte a [ main::r#46 ] 
Attempting to uplift remaining variables inzp[1]:13 [ main::r#50 ]
Uplifting [main] best 19414 combination reg byte a [ main::r#50 ] 
Attempting to uplift remaining variables inzp[1]:17 [ main::r#54 ]
Uplifting [main] best 19324 combination reg byte a [ main::r#54 ] 
Attempting to uplift remaining variables inzp[1]:21 [ main::r#58 ]
Uplifting [main] best 19234 combination reg byte a [ main::r#58 ] 
Attempting to uplift remaining variables inzp[1]:4 [ main::r#41 ]
Uplifting [main] best 19144 combination reg byte y [ main::r#41 ] 
Attempting to uplift remaining variables inzp[1]:6 [ main::r#43 ]
Uplifting [main] best 19144 combination zp[1]:6 [ main::r#43 ] 
Attempting to uplift remaining variables inzp[1]:7 [ main::r#44 ]
Uplifting [main] best 19054 combination reg byte y [ main::r#44 ] 
Attempting to uplift remaining variables inzp[1]:8 [ main::r#45 ]
Uplifting [main] best 18964 combination reg byte y [ main::r#45 ] 
Attempting to uplift remaining variables inzp[1]:10 [ main::r#47 ]
Uplifting [main] best 18964 combination zp[1]:10 [ main::r#47 ] 
Attempting to uplift remaining variables inzp[1]:11 [ main::r#48 ]
Uplifting [main] best 18874 combination reg byte y [ main::r#48 ] 
Attempting to uplift remaining variables inzp[1]:12 [ main::r#49 ]
Uplifting [main] best 18784 combination reg byte y [ main::r#49 ] 
Attempting to uplift remaining variables inzp[1]:14 [ main::r#51 ]
Uplifting [main] best 18784 combination zp[1]:14 [ main::r#51 ] 
Attempting to uplift remaining variables inzp[1]:15 [ main::r#52 ]
Uplifting [main] best 18694 combination reg byte y [ main::r#52 ] 
Attempting to uplift remaining variables inzp[1]:16 [ main::r#53 ]
Uplifting [main] best 18604 combination reg byte y [ main::r#53 ] 
Attempting to uplift remaining variables inzp[1]:18 [ main::r#55 ]
Uplifting [main] best 18604 combination zp[1]:18 [ main::r#55 ] 
Attempting to uplift remaining variables inzp[1]:19 [ main::r#56 ]
Uplifting [main] best 18514 combination reg byte y [ main::r#56 ] 
Attempting to uplift remaining variables inzp[1]:20 [ main::r#57 ]
Uplifting [main] best 18424 combination reg byte y [ main::r#57 ] 
Attempting to uplift remaining variables inzp[1]:22 [ main::r#59 ]
Uplifting [main] best 18424 combination zp[1]:22 [ main::r#59 ] 
Attempting to uplift remaining variables inzp[1]:23 [ main::r#60 ]
Uplifting [main] best 18334 combination reg byte y [ main::r#60 ] 
Attempting to uplift remaining variables inzp[1]:39 [ main::b#0 ]
Uplifting [main] best 18334 combination zp[1]:39 [ main::b#0 ] 
Coalescing zero page register [ zp[1]:6 [ main::r#43 ] ] with [ zp[1]:28 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ] ] - score: 1
Coalescing zero page register [ zp[2]:25 [ printu::op#20 ] ] with [ zp[2]:37 [ print_str::str#2 print_str::str#1 print_str::str#0 ] ] - score: 1
Coalescing zero page register [ zp[1]:6 [ main::r#43 printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ] ] with [ zp[1]:10 [ main::r#47 ] ] - score: 1
Coalescing zero page register [ zp[1]:6 [ main::r#43 printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 main::r#47 ] ] with [ zp[1]:14 [ main::r#51 ] ] - score: 1
Coalescing zero page register [ zp[1]:6 [ main::r#43 printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 main::r#47 main::r#51 ] ] with [ zp[1]:18 [ main::r#55 ] ] - score: 1
Coalescing zero page register [ zp[1]:6 [ main::r#43 printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 main::r#47 main::r#51 main::r#55 ] ] with [ zp[1]:22 [ main::r#59 ] ] - score: 1
Coalescing zero page register [ zp[2]:31 [ memset::dst#2 memset::dst#1 ] ] with [ zp[2]:25 [ printu::op#20 print_str::str#2 print_str::str#1 print_str::str#0 ] ]
Allocated (was zp[1]:6) zp[1]:4 [ main::r#43 printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 main::r#47 main::r#51 main::r#55 main::r#59 ]
Allocated (was zp[1]:27) zp[1]:5 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Allocated (was zp[2]:29) zp[2]:6 [ print_line_cursor#14 print_line_cursor#27 print_line_cursor#29 print_line_cursor#0 ]
Allocated (was zp[2]:31) zp[2]:8 [ memset::dst#2 memset::dst#1 printu::op#20 print_str::str#2 print_str::str#1 print_str::str#0 ]
Allocated (was zp[2]:34) zp[2]:10 [ print_char_cursor#55 print_char_cursor#98 print_char_cursor#151 print_char_cursor#56 print_char_cursor#155 print_char_cursor#159 print_char_cursor#100 print_char_cursor#150 print_char_cursor#167 ]
Allocated (was zp[1]:39) zp[1]:12 [ main::b#0 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// A lightweight library for printing on the C64.
// Printing with this library is done by calling print_ function for each element
  // Upstart
  // Commodore 64 PRG executable file
.file [name="test-comparisons.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(main)
  // Global Constants & labels
  .label print_screen = $400
  .label print_line_cursor = 6
  .label print_char_cursor = $a
.segment Code
  // main
main: {
    .label b = $c
    .label a = 2
    .label i = 3
    .label r = 4
    // [1] call print_cls 
    // [158] phi from main to print_cls [phi:main->print_cls]
  print_cls_from_main:
    jsr print_cls
    // [2] phi from main to main::@1 [phi:main->main::@1]
  __b1_from_main:
    // [2] phi print_line_cursor#29 = print_screen#0 [phi:main->main::@1#0] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor
    lda #>print_screen
    sta.z print_line_cursor+1
    // [2] phi main::i#10 = 0 [phi:main->main::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // [2] phi print_char_cursor#100 = print_screen#0 [phi:main->main::@1#2] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    // [2] phi main::a#10 = 7 [phi:main->main::@1#3] -- vbuz1=vbuc1 
    lda #7
    sta.z a
    jmp __b1
    // main::@1
  __b1:
    // [3] main::b#0 = $ce - main::a#10 -- vbuz1=vbuc1_minus_vbuz2 
    lda #$ce
    sec
    sbc.z a
    sta.z b
    // [4] if(main::a#10>=main::b#0) goto main::@2 -- vbuz1_ge_vbuz2_then_la1 
    lda.z a
    cmp.z b
    bcs __b2_from___b1
    // [5] phi from main::@1 to main::@22 [phi:main::@1->main::@22]
  __b22_from___b1:
    jmp __b22
    // main::@22
  __b22:
    // [6] phi from main::@22 to main::@2 [phi:main::@22->main::@2]
  __b2_from___b22:
    // [6] phi main::r#41 = '+' [phi:main::@22->main::@2#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b2
    // [6] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b2_from___b1:
    // [6] phi main::r#41 = '-' [phi:main::@1->main::@2#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b2
    // main::@2
  __b2:
    // [7] printu::a#0 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [8] printu::b#0 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [9] printu::res#0 = main::r#41 -- vbuz1=vbuyy 
    sty.z printu.res
    // [10] call printu 
    // [161] phi from main::@2 to printu [phi:main::@2->printu]
  printu_from___b2:
    // [161] phi printu::res#20 = printu::res#0 [phi:main::@2->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#0 [phi:main::@2->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op [phi:main::@2->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta.z printu.op
    lda #>op
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#0 [phi:main::@2->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#100 [phi:main::@2->printu#4] -- register_copy 
    jsr printu
    jmp __b43
    // main::@43
  __b43:
    // [11] if(main::a#10>=$37) goto main::@3 -- vbuz1_ge_vbuc1_then_la1 
    lda.z a
    cmp #$37
    bcs __b3_from___b43
    // [12] phi from main::@43 to main::@23 [phi:main::@43->main::@23]
  __b23_from___b43:
    jmp __b23
    // main::@23
  __b23:
    // [13] phi from main::@23 to main::@3 [phi:main::@23->main::@3]
  __b3_from___b23:
    // [13] phi main::r#42 = '+' [phi:main::@23->main::@3#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b3
    // [13] phi from main::@43 to main::@3 [phi:main::@43->main::@3]
  __b3_from___b43:
    // [13] phi main::r#42 = '-' [phi:main::@43->main::@3#0] -- vbuaa=vbuc1 
    lda #'-'
    jmp __b3
    // main::@3
  __b3:
    // [14] printu::a#1 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [15] printu::res#1 = main::r#42 -- vbuz1=vbuaa 
    sta.z printu.res
    // [16] call printu 
    // [161] phi from main::@3 to printu [phi:main::@3->printu]
  printu_from___b3:
    // [161] phi printu::res#20 = printu::res#1 [phi:main::@3->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@3->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op [phi:main::@3->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta.z printu.op
    lda #>op
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#1 [phi:main::@3->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@3->printu#4] -- register_copy 
    jsr printu
    jmp __b44
    // main::@44
  __b44:
    // [17] if(main::a#10>=main::cs[main::i#10]) goto main::@4 -- vbuz1_ge_pbuc1_derefidx_vbuz2_then_la1 
    lda.z a
    ldy.z i
    cmp cs,y
    bcs __b4_from___b44
    // [18] phi from main::@44 to main::@24 [phi:main::@44->main::@24]
  __b24_from___b44:
    jmp __b24
    // main::@24
  __b24:
    // [19] phi from main::@24 to main::@4 [phi:main::@24->main::@4]
  __b4_from___b24:
    // [19] phi main::r#43 = '+' [phi:main::@24->main::@4#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b4
    // [19] phi from main::@44 to main::@4 [phi:main::@44->main::@4]
  __b4_from___b44:
    // [19] phi main::r#43 = '-' [phi:main::@44->main::@4#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    jmp __b4
    // main::@4
  __b4:
    // [20] printu::a#2 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [21] printu::b#2 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [22] printu::res#2 = main::r#43
    // [23] call printu 
    // [161] phi from main::@4 to printu [phi:main::@4->printu]
  printu_from___b4:
    // [161] phi printu::res#20 = printu::res#2 [phi:main::@4->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#2 [phi:main::@4->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op [phi:main::@4->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta.z printu.op
    lda #>op
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#2 [phi:main::@4->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@4->printu#4] -- register_copy 
    jsr printu
    jmp __b45
    // main::@45
  __b45:
    // [24] if(main::a#10>=main::a#10) goto main::@5 -- vbuz1_ge_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bcs __b5_from___b45
    // [25] phi from main::@45 to main::@25 [phi:main::@45->main::@25]
  __b25_from___b45:
    jmp __b25
    // main::@25
  __b25:
    // [26] phi from main::@25 to main::@5 [phi:main::@25->main::@5]
  __b5_from___b25:
    // [26] phi main::r#44 = '+' [phi:main::@25->main::@5#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b5
    // [26] phi from main::@45 to main::@5 [phi:main::@45->main::@5]
  __b5_from___b45:
    // [26] phi main::r#44 = '-' [phi:main::@45->main::@5#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b5
    // main::@5
  __b5:
    // [27] printu::a#3 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [28] printu::b#3 = main::a#10 -- vbuz1=vbuz2 
    lda.z a
    sta.z printu.b
    // [29] printu::res#3 = main::r#44 -- vbuz1=vbuyy 
    sty.z printu.res
    // [30] call printu 
    // [161] phi from main::@5 to printu [phi:main::@5->printu]
  printu_from___b5:
    // [161] phi printu::res#20 = printu::res#3 [phi:main::@5->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#3 [phi:main::@5->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op [phi:main::@5->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta.z printu.op
    lda #>op
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#3 [phi:main::@5->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@5->printu#4] -- register_copy 
    jsr printu
    // [31] phi from main::@5 to main::@46 [phi:main::@5->main::@46]
  __b46_from___b5:
    jmp __b46
    // main::@46
  __b46:
    // [32] call print_ln 
    // [174] phi from main::@46 to print_ln [phi:main::@46->print_ln]
  print_ln_from___b46:
    // [174] phi print_line_cursor#27 = print_line_cursor#29 [phi:main::@46->print_ln#0] -- register_copy 
    jsr print_ln
    jmp __b47
    // main::@47
  __b47:
    // [33] if(main::a#10<=main::b#0) goto main::@6 -- vbuz1_le_vbuz2_then_la1 
    lda.z b
    cmp.z a
    bcs __b6_from___b47
    // [34] phi from main::@47 to main::@26 [phi:main::@47->main::@26]
  __b26_from___b47:
    jmp __b26
    // main::@26
  __b26:
    // [35] phi from main::@26 to main::@6 [phi:main::@26->main::@6]
  __b6_from___b26:
    // [35] phi main::r#45 = '+' [phi:main::@26->main::@6#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b6
    // [35] phi from main::@47 to main::@6 [phi:main::@47->main::@6]
  __b6_from___b47:
    // [35] phi main::r#45 = '-' [phi:main::@47->main::@6#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b6
    // main::@6
  __b6:
    // [36] printu::a#4 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [37] printu::b#4 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [38] printu::res#4 = main::r#45 -- vbuz1=vbuyy 
    sty.z printu.res
    // [39] print_char_cursor#167 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [40] call printu 
    // [161] phi from main::@6 to printu [phi:main::@6->printu]
  printu_from___b6:
    // [161] phi printu::res#20 = printu::res#4 [phi:main::@6->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#4 [phi:main::@6->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op4 [phi:main::@6->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta.z printu.op
    lda #>op4
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#4 [phi:main::@6->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#167 [phi:main::@6->printu#4] -- register_copy 
    jsr printu
    jmp __b48
    // main::@48
  __b48:
    // [41] if(main::a#10<$37+1) goto main::@7 -- vbuz1_lt_vbuc1_then_la1 
    lda.z a
    cmp #$37+1
    bcc __b7_from___b48
    // [42] phi from main::@48 to main::@27 [phi:main::@48->main::@27]
  __b27_from___b48:
    jmp __b27
    // main::@27
  __b27:
    // [43] phi from main::@27 to main::@7 [phi:main::@27->main::@7]
  __b7_from___b27:
    // [43] phi main::r#46 = '+' [phi:main::@27->main::@7#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b7
    // [43] phi from main::@48 to main::@7 [phi:main::@48->main::@7]
  __b7_from___b48:
    // [43] phi main::r#46 = '-' [phi:main::@48->main::@7#0] -- vbuaa=vbuc1 
    lda #'-'
    jmp __b7
    // main::@7
  __b7:
    // [44] printu::a#5 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [45] printu::res#5 = main::r#46 -- vbuz1=vbuaa 
    sta.z printu.res
    // [46] call printu 
    // [161] phi from main::@7 to printu [phi:main::@7->printu]
  printu_from___b7:
    // [161] phi printu::res#20 = printu::res#5 [phi:main::@7->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@7->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op4 [phi:main::@7->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta.z printu.op
    lda #>op4
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#5 [phi:main::@7->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@7->printu#4] -- register_copy 
    jsr printu
    jmp __b49
    // main::@49
  __b49:
    // [47] if(main::a#10<=main::cs[main::i#10]) goto main::@8 -- vbuz1_le_pbuc1_derefidx_vbuz2_then_la1 
    ldy.z i
    lda cs,y
    cmp.z a
    bcs __b8_from___b49
    // [48] phi from main::@49 to main::@28 [phi:main::@49->main::@28]
  __b28_from___b49:
    jmp __b28
    // main::@28
  __b28:
    // [49] phi from main::@28 to main::@8 [phi:main::@28->main::@8]
  __b8_from___b28:
    // [49] phi main::r#47 = '+' [phi:main::@28->main::@8#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b8
    // [49] phi from main::@49 to main::@8 [phi:main::@49->main::@8]
  __b8_from___b49:
    // [49] phi main::r#47 = '-' [phi:main::@49->main::@8#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    jmp __b8
    // main::@8
  __b8:
    // [50] printu::a#6 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [51] printu::b#6 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [52] printu::res#6 = main::r#47
    // [53] call printu 
    // [161] phi from main::@8 to printu [phi:main::@8->printu]
  printu_from___b8:
    // [161] phi printu::res#20 = printu::res#6 [phi:main::@8->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#6 [phi:main::@8->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op4 [phi:main::@8->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta.z printu.op
    lda #>op4
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#6 [phi:main::@8->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@8->printu#4] -- register_copy 
    jsr printu
    jmp __b50
    // main::@50
  __b50:
    // [54] if(main::a#10<=main::a#10) goto main::@9 -- vbuz1_le_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bcs __b9_from___b50
    // [55] phi from main::@50 to main::@29 [phi:main::@50->main::@29]
  __b29_from___b50:
    jmp __b29
    // main::@29
  __b29:
    // [56] phi from main::@29 to main::@9 [phi:main::@29->main::@9]
  __b9_from___b29:
    // [56] phi main::r#48 = '+' [phi:main::@29->main::@9#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b9
    // [56] phi from main::@50 to main::@9 [phi:main::@50->main::@9]
  __b9_from___b50:
    // [56] phi main::r#48 = '-' [phi:main::@50->main::@9#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b9
    // main::@9
  __b9:
    // [57] printu::a#7 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [58] printu::b#7 = main::a#10 -- vbuz1=vbuz2 
    lda.z a
    sta.z printu.b
    // [59] printu::res#7 = main::r#48 -- vbuz1=vbuyy 
    sty.z printu.res
    // [60] call printu 
    // [161] phi from main::@9 to printu [phi:main::@9->printu]
  printu_from___b9:
    // [161] phi printu::res#20 = printu::res#7 [phi:main::@9->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#7 [phi:main::@9->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op4 [phi:main::@9->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta.z printu.op
    lda #>op4
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#7 [phi:main::@9->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@9->printu#4] -- register_copy 
    jsr printu
    // [61] phi from main::@9 to main::@51 [phi:main::@9->main::@51]
  __b51_from___b9:
    jmp __b51
    // main::@51
  __b51:
    // [62] call print_ln 
    // [174] phi from main::@51 to print_ln [phi:main::@51->print_ln]
  print_ln_from___b51:
    // [174] phi print_line_cursor#27 = print_line_cursor#0 [phi:main::@51->print_ln#0] -- register_copy 
    jsr print_ln
    jmp __b52
    // main::@52
  __b52:
    // [63] if(main::a#10>main::b#0) goto main::@10 -- vbuz1_gt_vbuz2_then_la1 
    lda.z b
    cmp.z a
    bcc __b10_from___b52
    // [64] phi from main::@52 to main::@30 [phi:main::@52->main::@30]
  __b30_from___b52:
    jmp __b30
    // main::@30
  __b30:
    // [65] phi from main::@30 to main::@10 [phi:main::@30->main::@10]
  __b10_from___b30:
    // [65] phi main::r#49 = '+' [phi:main::@30->main::@10#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b10
    // [65] phi from main::@52 to main::@10 [phi:main::@52->main::@10]
  __b10_from___b52:
    // [65] phi main::r#49 = '-' [phi:main::@52->main::@10#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b10
    // main::@10
  __b10:
    // [66] printu::a#8 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [67] printu::b#8 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [68] printu::res#8 = main::r#49 -- vbuz1=vbuyy 
    sty.z printu.res
    // [69] print_char_cursor#151 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [70] call printu 
    // [161] phi from main::@10 to printu [phi:main::@10->printu]
  printu_from___b10:
    // [161] phi printu::res#20 = printu::res#8 [phi:main::@10->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#8 [phi:main::@10->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op8 [phi:main::@10->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta.z printu.op
    lda #>op8
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#8 [phi:main::@10->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#151 [phi:main::@10->printu#4] -- register_copy 
    jsr printu
    jmp __b53
    // main::@53
  __b53:
    // [71] if(main::a#10>=$37+1) goto main::@11 -- vbuz1_ge_vbuc1_then_la1 
    lda.z a
    cmp #$37+1
    bcs __b11_from___b53
    // [72] phi from main::@53 to main::@31 [phi:main::@53->main::@31]
  __b31_from___b53:
    jmp __b31
    // main::@31
  __b31:
    // [73] phi from main::@31 to main::@11 [phi:main::@31->main::@11]
  __b11_from___b31:
    // [73] phi main::r#50 = '+' [phi:main::@31->main::@11#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b11
    // [73] phi from main::@53 to main::@11 [phi:main::@53->main::@11]
  __b11_from___b53:
    // [73] phi main::r#50 = '-' [phi:main::@53->main::@11#0] -- vbuaa=vbuc1 
    lda #'-'
    jmp __b11
    // main::@11
  __b11:
    // [74] printu::a#9 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [75] printu::res#9 = main::r#50 -- vbuz1=vbuaa 
    sta.z printu.res
    // [76] call printu 
    // [161] phi from main::@11 to printu [phi:main::@11->printu]
  printu_from___b11:
    // [161] phi printu::res#20 = printu::res#9 [phi:main::@11->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@11->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op8 [phi:main::@11->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta.z printu.op
    lda #>op8
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#9 [phi:main::@11->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@11->printu#4] -- register_copy 
    jsr printu
    jmp __b54
    // main::@54
  __b54:
    // [77] if(main::a#10>main::cs[main::i#10]) goto main::@12 -- vbuz1_gt_pbuc1_derefidx_vbuz2_then_la1 
    ldy.z i
    lda cs,y
    cmp.z a
    bcc __b12_from___b54
    // [78] phi from main::@54 to main::@32 [phi:main::@54->main::@32]
  __b32_from___b54:
    jmp __b32
    // main::@32
  __b32:
    // [79] phi from main::@32 to main::@12 [phi:main::@32->main::@12]
  __b12_from___b32:
    // [79] phi main::r#51 = '+' [phi:main::@32->main::@12#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b12
    // [79] phi from main::@54 to main::@12 [phi:main::@54->main::@12]
  __b12_from___b54:
    // [79] phi main::r#51 = '-' [phi:main::@54->main::@12#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    jmp __b12
    // main::@12
  __b12:
    // [80] printu::a#10 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [81] printu::b#10 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [82] printu::res#10 = main::r#51
    // [83] call printu 
    // [161] phi from main::@12 to printu [phi:main::@12->printu]
  printu_from___b12:
    // [161] phi printu::res#20 = printu::res#10 [phi:main::@12->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#10 [phi:main::@12->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op8 [phi:main::@12->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta.z printu.op
    lda #>op8
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#10 [phi:main::@12->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@12->printu#4] -- register_copy 
    jsr printu
    jmp __b55
    // main::@55
  __b55:
    // [84] if(main::a#10>main::a#10) goto main::@13 -- vbuz1_gt_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bcc __b13_from___b55
    // [85] phi from main::@55 to main::@33 [phi:main::@55->main::@33]
  __b33_from___b55:
    jmp __b33
    // main::@33
  __b33:
    // [86] phi from main::@33 to main::@13 [phi:main::@33->main::@13]
  __b13_from___b33:
    // [86] phi main::r#52 = '+' [phi:main::@33->main::@13#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b13
    // [86] phi from main::@55 to main::@13 [phi:main::@55->main::@13]
  __b13_from___b55:
    // [86] phi main::r#52 = '-' [phi:main::@55->main::@13#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b13
    // main::@13
  __b13:
    // [87] printu::a#11 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [88] printu::b#11 = main::a#10 -- vbuz1=vbuz2 
    lda.z a
    sta.z printu.b
    // [89] printu::res#11 = main::r#52 -- vbuz1=vbuyy 
    sty.z printu.res
    // [90] call printu 
    // [161] phi from main::@13 to printu [phi:main::@13->printu]
  printu_from___b13:
    // [161] phi printu::res#20 = printu::res#11 [phi:main::@13->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#11 [phi:main::@13->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op8 [phi:main::@13->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta.z printu.op
    lda #>op8
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#11 [phi:main::@13->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@13->printu#4] -- register_copy 
    jsr printu
    // [91] phi from main::@13 to main::@56 [phi:main::@13->main::@56]
  __b56_from___b13:
    jmp __b56
    // main::@56
  __b56:
    // [92] call print_ln 
    // [174] phi from main::@56 to print_ln [phi:main::@56->print_ln]
  print_ln_from___b56:
    // [174] phi print_line_cursor#27 = print_line_cursor#0 [phi:main::@56->print_ln#0] -- register_copy 
    jsr print_ln
    jmp __b57
    // main::@57
  __b57:
    // [93] if(main::a#10<main::b#0) goto main::@14 -- vbuz1_lt_vbuz2_then_la1 
    lda.z a
    cmp.z b
    bcc __b14_from___b57
    // [94] phi from main::@57 to main::@34 [phi:main::@57->main::@34]
  __b34_from___b57:
    jmp __b34
    // main::@34
  __b34:
    // [95] phi from main::@34 to main::@14 [phi:main::@34->main::@14]
  __b14_from___b34:
    // [95] phi main::r#53 = '+' [phi:main::@34->main::@14#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b14
    // [95] phi from main::@57 to main::@14 [phi:main::@57->main::@14]
  __b14_from___b57:
    // [95] phi main::r#53 = '-' [phi:main::@57->main::@14#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b14
    // main::@14
  __b14:
    // [96] printu::a#12 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [97] printu::b#12 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [98] printu::res#12 = main::r#53 -- vbuz1=vbuyy 
    sty.z printu.res
    // [99] print_char_cursor#155 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [100] call printu 
    // [161] phi from main::@14 to printu [phi:main::@14->printu]
  printu_from___b14:
    // [161] phi printu::res#20 = printu::res#12 [phi:main::@14->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#12 [phi:main::@14->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op12 [phi:main::@14->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta.z printu.op
    lda #>op12
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#12 [phi:main::@14->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#155 [phi:main::@14->printu#4] -- register_copy 
    jsr printu
    jmp __b58
    // main::@58
  __b58:
    // [101] if(main::a#10<$37) goto main::@15 -- vbuz1_lt_vbuc1_then_la1 
    lda.z a
    cmp #$37
    bcc __b15_from___b58
    // [102] phi from main::@58 to main::@35 [phi:main::@58->main::@35]
  __b35_from___b58:
    jmp __b35
    // main::@35
  __b35:
    // [103] phi from main::@35 to main::@15 [phi:main::@35->main::@15]
  __b15_from___b35:
    // [103] phi main::r#54 = '+' [phi:main::@35->main::@15#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b15
    // [103] phi from main::@58 to main::@15 [phi:main::@58->main::@15]
  __b15_from___b58:
    // [103] phi main::r#54 = '-' [phi:main::@58->main::@15#0] -- vbuaa=vbuc1 
    lda #'-'
    jmp __b15
    // main::@15
  __b15:
    // [104] printu::a#13 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [105] printu::res#13 = main::r#54 -- vbuz1=vbuaa 
    sta.z printu.res
    // [106] call printu 
    // [161] phi from main::@15 to printu [phi:main::@15->printu]
  printu_from___b15:
    // [161] phi printu::res#20 = printu::res#13 [phi:main::@15->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@15->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op12 [phi:main::@15->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta.z printu.op
    lda #>op12
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#13 [phi:main::@15->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@15->printu#4] -- register_copy 
    jsr printu
    jmp __b59
    // main::@59
  __b59:
    // [107] if(main::a#10<main::cs[main::i#10]) goto main::@16 -- vbuz1_lt_pbuc1_derefidx_vbuz2_then_la1 
    lda.z a
    ldy.z i
    cmp cs,y
    bcc __b16_from___b59
    // [108] phi from main::@59 to main::@36 [phi:main::@59->main::@36]
  __b36_from___b59:
    jmp __b36
    // main::@36
  __b36:
    // [109] phi from main::@36 to main::@16 [phi:main::@36->main::@16]
  __b16_from___b36:
    // [109] phi main::r#55 = '+' [phi:main::@36->main::@16#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b16
    // [109] phi from main::@59 to main::@16 [phi:main::@59->main::@16]
  __b16_from___b59:
    // [109] phi main::r#55 = '-' [phi:main::@59->main::@16#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    jmp __b16
    // main::@16
  __b16:
    // [110] printu::a#14 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [111] printu::b#14 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [112] printu::res#14 = main::r#55
    // [113] call printu 
    // [161] phi from main::@16 to printu [phi:main::@16->printu]
  printu_from___b16:
    // [161] phi printu::res#20 = printu::res#14 [phi:main::@16->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#14 [phi:main::@16->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op12 [phi:main::@16->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta.z printu.op
    lda #>op12
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#14 [phi:main::@16->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@16->printu#4] -- register_copy 
    jsr printu
    jmp __b60
    // main::@60
  __b60:
    // [114] if(main::a#10<main::a#10) goto main::@17 -- vbuz1_lt_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bcc __b17_from___b60
    // [115] phi from main::@60 to main::@37 [phi:main::@60->main::@37]
  __b37_from___b60:
    jmp __b37
    // main::@37
  __b37:
    // [116] phi from main::@37 to main::@17 [phi:main::@37->main::@17]
  __b17_from___b37:
    // [116] phi main::r#56 = '+' [phi:main::@37->main::@17#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b17
    // [116] phi from main::@60 to main::@17 [phi:main::@60->main::@17]
  __b17_from___b60:
    // [116] phi main::r#56 = '-' [phi:main::@60->main::@17#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b17
    // main::@17
  __b17:
    // [117] printu::a#15 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [118] printu::b#15 = main::a#10 -- vbuz1=vbuz2 
    lda.z a
    sta.z printu.b
    // [119] printu::res#15 = main::r#56 -- vbuz1=vbuyy 
    sty.z printu.res
    // [120] call printu 
    // [161] phi from main::@17 to printu [phi:main::@17->printu]
  printu_from___b17:
    // [161] phi printu::res#20 = printu::res#15 [phi:main::@17->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#15 [phi:main::@17->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op12 [phi:main::@17->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta.z printu.op
    lda #>op12
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#15 [phi:main::@17->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@17->printu#4] -- register_copy 
    jsr printu
    // [121] phi from main::@17 to main::@61 [phi:main::@17->main::@61]
  __b61_from___b17:
    jmp __b61
    // main::@61
  __b61:
    // [122] call print_ln 
    // [174] phi from main::@61 to print_ln [phi:main::@61->print_ln]
  print_ln_from___b61:
    // [174] phi print_line_cursor#27 = print_line_cursor#0 [phi:main::@61->print_ln#0] -- register_copy 
    jsr print_ln
    jmp __b62
    // main::@62
  __b62:
    // [123] if(main::a#10!=main::b#0) goto main::@18 -- vbuz1_neq_vbuz2_then_la1 
    lda.z a
    cmp.z b
    bne __b18_from___b62
    // [124] phi from main::@62 to main::@38 [phi:main::@62->main::@38]
  __b38_from___b62:
    jmp __b38
    // main::@38
  __b38:
    // [125] phi from main::@38 to main::@18 [phi:main::@38->main::@18]
  __b18_from___b38:
    // [125] phi main::r#57 = '+' [phi:main::@38->main::@18#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b18
    // [125] phi from main::@62 to main::@18 [phi:main::@62->main::@18]
  __b18_from___b62:
    // [125] phi main::r#57 = '-' [phi:main::@62->main::@18#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b18
    // main::@18
  __b18:
    // [126] printu::a#16 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [127] printu::b#16 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [128] printu::res#16 = main::r#57 -- vbuz1=vbuyy 
    sty.z printu.res
    // [129] print_char_cursor#159 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [130] call printu 
    // [161] phi from main::@18 to printu [phi:main::@18->printu]
  printu_from___b18:
    // [161] phi printu::res#20 = printu::res#16 [phi:main::@18->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#16 [phi:main::@18->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op16 [phi:main::@18->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta.z printu.op
    lda #>op16
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#16 [phi:main::@18->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#159 [phi:main::@18->printu#4] -- register_copy 
    jsr printu
    jmp __b63
    // main::@63
  __b63:
    // [131] if(main::a#10!=$37) goto main::@19 -- vbuz1_neq_vbuc1_then_la1 
    lda #$37
    cmp.z a
    bne __b19_from___b63
    // [132] phi from main::@63 to main::@39 [phi:main::@63->main::@39]
  __b39_from___b63:
    jmp __b39
    // main::@39
  __b39:
    // [133] phi from main::@39 to main::@19 [phi:main::@39->main::@19]
  __b19_from___b39:
    // [133] phi main::r#58 = '+' [phi:main::@39->main::@19#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b19
    // [133] phi from main::@63 to main::@19 [phi:main::@63->main::@19]
  __b19_from___b63:
    // [133] phi main::r#58 = '-' [phi:main::@63->main::@19#0] -- vbuaa=vbuc1 
    lda #'-'
    jmp __b19
    // main::@19
  __b19:
    // [134] printu::a#17 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [135] printu::res#17 = main::r#58 -- vbuz1=vbuaa 
    sta.z printu.res
    // [136] call printu 
    // [161] phi from main::@19 to printu [phi:main::@19->printu]
  printu_from___b19:
    // [161] phi printu::res#20 = printu::res#17 [phi:main::@19->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@19->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op16 [phi:main::@19->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta.z printu.op
    lda #>op16
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#17 [phi:main::@19->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@19->printu#4] -- register_copy 
    jsr printu
    jmp __b64
    // main::@64
  __b64:
    // [137] if(main::a#10!=main::cs[main::i#10]) goto main::@20 -- vbuz1_neq_pbuc1_derefidx_vbuz2_then_la1 
    lda.z a
    ldy.z i
    cmp cs,y
    bne __b20_from___b64
    // [138] phi from main::@64 to main::@40 [phi:main::@64->main::@40]
  __b40_from___b64:
    jmp __b40
    // main::@40
  __b40:
    // [139] phi from main::@40 to main::@20 [phi:main::@40->main::@20]
  __b20_from___b40:
    // [139] phi main::r#59 = '+' [phi:main::@40->main::@20#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b20
    // [139] phi from main::@64 to main::@20 [phi:main::@64->main::@20]
  __b20_from___b64:
    // [139] phi main::r#59 = '-' [phi:main::@64->main::@20#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    jmp __b20
    // main::@20
  __b20:
    // [140] printu::a#18 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [141] printu::b#18 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [142] printu::res#18 = main::r#59
    // [143] call printu 
    // [161] phi from main::@20 to printu [phi:main::@20->printu]
  printu_from___b20:
    // [161] phi printu::res#20 = printu::res#18 [phi:main::@20->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#18 [phi:main::@20->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op16 [phi:main::@20->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta.z printu.op
    lda #>op16
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#18 [phi:main::@20->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@20->printu#4] -- register_copy 
    jsr printu
    jmp __b65
    // main::@65
  __b65:
    // [144] if(main::a#10!=main::a#10) goto main::@21 -- vbuz1_neq_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bne __b21_from___b65
    // [145] phi from main::@65 to main::@41 [phi:main::@65->main::@41]
  __b41_from___b65:
    jmp __b41
    // main::@41
  __b41:
    // [146] phi from main::@41 to main::@21 [phi:main::@41->main::@21]
  __b21_from___b41:
    // [146] phi main::r#60 = '+' [phi:main::@41->main::@21#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b21
    // [146] phi from main::@65 to main::@21 [phi:main::@65->main::@21]
  __b21_from___b65:
    // [146] phi main::r#60 = '-' [phi:main::@65->main::@21#0] -- vbuyy=vbuc1 
    ldy #'-'
    jmp __b21
    // main::@21
  __b21:
    // [147] printu::a#19 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [148] printu::b#19 = main::a#10 -- vbuz1=vbuz2 
    lda.z a
    sta.z printu.b
    // [149] printu::res#19 = main::r#60 -- vbuz1=vbuyy 
    sty.z printu.res
    // [150] call printu 
    // [161] phi from main::@21 to printu [phi:main::@21->printu]
  printu_from___b21:
    // [161] phi printu::res#20 = printu::res#19 [phi:main::@21->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#19 [phi:main::@21->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op16 [phi:main::@21->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta.z printu.op
    lda #>op16
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#19 [phi:main::@21->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@21->printu#4] -- register_copy 
    jsr printu
    // [151] phi from main::@21 to main::@66 [phi:main::@21->main::@66]
  __b66_from___b21:
    jmp __b66
    // main::@66
  __b66:
    // [152] call print_ln 
    // [174] phi from main::@66 to print_ln [phi:main::@66->print_ln]
  print_ln_from___b66:
    // [174] phi print_line_cursor#27 = print_line_cursor#0 [phi:main::@66->print_ln#0] -- register_copy 
    jsr print_ln
    jmp __b67
    // main::@67
  __b67:
    // [153] main::a#1 = main::a#10 + $30 -- vbuz1=vbuz1_plus_vbuc1 
    lax.z a
    axs #-[$30]
    stx.z a
    // [154] main::i#1 = ++ main::i#10 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [155] if(main::i#1!=5) goto main::@68 -- vbuz1_neq_vbuc1_then_la1 
    lda #5
    cmp.z i
    bne __b68
    // [156] phi from main::@42 main::@67 to main::@42 [phi:main::@42/main::@67->main::@42]
  __b42_from___b42:
  __b42_from___b67:
    jmp __b42
    // main::@42
  __b42:
    jmp __b42_from___b42
    // main::@68
  __b68:
    // [157] print_char_cursor#150 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [2] phi from main::@68 to main::@1 [phi:main::@68->main::@1]
  __b1_from___b68:
    // [2] phi print_line_cursor#29 = print_line_cursor#0 [phi:main::@68->main::@1#0] -- register_copy 
    // [2] phi main::i#10 = main::i#1 [phi:main::@68->main::@1#1] -- register_copy 
    // [2] phi print_char_cursor#100 = print_char_cursor#150 [phi:main::@68->main::@1#2] -- register_copy 
    // [2] phi main::a#10 = main::a#1 [phi:main::@68->main::@1#3] -- register_copy 
    jmp __b1
  .segment Data
    cs: .byte 7, $c7, $37, $97, $67
    op: .text "< "
    .byte 0
    op4: .text "> "
    .byte 0
    op8: .text "<="
    .byte 0
    op12: .text ">="
    .byte 0
    op16: .text "=="
    .byte 0
}
.segment Code
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // [159] call memset 
    // [179] phi from print_cls to memset [phi:print_cls->memset]
  memset_from_print_cls:
    jsr memset
    jmp __breturn
    // print_cls::@return
  __breturn:
    // [160] return 
    rts
}
  // printu
// printu(byte register(X) a, byte* zp(8) op, byte zp(5) b, byte zp(4) res)
printu: {
    .label b = 5
    .label res = 4
    .label op = 8
    // [162] call print_char 
    // [185] phi from printu to print_char [phi:printu->print_char]
  print_char_from_printu:
    // [185] phi print_char_cursor#55 = print_char_cursor#98 [phi:printu->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = ' ' [phi:printu->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    jmp __b1
    // printu::@1
  __b1:
    // [163] print_uchar::b#0 = printu::a#20
    // [164] call print_uchar 
    // [189] phi from printu::@1 to print_uchar [phi:printu::@1->print_uchar]
  print_uchar_from___b1:
    // [189] phi print_uchar::b#2 = print_uchar::b#0 [phi:printu::@1->print_uchar#0] -- register_copy 
    jsr print_uchar
    jmp __b2
    // printu::@2
  __b2:
    // [165] print_str::str#1 = printu::op#20
    // [166] call print_str 
    // [197] phi from printu::@2 to print_str [phi:printu::@2->print_str]
  print_str_from___b2:
    jsr print_str
    jmp __b3
    // printu::@3
  __b3:
    // [167] print_uchar::b#1 = printu::b#20 -- vbuxx=vbuz1 
    ldx.z b
    // [168] call print_uchar 
    // [189] phi from printu::@3 to print_uchar [phi:printu::@3->print_uchar]
  print_uchar_from___b3:
    // [189] phi print_uchar::b#2 = print_uchar::b#1 [phi:printu::@3->print_uchar#0] -- register_copy 
    jsr print_uchar
    // [169] phi from printu::@3 to printu::@4 [phi:printu::@3->printu::@4]
  __b4_from___b3:
    jmp __b4
    // printu::@4
  __b4:
    // [170] call print_char 
    // [185] phi from printu::@4 to print_char [phi:printu::@4->print_char]
  print_char_from___b4:
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:printu::@4->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = ' ' [phi:printu::@4->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    jmp __b5
    // printu::@5
  __b5:
    // [171] print_char::ch#5 = printu::res#20 -- vbuaa=vbuz1 
    lda.z res
    // [172] call print_char 
    // [185] phi from printu::@5 to print_char [phi:printu::@5->print_char]
  print_char_from___b5:
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:printu::@5->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = print_char::ch#5 [phi:printu::@5->print_char#1] -- register_copy 
    jsr print_char
    jmp __breturn
    // printu::@return
  __breturn:
    // [173] return 
    rts
}
  // print_ln
// Print a newline
print_ln: {
    // [175] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  __b1_from_print_ln:
  __b1_from___b1:
    // [175] phi print_line_cursor#14 = print_line_cursor#27 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp __b1
    // print_ln::@1
  __b1:
    // [176] print_line_cursor#0 = print_line_cursor#14 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor
    sta.z print_line_cursor
    bcc !+
    inc.z print_line_cursor+1
  !:
    // [177] if(print_line_cursor#0<print_char_cursor#56) goto print_ln::@1 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b1_from___b1
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b1_from___b1
  !:
    jmp __breturn
    // print_ln::@return
  __breturn:
    // [178] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = print_screen
    .label end = str+num
    .label dst = 8
    // [180] phi from memset to memset::@1 [phi:memset->memset::@1]
  __b1_from_memset:
    // [180] phi memset::dst#2 = (byte*)memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    jmp __b1
    // memset::@1
  __b1:
    // [181] if(memset::dst#2!=memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    jmp __breturn
    // memset::@return
  __breturn:
    // [182] return 
    rts
    // memset::@2
  __b2:
    // [183] *memset::dst#2 = memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // [184] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [180] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
  __b1_from___b2:
    // [180] phi memset::dst#2 = memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // [186] *print_char_cursor#55 = print_char::ch#6 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // [187] print_char_cursor#56 = ++ print_char_cursor#55 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    jmp __breturn
    // print_char::@return
  __breturn:
    // [188] return 
    rts
}
  // print_uchar
// Print a char as HEX
// print_uchar(byte register(X) b)
print_uchar: {
    // [190] print_uchar::$0 = print_uchar::b#2 >> 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // [191] print_char::ch#1 = print_hextab[print_uchar::$0] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [192] call print_char 
  // Table of hexadecimal digits
    // [185] phi from print_uchar to print_char [phi:print_uchar->print_char]
  print_char_from_print_uchar:
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:print_uchar->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = print_char::ch#1 [phi:print_uchar->print_char#1] -- register_copy 
    jsr print_char
    jmp __b1
    // print_uchar::@1
  __b1:
    // [193] print_uchar::$2 = print_uchar::b#2 & $f -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
    // [194] print_char::ch#2 = print_hextab[print_uchar::$2] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [195] call print_char 
    // [185] phi from print_uchar::@1 to print_char [phi:print_uchar::@1->print_char]
  print_char_from___b1:
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:print_uchar::@1->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = print_char::ch#2 [phi:print_uchar::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp __breturn
    // print_uchar::@return
  __breturn:
    // [196] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zp(8) str)
print_str: {
    .label str = 8
    // [198] phi from print_str print_str::@3 to print_str::@1 [phi:print_str/print_str::@3->print_str::@1]
  __b1_from_print_str:
  __b1_from___b3:
    // [198] phi print_str::str#2 = print_str::str#1 [phi:print_str/print_str::@3->print_str::@1#0] -- register_copy 
    jmp __b1
    // print_str::@1
  __b1:
    // [199] if(0!=*print_str::str#2) goto print_str::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // print_str::@return
  __breturn:
    // [200] return 
    rts
    // print_str::@2
  __b2:
    // [201] print_char::ch#0 = *print_str::str#2 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
    // [202] call print_char 
    // [185] phi from print_str::@2 to print_char [phi:print_str::@2->print_char]
  print_char_from___b2:
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:print_str::@2->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = print_char::ch#0 [phi:print_str::@2->print_char#1] -- register_copy 
    jsr print_char
    jmp __b3
    // print_str::@3
  __b3:
    // [203] print_str::str#0 = ++ print_str::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1_from___b3
}
  // File Data
.segment Data
  print_hextab: .text "0123456789abcdef"

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __b1
Removing instruction jmp __b22
Removing instruction jmp __b2
Removing instruction jmp __b43
Removing instruction jmp __b23
Removing instruction jmp __b3
Removing instruction jmp __b44
Removing instruction jmp __b24
Removing instruction jmp __b4
Removing instruction jmp __b45
Removing instruction jmp __b25
Removing instruction jmp __b5
Removing instruction jmp __b46
Removing instruction jmp __b47
Removing instruction jmp __b26
Removing instruction jmp __b6
Removing instruction jmp __b48
Removing instruction jmp __b27
Removing instruction jmp __b7
Removing instruction jmp __b49
Removing instruction jmp __b28
Removing instruction jmp __b8
Removing instruction jmp __b50
Removing instruction jmp __b29
Removing instruction jmp __b9
Removing instruction jmp __b51
Removing instruction jmp __b52
Removing instruction jmp __b30
Removing instruction jmp __b10
Removing instruction jmp __b53
Removing instruction jmp __b31
Removing instruction jmp __b11
Removing instruction jmp __b54
Removing instruction jmp __b32
Removing instruction jmp __b12
Removing instruction jmp __b55
Removing instruction jmp __b33
Removing instruction jmp __b13
Removing instruction jmp __b56
Removing instruction jmp __b57
Removing instruction jmp __b34
Removing instruction jmp __b14
Removing instruction jmp __b58
Removing instruction jmp __b35
Removing instruction jmp __b15
Removing instruction jmp __b59
Removing instruction jmp __b36
Removing instruction jmp __b16
Removing instruction jmp __b60
Removing instruction jmp __b37
Removing instruction jmp __b17
Removing instruction jmp __b61
Removing instruction jmp __b62
Removing instruction jmp __b38
Removing instruction jmp __b18
Removing instruction jmp __b63
Removing instruction jmp __b39
Removing instruction jmp __b19
Removing instruction jmp __b64
Removing instruction jmp __b40
Removing instruction jmp __b20
Removing instruction jmp __b65
Removing instruction jmp __b41
Removing instruction jmp __b21
Removing instruction jmp __b66
Removing instruction jmp __b67
Removing instruction jmp __b42
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Succesful ASM optimization Pass5NextJumpElimination
Replacing instruction lda.z a with TXA
Replacing instruction lda.z a with TXA
Replacing instruction lda.z a with TXA
Replacing instruction lda.z a with TXA
Replacing instruction lda.z a with TXA
Replacing label __b42_from___b42 with __b42
Replacing label __b1_from___b1 with __b1
Replacing label __b1_from___b1 with __b1
Replacing label __b1_from___b3 with __b1
Removing instruction __b22_from___b1:
Removing instruction __b2_from___b22:
Removing instruction __b23_from___b43:
Removing instruction __b3_from___b23:
Removing instruction __b24_from___b44:
Removing instruction __b4_from___b24:
Removing instruction __b25_from___b45:
Removing instruction __b5_from___b25:
Removing instruction __b46_from___b5:
Removing instruction print_ln_from___b46:
Removing instruction __b26_from___b47:
Removing instruction __b6_from___b26:
Removing instruction __b27_from___b48:
Removing instruction __b7_from___b27:
Removing instruction __b28_from___b49:
Removing instruction __b8_from___b28:
Removing instruction __b29_from___b50:
Removing instruction __b9_from___b29:
Removing instruction __b51_from___b9:
Removing instruction print_ln_from___b51:
Removing instruction __b30_from___b52:
Removing instruction __b10_from___b30:
Removing instruction __b31_from___b53:
Removing instruction __b11_from___b31:
Removing instruction __b32_from___b54:
Removing instruction __b12_from___b32:
Removing instruction __b33_from___b55:
Removing instruction __b13_from___b33:
Removing instruction __b56_from___b13:
Removing instruction print_ln_from___b56:
Removing instruction __b34_from___b57:
Removing instruction __b14_from___b34:
Removing instruction __b35_from___b58:
Removing instruction __b15_from___b35:
Removing instruction __b36_from___b59:
Removing instruction __b16_from___b36:
Removing instruction __b37_from___b60:
Removing instruction __b17_from___b37:
Removing instruction __b61_from___b17:
Removing instruction print_ln_from___b61:
Removing instruction __b38_from___b62:
Removing instruction __b18_from___b38:
Removing instruction __b39_from___b63:
Removing instruction __b19_from___b39:
Removing instruction __b40_from___b64:
Removing instruction __b20_from___b40:
Removing instruction __b41_from___b65:
Removing instruction __b21_from___b41:
Removing instruction __b66_from___b21:
Removing instruction print_ln_from___b66:
Removing instruction __b42_from___b42:
Removing instruction __b42_from___b67:
Removing instruction print_uchar_from___b1:
Removing instruction print_str_from___b2:
Removing instruction __b4_from___b3:
Removing instruction print_char_from___b4:
Removing instruction __b1_from_print_ln:
Removing instruction __b1_from___b1:
Removing instruction __b1_from_print_str:
Removing instruction __b1_from___b3:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction print_cls_from_main:
Removing instruction __b1_from_main:
Removing instruction __b22:
Removing instruction printu_from___b2:
Removing instruction __b43:
Removing instruction __b23:
Removing instruction printu_from___b3:
Removing instruction __b44:
Removing instruction __b24:
Removing instruction printu_from___b4:
Removing instruction __b45:
Removing instruction __b25:
Removing instruction printu_from___b5:
Removing instruction __b46:
Removing instruction __b47:
Removing instruction __b26:
Removing instruction printu_from___b6:
Removing instruction __b48:
Removing instruction __b27:
Removing instruction printu_from___b7:
Removing instruction __b49:
Removing instruction __b28:
Removing instruction printu_from___b8:
Removing instruction __b50:
Removing instruction __b29:
Removing instruction printu_from___b9:
Removing instruction __b51:
Removing instruction __b52:
Removing instruction __b30:
Removing instruction printu_from___b10:
Removing instruction __b53:
Removing instruction __b31:
Removing instruction printu_from___b11:
Removing instruction __b54:
Removing instruction __b32:
Removing instruction printu_from___b12:
Removing instruction __b55:
Removing instruction __b33:
Removing instruction printu_from___b13:
Removing instruction __b56:
Removing instruction __b57:
Removing instruction __b34:
Removing instruction printu_from___b14:
Removing instruction __b58:
Removing instruction __b35:
Removing instruction printu_from___b15:
Removing instruction __b59:
Removing instruction __b36:
Removing instruction printu_from___b16:
Removing instruction __b60:
Removing instruction __b37:
Removing instruction printu_from___b17:
Removing instruction __b61:
Removing instruction __b62:
Removing instruction __b38:
Removing instruction printu_from___b18:
Removing instruction __b63:
Removing instruction __b39:
Removing instruction printu_from___b19:
Removing instruction __b64:
Removing instruction __b40:
Removing instruction printu_from___b20:
Removing instruction __b65:
Removing instruction __b41:
Removing instruction printu_from___b21:
Removing instruction __b66:
Removing instruction __b67:
Removing instruction __b1_from___b68:
Removing instruction memset_from_print_cls:
Removing instruction __breturn:
Removing instruction print_char_from_printu:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction print_uchar_from___b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction print_char_from___b5:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1_from_memset:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __breturn:
Removing instruction print_char_from_print_uchar:
Removing instruction __b1:
Removing instruction print_char_from___b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction print_char_from___b2:
Removing instruction __b3:
Succesful ASM optimization Pass5UnusedLabelElimination
Relabelling long label __b2_from___b1 to __b22
Relabelling long label __b3_from___b43 to __b23
Relabelling long label __b4_from___b44 to __b24
Relabelling long label __b5_from___b45 to __b25
Relabelling long label __b6_from___b47 to __b26
Relabelling long label __b7_from___b48 to __b27
Relabelling long label __b8_from___b49 to __b28
Relabelling long label __b9_from___b50 to __b29
Relabelling long label __b10_from___b52 to __b30
Relabelling long label __b11_from___b53 to __b31
Relabelling long label __b12_from___b54 to __b32
Relabelling long label __b13_from___b55 to __b33
Relabelling long label __b14_from___b57 to __b34
Relabelling long label __b15_from___b58 to __b35
Relabelling long label __b16_from___b59 to __b36
Relabelling long label __b17_from___b60 to __b37
Relabelling long label __b18_from___b62 to __b38
Relabelling long label __b19_from___b63 to __b39
Relabelling long label __b20_from___b64 to __b40
Relabelling long label __b21_from___b65 to __b41
Succesful ASM optimization Pass5RelabelLongLabels

FINAL SYMBOL TABLE
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
void main()
byte main::a
byte main::a#1 a zp[1]:2 5.5
byte main::a#10 a zp[1]:2 3.860927152317884
byte main::b
byte main::b#0 b zp[1]:12 0.9758064516129035
constant byte* main::cs[5]  = { 7, $c7, $37, $97, $67 }
byte main::i
byte main::i#1 i zp[1]:3 11.0
byte main::i#10 i zp[1]:3 0.8684210526315792
constant byte* main::op[3]  = "< "
constant byte* main::op12[3]  = ">="
constant byte* main::op16[3]  = "=="
constant byte* main::op4[3]  = "> "
constant byte* main::op8[3]  = "<="
byte main::r
byte main::r#41 reg byte y 3.6666666666666665
byte main::r#42 reg byte a 5.5
byte main::r#43 r zp[1]:4 3.6666666666666665
byte main::r#44 reg byte y 3.6666666666666665
byte main::r#45 reg byte y 3.6666666666666665
byte main::r#46 reg byte a 5.5
byte main::r#47 r zp[1]:4 3.6666666666666665
byte main::r#48 reg byte y 3.6666666666666665
byte main::r#49 reg byte y 3.6666666666666665
byte main::r#50 reg byte a 5.5
byte main::r#51 r zp[1]:4 3.6666666666666665
byte main::r#52 reg byte y 3.6666666666666665
byte main::r#53 reg byte y 3.6666666666666665
byte main::r#54 reg byte a 5.5
byte main::r#55 r zp[1]:4 3.6666666666666665
byte main::r#56 reg byte y 3.6666666666666665
byte main::r#57 reg byte y 3.6666666666666665
byte main::r#58 reg byte a 5.5
byte main::r#59 r zp[1]:4 3.6666666666666665
byte main::r#60 reg byte y 3.6666666666666665
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
constant byte memset::c#0 c = ' '
byte* memset::dst
byte* memset::dst#1 dst zp[2]:8 2002.0
byte* memset::dst#2 dst zp[2]:8 1334.6666666666667
byte* memset::end
constant byte* memset::end#0 end = (byte*)memset::str#0+memset::num#0
word memset::num
constant word memset::num#0 num = $3e8
void* memset::return
void* memset::str
constant void* memset::str#0 str = (void*)print_screen#0
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 reg byte a 200002.0
byte print_char::ch#1 reg byte a 2002.0
byte print_char::ch#2 reg byte a 2002.0
byte print_char::ch#5 reg byte a 202.0
byte print_char::ch#6 reg byte a 1102105.0
byte* print_char_cursor
byte* print_char_cursor#100 print_char_cursor zp[2]:10 2.75
byte* print_char_cursor#150 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#151 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#155 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#159 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#167 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#55 print_char_cursor zp[2]:10 1051154.0
byte* print_char_cursor#56 print_char_cursor zp[2]:10 7778.825174825175
byte* print_char_cursor#98 print_char_cursor zp[2]:10 321.0
void print_cls()
constant const byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0 print_line_cursor zp[2]:6 235.2578125
byte* print_line_cursor#14 print_line_cursor zp[2]:6 20103.0
byte* print_line_cursor#27 print_line_cursor zp[2]:6 156.0
byte* print_line_cursor#29 print_line_cursor zp[2]:6 0.7333333333333333
void print_ln()
byte* print_screen
constant byte* print_screen#0 print_screen = (byte*) 1024
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 str zp[2]:8 200002.0
byte* print_str::str#1 str zp[2]:8 551.0
byte* print_str::str#2 str zp[2]:8 100251.25
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 reg byte a 2002.0
byte~ print_uchar::$2 reg byte a 2002.0
byte print_uchar::b
byte print_uchar::b#0 reg byte x 202.0
byte print_uchar::b#1 reg byte x 202.0
byte print_uchar::b#2 reg byte x 551.0
void printu(byte printu::a , byte* printu::op , byte printu::b , byte printu::res)
byte printu::a
byte printu::a#0 reg byte x 7.333333333333333
byte printu::a#1 reg byte x 11.0
byte printu::a#10 reg byte x 7.333333333333333
byte printu::a#11 reg byte x 7.333333333333333
byte printu::a#12 reg byte x 5.5
byte printu::a#13 reg byte x 11.0
byte printu::a#14 reg byte x 7.333333333333333
byte printu::a#15 reg byte x 7.333333333333333
byte printu::a#16 reg byte x 5.5
byte printu::a#17 reg byte x 11.0
byte printu::a#18 reg byte x 7.333333333333333
byte printu::a#19 reg byte x 7.333333333333333
byte printu::a#2 reg byte x 7.333333333333333
byte printu::a#20 reg byte x 160.5
byte printu::a#3 reg byte x 7.333333333333333
byte printu::a#4 reg byte x 5.5
byte printu::a#5 reg byte x 11.0
byte printu::a#6 reg byte x 7.333333333333333
byte printu::a#7 reg byte x 7.333333333333333
byte printu::a#8 reg byte x 5.5
byte printu::a#9 reg byte x 11.0
byte printu::b
byte printu::b#0 b zp[1]:5 11.0
byte printu::b#10 b zp[1]:5 11.0
byte printu::b#11 b zp[1]:5 11.0
byte printu::b#12 b zp[1]:5 7.333333333333333
byte printu::b#14 b zp[1]:5 11.0
byte printu::b#15 b zp[1]:5 11.0
byte printu::b#16 b zp[1]:5 7.333333333333333
byte printu::b#18 b zp[1]:5 11.0
byte printu::b#19 b zp[1]:5 11.0
byte printu::b#2 b zp[1]:5 11.0
byte printu::b#20 b zp[1]:5 44.33333333333333
byte printu::b#3 b zp[1]:5 11.0
byte printu::b#4 b zp[1]:5 7.333333333333333
byte printu::b#6 b zp[1]:5 11.0
byte printu::b#7 b zp[1]:5 11.0
byte printu::b#8 b zp[1]:5 7.333333333333333
byte* printu::op
byte* printu::op#20 op zp[2]:8 25.25
byte printu::res
byte printu::res#0 res zp[1]:4 22.0
byte printu::res#1 res zp[1]:4 22.0
byte printu::res#10 res zp[1]:4 22.0
byte printu::res#11 res zp[1]:4 22.0
byte printu::res#12 res zp[1]:4 11.0
byte printu::res#13 res zp[1]:4 22.0
byte printu::res#14 res zp[1]:4 22.0
byte printu::res#15 res zp[1]:4 22.0
byte printu::res#16 res zp[1]:4 11.0
byte printu::res#17 res zp[1]:4 22.0
byte printu::res#18 res zp[1]:4 22.0
byte printu::res#19 res zp[1]:4 22.0
byte printu::res#2 res zp[1]:4 22.0
byte printu::res#20 res zp[1]:4 32.1
byte printu::res#3 res zp[1]:4 22.0
byte printu::res#4 res zp[1]:4 11.0
byte printu::res#5 res zp[1]:4 22.0
byte printu::res#6 res zp[1]:4 22.0
byte printu::res#7 res zp[1]:4 22.0
byte printu::res#8 res zp[1]:4 11.0
byte printu::res#9 res zp[1]:4 22.0

zp[1]:2 [ main::a#10 main::a#1 ]
zp[1]:3 [ main::i#10 main::i#1 ]
reg byte y [ main::r#41 ]
reg byte a [ main::r#42 ]
zp[1]:4 [ main::r#43 printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 main::r#47 main::r#51 main::r#55 main::r#59 ]
reg byte y [ main::r#44 ]
reg byte y [ main::r#45 ]
reg byte a [ main::r#46 ]
reg byte y [ main::r#48 ]
reg byte y [ main::r#49 ]
reg byte a [ main::r#50 ]
reg byte y [ main::r#52 ]
reg byte y [ main::r#53 ]
reg byte a [ main::r#54 ]
reg byte y [ main::r#56 ]
reg byte y [ main::r#57 ]
reg byte a [ main::r#58 ]
reg byte y [ main::r#60 ]
reg byte x [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
zp[1]:5 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
zp[2]:6 [ print_line_cursor#14 print_line_cursor#27 print_line_cursor#29 print_line_cursor#0 ]
zp[2]:8 [ memset::dst#2 memset::dst#1 printu::op#20 print_str::str#2 print_str::str#1 print_str::str#0 ]
reg byte a [ print_char::ch#6 print_char::ch#0 print_char::ch#1 print_char::ch#2 print_char::ch#5 ]
zp[2]:10 [ print_char_cursor#55 print_char_cursor#98 print_char_cursor#151 print_char_cursor#56 print_char_cursor#155 print_char_cursor#159 print_char_cursor#100 print_char_cursor#150 print_char_cursor#167 ]
reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
zp[1]:12 [ main::b#0 ]
reg byte a [ print_uchar::$0 ]
reg byte a [ print_uchar::$2 ]


FINAL ASSEMBLER
Score: 15209

  // File Comments
// A lightweight library for printing on the C64.
// Printing with this library is done by calling print_ function for each element
  // Upstart
  // Commodore 64 PRG executable file
.file [name="test-comparisons.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(main)
  // Global Constants & labels
  .label print_screen = $400
  .label print_line_cursor = 6
  .label print_char_cursor = $a
.segment Code
  // main
main: {
    .label b = $c
    .label a = 2
    .label i = 3
    .label r = 4
    // print_cls()
    // [1] call print_cls 
    // [158] phi from main to print_cls [phi:main->print_cls]
    jsr print_cls
    // [2] phi from main to main::@1 [phi:main->main::@1]
    // [2] phi print_line_cursor#29 = print_screen#0 [phi:main->main::@1#0] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor
    lda #>print_screen
    sta.z print_line_cursor+1
    // [2] phi main::i#10 = 0 [phi:main->main::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // [2] phi print_char_cursor#100 = print_screen#0 [phi:main->main::@1#2] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    // [2] phi main::a#10 = 7 [phi:main->main::@1#3] -- vbuz1=vbuc1 
    lda #7
    sta.z a
    // main::@1
  __b1:
    // byte b = $ce-a
    // [3] main::b#0 = $ce - main::a#10 -- vbuz1=vbuc1_minus_vbuz2 
    lda #$ce
    sec
    sbc.z a
    sta.z b
    // if(a<b)
    // [4] if(main::a#10>=main::b#0) goto main::@2 -- vbuz1_ge_vbuz2_then_la1 
    lda.z a
    cmp.z b
    bcs __b22
    // [5] phi from main::@1 to main::@22 [phi:main::@1->main::@22]
    // main::@22
    // [6] phi from main::@22 to main::@2 [phi:main::@22->main::@2]
    // [6] phi main::r#41 = '+' [phi:main::@22->main::@2#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b2
    // [6] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b22:
    // [6] phi main::r#41 = '-' [phi:main::@1->main::@2#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@2
  __b2:
    // printu(a, "< ", b, r)
    // [7] printu::a#0 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [8] printu::b#0 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [9] printu::res#0 = main::r#41 -- vbuz1=vbuyy 
    sty.z printu.res
    // [10] call printu 
    // [161] phi from main::@2 to printu [phi:main::@2->printu]
    // [161] phi printu::res#20 = printu::res#0 [phi:main::@2->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#0 [phi:main::@2->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op [phi:main::@2->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta.z printu.op
    lda #>op
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#0 [phi:main::@2->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#100 [phi:main::@2->printu#4] -- register_copy 
    jsr printu
    // main::@43
    // if(a<$37)
    // [11] if(main::a#10>=$37) goto main::@3 -- vbuz1_ge_vbuc1_then_la1 
    lda.z a
    cmp #$37
    bcs __b23
    // [12] phi from main::@43 to main::@23 [phi:main::@43->main::@23]
    // main::@23
    // [13] phi from main::@23 to main::@3 [phi:main::@23->main::@3]
    // [13] phi main::r#42 = '+' [phi:main::@23->main::@3#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b3
    // [13] phi from main::@43 to main::@3 [phi:main::@43->main::@3]
  __b23:
    // [13] phi main::r#42 = '-' [phi:main::@43->main::@3#0] -- vbuaa=vbuc1 
    lda #'-'
    // main::@3
  __b3:
    // printu(a, "< ", $37, r)
    // [14] printu::a#1 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [15] printu::res#1 = main::r#42 -- vbuz1=vbuaa 
    sta.z printu.res
    // [16] call printu 
    // [161] phi from main::@3 to printu [phi:main::@3->printu]
    // [161] phi printu::res#20 = printu::res#1 [phi:main::@3->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@3->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op [phi:main::@3->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta.z printu.op
    lda #>op
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#1 [phi:main::@3->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@3->printu#4] -- register_copy 
    jsr printu
    // main::@44
    // if(a<cs[i])
    // [17] if(main::a#10>=main::cs[main::i#10]) goto main::@4 -- vbuz1_ge_pbuc1_derefidx_vbuz2_then_la1 
    lda.z a
    ldy.z i
    cmp cs,y
    bcs __b24
    // [18] phi from main::@44 to main::@24 [phi:main::@44->main::@24]
    // main::@24
    // [19] phi from main::@24 to main::@4 [phi:main::@24->main::@4]
    // [19] phi main::r#43 = '+' [phi:main::@24->main::@4#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b4
    // [19] phi from main::@44 to main::@4 [phi:main::@44->main::@4]
  __b24:
    // [19] phi main::r#43 = '-' [phi:main::@44->main::@4#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    // main::@4
  __b4:
    // printu(a, "< ", cs[i], r)
    // [20] printu::a#2 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [21] printu::b#2 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [22] printu::res#2 = main::r#43
    // [23] call printu 
    // [161] phi from main::@4 to printu [phi:main::@4->printu]
    // [161] phi printu::res#20 = printu::res#2 [phi:main::@4->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#2 [phi:main::@4->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op [phi:main::@4->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta.z printu.op
    lda #>op
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#2 [phi:main::@4->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@4->printu#4] -- register_copy 
    jsr printu
    // main::@45
    // if(a<a)
    // [24] if(main::a#10>=main::a#10) goto main::@5 -- vbuz1_ge_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bcs __b25
    // [25] phi from main::@45 to main::@25 [phi:main::@45->main::@25]
    // main::@25
    // [26] phi from main::@25 to main::@5 [phi:main::@25->main::@5]
    // [26] phi main::r#44 = '+' [phi:main::@25->main::@5#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b5
    // [26] phi from main::@45 to main::@5 [phi:main::@45->main::@5]
  __b25:
    // [26] phi main::r#44 = '-' [phi:main::@45->main::@5#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@5
  __b5:
    // printu(a, "< ", a, r)
    // [27] printu::a#3 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [28] printu::b#3 = main::a#10 -- vbuz1=vbuz2 
    txa
    sta.z printu.b
    // [29] printu::res#3 = main::r#44 -- vbuz1=vbuyy 
    sty.z printu.res
    // [30] call printu 
    // [161] phi from main::@5 to printu [phi:main::@5->printu]
    // [161] phi printu::res#20 = printu::res#3 [phi:main::@5->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#3 [phi:main::@5->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op [phi:main::@5->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta.z printu.op
    lda #>op
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#3 [phi:main::@5->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@5->printu#4] -- register_copy 
    jsr printu
    // [31] phi from main::@5 to main::@46 [phi:main::@5->main::@46]
    // main::@46
    // print_ln()
    // [32] call print_ln 
    // [174] phi from main::@46 to print_ln [phi:main::@46->print_ln]
    // [174] phi print_line_cursor#27 = print_line_cursor#29 [phi:main::@46->print_ln#0] -- register_copy 
    jsr print_ln
    // main::@47
    // if(a>b)
    // [33] if(main::a#10<=main::b#0) goto main::@6 -- vbuz1_le_vbuz2_then_la1 
    lda.z b
    cmp.z a
    bcs __b26
    // [34] phi from main::@47 to main::@26 [phi:main::@47->main::@26]
    // main::@26
    // [35] phi from main::@26 to main::@6 [phi:main::@26->main::@6]
    // [35] phi main::r#45 = '+' [phi:main::@26->main::@6#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b6
    // [35] phi from main::@47 to main::@6 [phi:main::@47->main::@6]
  __b26:
    // [35] phi main::r#45 = '-' [phi:main::@47->main::@6#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@6
  __b6:
    // printu(a, "> ", b, r)
    // [36] printu::a#4 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [37] printu::b#4 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [38] printu::res#4 = main::r#45 -- vbuz1=vbuyy 
    sty.z printu.res
    // [39] print_char_cursor#167 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // printu(a, "> ", b, r)
    // [40] call printu 
    // [161] phi from main::@6 to printu [phi:main::@6->printu]
    // [161] phi printu::res#20 = printu::res#4 [phi:main::@6->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#4 [phi:main::@6->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op4 [phi:main::@6->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta.z printu.op
    lda #>op4
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#4 [phi:main::@6->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#167 [phi:main::@6->printu#4] -- register_copy 
    jsr printu
    // main::@48
    // if(a>$37)
    // [41] if(main::a#10<$37+1) goto main::@7 -- vbuz1_lt_vbuc1_then_la1 
    lda.z a
    cmp #$37+1
    bcc __b27
    // [42] phi from main::@48 to main::@27 [phi:main::@48->main::@27]
    // main::@27
    // [43] phi from main::@27 to main::@7 [phi:main::@27->main::@7]
    // [43] phi main::r#46 = '+' [phi:main::@27->main::@7#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b7
    // [43] phi from main::@48 to main::@7 [phi:main::@48->main::@7]
  __b27:
    // [43] phi main::r#46 = '-' [phi:main::@48->main::@7#0] -- vbuaa=vbuc1 
    lda #'-'
    // main::@7
  __b7:
    // printu(a, "> ", $37, r)
    // [44] printu::a#5 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [45] printu::res#5 = main::r#46 -- vbuz1=vbuaa 
    sta.z printu.res
    // [46] call printu 
    // [161] phi from main::@7 to printu [phi:main::@7->printu]
    // [161] phi printu::res#20 = printu::res#5 [phi:main::@7->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@7->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op4 [phi:main::@7->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta.z printu.op
    lda #>op4
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#5 [phi:main::@7->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@7->printu#4] -- register_copy 
    jsr printu
    // main::@49
    // if(a>cs[i])
    // [47] if(main::a#10<=main::cs[main::i#10]) goto main::@8 -- vbuz1_le_pbuc1_derefidx_vbuz2_then_la1 
    ldy.z i
    lda cs,y
    cmp.z a
    bcs __b28
    // [48] phi from main::@49 to main::@28 [phi:main::@49->main::@28]
    // main::@28
    // [49] phi from main::@28 to main::@8 [phi:main::@28->main::@8]
    // [49] phi main::r#47 = '+' [phi:main::@28->main::@8#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b8
    // [49] phi from main::@49 to main::@8 [phi:main::@49->main::@8]
  __b28:
    // [49] phi main::r#47 = '-' [phi:main::@49->main::@8#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    // main::@8
  __b8:
    // printu(a, "> ", cs[i], r)
    // [50] printu::a#6 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [51] printu::b#6 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [52] printu::res#6 = main::r#47
    // [53] call printu 
    // [161] phi from main::@8 to printu [phi:main::@8->printu]
    // [161] phi printu::res#20 = printu::res#6 [phi:main::@8->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#6 [phi:main::@8->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op4 [phi:main::@8->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta.z printu.op
    lda #>op4
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#6 [phi:main::@8->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@8->printu#4] -- register_copy 
    jsr printu
    // main::@50
    // if(a>a)
    // [54] if(main::a#10<=main::a#10) goto main::@9 -- vbuz1_le_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bcs __b29
    // [55] phi from main::@50 to main::@29 [phi:main::@50->main::@29]
    // main::@29
    // [56] phi from main::@29 to main::@9 [phi:main::@29->main::@9]
    // [56] phi main::r#48 = '+' [phi:main::@29->main::@9#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b9
    // [56] phi from main::@50 to main::@9 [phi:main::@50->main::@9]
  __b29:
    // [56] phi main::r#48 = '-' [phi:main::@50->main::@9#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@9
  __b9:
    // printu(a, "> ", a, r)
    // [57] printu::a#7 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [58] printu::b#7 = main::a#10 -- vbuz1=vbuz2 
    txa
    sta.z printu.b
    // [59] printu::res#7 = main::r#48 -- vbuz1=vbuyy 
    sty.z printu.res
    // [60] call printu 
    // [161] phi from main::@9 to printu [phi:main::@9->printu]
    // [161] phi printu::res#20 = printu::res#7 [phi:main::@9->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#7 [phi:main::@9->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op4 [phi:main::@9->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta.z printu.op
    lda #>op4
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#7 [phi:main::@9->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@9->printu#4] -- register_copy 
    jsr printu
    // [61] phi from main::@9 to main::@51 [phi:main::@9->main::@51]
    // main::@51
    // print_ln()
    // [62] call print_ln 
    // [174] phi from main::@51 to print_ln [phi:main::@51->print_ln]
    // [174] phi print_line_cursor#27 = print_line_cursor#0 [phi:main::@51->print_ln#0] -- register_copy 
    jsr print_ln
    // main::@52
    // if(a<=b)
    // [63] if(main::a#10>main::b#0) goto main::@10 -- vbuz1_gt_vbuz2_then_la1 
    lda.z b
    cmp.z a
    bcc __b30
    // [64] phi from main::@52 to main::@30 [phi:main::@52->main::@30]
    // main::@30
    // [65] phi from main::@30 to main::@10 [phi:main::@30->main::@10]
    // [65] phi main::r#49 = '+' [phi:main::@30->main::@10#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b10
    // [65] phi from main::@52 to main::@10 [phi:main::@52->main::@10]
  __b30:
    // [65] phi main::r#49 = '-' [phi:main::@52->main::@10#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@10
  __b10:
    // printu(a, "<=", b, r)
    // [66] printu::a#8 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [67] printu::b#8 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [68] printu::res#8 = main::r#49 -- vbuz1=vbuyy 
    sty.z printu.res
    // [69] print_char_cursor#151 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // printu(a, "<=", b, r)
    // [70] call printu 
    // [161] phi from main::@10 to printu [phi:main::@10->printu]
    // [161] phi printu::res#20 = printu::res#8 [phi:main::@10->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#8 [phi:main::@10->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op8 [phi:main::@10->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta.z printu.op
    lda #>op8
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#8 [phi:main::@10->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#151 [phi:main::@10->printu#4] -- register_copy 
    jsr printu
    // main::@53
    // if(a<=$37)
    // [71] if(main::a#10>=$37+1) goto main::@11 -- vbuz1_ge_vbuc1_then_la1 
    lda.z a
    cmp #$37+1
    bcs __b31
    // [72] phi from main::@53 to main::@31 [phi:main::@53->main::@31]
    // main::@31
    // [73] phi from main::@31 to main::@11 [phi:main::@31->main::@11]
    // [73] phi main::r#50 = '+' [phi:main::@31->main::@11#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b11
    // [73] phi from main::@53 to main::@11 [phi:main::@53->main::@11]
  __b31:
    // [73] phi main::r#50 = '-' [phi:main::@53->main::@11#0] -- vbuaa=vbuc1 
    lda #'-'
    // main::@11
  __b11:
    // printu(a, "<=", $37, r)
    // [74] printu::a#9 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [75] printu::res#9 = main::r#50 -- vbuz1=vbuaa 
    sta.z printu.res
    // [76] call printu 
    // [161] phi from main::@11 to printu [phi:main::@11->printu]
    // [161] phi printu::res#20 = printu::res#9 [phi:main::@11->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@11->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op8 [phi:main::@11->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta.z printu.op
    lda #>op8
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#9 [phi:main::@11->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@11->printu#4] -- register_copy 
    jsr printu
    // main::@54
    // if(a<=cs[i])
    // [77] if(main::a#10>main::cs[main::i#10]) goto main::@12 -- vbuz1_gt_pbuc1_derefidx_vbuz2_then_la1 
    ldy.z i
    lda cs,y
    cmp.z a
    bcc __b32
    // [78] phi from main::@54 to main::@32 [phi:main::@54->main::@32]
    // main::@32
    // [79] phi from main::@32 to main::@12 [phi:main::@32->main::@12]
    // [79] phi main::r#51 = '+' [phi:main::@32->main::@12#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b12
    // [79] phi from main::@54 to main::@12 [phi:main::@54->main::@12]
  __b32:
    // [79] phi main::r#51 = '-' [phi:main::@54->main::@12#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    // main::@12
  __b12:
    // printu(a, "<=", cs[i], r)
    // [80] printu::a#10 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [81] printu::b#10 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [82] printu::res#10 = main::r#51
    // [83] call printu 
    // [161] phi from main::@12 to printu [phi:main::@12->printu]
    // [161] phi printu::res#20 = printu::res#10 [phi:main::@12->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#10 [phi:main::@12->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op8 [phi:main::@12->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta.z printu.op
    lda #>op8
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#10 [phi:main::@12->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@12->printu#4] -- register_copy 
    jsr printu
    // main::@55
    // if(a<=a)
    // [84] if(main::a#10>main::a#10) goto main::@13 -- vbuz1_gt_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bcc __b33
    // [85] phi from main::@55 to main::@33 [phi:main::@55->main::@33]
    // main::@33
    // [86] phi from main::@33 to main::@13 [phi:main::@33->main::@13]
    // [86] phi main::r#52 = '+' [phi:main::@33->main::@13#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b13
    // [86] phi from main::@55 to main::@13 [phi:main::@55->main::@13]
  __b33:
    // [86] phi main::r#52 = '-' [phi:main::@55->main::@13#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@13
  __b13:
    // printu(a, "<=", a, r)
    // [87] printu::a#11 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [88] printu::b#11 = main::a#10 -- vbuz1=vbuz2 
    txa
    sta.z printu.b
    // [89] printu::res#11 = main::r#52 -- vbuz1=vbuyy 
    sty.z printu.res
    // [90] call printu 
    // [161] phi from main::@13 to printu [phi:main::@13->printu]
    // [161] phi printu::res#20 = printu::res#11 [phi:main::@13->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#11 [phi:main::@13->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op8 [phi:main::@13->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta.z printu.op
    lda #>op8
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#11 [phi:main::@13->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@13->printu#4] -- register_copy 
    jsr printu
    // [91] phi from main::@13 to main::@56 [phi:main::@13->main::@56]
    // main::@56
    // print_ln()
    // [92] call print_ln 
    // [174] phi from main::@56 to print_ln [phi:main::@56->print_ln]
    // [174] phi print_line_cursor#27 = print_line_cursor#0 [phi:main::@56->print_ln#0] -- register_copy 
    jsr print_ln
    // main::@57
    // if(a>=b)
    // [93] if(main::a#10<main::b#0) goto main::@14 -- vbuz1_lt_vbuz2_then_la1 
    lda.z a
    cmp.z b
    bcc __b34
    // [94] phi from main::@57 to main::@34 [phi:main::@57->main::@34]
    // main::@34
    // [95] phi from main::@34 to main::@14 [phi:main::@34->main::@14]
    // [95] phi main::r#53 = '+' [phi:main::@34->main::@14#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b14
    // [95] phi from main::@57 to main::@14 [phi:main::@57->main::@14]
  __b34:
    // [95] phi main::r#53 = '-' [phi:main::@57->main::@14#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@14
  __b14:
    // printu(a, ">=", b, r)
    // [96] printu::a#12 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [97] printu::b#12 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [98] printu::res#12 = main::r#53 -- vbuz1=vbuyy 
    sty.z printu.res
    // [99] print_char_cursor#155 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // printu(a, ">=", b, r)
    // [100] call printu 
    // [161] phi from main::@14 to printu [phi:main::@14->printu]
    // [161] phi printu::res#20 = printu::res#12 [phi:main::@14->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#12 [phi:main::@14->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op12 [phi:main::@14->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta.z printu.op
    lda #>op12
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#12 [phi:main::@14->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#155 [phi:main::@14->printu#4] -- register_copy 
    jsr printu
    // main::@58
    // if(a>=$37)
    // [101] if(main::a#10<$37) goto main::@15 -- vbuz1_lt_vbuc1_then_la1 
    lda.z a
    cmp #$37
    bcc __b35
    // [102] phi from main::@58 to main::@35 [phi:main::@58->main::@35]
    // main::@35
    // [103] phi from main::@35 to main::@15 [phi:main::@35->main::@15]
    // [103] phi main::r#54 = '+' [phi:main::@35->main::@15#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b15
    // [103] phi from main::@58 to main::@15 [phi:main::@58->main::@15]
  __b35:
    // [103] phi main::r#54 = '-' [phi:main::@58->main::@15#0] -- vbuaa=vbuc1 
    lda #'-'
    // main::@15
  __b15:
    // printu(a, ">=", $37, r)
    // [104] printu::a#13 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [105] printu::res#13 = main::r#54 -- vbuz1=vbuaa 
    sta.z printu.res
    // [106] call printu 
    // [161] phi from main::@15 to printu [phi:main::@15->printu]
    // [161] phi printu::res#20 = printu::res#13 [phi:main::@15->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@15->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op12 [phi:main::@15->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta.z printu.op
    lda #>op12
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#13 [phi:main::@15->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@15->printu#4] -- register_copy 
    jsr printu
    // main::@59
    // if(a>=cs[i])
    // [107] if(main::a#10<main::cs[main::i#10]) goto main::@16 -- vbuz1_lt_pbuc1_derefidx_vbuz2_then_la1 
    lda.z a
    ldy.z i
    cmp cs,y
    bcc __b36
    // [108] phi from main::@59 to main::@36 [phi:main::@59->main::@36]
    // main::@36
    // [109] phi from main::@36 to main::@16 [phi:main::@36->main::@16]
    // [109] phi main::r#55 = '+' [phi:main::@36->main::@16#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b16
    // [109] phi from main::@59 to main::@16 [phi:main::@59->main::@16]
  __b36:
    // [109] phi main::r#55 = '-' [phi:main::@59->main::@16#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    // main::@16
  __b16:
    // printu(a, ">=", cs[i], r)
    // [110] printu::a#14 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [111] printu::b#14 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [112] printu::res#14 = main::r#55
    // [113] call printu 
    // [161] phi from main::@16 to printu [phi:main::@16->printu]
    // [161] phi printu::res#20 = printu::res#14 [phi:main::@16->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#14 [phi:main::@16->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op12 [phi:main::@16->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta.z printu.op
    lda #>op12
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#14 [phi:main::@16->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@16->printu#4] -- register_copy 
    jsr printu
    // main::@60
    // if(a>=a)
    // [114] if(main::a#10<main::a#10) goto main::@17 -- vbuz1_lt_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bcc __b37
    // [115] phi from main::@60 to main::@37 [phi:main::@60->main::@37]
    // main::@37
    // [116] phi from main::@37 to main::@17 [phi:main::@37->main::@17]
    // [116] phi main::r#56 = '+' [phi:main::@37->main::@17#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b17
    // [116] phi from main::@60 to main::@17 [phi:main::@60->main::@17]
  __b37:
    // [116] phi main::r#56 = '-' [phi:main::@60->main::@17#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@17
  __b17:
    // printu(a, ">=", a, r)
    // [117] printu::a#15 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [118] printu::b#15 = main::a#10 -- vbuz1=vbuz2 
    txa
    sta.z printu.b
    // [119] printu::res#15 = main::r#56 -- vbuz1=vbuyy 
    sty.z printu.res
    // [120] call printu 
    // [161] phi from main::@17 to printu [phi:main::@17->printu]
    // [161] phi printu::res#20 = printu::res#15 [phi:main::@17->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#15 [phi:main::@17->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op12 [phi:main::@17->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta.z printu.op
    lda #>op12
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#15 [phi:main::@17->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@17->printu#4] -- register_copy 
    jsr printu
    // [121] phi from main::@17 to main::@61 [phi:main::@17->main::@61]
    // main::@61
    // print_ln()
    // [122] call print_ln 
    // [174] phi from main::@61 to print_ln [phi:main::@61->print_ln]
    // [174] phi print_line_cursor#27 = print_line_cursor#0 [phi:main::@61->print_ln#0] -- register_copy 
    jsr print_ln
    // main::@62
    // if(a==b)
    // [123] if(main::a#10!=main::b#0) goto main::@18 -- vbuz1_neq_vbuz2_then_la1 
    lda.z a
    cmp.z b
    bne __b38
    // [124] phi from main::@62 to main::@38 [phi:main::@62->main::@38]
    // main::@38
    // [125] phi from main::@38 to main::@18 [phi:main::@38->main::@18]
    // [125] phi main::r#57 = '+' [phi:main::@38->main::@18#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b18
    // [125] phi from main::@62 to main::@18 [phi:main::@62->main::@18]
  __b38:
    // [125] phi main::r#57 = '-' [phi:main::@62->main::@18#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@18
  __b18:
    // printu(a, "==", b, r)
    // [126] printu::a#16 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [127] printu::b#16 = main::b#0 -- vbuz1=vbuz2 
    lda.z b
    sta.z printu.b
    // [128] printu::res#16 = main::r#57 -- vbuz1=vbuyy 
    sty.z printu.res
    // [129] print_char_cursor#159 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // printu(a, "==", b, r)
    // [130] call printu 
    // [161] phi from main::@18 to printu [phi:main::@18->printu]
    // [161] phi printu::res#20 = printu::res#16 [phi:main::@18->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#16 [phi:main::@18->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op16 [phi:main::@18->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta.z printu.op
    lda #>op16
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#16 [phi:main::@18->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#159 [phi:main::@18->printu#4] -- register_copy 
    jsr printu
    // main::@63
    // if(a==$37)
    // [131] if(main::a#10!=$37) goto main::@19 -- vbuz1_neq_vbuc1_then_la1 
    lda #$37
    cmp.z a
    bne __b39
    // [132] phi from main::@63 to main::@39 [phi:main::@63->main::@39]
    // main::@39
    // [133] phi from main::@39 to main::@19 [phi:main::@39->main::@19]
    // [133] phi main::r#58 = '+' [phi:main::@39->main::@19#0] -- vbuaa=vbuc1 
    lda #'+'
    jmp __b19
    // [133] phi from main::@63 to main::@19 [phi:main::@63->main::@19]
  __b39:
    // [133] phi main::r#58 = '-' [phi:main::@63->main::@19#0] -- vbuaa=vbuc1 
    lda #'-'
    // main::@19
  __b19:
    // printu(a, "==", $37, r)
    // [134] printu::a#17 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [135] printu::res#17 = main::r#58 -- vbuz1=vbuaa 
    sta.z printu.res
    // [136] call printu 
    // [161] phi from main::@19 to printu [phi:main::@19->printu]
    // [161] phi printu::res#20 = printu::res#17 [phi:main::@19->printu#0] -- register_copy 
    // [161] phi printu::b#20 = $37 [phi:main::@19->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta.z printu.b
    // [161] phi printu::op#20 = main::op16 [phi:main::@19->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta.z printu.op
    lda #>op16
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#17 [phi:main::@19->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@19->printu#4] -- register_copy 
    jsr printu
    // main::@64
    // if(a==cs[i])
    // [137] if(main::a#10!=main::cs[main::i#10]) goto main::@20 -- vbuz1_neq_pbuc1_derefidx_vbuz2_then_la1 
    lda.z a
    ldy.z i
    cmp cs,y
    bne __b40
    // [138] phi from main::@64 to main::@40 [phi:main::@64->main::@40]
    // main::@40
    // [139] phi from main::@40 to main::@20 [phi:main::@40->main::@20]
    // [139] phi main::r#59 = '+' [phi:main::@40->main::@20#0] -- vbuz1=vbuc1 
    lda #'+'
    sta.z r
    jmp __b20
    // [139] phi from main::@64 to main::@20 [phi:main::@64->main::@20]
  __b40:
    // [139] phi main::r#59 = '-' [phi:main::@64->main::@20#0] -- vbuz1=vbuc1 
    lda #'-'
    sta.z r
    // main::@20
  __b20:
    // printu(a, "==", cs[i], r)
    // [140] printu::a#18 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [141] printu::b#18 = main::cs[main::i#10] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda cs,y
    sta.z printu.b
    // [142] printu::res#18 = main::r#59
    // [143] call printu 
    // [161] phi from main::@20 to printu [phi:main::@20->printu]
    // [161] phi printu::res#20 = printu::res#18 [phi:main::@20->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#18 [phi:main::@20->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op16 [phi:main::@20->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta.z printu.op
    lda #>op16
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#18 [phi:main::@20->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@20->printu#4] -- register_copy 
    jsr printu
    // main::@65
    // if(a==a)
    // [144] if(main::a#10!=main::a#10) goto main::@21 -- vbuz1_neq_vbuz1_then_la1 
    lda.z a
    cmp.z a
    bne __b41
    // [145] phi from main::@65 to main::@41 [phi:main::@65->main::@41]
    // main::@41
    // [146] phi from main::@41 to main::@21 [phi:main::@41->main::@21]
    // [146] phi main::r#60 = '+' [phi:main::@41->main::@21#0] -- vbuyy=vbuc1 
    ldy #'+'
    jmp __b21
    // [146] phi from main::@65 to main::@21 [phi:main::@65->main::@21]
  __b41:
    // [146] phi main::r#60 = '-' [phi:main::@65->main::@21#0] -- vbuyy=vbuc1 
    ldy #'-'
    // main::@21
  __b21:
    // printu(a, "==", a, r)
    // [147] printu::a#19 = main::a#10 -- vbuxx=vbuz1 
    ldx.z a
    // [148] printu::b#19 = main::a#10 -- vbuz1=vbuz2 
    txa
    sta.z printu.b
    // [149] printu::res#19 = main::r#60 -- vbuz1=vbuyy 
    sty.z printu.res
    // [150] call printu 
    // [161] phi from main::@21 to printu [phi:main::@21->printu]
    // [161] phi printu::res#20 = printu::res#19 [phi:main::@21->printu#0] -- register_copy 
    // [161] phi printu::b#20 = printu::b#19 [phi:main::@21->printu#1] -- register_copy 
    // [161] phi printu::op#20 = main::op16 [phi:main::@21->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta.z printu.op
    lda #>op16
    sta.z printu.op+1
    // [161] phi printu::a#20 = printu::a#19 [phi:main::@21->printu#3] -- register_copy 
    // [161] phi print_char_cursor#98 = print_char_cursor#56 [phi:main::@21->printu#4] -- register_copy 
    jsr printu
    // [151] phi from main::@21 to main::@66 [phi:main::@21->main::@66]
    // main::@66
    // print_ln()
    // [152] call print_ln 
    // [174] phi from main::@66 to print_ln [phi:main::@66->print_ln]
    // [174] phi print_line_cursor#27 = print_line_cursor#0 [phi:main::@66->print_ln#0] -- register_copy 
    jsr print_ln
    // main::@67
    // a=a+$30
    // [153] main::a#1 = main::a#10 + $30 -- vbuz1=vbuz1_plus_vbuc1 
    lax.z a
    axs #-[$30]
    stx.z a
    // for( byte i : 0..4 )
    // [154] main::i#1 = ++ main::i#10 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [155] if(main::i#1!=5) goto main::@68 -- vbuz1_neq_vbuc1_then_la1 
    lda #5
    cmp.z i
    bne __b68
    // [156] phi from main::@42 main::@67 to main::@42 [phi:main::@42/main::@67->main::@42]
    // main::@42
  __b42:
    jmp __b42
    // main::@68
  __b68:
    // [157] print_char_cursor#150 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [2] phi from main::@68 to main::@1 [phi:main::@68->main::@1]
    // [2] phi print_line_cursor#29 = print_line_cursor#0 [phi:main::@68->main::@1#0] -- register_copy 
    // [2] phi main::i#10 = main::i#1 [phi:main::@68->main::@1#1] -- register_copy 
    // [2] phi print_char_cursor#100 = print_char_cursor#150 [phi:main::@68->main::@1#2] -- register_copy 
    // [2] phi main::a#10 = main::a#1 [phi:main::@68->main::@1#3] -- register_copy 
    jmp __b1
  .segment Data
    cs: .byte 7, $c7, $37, $97, $67
    op: .text "< "
    .byte 0
    op4: .text "> "
    .byte 0
    op8: .text "<="
    .byte 0
    op12: .text ">="
    .byte 0
    op16: .text "=="
    .byte 0
}
.segment Code
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // memset(print_screen, ' ', 1000)
    // [159] call memset 
    // [179] phi from print_cls to memset [phi:print_cls->memset]
    jsr memset
    // print_cls::@return
    // }
    // [160] return 
    rts
}
  // printu
// printu(byte register(X) a, byte* zp(8) op, byte zp(5) b, byte zp(4) res)
printu: {
    .label b = 5
    .label res = 4
    .label op = 8
    // print_char(' ')
    // [162] call print_char 
    // [185] phi from printu to print_char [phi:printu->print_char]
    // [185] phi print_char_cursor#55 = print_char_cursor#98 [phi:printu->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = ' ' [phi:printu->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // printu::@1
    // print_uchar(a)
    // [163] print_uchar::b#0 = printu::a#20
    // [164] call print_uchar 
    // [189] phi from printu::@1 to print_uchar [phi:printu::@1->print_uchar]
    // [189] phi print_uchar::b#2 = print_uchar::b#0 [phi:printu::@1->print_uchar#0] -- register_copy 
    jsr print_uchar
    // printu::@2
    // print_str(op)
    // [165] print_str::str#1 = printu::op#20
    // [166] call print_str 
    // [197] phi from printu::@2 to print_str [phi:printu::@2->print_str]
    jsr print_str
    // printu::@3
    // print_uchar(b)
    // [167] print_uchar::b#1 = printu::b#20 -- vbuxx=vbuz1 
    ldx.z b
    // [168] call print_uchar 
    // [189] phi from printu::@3 to print_uchar [phi:printu::@3->print_uchar]
    // [189] phi print_uchar::b#2 = print_uchar::b#1 [phi:printu::@3->print_uchar#0] -- register_copy 
    jsr print_uchar
    // [169] phi from printu::@3 to printu::@4 [phi:printu::@3->printu::@4]
    // printu::@4
    // print_char(' ')
    // [170] call print_char 
    // [185] phi from printu::@4 to print_char [phi:printu::@4->print_char]
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:printu::@4->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = ' ' [phi:printu::@4->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // printu::@5
    // print_char(res)
    // [171] print_char::ch#5 = printu::res#20 -- vbuaa=vbuz1 
    lda.z res
    // [172] call print_char 
    // [185] phi from printu::@5 to print_char [phi:printu::@5->print_char]
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:printu::@5->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = print_char::ch#5 [phi:printu::@5->print_char#1] -- register_copy 
    jsr print_char
    // printu::@return
    // }
    // [173] return 
    rts
}
  // print_ln
// Print a newline
print_ln: {
    // [175] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
    // [175] phi print_line_cursor#14 = print_line_cursor#27 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    // print_ln::@1
  __b1:
    // print_line_cursor + $28
    // [176] print_line_cursor#0 = print_line_cursor#14 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor
    sta.z print_line_cursor
    bcc !+
    inc.z print_line_cursor+1
  !:
    // while (print_line_cursor<print_char_cursor)
    // [177] if(print_line_cursor#0<print_char_cursor#56) goto print_ln::@1 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b1
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b1
  !:
    // print_ln::@return
    // }
    // [178] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = print_screen
    .label end = str+num
    .label dst = 8
    // [180] phi from memset to memset::@1 [phi:memset->memset::@1]
    // [180] phi memset::dst#2 = (byte*)memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    // memset::@1
  __b1:
    // for(char* dst = str; dst!=end; dst++)
    // [181] if(memset::dst#2!=memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    // memset::@return
    // }
    // [182] return 
    rts
    // memset::@2
  __b2:
    // *dst = c
    // [183] *memset::dst#2 = memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [184] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [180] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
    // [180] phi memset::dst#2 = memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // *(print_char_cursor++) = ch
    // [186] *print_char_cursor#55 = print_char::ch#6 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // *(print_char_cursor++) = ch;
    // [187] print_char_cursor#56 = ++ print_char_cursor#55 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // print_char::@return
    // }
    // [188] return 
    rts
}
  // print_uchar
// Print a char as HEX
// print_uchar(byte register(X) b)
print_uchar: {
    // b>>4
    // [190] print_uchar::$0 = print_uchar::b#2 >> 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // print_char(print_hextab[b>>4])
    // [191] print_char::ch#1 = print_hextab[print_uchar::$0] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [192] call print_char 
  // Table of hexadecimal digits
    // [185] phi from print_uchar to print_char [phi:print_uchar->print_char]
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:print_uchar->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = print_char::ch#1 [phi:print_uchar->print_char#1] -- register_copy 
    jsr print_char
    // print_uchar::@1
    // b&$f
    // [193] print_uchar::$2 = print_uchar::b#2 & $f -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
    // print_char(print_hextab[b&$f])
    // [194] print_char::ch#2 = print_hextab[print_uchar::$2] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [195] call print_char 
    // [185] phi from print_uchar::@1 to print_char [phi:print_uchar::@1->print_char]
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:print_uchar::@1->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = print_char::ch#2 [phi:print_uchar::@1->print_char#1] -- register_copy 
    jsr print_char
    // print_uchar::@return
    // }
    // [196] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zp(8) str)
print_str: {
    .label str = 8
    // [198] phi from print_str print_str::@3 to print_str::@1 [phi:print_str/print_str::@3->print_str::@1]
    // [198] phi print_str::str#2 = print_str::str#1 [phi:print_str/print_str::@3->print_str::@1#0] -- register_copy 
    // print_str::@1
  __b1:
    // while(*str)
    // [199] if(0!=*print_str::str#2) goto print_str::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // print_str::@return
    // }
    // [200] return 
    rts
    // print_str::@2
  __b2:
    // print_char(*(str++))
    // [201] print_char::ch#0 = *print_str::str#2 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
    // [202] call print_char 
    // [185] phi from print_str::@2 to print_char [phi:print_str::@2->print_char]
    // [185] phi print_char_cursor#55 = print_char_cursor#56 [phi:print_str::@2->print_char#0] -- register_copy 
    // [185] phi print_char::ch#6 = print_char::ch#0 [phi:print_str::@2->print_char#1] -- register_copy 
    jsr print_char
    // print_str::@3
    // print_char(*(str++));
    // [203] print_str::str#0 = ++ print_str::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1
}
  // File Data
.segment Data
  print_hextab: .text "0123456789abcdef"

