(const nomodify byte) BLACK = (byte) 0
(const nomodify byte) BLUE = (byte) 6
(const nomodify byte*) CHARSET = (byte*) 8192
(const nomodify byte*) COLS = (byte*) 55296
(const nomodify byte*) D018 = (byte*) 53272
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = (byte) $21
(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = (byte) $20
(const byte) OFFSET_STRUCT_MOS6581_SID_CH3_CONTROL = (byte) $12
(const byte) OFFSET_STRUCT_MOS6581_SID_CH3_FREQ = (byte) $e
(const byte) OFFSET_STRUCT_MOS6581_SID_CH3_OSC = (byte) $1b
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const nomodify byte*) SCREEN1 = (byte*) 10240
(const nomodify byte*) SCREEN2 = (byte*) 11264
(const nomodify struct MOS6581_SID*) SID = (struct MOS6581_SID*) 54272
(const nomodify byte) SID_CONTROL_NOISE = (byte) $80
(const to_nomodify byte*) SINTABLE[(number) $100]  = kickasm {{ .for(var i=0;i<$100;i++)
        .byte round(127.5+127.5*sin(2*PI*i/256))
 }}
(const nomodify struct MOS6569_VICII*) VICII = (struct MOS6569_VICII*) 53248
(byte) c1A
(byte) c1A#10 c1A zp[1]:4 11.0
(byte) c1A#11 c1A zp[1]:4 22.4
(byte) c1A#3 c1A zp[1]:4 4.241379310344827
(byte) c1B
(byte) c1B#10 c1B zp[1]:14 11.0
(byte) c1B#11 c1B zp[1]:14 20.363636363636363
(byte) c1B#3 c1B zp[1]:14 4.392857142857143
(byte) c2A
(byte) c2A#10 c2A zp[1]:17 11.0
(byte) c2A#26 c2A zp[1]:17 10.666666666666666
(byte) c2A#3 c2A zp[1]:17 6.833333333333333
(byte) c2B
(byte) c2B#10 c2B zp[1]:5 11.0
(byte) c2B#26 c2B zp[1]:5 10.181818181818182
(byte) c2B#3 c2B zp[1]:5 7.235294117647059
(void()) doplasma((byte*) doplasma::screen)
(byte~) doplasma::$1 reg byte a 20002.0
(byte~) doplasma::$3 reg byte a 20002.0
(byte~) doplasma::$6 reg byte a 200002.0
(label) doplasma::@1
(label) doplasma::@10
(label) doplasma::@2
(label) doplasma::@3
(label) doplasma::@4
(label) doplasma::@5
(label) doplasma::@6
(label) doplasma::@7
(label) doplasma::@8
(label) doplasma::@9
(label) doplasma::@return
(byte) doplasma::c1a
(byte) doplasma::c1a#0 c1a zp[1]:7 101.0
(byte) doplasma::c1a#1 c1a zp[1]:7 6667.333333333333
(byte) doplasma::c1a#2 c1a zp[1]:7 7526.0
(byte) doplasma::c1b
(byte) doplasma::c1b#0 c1b zp[1]:8 202.0
(byte) doplasma::c1b#1 c1b zp[1]:8 10001.0
(byte) doplasma::c1b#2 c1b zp[1]:8 6020.8
(byte) doplasma::c2a
(byte) doplasma::c2a#0 c2a zp[1]:10 101.0
(byte) doplasma::c2a#1 c2a zp[1]:10 6667.333333333333
(byte) doplasma::c2a#2 c2a zp[1]:10 7526.0
(byte) doplasma::c2b
(byte) doplasma::c2b#0 c2b zp[1]:11 202.0
(byte) doplasma::c2b#1 c2b zp[1]:11 10001.0
(byte) doplasma::c2b#2 c2b zp[1]:11 6020.8
(byte) doplasma::i
(byte) doplasma::i#1 i zp[1]:6 20002.0
(byte) doplasma::i#2 i zp[1]:6 6667.333333333333
(byte) doplasma::i1
(byte) doplasma::i1#1 i1 zp[1]:9 20002.0
(byte) doplasma::i1#2 i1 zp[1]:9 6667.333333333333
(byte) doplasma::i2
(byte) doplasma::i2#1 reg byte y 200002.0
(byte) doplasma::i2#2 reg byte y 125001.25
(byte) doplasma::ii
(byte) doplasma::ii#1 reg byte x 20002.0
(byte) doplasma::ii#2 reg byte x 16250.5
(byte*) doplasma::screen
(byte*) doplasma::screen#13 screen zp[2]:12 4.391304347826087
(byte*) doplasma::screen#2 screen zp[2]:12 10001.0
(byte*) doplasma::screen#6 screen zp[2]:12 17157.714285714286
(const byte*) doplasma::xbuf[(number) $28]  = { fill( $28, 0) }
(const byte*) doplasma::ybuf[(number) $19]  = { fill( $19, 0) }
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(byte*) main::col
(byte*) main::col#1 col zp[2]:2 16.5
(byte*) main::col#2 col zp[2]:2 16.5
(label) main::toD0181
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const nomodify byte*) SCREEN1&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(label) main::toD0182
(byte*) main::toD0182_gfx
(byte) main::toD0182_return
(const byte) main::toD0182_return#0 toD0182_return = >(word)(const nomodify byte*) SCREEN2&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0182_screen
(void()) makecharset((byte*) makecharset::charset)
(word~) makecharset::$10 zp[2]:15 2002.0
(word~) makecharset::$11 zp[2]:15 2002.0
(byte~) makecharset::$12 reg byte a 202.0
(byte*~) makecharset::$16 zp[2]:15 2002.0
(byte~) makecharset::$3 reg byte x 202.0
(byte~) makecharset::$7 zp[1]:17 20002.0
(label) makecharset::@1
(label) makecharset::@10
(label) makecharset::@11
(label) makecharset::@12
(label) makecharset::@2
(label) makecharset::@3
(label) makecharset::@4
(label) makecharset::@5
(label) makecharset::@6
(label) makecharset::@7
(label) makecharset::@8
(label) makecharset::@9
(label) makecharset::@return
(byte) makecharset::b
(byte) makecharset::b#1 reg byte y 20002.0
(byte) makecharset::b#2 reg byte y 3875.5
(byte) makecharset::b#6 reg byte y 15001.5
(const to_nomodify byte*) makecharset::bittab[(number) 8]  = { (byte) 1, (byte) 2, (byte) 4, (byte) 8, (byte) $10, (byte) $20, (byte) $40, (byte) $80 }
(word) makecharset::c
(word) makecharset::c#1 c zp[2]:12 202.0
(word) makecharset::c#2 c zp[2]:12 62.75
(byte*) makecharset::charset
(byte) makecharset::i
(byte) makecharset::i#1 i zp[1]:4 2002.0
(byte) makecharset::i#2 i zp[1]:4 286.0
(byte) makecharset::ii
(byte) makecharset::ii#1 reg byte x 20002.0
(byte) makecharset::ii#2 reg byte x 5714.857142857143
(byte) makecharset::s
(byte) makecharset::s#0 s zp[1]:14 631.375
(label) makecharset::sid_rnd1
(byte) makecharset::sid_rnd1_return
(byte) makecharset::sid_rnd1_return#0 reg byte a 20002.0
(label) makecharset::sid_rnd_init1
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:15 20002.0
(byte*) memset::dst#2 dst zp[2]:15 13334.666666666666
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(const byte*) print_screen#0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(const byte) print_char::ch#0 ch = (byte) '.'
(byte*) print_char_cursor
(byte*) print_char_cursor#0 print_char_cursor zp[2]:2 367.33333333333337
(byte*) print_char_cursor#19 print_char_cursor zp[2]:2 95.82608695652173
(byte*) print_char_cursor#31 print_char_cursor zp[2]:2 151.5
(void()) print_cls()
(label) print_cls::@return
(byte*) print_line_cursor
(byte*) print_screen
(const byte*) print_screen#0 print_screen = (byte*) 1024

zp[2]:2 [ print_char_cursor#19 print_char_cursor#31 print_char_cursor#0 main::col#2 main::col#1 ]
reg byte x [ makecharset::ii#2 makecharset::ii#1 ]
reg byte y [ makecharset::b#2 makecharset::b#6 makecharset::b#1 ]
zp[1]:4 [ c1A#11 c1A#10 c1A#3 makecharset::i#2 makecharset::i#1 ]
zp[1]:5 [ c2B#26 c2B#10 c2B#3 ]
zp[1]:6 [ doplasma::i#2 doplasma::i#1 ]
zp[1]:7 [ doplasma::c1a#2 doplasma::c1a#0 doplasma::c1a#1 ]
zp[1]:8 [ doplasma::c1b#2 doplasma::c1b#0 doplasma::c1b#1 ]
zp[1]:9 [ doplasma::i1#2 doplasma::i1#1 ]
zp[1]:10 [ doplasma::c2a#2 doplasma::c2a#0 doplasma::c2a#1 ]
zp[1]:11 [ doplasma::c2b#2 doplasma::c2b#0 doplasma::c2b#1 ]
reg byte x [ doplasma::ii#2 doplasma::ii#1 ]
zp[2]:12 [ doplasma::screen#6 doplasma::screen#2 doplasma::screen#13 makecharset::c#2 makecharset::c#1 ]
reg byte y [ doplasma::i2#2 doplasma::i2#1 ]
reg byte x [ makecharset::$3 ]
zp[1]:14 [ makecharset::s#0 c1B#11 c1B#10 c1B#3 ]
reg byte a [ makecharset::$12 ]
zp[2]:15 [ makecharset::$10 makecharset::$11 makecharset::$16 memset::dst#2 memset::dst#1 ]
reg byte a [ makecharset::sid_rnd1_return#0 ]
zp[1]:17 [ makecharset::$7 c2A#26 c2A#10 c2A#3 ]
reg byte a [ doplasma::$6 ]
reg byte a [ doplasma::$3 ]
reg byte a [ doplasma::$1 ]
