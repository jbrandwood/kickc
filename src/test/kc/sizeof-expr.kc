// Tests the sizeof() operator on epressions

const byte* SCREEN = $400;

void main() {
    byte idx = 0;

    // Simple types
    volatile byte b = 0;
    volatile word w = 0;
    // Pointers
    byte* bp = $1000;
    word* wp = &w;
    // Arrays
    byte[3] ba;
    word[3] wa;
    byte sz = 15;
    byte[sz+2] bb;
    byte[] bc = { 1, 2, 3, 4 };
    // Strings
    byte[] sa = "camelot";
    //byte[] sb = { 'a', 'b', 'c', 0};

    SCREEN[idx++] = '0'+sizeof(0);
    SCREEN[idx++] = '0'+sizeof(idx);
    SCREEN[idx++] = '0'+sizeof(b);
    SCREEN[idx++] = '0'+sizeof(b*2);
    idx++;
    SCREEN[idx++] = '0'+sizeof($43ff);
    SCREEN[idx++] = '0'+sizeof(w);
    idx++;
    SCREEN[idx++] = '0'+sizeof(bp);
    SCREEN[idx++] = '0'+sizeof(wp);
    idx++;
    SCREEN[idx++] = '0'+sizeof(ba);
    SCREEN[idx++] = '0'+sizeof(wa);
    SCREEN[idx++] = '0'+sizeof(bb);
    SCREEN[idx++] = '0'+sizeof(bc);
    SCREEN[idx++] = '0'+sizeof(sa);
    //SCREEN[idx++] = '0'+sizeof(sb);

}